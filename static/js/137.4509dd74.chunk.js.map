{"version":3,"file":"static/js/137.4509dd74.chunk.js","mappings":"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","sources":["app/options/MiiCostumeAppOption.tsx","app/MiiCostumeApp.tsx","app/options/component/EmptyAppOption.ts"],"sourcesContent":["import type {BasicCompanionEnumDeclaration, CollectionHolder, PossibleEnumerableValueBy, Singleton} from '@joookiwi/enumerable/dist/types'\nimport {BasicCompanionEnum, Enum}                                                                   from '@joookiwi/enumerable'\n\nimport type {Names, Ordinals}                                  from 'app/options/MiiCostumeAppOption.types'\nimport type {AppOptionWithContent, PossibleRenderReactElement} from 'app/options/component/AppOptionWithContent'\nimport type {AppOptionWithTable}                               from 'app/options/component/AppOptionWithTable'\nimport type {SingleHeaderContent}                              from 'app/tools/table/SimpleHeader'\nimport type {MiiCostumes}                                      from 'core/miiCostume/MiiCostumes'\nimport type {ReactElement}                                     from 'util/react/ReactProperties'\nimport type {NullOr}                                           from 'util/types/nullable'\n\nimport {CommonOptions}                 from 'app/options/CommonOptions'\nimport {AppOptionWithContentComponent} from 'app/options/component/AppOptionWithContent.component'\nimport {AppOptionWithTableComponent}   from 'app/options/component/AppOptionWithTable.component'\nimport {EmptyAppOption}                from 'app/options/component/EmptyAppOption'\nimport Image                           from 'app/tools/images/Image'\nimport {MiiCostumeCategories}          from 'core/miiCostumeCategory/MiiCostumeCategories'\nimport {contentTranslation}            from 'lang/components/translationMethods'\n\n/**\n * @todo convert the \"_createTableHeaderOption\" to have the enumerable as an argument and to be non-null\n * @todo Change CATEGORY to use {IMAGE, TEXT or NONE} instead of 2 different options.\n */\nexport abstract class MiiCostumeAppOption\n    extends Enum<Ordinals, Names> {\n\n    //region -------------------- Enum instances --------------------\n\n    public static readonly IMAGE =                 new class MiiCostumeAppOption_Image extends MiiCostumeAppOption {\n\n        protected override _createContentOption() {\n            return () => {\n                const enumeration = MiiCostumeAppOption.CALLBACK_TO_GET_ENUMERATION()\n\n                return <Image file={enumeration.imageFile}/>\n            }\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {key: 'image', element: contentTranslation('Image'),}\n        }\n\n    }()\n    public static readonly NAME =                  new class MiiCostumeAppOption_Name extends MiiCostumeAppOption {\n\n        protected override _createContentOption() {\n            return () => CommonOptions.get.getNameContent(MiiCostumeAppOption.CALLBACK_TO_GET_ENUMERATION())\n        }\n\n        protected override _createTableHeaderOption() {\n            return CommonOptions.get.nameHeader\n        }\n\n    }()\n    public static readonly OFFICIAL_NOTIFICATION = new class MiiCostumeAppOption_ConditionToUnlockIt extends MiiCostumeAppOption {\n\n        protected override _createContentOption() {\n            return () => {\n                const enumeration = MiiCostumeAppOption.CALLBACK_TO_GET_ENUMERATION()\n                const miiCostume = enumeration.reference\n\n                return miiCostume.officialNotification?.createSimpleTranslationComponent(miiCostume.english, miiCostume.officialNotificationAmount,)\n            }\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            //TODO add new translation to the header value.\n            return {key: 'officialNotification', element: '--Official notification--',}\n        }\n\n    }()\n\n    public static readonly CATEGORY =              new class MiiCostumeAppOption_Category extends MiiCostumeAppOption {\n\n        protected override _createContentOption() {\n            return () => {\n                const enumeration = MiiCostumeAppOption.CALLBACK_TO_GET_ENUMERATION(),\n                    categoryName = enumeration.reference.categoryContainer.nameContainer\n\n                return CommonOptions.get.getCategoryContent(enumeration, () => MiiCostumeCategories.getValueByName(categoryName.english).imageFile,)\n            }\n        }\n\n        protected override _createTableHeaderOption() {\n            return CommonOptions.get.categoryHeader\n        }\n\n    }()\n    /**\n     * Tell whenever a {@link MiiCostumeAppOption.CATEGORY category} is displayed\n     * as a text (<i>true</i>) or an image (<i>false</i>).\n     */\n    public static readonly CATEGORY_AS_TEXT =      new class MiiCostumeAppOption_CategoryAsText extends MiiCostumeAppOption {}()\n\n    //endregion -------------------- Enum instances --------------------\n    //region -------------------- Companion enum --------------------\n\n    public static readonly CompanionEnum: Singleton<BasicCompanionEnumDeclaration<MiiCostumeAppOption, typeof MiiCostumeAppOption>> = class CompanionEnum_MiiCostumeAppOption\n        extends BasicCompanionEnum<MiiCostumeAppOption, typeof MiiCostumeAppOption> {\n\n        //region -------------------- Singleton usage --------------------\n\n        static #instance?: CompanionEnum_MiiCostumeAppOption\n\n        private constructor() {\n            super(MiiCostumeAppOption,)\n        }\n\n        public static get get() {\n            return this.#instance ??= new CompanionEnum_MiiCostumeAppOption()\n        }\n\n        //endregion -------------------- Singleton usage --------------------\n\n    }\n\n    //endregion -------------------- Companion enum --------------------\n    //region -------------------- Fields --------------------\n\n    /**\n     * The callback to get the enumeration based for each option.\n     *\n     * @note It should only be set by {@link MiiCostumeApp} and get by {@link MiiCostumeAppOption}.\n     */\n    public static CALLBACK_TO_GET_ENUMERATION: () => MiiCostumes\n\n    #appOptionWithContent?: AppOptionWithContent\n    #appOptionWithTable?: AppOptionWithTable\n\n    //endregion -------------------- Fields --------------------\n    //region -------------------- Constructor --------------------\n\n    private constructor() {\n        super()\n    }\n\n    //endregion -------------------- Constructor --------------------\n    //region -------------------- Getter methods --------------------\n    //endregion -------------------- Getter methods --------------------\n    //region -------------------- Methods --------------------\n\n    //region -------------------- App option - content --------------------\n\n    protected _createContentOption(): NullOr<() => PossibleRenderReactElement> {\n        return null\n    }\n\n    private get __appOptionWithContent(): AppOptionWithContent {\n        if (this.#appOptionWithContent == null) {\n            const content = this._createContentOption()\n            this.#appOptionWithContent = content == null\n                ? EmptyAppOption.get\n                : new AppOptionWithContentComponent(content,)\n        }\n        return this.#appOptionWithContent\n    }\n\n    public get renderContent(): readonly ReactElement[] {\n        return this.__appOptionWithContent.renderContent\n    }\n\n    //endregion -------------------- App option - content --------------------\n    //region -------------------- App option - table --------------------\n\n    protected _createTableHeaderOption(): NullOr<SingleHeaderContent> {\n        return null\n    }\n\n    protected get __appOptionWithTable(): AppOptionWithTable {\n        if (this.#appOptionWithTable == null) {\n            const content = this._createTableHeaderOption()\n            this.#appOptionWithTable = content == null ? EmptyAppOption.get : new AppOptionWithTableComponent(() => content,)\n        }\n        return this.#appOptionWithTable\n    }\n\n    public get renderTableHeader(): NullOr<SingleHeaderContent> {\n        return this.__appOptionWithTable.renderTableHeader\n    }\n\n    //endregion -------------------- App option - table --------------------\n\n    //endregion -------------------- Methods --------------------\n    //region -------------------- Enum methods --------------------\n\n    public static getValue(value: PossibleEnumerableValueBy<MiiCostumeAppOption>,): MiiCostumeAppOption {\n        return MiiCostumeAppOption.CompanionEnum.get.getValue(value,)\n    }\n\n    public static get values(): CollectionHolder<MiiCostumeAppOption> {\n        return MiiCostumeAppOption.CompanionEnum.get.values\n    }\n\n    public static* [Symbol.iterator](): IterableIterator<MiiCostumeAppOption> {\n        yield* MiiCostumeAppOption.CompanionEnum.get\n    }\n\n    //endregion -------------------- Enum methods --------------------\n\n}\n","import './MiiCostumeApp.scss'\n\nimport type {AppInterpreterWithTable, SimplifiedTableProperties}   from 'app/interpreter/AppInterpreterWithTable'\nimport type {PossibleDimensionOnCardList, PossibleDimensionOnList} from 'app/interpreter/DimensionOnList'\nimport type {EveryPossibleRouteNames}                              from 'route/everyRoutes.types'\nimport type {ReactElementOrString}                                 from 'util/react/ReactProperties'\n\nimport {MiiCostumeAppOption}    from 'app/options/MiiCostumeAppOption'\nimport Image                    from 'app/tools/images/Image'\nimport TextComponent            from 'app/tools/text/TextComponent'\nimport {unfinishedText}         from 'app/tools/text/UnfinishedText'\nimport {AbstractTableApp}       from 'app/withInterpreter/AbstractTableApp'\nimport {MiiCostumes}            from 'core/miiCostume/MiiCostumes'\nimport {OtherWordInTheGames}    from 'core/otherWordInTheGame/OtherWordInTheGames'\nimport {gameContentTranslation} from 'lang/components/translationMethods'\n\n//region -------------------- Import from deconstruction --------------------\n\nconst {MII_COSTUME,} = OtherWordInTheGames\n\n//endregion -------------------- Import from deconstruction --------------------\n\nexport default class MiiCostumeApp\n    extends AbstractTableApp<AppInterpreterWithTable<MiiCostumes, MiiCostumeAppOption>> {\n\n    //region -------------------- Create methods --------------------\n\n    protected override _createKey() {\n        return 'miiCostume'\n    }\n\n\n    protected override _createSimpleListRouteName(): EveryPossibleRouteNames {\n        return 'everyMiiCostume (list)'\n    }\n\n    protected override _createCardListRouteName(): EveryPossibleRouteNames {\n        return 'everyMiiCostume (card)'\n    }\n\n    protected override _createTableRouteName(): EveryPossibleRouteNames {\n        return 'everyMiiCostume (table)'\n    }\n\n\n    protected override _createTitleContent(): ReactElementOrString {\n        return gameContentTranslation('mii costume.all', {\n            singularName: MII_COSTUME.singularLowerCaseNameOnReferenceOrNull ?? unfinishedText(MII_COSTUME.singularEnglishName),\n            pluralName: MII_COSTUME.pluralLowerCaseNameOnReferenceOrNull ?? unfinishedText(MII_COSTUME.pluralEnglishName),\n        },)\n    }\n\n    protected override _createAppOptionInterpreter(): AppInterpreterWithTable<MiiCostumes, MiiCostumeAppOption> {\n        return new class implements AppInterpreterWithTable<MiiCostumes, MiiCostumeAppOption> {\n\n            public get iterable() {\n                return MiiCostumes[Symbol.iterator]()\n            }\n\n            //region -------------------- List interpreter --------------------\n\n            public createListDimension(): PossibleDimensionOnList {\n                return {\n                    small: 6,\n                    medium: 4,\n                    large: 3,\n                    extraExtraLarge: 2,\n                }\n            }\n\n            //endregion -------------------- List interpreter --------------------\n            //region -------------------- Card list interpreter --------------------\n\n            public createCardListDimension(): PossibleDimensionOnCardList {\n                return 'list'\n            }\n\n            public createCardListContent({reference, englishName, imageFile,}: MiiCostumes,) {\n                const category = reference.categoryEnglish === '' ? '' : `entityCategory-${reference.categoryEnglish}`//TODO move to the parent container className.\n                return <div className={`${category}`}>\n                    <Image file={imageFile}/>\n                </div>\n            }\n\n            //endregion -------------------- Card list interpreter --------------------\n            //region -------------------- Table interpreter --------------------\n\n            public set callbackToGetEnumerable(value: () => MiiCostumes,) {\n                MiiCostumeAppOption.CALLBACK_TO_GET_ENUMERATION = value\n            }\n\n            public get tableOptions(): readonly MiiCostumeAppOption[] {\n                return [\n                    MiiCostumeAppOption.IMAGE,\n                    MiiCostumeAppOption.NAME,\n                    MiiCostumeAppOption.OFFICIAL_NOTIFICATION,\n                    MiiCostumeAppOption.CATEGORY,\n                ]\n            }\n\n            public get tableProperties(): SimplifiedTableProperties {\n                return {\n                    caption: gameContentTranslation('mii costume.all', {\n                        singularName: <TextComponent key=\"miiCostume-singularName\" content={MII_COSTUME.singularLowerCaseNameOnReferenceOrNull ?? unfinishedText(MII_COSTUME.singularEnglishName)} className=\"text-decoration-underline\"/>,\n                        pluralName: <TextComponent key=\"miiCostume-pluralName\" content={MII_COSTUME.pluralLowerCaseNameOnReferenceOrNull ?? unfinishedText(MII_COSTUME.pluralEnglishName)} className=\"text-decoration-underline\"/>,\n                    },),\n                }\n            }\n\n\n            public createTableContent(option: MiiCostumeAppOption,) {\n                return option.renderContent\n            }\n\n            public createTableHeader(option: MiiCostumeAppOption,) {\n                return option.renderTableHeader\n            }\n\n            //endregion -------------------- Table interpreter --------------------\n\n        }()\n    }\n\n    //endregion -------------------- Create methods --------------------\n\n}\n","import type {AppOptionWithContent} from 'app/options/component/AppOptionWithContent'\nimport type {AppOptionWithTable}   from 'app/options/component/AppOptionWithTable'\n\nimport {EMPTY_ARRAY} from 'util/emptyVariables'\n\n/**\n * @singleton\n */\nexport class EmptyAppOption\n    implements AppOptionWithContent, AppOptionWithTable {\n\n    //region -------------------- Singleton usage --------------------\n\n    static #instance?: EmptyAppOption\n\n    private constructor() {\n    }\n\n    public static get get() {\n        return this.#instance ??= new this()\n    }\n\n    //endregion -------------------- Singleton usage --------------------\n\n    public readonly renderContent = EMPTY_ARRAY\n    public readonly renderTableHeader = null\n\n}\n"],"names":["_appOptionWithContent","_classPrivateFieldLooseKey","_appOptionWithTable","_Symbol$iterator","Symbol","iterator","MiiCostumeAppOption","_Enum","_inherits","_super","_createSuper","_this","_classCallCheck","call","Object","defineProperty","_assertThisInitialized","writable","value","_createClass","key","get","_classPrivateFieldLooseBase","this","content","_createContentOption","EmptyAppOption","AppOptionWithContentComponent","__appOptionWithContent","renderContent","_createTableHeaderOption","AppOptionWithTableComponent","__appOptionWithTable","renderTableHeader","CompanionEnum","getValue","values","_regeneratorRuntime","mark","wrap","_context","prev","next","delegateYield","stop","Enum","IMAGE","_MiiCostumeAppOption","MiiCostumeAppOption_Image","_super2","apply","arguments","enumeration","CALLBACK_TO_GET_ENUMERATION","_jsx","Image","file","imageFile","element","contentTranslation","NAME","_MiiCostumeAppOption2","MiiCostumeAppOption_Name","_super3","CommonOptions","getNameContent","nameHeader","OFFICIAL_NOTIFICATION","_MiiCostumeAppOption3","MiiCostumeAppOption_ConditionToUnlockIt","_super4","_miiCostume$officialN","miiCostume","reference","officialNotification","createSimpleTranslationComponent","english","officialNotificationAmount","CATEGORY","_MiiCostumeAppOption4","MiiCostumeAppOption_Category","_super5","categoryName","categoryContainer","nameContainer","getCategoryContent","MiiCostumeCategories","getValueByName","categoryHeader","CATEGORY_AS_TEXT","_MiiCostumeAppOption5","MiiCostumeAppOption_CategoryAsText","_super6","_instance","_class","_BasicCompanionEnum","CompanionEnum_MiiCostumeAppOption","_super7","_classPrivateFieldLoo","_classPrivateFieldLoo2","BasicCompanionEnum","MII_COSTUME","OtherWordInTheGames","MiiCostumeApp","_AbstractTableApp","_MII_COSTUME$singular","_MII_COSTUME$pluralLo","gameContentTranslation","singularName","singularLowerCaseNameOnReferenceOrNull","unfinishedText","singularEnglishName","pluralName","pluralLowerCaseNameOnReferenceOrNull","pluralEnglishName","MiiCostumes","small","medium","large","extraExtraLarge","_ref","englishName","category","categoryEnglish","concat","className","children","set","_MII_COSTUME$singular2","_MII_COSTUME$pluralLo2","caption","TextComponent","option","AbstractTableApp","EMPTY_ARRAY"],"sourceRoot":""}