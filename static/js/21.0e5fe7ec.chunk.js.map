{"version":3,"sources":["app/options/EntityLimitAppOption.tsx","app/EntityLimitApp.tsx"],"names":["Symbol","iterator","EntityLimitAppOption","this","AppOptionWithContentComponent","_createContentOption","CALLBACK_TO_GET_ENUMERATION","__appOptionWithContent","renderContent","AppOptionWithTableComponent","_createTableHeaderOption","__appOptionWithTable","renderTableHeader","value","Enum","getValueOn","getValuesOn","values","ACRONYM","reference","acronym","alternativeAcronym","finalAcronym","TextComponent","content","key","element","ContentTranslationComponent","translationKey","NAME","id","name","popoverOrientation","alternativeContainer","subHeaders","EMPTY_REACT_ELEMENT","AMOUNT","limitAmountInSMM1AndSMM3DS","isUnknown","isUnknownLimitInSMM1AndSMM3DS","limitAmountInSMM2","isUnknownLimitInSMM2","alt","Games","SUPER_MARIO_MAKER_1","englishName","path","imagePath","SUPER_MARIO_MAKER_2","TYPE","type","GameContentTranslationComponent","translation","englishCommonText","EntityLimitApp","props","state","typeDisplayed","ViewDisplays","TABLE","EntityLimits","small","large","extraLarge","enumeration","englishNameInHtml","className","caption","option","AbstractTableApp"],"mappings":"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","file":"static/js/21.0e5fe7ec.chunk.js","sourcesContent":["import type {AppOptionWithContent, PossibleRenderReactElement}                                                                                                                      from './component/AppOptionWithContent';\nimport type {AppOptionWithTable}                                                                                                                                                    from './component/AppOptionWithTable';\nimport type {EnumArray, EnumByName, EnumByNumber, EnumByOrdinal, EnumByPossibleString, EnumByString, Names, Ordinals, PossibleNonNullableValue, PossibleStringValue, PossibleValue} from './EntityLimitAppOption.types';\nimport type {EntityLimits}                                                                                                                                                          from '../../core/entityLimit/EntityLimits';\nimport type {ReactElement}                                                                                                                                                          from '../../util/react/ReactProperties';\nimport type {SingleHeaderContent}                                                                                                                                                   from '../tools/table/SimpleHeader';\nimport type {StaticReference}                                                                                                                                                       from '../../util/enum/Enum.types';\n\nimport {AppOptionWithContentComponent} from './component/AppOptionWithContent.component';\nimport {AppOptionWithTableComponent}   from './component/AppOptionWithTable.component';\nimport ContentTranslationComponent     from '../../lang/components/ContentTranslationComponent';\nimport {EMPTY_REACT_ELEMENT}           from '../../util/emptyReactVariables';\nimport {Enum}                          from '../../util/enum/Enum';\nimport GameContentTranslationComponent from '../../lang/components/GameContentTranslationComponent';\nimport {Games}                         from '../../core/game/Games';\nimport NameComponent                   from '../../lang/name/component/Name.component';\nimport TextComponent                   from '.././tools/text/TextComponent';\n\nexport abstract class EntityLimitAppOption\n    extends Enum<Ordinals, Names> {\n\n    //region -------------------- Enum instances --------------------\n\n    public static readonly ACRONYM = new class EntityLimitAppOption_Acronym extends EntityLimitAppOption {\n\n        protected override _createContentOption({reference: {acronym, alternativeAcronym,},}: EntityLimits,): PossibleRenderReactElement {\n            const finalAcronym = alternativeAcronym == null\n                ? acronym == null\n                    ? ''\n                    : acronym\n                : `${acronym} / ${alternativeAcronym}`;\n\n            return <TextComponent content={finalAcronym}/>;\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {key: 'acronym', element: <ContentTranslationComponent translationKey=\"Acronym(s)\"/>,};\n        }\n\n    }();\n    public static readonly NAME = new class EntityLimitAppOption_Name extends EntityLimitAppOption {\n\n        protected override _createContentOption({reference,}: EntityLimits,): PossibleRenderReactElement {\n            return [\n                <NameComponent id=\"name\" name={reference} popoverOrientation=\"bottom\"/>,\n                <NameComponent id=\"alternativeName\" name={reference.alternativeContainer} popoverOrientation=\"bottom\"/>,\n            ];\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {\n                key: 'names', element: <ContentTranslationComponent translationKey=\"Name\"/>,\n                subHeaders: [\n                    {key: 'name', element: EMPTY_REACT_ELEMENT,},\n                    {key: 'alternativeName', element: <ContentTranslationComponent translationKey=\"Alternative name\"/>,},\n                ],\n            };\n        }\n\n    }();\n    public static readonly AMOUNT = new class EntityLimitAppOption_Amount extends EntityLimitAppOption {\n\n        protected override _createContentOption({reference,}: EntityLimits,): PossibleRenderReactElement {\n            return [\n                <TextComponent content={reference.limitAmountInSMM1AndSMM3DS} isUnknown={reference.isUnknownLimitInSMM1AndSMM3DS}/>,\n                <TextComponent content={reference.limitAmountInSMM2} isUnknown={reference.isUnknownLimitInSMM2}/>,\n            ];\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {\n                key: 'limit', element: <ContentTranslationComponent translationKey=\"Limit\"/>, subHeaders: [\n                    {key: 'limit-SuperMarioMaker1And3DS', alt: Games.SUPER_MARIO_MAKER_1.englishName, path: Games.SUPER_MARIO_MAKER_1.imagePath,},\n                    {key: 'limit-SuperMarioMaker2', alt: Games.SUPER_MARIO_MAKER_2.englishName, path: Games.SUPER_MARIO_MAKER_2.imagePath,},\n                ],\n            };\n        }\n\n    }();\n    public static readonly TYPE = new class EntityLimitAppOption_Type extends EntityLimitAppOption {\n\n        protected override _createContentOption({reference: {type,},}: EntityLimits,): PossibleRenderReactElement {\n            return <GameContentTranslationComponent>{translation => <TextComponent content={translation(type.englishCommonText)}/>}</GameContentTranslationComponent>;\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {key: 'type', element: <ContentTranslationComponent translationKey=\"Type\"/>,};\n        }\n\n    }();\n\n    //endregion -------------------- Enum instances --------------------\n    //region -------------------- Enum fields --------------------\n\n    static [index: number]: EntityLimitAppOption;\n\n    //endregion -------------------- Enum fields --------------------\n    //region -------------------- Fields --------------------\n\n    /**\n     * The callback to get the enumeration based for each option.\n     *\n     * @note It should only be set by {@link EntityLimitAppOption} and get by {@link EveryEntityLimitsApp}.\n     */\n    public static CALLBACK_TO_GET_ENUMERATION: () => EntityLimits;\n\n    #appOptionWithContent?: AppOptionWithContent;\n    #appOptionWithTable?: AppOptionWithTable;\n\n    //endregion -------------------- Fields --------------------\n\n    private constructor() {\n        super();\n    }\n\n    //region -------------------- Getter methods --------------------\n    //endregion -------------------- Getter methods --------------------\n    //region -------------------- Methods --------------------\n\n    //region -------------------- App option - content --------------------\n\n    protected abstract _createContentOption(enumeration: EntityLimits,): PossibleRenderReactElement;\n\n    private get __appOptionWithContent(): AppOptionWithContent {\n        return this.#appOptionWithContent ??= new AppOptionWithContentComponent(() => this._createContentOption(EntityLimitAppOption.CALLBACK_TO_GET_ENUMERATION()),);\n    }\n\n    public get renderContent(): readonly ReactElement[] {\n        return this.__appOptionWithContent.renderContent;\n    }\n\n    //endregion -------------------- App option - content --------------------\n    //region -------------------- App option - table --------------------\n\n    protected abstract _createTableHeaderOption(): SingleHeaderContent;\n\n    private get __appOptionWithTable(): AppOptionWithTable {\n        return this.#appOptionWithTable ??= new AppOptionWithTableComponent(() => this._createTableHeaderOption(),);\n    }\n\n    public get renderTableHeader(): | SingleHeaderContent | null {\n        return this.__appOptionWithTable.renderTableHeader;\n    }\n\n    //endregion -------------------- App option - table --------------------\n\n    //endregion -------------------- Methods --------------------\n    //region -------------------- Enum methods --------------------\n\n    protected override get _static(): StaticReference<EntityLimitAppOption> {\n        return EntityLimitAppOption;\n    }\n\n    //region -------------------- Enum value methods --------------------\n\n    public static getValue(nullValue: | null | undefined,): null\n    public static getValue<O extends Ordinals = Ordinals, >(ordinal: O,): EnumByOrdinal<O>\n    public static getValue<O extends number = number, >(ordinal: O,): EnumByNumber<O>\n    public static getValue<N extends Names = Names, >(name: N,): EnumByName<N>\n    public static getValue<S extends PossibleStringValue = PossibleStringValue, >(name: S,): EnumByPossibleString<S>\n    public static getValue<S extends string = string, >(name: S,): EnumByString<S>\n    public static getValue<I extends EntityLimitAppOption = EntityLimitAppOption, >(instance: I,): I\n    public static getValue(value: PossibleNonNullableValue,): EntityLimitAppOption\n    public static getValue(value: PossibleValue,): | EntityLimitAppOption | null\n    public static getValue(value: PossibleValue,) {\n        return Enum.getValueOn(this, value,);\n    }\n\n    public static get values(): EnumArray {\n        return Enum.getValuesOn(this);\n    }\n\n    //endregion -------------------- Enum value methods --------------------\n\n    public static [Symbol.iterator]() {\n        return this.values[Symbol.iterator]();\n    }\n\n    //endregion -------------------- Enum methods --------------------\n\n}\n","import './EntityLimitApp.scss';\n\nimport type {AppInterpreterWithTable, SimplifiedTableProperties}   from './interpreter/AppInterpreterWithTable';\nimport type {AppProperties}                                        from './AppProperties.types';\nimport type {EntityLimitAppStates}                                 from './AppStates.types';\nimport type {PossibleDimensionOnCardList, PossibleDimensionOnList} from './interpreter/DimensionOnList';\nimport type {ReactElement, ReactElementOrString}                   from '../util/react/ReactProperties';\nimport type {SingleHeaderContent}                                  from './tools/table/SimpleHeader';\n\nimport {AbstractTableApp}              from './withInterpreter/AbstractTableApp';\nimport {EntityLimitAppOption}          from './options/EntityLimitAppOption';\nimport {EntityLimits}                  from '../core/entityLimit/EntityLimits';\nimport GameContentTranslationComponent from '../lang/components/GameContentTranslationComponent';\nimport TextComponent                   from './tools/text/TextComponent';\nimport {ViewDisplays}                  from './withInterpreter/ViewDisplays';\n\n/**\n * @reactComponent\n */\nexport default class EntityLimitApp\n    extends AbstractTableApp<AppInterpreterWithTable<EntityLimits, EntityLimitAppOption>, AppProperties, EntityLimitAppStates> {\n\n    public constructor(props: AppProperties,) {\n        super(props,);\n        this.state = {\n            typeDisplayed: ViewDisplays.TABLE,\n        };\n    }\n\n    //region -------------------- Create methods --------------------\n\n    protected override _createKey(): string {\n        return 'entityLimit';\n    }\n\n    protected override _createTitleContent(): ReactElementOrString {\n        return <GameContentTranslationComponent translationKey=\"Every entity limits\"/>;\n    }\n\n    protected override _createAppOptionInterpreter(): AppInterpreterWithTable<EntityLimits, EntityLimitAppOption> {\n        return new class implements AppInterpreterWithTable<EntityLimits, EntityLimitAppOption> {\n\n            public get iterable(): IterableIterator<EntityLimits> {\n                return EntityLimits[Symbol.iterator]();\n            }\n\n            //region -------------------- List interpreter --------------------\n\n            public createListDimension(): PossibleDimensionOnList {\n                return {\n                    small: 6,\n                    large: null,\n                    extraLarge: 2,\n                };\n            }\n\n            //endregion -------------------- List interpreter --------------------\n            //region -------------------- Card list interpreter --------------------\n\n            public createCardListDimension(): PossibleDimensionOnCardList {\n                return 'list';\n            }\n\n            public createCardListContent(enumeration: EntityLimits,): ReactElement {\n                EntityLimitAppOption.CALLBACK_TO_GET_ENUMERATION = () => enumeration;\n                const {reference: {limitAmountInSMM1AndSMM3DS, limitAmountInSMM2, isUnknownLimitInSMM2,}, englishNameInHtml,} = enumeration;\n\n                return <div className=\"card-body\" id={`entityLimit-${englishNameInHtml}`}>\n                    {limitAmountInSMM1AndSMM3DS === limitAmountInSMM2\n                        ? <TextComponent content={limitAmountInSMM2} isUnknown={isUnknownLimitInSMM2}/>\n                        : EntityLimitAppOption.AMOUNT.renderContent}\n                </div>;\n            }\n\n            //endregion -------------------- Card list interpreter --------------------\n            //region -------------------- Table interpreter --------------------\n\n            public set callbackToGetEnumerable(value: () => EntityLimits,) {\n                EntityLimitAppOption.CALLBACK_TO_GET_ENUMERATION = value;\n            }\n\n            public get tableOptions(): readonly EntityLimitAppOption[] {\n                return [\n                    EntityLimitAppOption.ACRONYM,\n                    EntityLimitAppOption.NAME,\n                    EntityLimitAppOption.AMOUNT,\n                    EntityLimitAppOption.TYPE,\n                ];\n            }\n\n            public get tableProperties(): SimplifiedTableProperties {\n                return {\n                    caption: <GameContentTranslationComponent translationKey=\"Every entity limits\"/>,\n                };\n            }\n\n\n            public createTableContent(option: EntityLimitAppOption,): readonly ReactElement[] {\n                return option.renderContent;\n            }\n\n            public createTableHeader(option: EntityLimitAppOption,): | SingleHeaderContent | null {\n                return option.renderTableHeader;\n            }\n\n            //endregion -------------------- Table interpreter --------------------\n\n        }();\n    }\n\n    //endregion -------------------- Create methods --------------------\n}\n"],"sourceRoot":""}