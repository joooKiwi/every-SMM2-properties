{"version":3,"file":"static/js/841.3545476d.chunk.js","mappings":"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","sources":["app/options/LimitAppOption.tsx","app/LimitApp.tsx","app/tools/button/LinkButton.tsx"],"sourcesContent":["import './LimitAppOption.scss'\n\nimport type {CompanionEnumSingleton} from '@joookiwi/enumerable'\nimport {CompanionEnum, Enum}         from '@joookiwi/enumerable'\n\nimport type {AppOption}           from 'app/options/AppOption'\nimport type {Names, Ordinals}     from 'app/options/LimitAppOption.types'\nimport type {SingleHeaderContent} from 'app/tools/table/SimpleHeader'\nimport type {Limit}               from 'core/limit/Limit'\nimport type {Limits}              from 'core/limit/Limits'\n\nimport {CommonOptions}           from 'app/options/CommonOptions'\nimport {COURSE_THEME_IMAGE_FILE} from 'app/options/file/themeImageFiles'\nimport TextComponent             from 'app/tools/text/TextComponent'\nimport Image                     from 'app/tools/images/Image'\nimport {EmptyLimit}              from 'core/limit/EmptyLimit'\nimport {ProjectLanguages}        from 'lang/ProjectLanguages'\nimport {contentTranslation}      from 'lang/components/translationMethods'\nimport NameComponent             from 'lang/name/component/Name.component'\n\nexport abstract class LimitAppOption\n    extends Enum<Ordinals, Names>\n    implements AppOption<Limits> {\n\n    //region -------------------- Enum instances --------------------\n\n    public static readonly ACRONYM = new class LimitAppOption_Acronym extends LimitAppOption {\n\n        protected override _createContentOption({reference: {acronym, alternativeAcronym,},}: Limits,) {\n            return alternativeAcronym == null\n                ? acronym == null\n                    ? null\n                    : <TextComponent content={acronym}/>\n                : <div className=\"acronyms-container d-flex flex-column flex-md-row\">\n                    <TextComponent content={acronym}/>\n                    <div className=\"vertical-separator vr mx-2 d-none d-md-inline-block\"/>\n                    <hr className=\"horizontal-separator my-1 d-block d-md-none\"/>\n                    <TextComponent content={alternativeAcronym}/>\n                </div>\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {key: 'acronym', element: contentTranslation('Acronym(s)'),}\n        }\n\n    }()\n    public static readonly NAME = new class LimitAppOption_Name extends LimitAppOption {\n\n        protected override _createContentOption({reference, isEditorLimit,}: Limits,) {\n            const {alternativeContainer} = reference\n            return alternativeContainer instanceof EmptyLimit\n                ? this.#createNameComponent(reference, isEditorLimit,)\n                : <div className=\"names-container d-flex flex-column flex-md-row\">\n                    {this.#createNameComponent(reference, isEditorLimit,)}\n                    <div className=\"vertical-separator vr mx-3 d-none d-md-inline-block\"/>\n                    <hr className=\"horizontal-separator my-1 d-block d-md-none\"/>\n                    <NameComponent id=\"alternativeName\" name={alternativeContainer} popoverOrientation=\"bottom\"/>\n                </div>\n        }\n\n        #createNameComponent(reference: Limit, isEditorLimit: boolean,): ReactElement {\n            return isEditorLimit\n                ? <div className=\"nameWithImage-container d-flex position-relative\">\n                    <Image file={COURSE_THEME_IMAGE_FILE} className=\"course-theme-image badge bg-transparent position-absolute top-0 start-0\"/>\n                    <NameComponent id=\"name\" name={reference} popoverOrientation=\"bottom\"/>\n                </div>\n                : <NameComponent id=\"name\" name={reference} popoverOrientation=\"bottom\"/>\n        }\n\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return CommonOptions.get.nameHeader\n        }\n\n    }()\n    public static readonly AMOUNT_IN_ALL_GAMES = new class LimitAppOption_Amount extends LimitAppOption {\n\n        protected override _createContentOption(enumeration: Limits,) {\n            const {reference: {limitAmountInSMM1AndSMM3DS, limitAmountInSMM2, isUnknownLimitInSMM2,}, englishName,} = enumeration\n            if (limitAmountInSMM1AndSMM3DS === limitAmountInSMM2)\n                return <TextComponent key={`${englishName} - text component`} content={limitAmountInSMM2} isUnknown={isUnknownLimitInSMM2}/>\n\n            return <span className=\"space-pre\">\n                {LimitAppOption.AMOUNT_IN_SMM1_AND_SMM3DS.renderContent(enumeration,)}\n                {ProjectLanguages.current.space}{ProjectLanguages.current.slash}{ProjectLanguages.current.space}\n                {LimitAppOption.AMOUNT_IN_SMM2.renderContent(enumeration,)}\n            </span>\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return CommonOptions.get.limitHeader\n        }\n    }()\n    public static readonly AMOUNT_IN_SMM1_AND_SMM3DS = new class LimitAppOption_AmountInSMM1AndSMM3DS extends LimitAppOption {\n\n        protected override _createContentOption({reference, englishName,}: Limits,) {\n            return <TextComponent key={`${englishName} - text component (amount SMM1&3DS)`} content={reference.limitAmountInSMM1AndSMM3DS} isUnknown={reference.isUnknownLimitInSMM1AndSMM3DS}/>\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return CommonOptions.get.limitHeader\n        }\n\n    }()\n    public static readonly AMOUNT_IN_SMM2 = new class LimitAppOption_AmountInSMM2 extends LimitAppOption {\n\n        protected override _createContentOption({reference, englishName,}: Limits,) {\n            return <TextComponent key={`${englishName} - text component (amount SMM2)`} content={reference.limitAmountInSMM2} isUnknown={reference.isUnknownLimitInSMM2}/>\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return CommonOptions.get.limitHeader\n        }\n\n    }()\n\n    //endregion -------------------- Enum instances --------------------\n    //region -------------------- Companion enum --------------------\n\n    public static readonly CompanionEnum: CompanionEnumSingleton<LimitAppOption, typeof LimitAppOption> = class CompanionEnum_LimitAppOption\n        extends CompanionEnum<LimitAppOption, typeof LimitAppOption> {\n\n        //region -------------------- Singleton usage --------------------\n\n        static #instance?: CompanionEnum_LimitAppOption\n\n        private constructor() {\n            super(LimitAppOption,)\n        }\n\n        public static get get() {\n            return this.#instance ??= new CompanionEnum_LimitAppOption()\n        }\n\n        //endregion -------------------- Singleton usage --------------------\n\n    }\n\n    //endregion -------------------- Companion enum --------------------\n    //region -------------------- Fields --------------------\n    //endregion -------------------- Fields --------------------\n    //region -------------------- Constructor --------------------\n\n    private constructor() {\n        super()\n    }\n\n    //endregion -------------------- Constructor --------------------\n    //region -------------------- Getter methods --------------------\n    //endregion -------------------- Getter methods --------------------\n    //region -------------------- Methods --------------------\n\n    //region -------------------- App option - content --------------------\n\n    protected abstract _createContentOption(enumeration: Limits,): ReactElement\n\n    public renderContent(enumeration: Limits,): readonly [ReactElement,] {\n        return [this._createContentOption(enumeration,),]\n    }\n\n    //endregion -------------------- App option - content --------------------\n    //region -------------------- App option - table --------------------\n\n    protected abstract _createTableHeaderOption(): SingleHeaderContent\n\n    public renderTableHeader(): SingleHeaderContent {\n        return this._createTableHeaderOption()\n    }\n\n    //endregion -------------------- App option - table --------------------\n\n    //endregion -------------------- Methods --------------------\n\n}\n","import './LimitApp.scss'\n\nimport type {LimitAppProperties}                                   from 'app/AppProperties.types'\nimport type {AppInterpreterWithTable}                              from 'app/interpreter/AppInterpreterWithTable'\nimport type {PossibleDimensionOnCardList, PossibleDimensionOnList} from 'app/interpreter/DimensionOnList'\nimport type {LimitTypes}                                           from 'app/property/LimitTypes'\nimport type {ClassWithType}                                        from 'core/ClassWithType'\nimport type {Limits}                                               from 'core/limit/Limits'\nimport type {PossibleRouteName}                                    from 'route/EveryRoutes.types'\n\nimport {LimitAppOption}                             from 'app/options/LimitAppOption'\nimport {COURSE_THEME_IMAGE_FILE}                    from 'app/options/file/themeImageFiles'\nimport LinkButton                                   from 'app/tools/button/LinkButton'\nimport Image                                        from 'app/tools/images/Image'\nimport {AbstractTableApp}                           from 'app/withInterpreter/AbstractTableApp'\nimport {contentTranslation, gameContentTranslation} from 'lang/components/translationMethods'\nimport {filterGame}                                 from 'util/utilitiesMethods'\n\nexport default class LimitApp\n    extends AbstractTableApp<AppInterpreterWithTable<Limits, LimitAppOption>, LimitAppProperties>\n    implements ClassWithType<LimitTypes> {\n\n    //region -------------------- Getter methods --------------------\n\n    public get type(): LimitTypes {\n        return this.props.type\n    }\n\n    //endregion -------------------- Getter methods --------------------\n    //region -------------------- Create methods --------------------\n\n    protected override _createKey(): string {\n        return 'limit'\n    }\n\n\n    protected override _createSimpleListRouteName(): PossibleRouteName {\n        return `${this.type.routeName} (list)`\n    }\n\n    protected override _createCardListRouteName(): PossibleRouteName {\n        return `${this.type.routeName} (card)`\n    }\n\n    protected override _createTableRouteName(): PossibleRouteName {\n        return `${this.type.routeName} (table)`\n    }\n\n\n    protected override _createTitleContent(): ReactElementOrString {\n        return gameContentTranslation(`limit.${this.type.type}.all`)\n    }\n\n    protected override _createAsideContent(): ReactElementOrString {\n        const {type, viewDisplay,} = this\n\n        return <div id=\"limit-linkButton-container\" className=\"btn-group btn-group-vertical btn-group-sm\">\n            <LinkButton partialId=\"allLimit\" routeName={viewDisplay.getRoutePath(type.allRouteName)} color={type.allColor}>{contentTranslation('All')}</LinkButton>\n            <div id=\"limit-linkButton-playAndEditor-container\" className=\"btn-group btn-group-sm\">\n                <LinkButton partialId=\"playLimit\" routeName={viewDisplay.getRoutePath(type.playRouteName)} color={type.playColor}>{gameContentTranslation('limit.play.simple')}</LinkButton>\n                <LinkButton partialId=\"editorLimit\" routeName={viewDisplay.getRoutePath(type.editorRouteName)} color={type.editorColor}>{gameContentTranslation('limit.editor.simple')}</LinkButton>\n            </div>\n        </div>\n    }\n\n    protected override _createAppOptionInterpreter() {\n        const $this = this\n\n        return new class LimitAppInterpreter implements AppInterpreterWithTable<Limits, LimitAppOption> {\n\n            public get content() {\n                return filterGame($this.type.content, $this.props.games,)\n            }\n\n            //region -------------------- List interpreter --------------------\n\n            public createListDimension(): PossibleDimensionOnList {\n                return {\n                    small: 6,\n                    large: null,\n                    extraLarge: 2,\n                }\n            }\n\n            //endregion -------------------- List interpreter --------------------\n            //region -------------------- Card list interpreter --------------------\n\n            public createCardListDimension(): PossibleDimensionOnCardList {\n                return 'list'\n            }\n\n            public createCardListContent(enumeration: Limits,) {\n                return enumeration.isEditorLimit\n                    ? <div className=\"card-bodyWithEditor-container\">\n                        <Image file={COURSE_THEME_IMAGE_FILE} className=\"course-theme-image position-absolute start-0 bottom-0\"/>\n                        {this.#createBody(enumeration)}\n                    </div>\n                    : this.#createBody(enumeration)\n            }\n\n            #createBody(enumeration: Limits,) {\n                return <div className=\"card-body\" id={`limit-${enumeration.englishNameInHtml}`}>\n                    {LimitAppOption.AMOUNT_IN_ALL_GAMES.renderContent(enumeration,)}\n                </div>\n            }\n\n            //endregion -------------------- Card list interpreter --------------------\n            //region -------------------- Table interpreter --------------------\n\n            public readonly tableHeadersColor = 'info' satisfies BootstrapThemeColor\n            public readonly tableColor = 'primary' satisfies BootstrapThemeColor\n            public readonly tableCaption = gameContentTranslation(`limit.${$this.type.type}.all`) satisfies ReactElementOrString\n\n            public get tableOptions(): readonly LimitAppOption[] {\n                const games = $this.props.games,\n                    hasSMM1Or3DSGames = games.hasSMM1Or3DS,\n                    hasSMM2Games = games.hasSMM2\n\n                const options: LimitAppOption[] = [\n                    LimitAppOption.ACRONYM,\n                    LimitAppOption.NAME,\n                ]\n                if (hasSMM1Or3DSGames && hasSMM2Games)\n                   options.push(LimitAppOption.AMOUNT_IN_ALL_GAMES,)\n                else {\n                    if (hasSMM1Or3DSGames)\n                        options.push(LimitAppOption.AMOUNT_IN_SMM1_AND_SMM3DS,)\n                    if (hasSMM2Games)\n                        options.push(LimitAppOption.AMOUNT_IN_SMM2,)\n                }\n                return options\n            }\n\n\n            public createNewTableContent(content: Limits, option: LimitAppOption,) {\n                return option.renderContent(content,)\n            }\n\n            public createTableHeader(option: LimitAppOption,) {\n                return option.renderTableHeader()\n            }\n\n            //endregion -------------------- Table interpreter --------------------\n\n        }()\n    }\n\n    //endregion -------------------- Create methods --------------------\n}\n","import {Link} from 'react-router-dom'\n\nimport type {PossibleRouteName}                            from 'route/EveryRoutes.types'\nimport type {ReactProperties, ReactPropertiesWithChildren} from 'util/react/ReactProperties'\n\nimport {routeFromName} from 'route/route'\n\ninterface LinkButtonsProperties\n    extends ReactProperties {\n\n    partialId: string\n\n    routeName: Nullable<PossibleRouteName>\n\n    color: BootstrapColor\n\n}\n\n/**\n * Create a {@link Link} button or a simple disabled button (if the {@link LinkButtonsProperties.routeName route name} is <b>null</b>)\n *\n * @reactComponent\n */\nexport default function LinkButton({partialId, routeName, color, children,}: ReactPropertiesWithChildren<LinkButtonsProperties, ReactElementOrString>,) {\n    const id = `${partialId}-button`\n    const className = `btn btn-${color} link-button`\n\n    if (routeName == null)\n        return <button type=\"button\" id={id} className={className} disabled>{children}</button>\n    return <Link type=\"button\" id={id} className={className} to={routeFromName(routeName,)}>{children}</Link>\n}\n"],"names":["LimitAppOption","_ref","_inherits","_super","_createSuper","_classCallCheck","call","_createClass","key","value","enumeration","this","_createContentOption","_createTableHeaderOption","Enum","_createNameComponent2","reference","isEditorLimit","_jsxs","className","children","_jsx","Image","file","COURSE_THEME_IMAGE_FILE","NameComponent","id","name","popoverOrientation","ACRONYM","_LimitAppOption","LimitAppOption_Acronym","_super2","apply","arguments","_ref2","_ref2$reference","acronym","alternativeAcronym","TextComponent","content","element","contentTranslation","NAME","_createNameComponent","_classPrivateFieldLooseKey","_LimitAppOption2","LimitAppOption_Name","_super3","_this","_len","length","args","Array","_key","concat","Object","defineProperty","_assertThisInitialized","_ref3","alternativeContainer","EmptyLimit","_classPrivateFieldLooseBase","CommonOptions","get","nameHeader","AMOUNT_IN_ALL_GAMES","_LimitAppOption3","LimitAppOption_Amount","_super4","_enumeration$referenc","limitAmountInSMM1AndSMM3DS","limitAmountInSMM2","isUnknownLimitInSMM2","englishName","isUnknown","AMOUNT_IN_SMM1_AND_SMM3DS","renderContent","ProjectLanguages","current","space","slash","AMOUNT_IN_SMM2","limitHeader","_LimitAppOption4","LimitAppOption_AmountInSMM1AndSMM3DS","_super5","_ref4","isUnknownLimitInSMM1AndSMM3DS","_LimitAppOption5","LimitAppOption_AmountInSMM2","_super6","_ref5","CompanionEnum","_instance","_class2","_CompanionEnum","CompanionEnum_LimitAppOption","_super7","_classPrivateFieldLoo","_classPrivateFieldLoo2","writable","LimitApp","props","type","routeName","gameContentTranslation","viewDisplay","LinkButton","partialId","getRoutePath","allRouteName","color","allColor","playRouteName","playColor","editorRouteName","editorColor","_createBody","$this","LimitAppInterpreter","_createBody2","tableHeadersColor","tableColor","tableCaption","filterGame","games","small","large","extraLarge","hasSMM1Or3DSGames","hasSMM1Or3DS","hasSMM2Games","hasSMM2","options","push","option","renderTableHeader","englishNameInHtml","AbstractTableApp","disabled","Link","to","routeFromName"],"sourceRoot":""}