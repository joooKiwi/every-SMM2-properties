{"version":3,"file":"static/js/308.e10cd6d3.chunk.js","mappings":"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","sources":["app/options/SoundEffectAppOption.tsx","app/SoundEffectApp.tsx"],"sourcesContent":["import type {CollectionHolder, EnumerableConstructor, PossibleValueByEnumerable} from '@joookiwi/enumerable/dist/types'\nimport {Enum}                                                                    from '@joookiwi/enumerable'\n\nimport type {Names, Ordinals}                                  from 'app/options/SoundEffectAppOption.types'\nimport type {AppOptionWithContent, PossibleRenderReactElement} from 'app/options/component/AppOptionWithContent'\nimport type {AppOptionWithTable}                               from 'app/options/component/AppOptionWithTable'\nimport type {SingleHeaderContent}                              from 'app/tools/table/SimpleHeader'\nimport type {ReactElement}                                     from 'util/react/ReactProperties'\nimport type {NullOr}                                           from 'util/types/nullable'\n\nimport UnfinishedText                  from 'app/tools/text/UnfinishedText'\nimport {CommonOptions}                 from 'app/options/CommonOptions'\nimport {AppOptionWithContentComponent} from 'app/options/component/AppOptionWithContent.component'\nimport {AppOptionWithTableComponent}   from 'app/options/component/AppOptionWithTable.component'\nimport {Games}                         from 'core/game/Games'\nimport SoundEffectComponent            from 'core/soundEffect/SoundEffect.component'\nimport {SoundEffects}                  from 'core/soundEffect/SoundEffects'\nimport {SoundEffectCategories}         from 'core/soundEffectCategory/SoundEffectCategories'\nimport SimpleSoundComponent            from 'util/file/sound/component/SimpleSound.component'\n\nexport abstract class SoundEffectAppOption\n    extends Enum<Ordinals, Names>\n    implements AppOptionWithContent, AppOptionWithTable {\n\n    //region -------------------- Enum instances --------------------\n\n    public static readonly GAME =             new class GameStyleAppOption_Game extends SoundEffectAppOption {\n\n        protected override _createContentOption(enumeration: SoundEffects,) {\n            return [\n                SoundEffectAppOption.renderSMM1And3DSImage(enumeration),\n                SoundEffectAppOption.renderSMM2Image(enumeration),\n            ]\n        }\n\n        protected override _createTableHeaderOption() {\n            return CommonOptions.get.gameHeaderWithMainGames\n        }\n\n    }()\n    public static readonly NAME =             new class GameStyleAppOption_Name extends SoundEffectAppOption {\n\n        protected override _createContentOption(enumeration: SoundEffects,) {\n            return CommonOptions.get.getNameContent(enumeration)\n        }\n\n        protected override _createTableHeaderOption() {\n            return CommonOptions.get.nameHeader\n        }\n\n    }()\n    public static readonly CATEGORY =         new class GameStyleAppOption_Category extends SoundEffectAppOption {\n\n        protected override _createContentOption(enumeration: SoundEffects,) {\n            const {reference,} = enumeration\n\n            return CommonOptions.get.getCategoryContent(enumeration, () => SoundEffectCategories.getValueByName(reference.categoryEnglish).imageFile,)\n        }\n\n        protected override _createTableHeaderOption() {\n            return CommonOptions.get.categoryHeader\n        }\n\n    }()\n    public static readonly PLAYER_BEHAVIOUR = new class GameStyleAppOption_PlayerBehaviour extends SoundEffectAppOption {\n\n        protected override _createContentOption(enumeration: SoundEffects,) {\n            return enumeration.reference.playerSoundEffectTriggerContainer.createNewComponent(enumeration.englishName,)\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {key: 'player behaviour', element: '--Player behaviour--',}//TODO add Player behaviour\n        }\n\n    }()\n    public static readonly SOUNDS = new class GameStyleAppOption_PlayerBehaviour extends SoundEffectAppOption {\n\n        protected override _createContentOption({englishName, sounds_exclusiveSmm1, sounds_standaloneSmm1, sounds_smm2,}: SoundEffects,) {\n            const isSMM1Empty = sounds_exclusiveSmm1.length === 0,\n                isSMM2Empty = sounds_smm2.length === 0\n\n            return isSMM1Empty && isSMM2Empty\n                ? null\n                : <div key={`${englishName} (sound effect sounds)`}\n                       className={`soundEffect-sounds-container ${isSMM1Empty || isSMM2Empty ? ` soundEffect-sounds-smm${isSMM1Empty ? 2 : 1}-only-container` : ''}`}>\n                    {isSMM1Empty\n                        ? null\n                        : <div key={`${englishName} (sound effect sounds - SMM1&3DS)`} className=\"soundEffect-sounds-smm1-container\">\n                            {sounds_standaloneSmm1.map(sound => <div key={`${englishName} (sound effect sound - SMM1&3DS - ${sound.key})`} className=\"soundEffect-sound-container soundEffect-sound-smm1-container col-12 col-lg-6 col-xl-4 col-xxl-3\">\n                                <SimpleSoundComponent file={sound} title={`${englishName} (${sound.key})`}/>\n                            </div>)}\n                        </div>}\n                    {isSMM2Empty\n                        ? null\n                        : <div key={`${englishName} (sound effect sounds (SMM2))`} className=\"soundEffect-sounds-smm2-container\">\n                            {sounds_smm2.map(sound => <div key={`${englishName} (sound effect sound - SMM2 - ${sound.key})`} className=\"soundEffect-sound-container soundEffect-sound-smm2-container col-12 col-lg-6 col-xl-4 col-xxl-3\">\n                                <SimpleSoundComponent file={sound} title={`${englishName} (${sound.key})`}/>\n                            </div>)}\n                        </div>}\n                </div>\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {key: 'sounds', element: <UnfinishedText>Sounds</UnfinishedText>,}//TODO add sounds\n        }\n\n    }()\n\n    //endregion -------------------- Enum instances --------------------\n    //region -------------------- Enum fields --------------------\n\n    static [index: number]: SoundEffectAppOption\n\n    //endregion -------------------- Enum fields --------------------\n    //region -------------------- Fields --------------------\n\n    /**\n     * The callback to get the enumeration based for each option.\n     *\n     * @note It should only be set by {@link SoundEffectApp} and get by {@link SoundEffectAppOption}.\n     */\n    public static CALLBACK_TO_GET_ENUMERATION: () => SoundEffects\n\n    #appOptionWithContent?: AppOptionWithContent\n    #appOptionWithTable?: AppOptionWithTable\n\n    //endregion -------------------- Fields --------------------\n\n    private constructor() {\n        super()\n    }\n\n    //region -------------------- Getter methods --------------------\n    //endregion -------------------- Getter methods --------------------\n    //region -------------------- Methods --------------------\n\n    //region -------------------- App option - content --------------------\n\n    public static renderSMM1And3DSImage(enumerable: SoundEffects,): ReactElement {\n        const reference = enumerable.reference\n\n        return reference.isInSuperMarioMaker1 ? <SoundEffectComponent reference={enumerable} name={reference} game={Games.SUPER_MARIO_MAKER_1}/> : null\n    }\n\n    public static renderSMM2Image(enumerable: SoundEffects,): ReactElement {\n        const reference = enumerable.reference\n\n        return reference.isInSuperMarioMaker2 ? <SoundEffectComponent reference={enumerable} name={reference} game={Games.SUPER_MARIO_MAKER_2}/> : null\n    }\n\n    protected abstract _createContentOption(enumeration: SoundEffects,): PossibleRenderReactElement\n\n    private get __appOptionWithContent(): AppOptionWithContent {\n        return this.#appOptionWithContent ??= new AppOptionWithContentComponent(() => this._createContentOption(SoundEffectAppOption.CALLBACK_TO_GET_ENUMERATION()),)\n    }\n\n    public get renderContent(): readonly ReactElement[] {\n        return this.__appOptionWithContent.renderContent\n    }\n\n    //endregion -------------------- App option - content --------------------\n    //region -------------------- App option - table --------------------\n\n    protected abstract _createTableHeaderOption(): SingleHeaderContent\n\n    private get __appOptionWithTable(): AppOptionWithTable {\n        return this.#appOptionWithTable ??= new AppOptionWithTableComponent(() => this._createTableHeaderOption(),)\n    }\n\n    public get renderTableHeader(): NullOr<SingleHeaderContent> {\n        return this.__appOptionWithTable.renderTableHeader\n    }\n\n    //endregion -------------------- App option - table --------------------\n\n    //endregion -------------------- Methods --------------------\n    //region -------------------- Enum methods --------------------\n\n    protected override get _static(): EnumerableConstructor<Ordinals, Names> {\n        return SoundEffectAppOption\n    }\n\n    public static getValue(value: PossibleValueByEnumerable<SoundEffectAppOption>,): SoundEffectAppOption {\n        return Enum.getValueOn(this, value,)\n    }\n\n    public static get values(): CollectionHolder<SoundEffectAppOption> {\n        return Enum.getValuesOn(this,)\n    }\n\n    public static* [Symbol.iterator](): IterableIterator<SoundEffectAppOption> {\n        yield* this.values\n    }\n\n    //endregion -------------------- Enum methods --------------------\n\n}\n","import './SoundEffectApp.scss'\n\nimport type {AppInterpreterWithTable, SimplifiedTableProperties}   from 'app/interpreter/AppInterpreterWithTable'\nimport type {PossibleDimensionOnCardList, PossibleDimensionOnList} from 'app/interpreter/DimensionOnList'\nimport type {EveryPossibleRouteNames}                              from 'route/everyRoutes.types'\nimport type {ReactElementOrString}                                 from 'util/react/ReactProperties'\n\nimport {SoundEffectAppOption}   from 'app/options/SoundEffectAppOption'\nimport {AbstractTableApp}       from 'app/withInterpreter/AbstractTableApp'\nimport {SoundEffects}           from 'core/soundEffect/SoundEffects'\nimport {gameContentTranslation} from 'lang/components/translationMethods'\n\nexport default class SoundEffectApp\n    extends AbstractTableApp<AppInterpreterWithTable<SoundEffects, SoundEffectAppOption>> {\n\n    //region -------------------- Create methods --------------------\n\n    protected override _createKey() {\n        return 'soundEffect'\n    }\n\n\n    protected override _createSimpleListRouteName(): EveryPossibleRouteNames {\n        return 'everySoundEffect (list)'\n    }\n\n    protected override _createCardListRouteName(): EveryPossibleRouteNames {\n        return 'everySoundEffect (card)'\n    }\n\n    protected override _createTableRouteName(): EveryPossibleRouteNames {\n        return 'everySoundEffect (table)'\n    }\n\n\n    protected override _createTitleContent(): ReactElementOrString {\n        return gameContentTranslation('sound effect.all')\n    }\n\n    protected override _createAppOptionInterpreter(): AppInterpreterWithTable<SoundEffects, SoundEffectAppOption> {\n        return new class implements AppInterpreterWithTable<SoundEffects, SoundEffectAppOption> {\n\n            public get iterable() {\n                return SoundEffects[Symbol.iterator]()\n            }\n\n            //region -------------------- List interpreter --------------------\n\n            public createListDimension(): PossibleDimensionOnList {\n                return null\n            }\n\n            //endregion -------------------- List interpreter --------------------\n            //region -------------------- Card list interpreter --------------------\n\n            public createCardListDimension(): PossibleDimensionOnCardList {\n                return 'list'\n            }\n\n            public createCardListContent(enumerable: SoundEffects,) {\n                return <div>\n                    <div className=\"soundEffect-images-container\">\n                        {SoundEffectAppOption.renderSMM1And3DSImage(enumerable)}\n                        {SoundEffectAppOption.renderSMM2Image(enumerable)}\n                    </div>\n                </div>\n            }\n\n            //endregion -------------------- Card list interpreter --------------------\n            //region -------------------- Table interpreter --------------------\n\n            public set callbackToGetEnumerable(value: () => SoundEffects,) {\n                SoundEffectAppOption.CALLBACK_TO_GET_ENUMERATION = value\n            }\n\n            public get tableOptions(): readonly SoundEffectAppOption[] {\n                return [\n                    SoundEffectAppOption.GAME,\n                    SoundEffectAppOption.NAME,\n                    SoundEffectAppOption.CATEGORY,\n                    SoundEffectAppOption.PLAYER_BEHAVIOUR,\n                    SoundEffectAppOption.SOUNDS,\n                ]\n            }\n\n            public get tableProperties(): SimplifiedTableProperties {\n                return {\n                    caption: gameContentTranslation('sound effect.all'),\n                }\n            }\n\n            public createTableContent(option: SoundEffectAppOption,) {\n                return option.renderContent\n            }\n\n            public createTableHeader(option: SoundEffectAppOption,) {\n                return option.renderTableHeader\n            }\n\n            //endregion -------------------- Table interpreter --------------------\n\n        }()\n    }\n\n    //endregion -------------------- Create methods --------------------\n\n}\n"],"names":["_appOptionWithContent","_classPrivateFieldLooseKey","_appOptionWithTable","_Symbol$iterator","Symbol","iterator","SoundEffectAppOption","_ref","_inherits","_super","_createSuper","_this","_classCallCheck","call","Object","defineProperty","_assertThisInitialized","writable","value","_createClass","key","get","_classPrivateFieldLoo","_classPrivateFieldLoo2","_this2","_classPrivateFieldLooseBase","this","AppOptionWithContentComponent","_createContentOption","CALLBACK_TO_GET_ENUMERATION","__appOptionWithContent","renderContent","_classPrivateFieldLoo3","_classPrivateFieldLoo4","_this3","AppOptionWithTableComponent","_createTableHeaderOption","__appOptionWithTable","renderTableHeader","enumerable","reference","isInSuperMarioMaker1","_jsx","SoundEffectComponent","name","game","Games","SUPER_MARIO_MAKER_1","isInSuperMarioMaker2","SUPER_MARIO_MAKER_2","Enum","getValueOn","getValuesOn","_regeneratorRuntime","mark","wrap","_context","prev","next","delegateYield","values","stop","GAME","_SoundEffectAppOption","GameStyleAppOption_Game","_super2","apply","arguments","enumeration","renderSMM1And3DSImage","renderSMM2Image","CommonOptions","gameHeaderWithMainGames","NAME","_SoundEffectAppOption2","GameStyleAppOption_Name","_super3","getNameContent","nameHeader","CATEGORY","_SoundEffectAppOption3","GameStyleAppOption_Category","_super4","getCategoryContent","SoundEffectCategories","getValueByName","categoryEnglish","imageFile","categoryHeader","PLAYER_BEHAVIOUR","_SoundEffectAppOption4","GameStyleAppOption_PlayerBehaviour","_super5","playerSoundEffectTriggerContainer","createNewComponent","englishName","element","SOUNDS","_SoundEffectAppOption5","_super6","_ref2","sounds_exclusiveSmm1","sounds_standaloneSmm1","sounds_smm2","isSMM1Empty","length","isSMM2Empty","_jsxs","className","concat","children","map","sound","SimpleSoundComponent","file","title","UnfinishedText","SoundEffectApp","_AbstractTableApp","gameContentTranslation","_class","SoundEffects","set","caption","option","AbstractTableApp"],"sourceRoot":""}