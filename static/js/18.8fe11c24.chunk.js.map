{"version":3,"sources":["app/options/CommonOptions.tsx","app/options/GameStyleAppOption.tsx","app/EveryGameStylesApp.tsx"],"names":["Image","lazy","NameComponent","CommonOptions","this","key","element","translationKey","enumeration","id","name","reference","popoverOrientation","imagePath_or_nameCallback","categoryNameContainer","EmptyStringName","get","EMPTY_REACT_ELEMENT","imagePath_or_name","englishName","english","startingKey","source","fallbackName","englishNameInHtml","NightEffectComponent","YesOrNoResultTextComponent","Symbol","iterator","GameStyleAppOption","AppOptionWithContentComponent","_createContentOption","__appOptionWithContent","renderContent","AppOptionWithTableComponent","_createTableHeaderOption","__appOptionWithTable","renderTableHeader","value","Enum","getValueOn","getValuesOn","values","IMAGE","CALLBACK_TO_GET_ENUMERATION","renderSingleComponent","ContentTranslationComponent","NAME","getNameContent","nameHeader","GAME","gameStyle","boolean","isInSuperMarioMaker1","isInSuperMarioMakerFor3DS","isInSuperMarioMaker2","GameContentTranslationComponent","subHeaders","alt","Games","SUPER_MARIO_MAKER_1","path","imagePath","SUPER_MARIO_MAKER_FOR_NINTENDO_3DS","SUPER_MARIO_MAKER_2","NIGHT_DESERT_WIND","className","Themes","DESERT","Times","NIGHT","tooltip","namespace","replace","night","desert","ProjectLanguages","currentLanguage","toLowerCase","EveryGameStylesApp","props","state","typeDisplayed","ViewDisplays","TABLE","GameStyles","enumerable","caption","option","AbstractTableApp"],"mappings":"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","file":"static/js/18.8fe11c24.chunk.js","sourcesContent":["import {lazy, ReactElement} from 'react';\n\nimport type {ClassWithEnglishName}   from '../../core/ClassWithEnglishName';\nimport type {ClassWithReference}     from '../../core/ClassWithReference';\nimport type {Enum}                   from '../../util/enum/Enum';\nimport type {Name}                   from '../../lang/name/Name';\nimport type {NameTrait}              from '../../lang/name/NameTrait';\nimport type {NameTraitFromACategory} from '../../lang/name/NameTraitFromACategory';\nimport type {SingleHeaderContent}    from '../tools/table/SimpleHeader';\n\nimport ContentTranslationComponent     from '../../lang/components/ContentTranslationComponent';\nimport {EMPTY_REACT_ELEMENT}           from '../../util/emptyReactVariables';\nimport {EmptyStringName}               from '../../lang/name/EmptyStringName';\nimport GameContentTranslationComponent from '../../lang/components/GameContentTranslationComponent';\n\n//region -------------------- dynamic imports --------------------\n\nconst Image =         lazy(() => import('../tools/images/Image'));\nconst NameComponent = lazy(() => import('../../lang/name/component/Name.component'));\n\n//endregion -------------------- dynamic imports --------------------\n\n/**\n * @singleton\n */\nexport class CommonOptions {\n\n    //region -------------------- Singleton usage --------------------\n\n    static #instance?: CommonOptions;\n\n    private constructor() {\n    }\n\n    public static get get() {\n        return this.#instance ??= new this();\n    }\n\n    //endregion -------------------- Singleton usage --------------------\n    //region -------------------- Fields --------------------\n\n    #nameHeader?: SingleHeaderContent;\n\n    #categoryHeader?: SingleHeaderContent;\n\n    //endregion -------------------- Fields --------------------\n\n    public get nameHeader(): SingleHeaderContent {\n        return this.#nameHeader ??= {key: 'name', element: <ContentTranslationComponent translationKey=\"Name\"/>,};\n    }\n\n    public getNameContent(enumeration: EnumerationWithReference,): ReactElement {\n        return <NameComponent id=\"name\" name={enumeration.reference} popoverOrientation=\"left\"/>;\n    }\n\n\n    public get categoryHeader(): SingleHeaderContent {\n        return this.#categoryHeader ??= {key: 'category', element: <GameContentTranslationComponent translationKey=\"Category\"/>,};\n    }\n\n    public getCategoryContent(enumeration: EnumerationWithCategoryReference, imagePath_or_nameCallback: () => | string | Name<string>,): ReactElement {\n        const name = enumeration.reference.categoryNameContainer;\n        if (name === EmptyStringName.get)\n            return EMPTY_REACT_ELEMENT;\n\n        const imagePath_or_name = imagePath_or_nameCallback();\n        const englishName = name.english;\n        const startingKey = `category name (${englishName})`;\n        if (typeof imagePath_or_name == 'string')\n            return <Image key={`${startingKey} image`} source={imagePath_or_name} fallbackName={`${name.english} - image`}/>;\n        return <NameComponent key={`${startingKey} name`} id={`category-name-${enumeration.englishNameInHtml}`} name={name} popoverOrientation=\"left\"/>;\n    }\n\n}\n\ntype EnumerationWithReference = Enum<any, any> & ClassWithEnglishName<string> & ClassWithReference<Name<string>>;\ntype EnumerationWithCategoryReference = Enum<any, any> & ClassWithEnglishName<string> & ClassWithReference<NameTraitFromACategory<string, NameTrait<string>>>;\n","import {lazy} from 'react';\n\nimport type {AppOptionWithContent, PossibleRenderReactElement}                                                                                                                      from './component/AppOptionWithContent';\nimport type {AppOptionWithTable}                                                                                                                                                    from './component/AppOptionWithTable';\nimport type {EnumArray, EnumByName, EnumByNumber, EnumByOrdinal, EnumByPossibleString, EnumByString, Names, Ordinals, PossibleNonNullableValue, PossibleStringValue, PossibleValue} from './GameStyleAppOption.types';\nimport type {GameStyles}                                                                                                                                                            from '../../core/gameStyle/GameStyles';\nimport type {ReactElement}                                                                                                                                                          from '../../util/react/ReactProperty';\nimport type {SingleHeaderContent}                                                                                                                                                   from '../tools/table/SimpleHeader';\nimport type {StaticReference}                                                                                                                                                       from '../../util/enum/Enum.types';\n\nimport {AppOptionWithContentComponent} from './component/AppOptionWithContent.component';\nimport {AppOptionWithTableComponent}   from './component/AppOptionWithTable.component';\nimport {CommonOptions}                 from './CommonOptions';\nimport ContentTranslationComponent     from '../../lang/components/ContentTranslationComponent';\nimport {Enum}                          from '../../util/enum/Enum';\nimport GameContentTranslationComponent from '../../lang/components/GameContentTranslationComponent';\nimport {Games}                         from '../../core/game/Games';\nimport {ProjectLanguages}              from '../../lang/ProjectLanguages';\nimport {Themes}                        from '../../core/theme/Themes';\nimport {Times}                         from '../../core/time/Times';\n\n//region -------------------- dynamic imports --------------------\n\nconst NightEffectComponent =       lazy(() => import( '../../core/nightEffect/NightEffect.component'));\nconst YesOrNoResultTextComponent = lazy(() => import( '../tools/text/YesOrNoResultTextComponent'));\n\n//endregion -------------------- dynamic imports --------------------\n\nexport abstract class GameStyleAppOption\n    extends Enum<Ordinals, Names>\n    implements AppOptionWithContent, AppOptionWithTable {\n\n    //region -------------------- Enum instances --------------------\n\n    public static readonly IMAGE =             new class GameStyleAppOption_Images extends GameStyleAppOption {\n\n        protected override get _createContentOption(): () => PossibleRenderReactElement {\n            return () => {\n                const enumerable = GameStyleAppOption.CALLBACK_TO_GET_ENUMERATION();\n                return enumerable.renderSingleComponent;\n            };\n        }\n\n        protected override get _createTableHeaderOption(): SingleHeaderContent {\n            return {key: 'image', element: <ContentTranslationComponent translationKey=\"Image\"/>,};\n        }\n\n    }();\n    public static readonly NAME =              new class GameStyleAppOption_Name extends GameStyleAppOption {\n\n        protected override get _createContentOption(): () => PossibleRenderReactElement {\n            return () => {\n                const enumeration = GameStyleAppOption.CALLBACK_TO_GET_ENUMERATION();\n\n                return CommonOptions.get.getNameContent(enumeration);\n            };\n        }\n\n        protected override get _createTableHeaderOption(): SingleHeaderContent {\n            return CommonOptions.get.nameHeader;\n        }\n\n    }();\n    public static readonly GAME =              new class GameStyleAppOption_Game extends GameStyleAppOption {\n\n        protected override get _createContentOption(): () => PossibleRenderReactElement {\n            return () => {\n                const enumerable = GameStyleAppOption.CALLBACK_TO_GET_ENUMERATION();\n                const gameStyle = enumerable.reference;\n                return [\n                    <YesOrNoResultTextComponent boolean={gameStyle.isInSuperMarioMaker1}/>,\n                    <YesOrNoResultTextComponent boolean={gameStyle.isInSuperMarioMakerFor3DS}/>,\n                    <YesOrNoResultTextComponent boolean={gameStyle.isInSuperMarioMaker2}/>,\n                ];\n            };\n        }\n\n        protected override get _createTableHeaderOption(): SingleHeaderContent {\n            return {\n                key: 'game', element: <GameContentTranslationComponent translationKey=\"Game\"/>,\n                subHeaders: [\n                    {key: 'isInSuperMarioMaker1', alt: Games.SUPER_MARIO_MAKER_1.englishName, path: Games.SUPER_MARIO_MAKER_1.imagePath,},\n                    {key: 'isInSuperMarioMakerFor3DS', alt: Games.SUPER_MARIO_MAKER_FOR_NINTENDO_3DS.englishName, path: Games.SUPER_MARIO_MAKER_FOR_NINTENDO_3DS.imagePath,},\n                    {key: 'isInSuperMarioMaker2', alt: Games.SUPER_MARIO_MAKER_2.englishName, path: Games.SUPER_MARIO_MAKER_2.imagePath,},\n                ],\n            };\n        }\n\n    }();\n    public static readonly NIGHT_DESERT_WIND = new class GameStyleAppOption_NightDesertWind extends GameStyleAppOption {\n\n        protected override get _createContentOption(): () => PossibleRenderReactElement {\n            return () => {\n                const enumerable = GameStyleAppOption.CALLBACK_TO_GET_ENUMERATION();\n                const gameStyle = enumerable.reference;\n\n                return <NightEffectComponent gameStyle={gameStyle}/>;\n            };\n        }\n\n        protected override get _createTableHeaderOption(): SingleHeaderContent {\n            return {\n                key: 'nightDesertWind',\n                element: <div className=\"night-desert-wind-effect-container\">{Themes.DESERT.renderSingleComponent(false)}{Times.NIGHT.renderSingleComponent}</div>,\n                tooltip: {\n                    namespace: 'gameContent', translationKey: 'Wind effect (night desert)',\n                    replace: {\n                        night: '--night--',//TODO add night reference\n                        desert: ProjectLanguages.currentLanguage.get(Themes.DESERT.reference)!.toLowerCase(),\n                    },\n                },\n            };\n        }\n\n    }();\n\n    //endregion -------------------- Enum instances --------------------\n    //region -------------------- Enum fields --------------------\n\n    static [index: number]: GameStyleAppOption;\n\n    //endregion -------------------- Enum fields --------------------\n    //region -------------------- Fields --------------------\n\n    /**\n     * The callback to get the enumeration based for each option.\n     *\n     * @note It should only be set by {@link EveryEntitiesApp} and get by {@link EntityAppOption}.\n     */\n    public static CALLBACK_TO_GET_ENUMERATION: () => GameStyles;\n\n    #appOptionWithContent?: AppOptionWithContent;\n    #appOptionWithTable?: AppOptionWithTable;\n\n    //endregion -------------------- Fields --------------------\n\n    private constructor() {\n        super();\n    }\n\n    //region -------------------- Getter methods --------------------\n    //endregion -------------------- Getter methods --------------------\n    //region -------------------- Methods --------------------\n\n    //region -------------------- App option - content --------------------\n\n    protected abstract get _createContentOption(): () => PossibleRenderReactElement;\n\n    protected get __appOptionWithContent(): AppOptionWithContent {\n        return this.#appOptionWithContent ??= new AppOptionWithContentComponent(this._createContentOption,);\n    }\n\n    public get renderContent(): readonly ReactElement[] {\n        return this.__appOptionWithContent.renderContent;\n    }\n\n    //endregion -------------------- App option - content --------------------\n    //region -------------------- App option - table --------------------\n\n    protected abstract get _createTableHeaderOption(): SingleHeaderContent;\n\n    protected get __appOptionWithTable(): AppOptionWithTable {\n        return this.#appOptionWithTable ??= new AppOptionWithTableComponent(() => this._createTableHeaderOption,);\n    }\n\n    public get renderTableHeader(): | SingleHeaderContent | null {\n        return this.__appOptionWithTable.renderTableHeader;\n    }\n\n    //endregion -------------------- App option - table --------------------\n\n    //endregion -------------------- Methods --------------------\n    //region -------------------- Enum methods --------------------\n\n    protected override get _static(): StaticReference<GameStyleAppOption> {\n        return GameStyleAppOption;\n    }\n\n    //region -------------------- Enum value methods --------------------\n\n    public static getValue(nullValue: | null | undefined,): null\n    public static getValue<O extends Ordinals = Ordinals, >(ordinal: O,): EnumByOrdinal<O>\n    public static getValue<O extends number = number, >(ordinal: O,): EnumByNumber<O>\n    public static getValue<N extends Names = Names, >(name: N,): EnumByName<N>\n    public static getValue<S extends PossibleStringValue = PossibleStringValue, >(name: S,): EnumByPossibleString<S>\n    public static getValue<S extends string = string, >(name: S,): EnumByString<S>\n    public static getValue<I extends GameStyleAppOption = GameStyleAppOption, >(instance: I,): I\n    public static getValue(value: PossibleNonNullableValue,): GameStyleAppOption\n    public static getValue(value: PossibleValue,): | GameStyleAppOption | null\n    public static getValue(value: PossibleValue,) {\n        return Enum.getValueOn(this, value,);\n    }\n\n    public static get values(): EnumArray {\n        return Enum.getValuesOn(this);\n    }\n\n    //endregion -------------------- Enum value methods --------------------\n\n    public static [Symbol.iterator]() {\n        return this.values[Symbol.iterator]();\n    }\n\n    //endregion -------------------- Enum methods --------------------\n\n}\n","import './EveryGameStylesApp.scss';\n\nimport type {AppInterpreterWithTable, SimplifiedTableProperties} from './interpreter/AppInterpreterWithTable';\nimport type {GameStyleAppStates}                                 from './AppStates.types';\nimport type {ReactElement, ReactElementOrString}                 from '../util/react/ReactProperty';\nimport type {SingleHeaderContent}                                from './tools/table/SimpleHeader';\n\nimport {AbstractTableApp}              from './withInterpreter/AbstractTableApp';\nimport GameContentTranslationComponent from '../lang/components/GameContentTranslationComponent';\nimport {GameStyleAppOption}            from './options/GameStyleAppOption';\nimport {GameStyles}                    from '../core/gameStyle/GameStyles';\nimport {ViewDisplays}                  from './withInterpreter/ViewDisplays';\n\n/**\n * @reactComponent\n */\nexport default class EveryGameStylesApp\n    extends AbstractTableApp<AppInterpreterWithTable<GameStyles, GameStyleAppOption>, {}, GameStyleAppStates> {\n\n    public constructor(props: {},) {\n        super(props,);\n        this.state = {\n            typeDisplayed: ViewDisplays.TABLE,\n        };\n    }\n\n    //region -------------------- Create methods --------------------\n\n    protected override _createKey(): string {\n        return 'gameStyle';\n    }\n\n    protected override _createTitleContent(): ReactElementOrString {\n        return <GameContentTranslationComponent translationKey=\"Every game styles\"/>;\n    }\n\n    protected override _createAppOptionInterpreter(): AppInterpreterWithTable<GameStyles, GameStyleAppOption> {\n        return new class implements AppInterpreterWithTable<GameStyles, GameStyleAppOption> {\n\n            public get iterable(): IterableIterator<GameStyles> {\n                return GameStyles[Symbol.iterator]();\n            }\n\n            //region -------------------- Card list interpreter --------------------\n\n            public createCardListContent(enumerable: GameStyles,): ReactElement {\n                return <div className=\"card-body\" id={`gameStyle-${enumerable.englishNameInHtml}`}>\n                    {enumerable.renderSingleComponent}\n                </div>;\n            }\n\n            //endregion -------------------- Card list interpreter --------------------\n\n            public set callbackToGetEnumerable(value: () => GameStyles,) {\n                GameStyleAppOption.CALLBACK_TO_GET_ENUMERATION = value;\n            }\n\n            public get tableOptions(): GameStyleAppOption[] {\n                return [\n                    GameStyleAppOption.IMAGE,\n                    GameStyleAppOption.NAME,\n                    GameStyleAppOption.GAME,\n                    GameStyleAppOption.NIGHT_DESERT_WIND,\n                ];\n            }\n\n            public get tableProperties(): SimplifiedTableProperties {\n                return {\n                    caption: <GameContentTranslationComponent translationKey=\"Every game styles\"/>,\n                };\n            }\n\n\n            public createTableContent(option: GameStyleAppOption,): readonly ReactElement[] {\n                return option.renderContent;\n            }\n\n            public createTableHeader(option: GameStyleAppOption,): | SingleHeaderContent | null {\n                return option.renderTableHeader;\n            }\n\n        }();\n    }\n\n    //endregion -------------------- Create methods --------------------\n\n}\n"],"sourceRoot":""}