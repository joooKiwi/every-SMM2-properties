{"version":3,"sources":["app/options/CommonOptions.tsx","app/options/component/EmptyAppOption.ts","app/options/MiiCostumeAppOption.tsx","app/MiiCostumeApp.tsx"],"names":["Image","lazy","NameComponent","CommonOptions","this","key","element","translationKey","enumeration","id","name","reference","popoverOrientation","imagePath_or_nameCallback","categoryNameContainer","EmptyStringName","get","EMPTY_REACT_ELEMENT","imagePath_or_name","englishName","english","startingKey","source","fallbackName","englishNameInHtml","subHeaders","getGameHeader","alt","Games","SUPER_MARIO_MAKER_1","path","imagePath","SUPER_MARIO_MAKER_FOR_NINTENDO_3DS","SUPER_MARIO_MAKER_2","mainGames","isInSMM1","isInSuperMarioMaker1","isInSMM3DS","isInSuperMarioMakerFor3DS","isInSMM2","isInSuperMarioMaker2","className","renderSingleComponent","isInCourseTheme","BASE_PATH","isInWorldTheme","EmptyAppOption","renderContent","EMPTY_ARRAY","renderTableHeader","Symbol","iterator","MiiCostumeAppOption","defaultValue","content","_createContentOption","AppOptionWithContentComponent","__appOptionWithContent","_createTableHeaderOption","AppOptionWithTableComponent","__appOptionWithTable","value","Enum","getValueOn","getValuesOn","values","AbstractAppOption","IMAGE","CALLBACK_TO_GET_ENUMERATION","ContentTranslationComponent","NAME","getNameContent","nameHeader","OFFICIAL_NOTIFICATION","miiCostume","officialNotification","createSimpleTranslationComponent","officialNotificationAmount","CATEGORY","categoryName","categoryContainer","nameContainer","getCategoryContent","CATEGORY_AS_TEXT","MiiCostumeCategories","getValue","categoryHeader","MiiCostumeApp","props","state","typeDisplayed","ViewDisplays","TABLE","GameContentTranslationComponent","translation","TranslationUtility","replaceAndInterpretTranslation","pluralName","MiiCostumes","small","medium","large","extraExtraLarge","category","categoryEnglish","caption","option","AbstractTableApp"],"mappings":"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","file":"static/js/14.2c9b4f73.chunk.js","sourcesContent":["import {lazy} from 'react';\n\nimport type {ClassInAnySuperMarioMakerGame}             from '../../core/game/ClassInAnySuperMarioMakerGame';\nimport type {ClassWithEnglishName}                      from '../../core/ClassWithEnglishName';\nimport type {ClassWithReference}                        from '../../core/ClassWithReference';\nimport type {Enum}                                      from '../../util/enum/Enum';\nimport type {Name}                                      from '../../lang/name/Name';\nimport type {NameTrait}                                 from '../../lang/name/NameTrait';\nimport type {NameTraitFromACategory}                    from '../../lang/name/NameTraitFromACategory';\nimport type {ReactElement}                              from '../../util/react/ReactProperties';\nimport type {SingleHeaderContent, SingleHeadersContent} from '../tools/table/SimpleHeader';\nimport type {Themes}                                    from '../../core/theme/Themes';\n\nimport ContentTranslationComponent     from '../../lang/components/ContentTranslationComponent';\nimport {BASE_PATH}                     from '../../variables';\nimport {EMPTY_REACT_ELEMENT}           from '../../util/emptyReactVariables';\nimport {EmptyStringName}               from '../../lang/name/EmptyStringName';\nimport GameContentTranslationComponent from '../../lang/components/GameContentTranslationComponent';\nimport {Games}                         from '../../core/game/Games';\n\n//region -------------------- dynamic imports --------------------\n\nconst Image =         lazy(() => import('../tools/images/Image'));\nconst NameComponent = lazy(() => import('../../lang/name/component/Name.component'));\n\n//endregion -------------------- dynamic imports --------------------\n\n/**\n * @singleton\n */\nexport class CommonOptions {\n\n    //region -------------------- Singleton usage --------------------\n\n    static #instance?: CommonOptions;\n\n    private constructor() {\n    }\n\n    public static get get() {\n        return this.#instance ??= new this();\n    }\n\n    //endregion -------------------- Singleton usage --------------------\n    //region -------------------- Fields --------------------\n\n    #nameHeader?: SingleHeaderContent;\n    #gameHeader?: SingleHeaderContent;\n    #gameHeaderWithAllGames?: SingleHeaderContent;\n    #gameHeaderWithMainGames?: SingleHeaderContent;\n    #mainGames?: readonly [SingleHeaderContent, SingleHeaderContent,];\n    #categoryHeader?: SingleHeaderContent;\n\n    //endregion -------------------- Fields --------------------\n\n    public get nameHeader(): SingleHeaderContent {\n        return this.#nameHeader ??= {key: 'name', element: <ContentTranslationComponent translationKey=\"Name\"/>,};\n    }\n\n    public getNameContent(enumeration: EnumerationWithReference,): ReactElement {\n        return <NameComponent id=\"name\" name={enumeration.reference} popoverOrientation=\"left\"/>;\n    }\n\n\n    public get categoryHeader(): SingleHeaderContent {\n        return this.#categoryHeader ??= {key: 'category', element: <GameContentTranslationComponent translationKey=\"Category\"/>,};\n    }\n\n    public getCategoryContent(enumeration: EnumerationWithCategoryReference, imagePath_or_nameCallback: () => | string | Name<string>,): ReactElement {\n        const name = enumeration.reference.categoryNameContainer;\n        if (name === EmptyStringName.get)\n            return EMPTY_REACT_ELEMENT;\n\n        const imagePath_or_name = imagePath_or_nameCallback();\n        const englishName = name.english;\n        const startingKey = `category name (${englishName})`;\n        if (typeof imagePath_or_name == 'string')\n            return <Image key={`${startingKey} image`} source={imagePath_or_name} fallbackName={`${name.english} - image`}/>;\n        return <NameComponent key={`${startingKey} name`} id={`category-name-${enumeration.englishNameInHtml}`} name={name} popoverOrientation=\"left\"/>;\n    }\n\n\n    public get gameHeader(): SingleHeaderContent {\n        return this.#gameHeader ??= {key: 'game', element: <GameContentTranslationComponent translationKey=\"Game\"/>,};\n    }\n\n    public getGameHeader(...subHeaders: SingleHeadersContent): SingleHeaderContent {\n        return {\n            key: 'game', element: <GameContentTranslationComponent translationKey=\"Game\"/>,\n            subHeaders: subHeaders,\n        };\n    }\n\n    /**@deprecated Relocate the games in the name content */\n    public get gameHeaderWithAllGames(): SingleHeaderContent {\n        return this.#gameHeaderWithAllGames ??= this.getGameHeader(\n            {key: 'isInSuperMarioMaker1', alt: Games.SUPER_MARIO_MAKER_1.englishName, path: Games.SUPER_MARIO_MAKER_1.imagePath,},\n            {key: 'isInSuperMarioMakerFor3DS', alt: Games.SUPER_MARIO_MAKER_FOR_NINTENDO_3DS.englishName, path: Games.SUPER_MARIO_MAKER_FOR_NINTENDO_3DS.imagePath,},\n            {key: 'isInSuperMarioMaker2', alt: Games.SUPER_MARIO_MAKER_2.englishName, path: Games.SUPER_MARIO_MAKER_2.imagePath,},\n        );\n    }\n\n    public get gameHeaderWithMainGames(): SingleHeaderContent {\n        return this.#gameHeaderWithMainGames ??= this.getGameHeader(...this.mainGames);\n    }\n\n    public get mainGames(): readonly [SingleHeaderContent, SingleHeaderContent,] {\n        return this.#mainGames ??= [\n            {key: 'isInSuperMarioMaker1And3DS', alt: Games.SUPER_MARIO_MAKER_1.englishName, path: Games.SUPER_MARIO_MAKER_1.imagePath,},//TODO create a animated image for both games (SMM1 & SMM3DS)\n            {key: 'isInSuperMarioMaker2', alt: Games.SUPER_MARIO_MAKER_2.englishName, path: Games.SUPER_MARIO_MAKER_2.imagePath,},\n        ];\n    }\n\n    /**\n     * Get a {@link HTMLDivElement} containing each images (if true)\n     * of the {@link Games} contained in the {@link Enumerable} {@link ClassWithReference reference}.\n     *\n     * @param enumeration The enumerable to retrieve the {@link Games} properties & {@link ClassWithEnglishName english name}.\n     */\n    public getGameContent(enumeration: EnumerationWithInSuperMarioMakerGameReference,): ReactElement {\n        const reference = enumeration.reference;\n        const isInSMM1 = reference.isInSuperMarioMaker1;\n        const isInSMM3DS = reference.isInSuperMarioMakerFor3DS;\n        const isInSMM2 = reference.isInSuperMarioMaker2;\n\n        return <div key={`${enumeration.englishName} (game content images)`} id={`${enumeration.englishNameInHtml}-gameContentImages-container`} className=\"gameContentImages-container\">\n            {isInSMM1 ? Games.SUPER_MARIO_MAKER_1.renderSingleComponent : EMPTY_REACT_ELEMENT}\n            {isInSMM3DS ? Games.SUPER_MARIO_MAKER_FOR_NINTENDO_3DS.renderSingleComponent : EMPTY_REACT_ELEMENT}\n            {isInSMM2 ? Games.SUPER_MARIO_MAKER_2.renderSingleComponent : EMPTY_REACT_ELEMENT}\n        </div>;\n    }\n\n\n    public getThemeContent(enumeration: Themes,): ReactElement {\n        const reference = enumeration.reference;\n\n        return <div key={`${enumeration.englishName} (theme content images)`} id={`${enumeration.englishNameInHtml}-themeContentImages-container`} className=\"themeContentImages-container\">\n            {reference.isInCourseTheme ? <Image source={`/${BASE_PATH}/theme/Course theme.tiff`} fallbackName=\"Course theme\"/> : EMPTY_REACT_ELEMENT}\n            {reference.isInWorldTheme ? <Image source={`/${BASE_PATH}/theme/World theme.tiff`} fallbackName=\"World theme\"/> : EMPTY_REACT_ELEMENT}\n        </div>;\n    }\n\n}\n\ntype EnumerationWithReference = Enum<any, any> & ClassWithEnglishName<string> & ClassWithReference<Name<string>>;\ntype EnumerationWithCategoryReference = Enum<any, any> & ClassWithEnglishName<string> & ClassWithReference<NameTraitFromACategory<string, NameTrait<string>>>;\ntype EnumerationWithInSuperMarioMakerGameReference = Enum<any, any> & ClassWithEnglishName<string> & ClassWithReference<ClassInAnySuperMarioMakerGame>;\n","import type {AppOptionWithTable}   from './AppOptionWithTable';\nimport type {AppOptionWithContent} from './AppOptionWithContent';\n\nimport {EMPTY_ARRAY} from '../../../util/emptyVariables';\n\n/**\n * @singleton\n */\nexport class EmptyAppOption\n    implements AppOptionWithContent, AppOptionWithTable {\n\n    //region -------------------- Singleton usage --------------------\n\n    static #instance?: EmptyAppOption;\n\n    private constructor() {\n    }\n\n    public static get get() {\n        return this.#instance ??= new this();\n    }\n\n    //endregion -------------------- Singleton usage --------------------\n\n    public readonly renderContent = EMPTY_ARRAY;\n    public readonly renderTableHeader = null;\n\n}\n","import {lazy} from 'react';\n\nimport type {AppOptionWithContent, PossibleRenderReactElement}                                                                                                                      from './component/AppOptionWithContent';\nimport type {AppOptionWithTable}                                                                                                                                                    from './component/AppOptionWithTable';\nimport type {EnumArray, EnumByName, EnumByNumber, EnumByOrdinal, EnumByPossibleString, EnumByString, Names, Ordinals, PossibleNonNullableValue, PossibleStringValue, PossibleValue} from './MiiCostumeAppOption.types';\nimport type {MiiCostumeAppStates}                                                                                                                                                   from '../AppStates.types';\nimport type {MiiCostumes}                                                                                                                                                           from '../../core/miiCostume/MiiCostumes';\nimport type {ReactElement}                                                                                                                                                          from '../../util/react/ReactProperties';\nimport type {SingleHeaderContent}                                                                                                                                                   from '../tools/table/SimpleHeader';\nimport type {StaticReference}                                                                                                                                                       from '../../util/enum/Enum.types';\n\nimport {AbstractAppOption}             from './AbstractAppOption';\nimport {AppOptionWithContentComponent} from './component/AppOptionWithContent.component';\nimport {AppOptionWithTableComponent}   from './component/AppOptionWithTable.component';\nimport {CommonOptions}                 from './CommonOptions';\nimport ContentTranslationComponent     from '../../lang/components/ContentTranslationComponent';\nimport {EMPTY_REACT_ELEMENT}           from '../../util/emptyReactVariables';\nimport {EmptyAppOption}                from './component/EmptyAppOption';\nimport {Enum}                          from '../../util/enum/Enum';\nimport {MiiCostumeCategories}          from '../../core/miiCostumeCategory/MiiCostumeCategories';\n\n//region -------------------- dynamic imports --------------------\n\nconst Image = lazy(() => import('../tools/images/Image'));\n\n//endregion -------------------- dynamic imports --------------------\n\n/**\n * @todo convert the \"_createTableHeaderOption\" to have the enumerable as an argument and to be non-null\n * @todo Change CATEGORY to use {IMAGE, TEXT or NO} instead of 2 different options.\n */\nexport abstract class MiiCostumeAppOption\n    extends AbstractAppOption<boolean, MiiCostumeAppStates, Ordinals, Names> {\n\n    //region -------------------- Enum instances --------------------\n\n    public static readonly IMAGE =                 new class MiiCostumeAppOption_Image extends MiiCostumeAppOption {\n\n        protected override _createContentOption(): PossibleOptionWithContent {\n            return () => {\n                const enumeration = MiiCostumeAppOption.CALLBACK_TO_GET_ENUMERATION();\n\n                return <Image source={enumeration.imagePath} fallbackName={`${enumeration.englishName} - image`}/>;\n            };\n        }\n\n        protected override _createTableHeaderOption(): PossibleOptionWithTable {\n            return {key: 'image', element: <ContentTranslationComponent translationKey=\"Image\"/>,};\n        }\n\n    }(true,);\n    public static readonly NAME =                  new class MiiCostumeAppOption_Name extends MiiCostumeAppOption {\n\n        protected override _createContentOption(): PossibleOptionWithContent {\n            return () => CommonOptions.get.getNameContent(MiiCostumeAppOption.CALLBACK_TO_GET_ENUMERATION());\n        }\n\n        protected override _createTableHeaderOption(): PossibleOptionWithTable {\n            return CommonOptions.get.nameHeader;\n        }\n\n    }(true,);\n    public static readonly OFFICIAL_NOTIFICATION = new class MiiCostumeAppOption_ConditionToUnlockIt extends MiiCostumeAppOption {\n\n        protected override _createContentOption(): PossibleOptionWithContent {\n            return () => {\n                const enumeration = MiiCostumeAppOption.CALLBACK_TO_GET_ENUMERATION();\n                const miiCostume = enumeration.reference;\n\n                const {officialNotification} = miiCostume;\n\n                return officialNotification == null\n                    ? EMPTY_REACT_ELEMENT\n                    : officialNotification.createSimpleTranslationComponent(miiCostume.english, miiCostume.officialNotificationAmount,);\n\n            };\n        }\n\n        protected override _createTableHeaderOption(): PossibleOptionWithTable {\n            //TODO add new translation to the header value.\n            return {key: 'officialNotification', element: <>--Official notification--</>,};\n        }\n\n    }(true,);\n\n    public static readonly CATEGORY =              new class MiiCostumeAppOption_Category extends MiiCostumeAppOption {\n\n        protected override _createContentOption(): PossibleOptionWithContent {\n            return () => {\n                const enumeration = MiiCostumeAppOption.CALLBACK_TO_GET_ENUMERATION(),\n                    categoryName = enumeration.reference.categoryContainer.nameContainer;\n\n                return CommonOptions.get.getCategoryContent(enumeration,\n                    () => MiiCostumeAppOption.CATEGORY_AS_TEXT.get\n                        ? categoryName\n                        : MiiCostumeCategories.getValue(categoryName.english)!.imagePath,);\n            };\n        }\n\n        protected override _createTableHeaderOption(): PossibleOptionWithTable {\n            return CommonOptions.get.categoryHeader;\n        }\n\n    }(true,);\n    /**\n     * Tell whenever a {@link MiiCostumeAppOption.CATEGORY category} is displayed\n     * as a text (<i>true</i>) or an image (<i>false</i>).\n     */\n    public static readonly CATEGORY_AS_TEXT =      new class MiiCostumeAppOption_CategoryAsText extends MiiCostumeAppOption {\n    }(false,);\n\n    //endregion -------------------- Enum instances --------------------\n    //region -------------------- Enum fields --------------------\n\n    static [index: number]: MiiCostumeAppOption;\n\n    //endregion -------------------- Enum fields --------------------\n    //region -------------------- Fields --------------------\n\n    /**\n     * The callback to get the enumeration based for each option.\n     *\n     * @note It should only be set by {@link MiiCostumeApp} and get by {@link MiiCostumeAppOption}.\n     */\n    public static CALLBACK_TO_GET_ENUMERATION: () => MiiCostumes;\n\n    #appOptionWithContent?: AppOptionWithContent;\n    #appOptionWithTable?: AppOptionWithTable;\n\n    //endregion -------------------- Fields --------------------\n\n    private constructor(defaultValue: boolean,) {\n        super(defaultValue,);\n    }\n\n    //region -------------------- Getter methods --------------------\n    //endregion -------------------- Getter methods --------------------\n    //region -------------------- Methods --------------------\n\n    //region -------------------- App option - content --------------------\n\n    protected _createContentOption(): PossibleOptionWithContent {\n        return null;\n    }\n\n    private get __appOptionWithContent(): AppOptionWithContent {\n        if (this.#appOptionWithContent == null) {\n            const content = this._createContentOption();\n            this.#appOptionWithContent = content == null\n                ? EmptyAppOption.get\n                : new AppOptionWithContentComponent(content,);\n        }\n        return this.#appOptionWithContent;\n    }\n\n    public get renderContent(): readonly ReactElement[] {\n        return this.__appOptionWithContent.renderContent;\n    }\n\n    //endregion -------------------- App option - content --------------------\n    //region -------------------- App option - table --------------------\n\n    protected _createTableHeaderOption(): PossibleOptionWithTable {\n        return null;\n    }\n\n    protected get __appOptionWithTable(): AppOptionWithTable {\n        if (this.#appOptionWithTable == null) {\n            const content = this._createTableHeaderOption();\n            this.#appOptionWithTable = content == null ? EmptyAppOption.get : new AppOptionWithTableComponent(() => content,);\n        }\n        return this.#appOptionWithTable;\n    }\n\n    public get renderTableHeader(): | SingleHeaderContent | null {\n        return this.__appOptionWithTable.renderTableHeader;\n    }\n\n    //endregion -------------------- App option - table --------------------\n\n    //endregion -------------------- Methods --------------------\n    //region -------------------- Enum methods --------------------\n\n    protected override get _static(): StaticReference<MiiCostumeAppOption> {\n        return MiiCostumeAppOption;\n    }\n\n    //region -------------------- Enum value methods --------------------\n\n    public static getValue(nullValue: | null | undefined,): null\n    public static getValue<O extends Ordinals = Ordinals, >(ordinal: O,): EnumByOrdinal<O>\n    public static getValue<O extends number = number, >(ordinal: O,): EnumByNumber<O>\n    public static getValue<N extends Names = Names, >(name: N,): EnumByName<N>\n    public static getValue<S extends PossibleStringValue = PossibleStringValue, >(name: S,): EnumByPossibleString<S>\n    public static getValue<S extends string = string, >(name: S,): EnumByString<S>\n    public static getValue<I extends MiiCostumeAppOption = MiiCostumeAppOption, >(instance: I,): I\n    public static getValue(value: PossibleNonNullableValue,): MiiCostumeAppOption\n    public static getValue(value: PossibleValue,): | MiiCostumeAppOption | null\n    public static getValue(value: PossibleValue,) {\n        return Enum.getValueOn(this, value,);\n    }\n\n    public static get values(): EnumArray {\n        return Enum.getValuesOn(this);\n    }\n\n    //endregion -------------------- Enum value methods --------------------\n\n    public static [Symbol.iterator]() {\n        return this.values[Symbol.iterator]();\n    }\n\n    //endregion -------------------- Enum methods --------------------\n}\n\ntype PossibleOptionWithContent = | (() => PossibleRenderReactElement) | null;\ntype PossibleOptionWithTable = | SingleHeaderContent | null;\n","import './MiiCostumeApp.scss';\n\nimport type {AppInterpreterWithTable, SimplifiedTableProperties}   from './interpreter/AppInterpreterWithTable';\nimport type {AppProperties}                                        from './AppProperties.types';\nimport type {MiiCostumeAppStates}                                  from './AppStates.types';\nimport type {PossibleDimensionOnCardList, PossibleDimensionOnList} from './interpreter/DimensionOnList';\nimport type {SingleHeaderContent}                                  from './tools/table/SimpleHeader';\nimport type {ReactElement, ReactElementOrString}                   from '../util/react/ReactProperties';\n\nimport {AbstractTableApp}              from './withInterpreter/AbstractTableApp';\nimport GameContentTranslationComponent from '../lang/components/GameContentTranslationComponent';\nimport Image                           from './tools/images/Image';\nimport {MiiCostumes}                   from '../core/miiCostume/MiiCostumes';\nimport {MiiCostumeAppOption}           from './options/MiiCostumeAppOption';\nimport {TranslationUtility}            from '../lang/components/TranslationUtility';\nimport {ViewDisplays}                  from './withInterpreter/ViewDisplays';\n\nexport default class MiiCostumeApp\n    extends AbstractTableApp<AppInterpreterWithTable<MiiCostumes, MiiCostumeAppOption>, AppProperties, MiiCostumeAppStates> {\n\n    public constructor(props: AppProperties,) {\n        super(props,);\n        this.state = {\n            typeDisplayed: ViewDisplays.TABLE,\n        };\n    }\n\n    //region -------------------- Create methods --------------------\n\n    protected override _createKey(): string {\n        return 'miiCostume';\n    }\n\n    protected override _createTitleContent(): ReactElementOrString {\n        return <GameContentTranslationComponent>{translation => TranslationUtility.replaceAndInterpretTranslation(translation, 'Every Mii costumes', {\n            pluralName: <span key=\"miiCostume-pluralName\" className=\"text-decoration-underline\">--Mii costumes--</span>,//TODO add Mii costumes, but the plural name\n        })}</GameContentTranslationComponent>;\n    }\n\n    protected override _createAppOptionInterpreter(): AppInterpreterWithTable<MiiCostumes, MiiCostumeAppOption> {\n        return new class implements AppInterpreterWithTable<MiiCostumes, MiiCostumeAppOption> {\n\n            public get iterable(): IterableIterator<MiiCostumes> {\n                return MiiCostumes[Symbol.iterator]();\n            }\n\n            //region -------------------- List interpreter --------------------\n\n            public createListDimension(): PossibleDimensionOnList {\n                return {\n                    small: 6,\n                    medium: 4,\n                    large: 3,\n                    extraExtraLarge: 2,\n                };\n            }\n\n            //endregion -------------------- List interpreter --------------------\n            //region -------------------- Card list interpreter --------------------\n\n            public createCardListDimension(): PossibleDimensionOnCardList {\n                return 'list';\n            }\n\n            public createCardListContent({reference, englishName, imagePath,}: MiiCostumes,): ReactElement {\n                const category = reference.categoryEnglish === '' ? '' : `entityCategory-${reference.categoryEnglish}`;//TODO move to the parent container className.\n                return <div className={`${category}`}>\n                    <Image source={imagePath} fallbackName={englishName}/>\n                </div>;\n            }\n\n            //endregion -------------------- Card list interpreter --------------------\n            //region -------------------- Table interpreter --------------------\n\n            public set callbackToGetEnumerable(value: () => MiiCostumes,) {\n                MiiCostumeAppOption.CALLBACK_TO_GET_ENUMERATION = value;\n            }\n\n            public get tableOptions(): readonly MiiCostumeAppOption[] {\n                return [\n                    MiiCostumeAppOption.IMAGE,\n                    MiiCostumeAppOption.NAME,\n                    MiiCostumeAppOption.OFFICIAL_NOTIFICATION,\n                    MiiCostumeAppOption.CATEGORY,\n                ];\n            }\n\n            public get tableProperties(): SimplifiedTableProperties {\n                return {\n                    caption: <GameContentTranslationComponent>{translation => TranslationUtility.replaceAndInterpretTranslation(translation, 'Every Mii costumes', {\n                        pluralName: <span key=\"miiCostume-pluralName\" className=\"text-decoration-underline\">--Mii costumes--</span>,//TODO add Mii costumes, but the plural name\n                    })}</GameContentTranslationComponent>,\n                };\n            }\n\n\n            public createTableContent(option: MiiCostumeAppOption,): readonly ReactElement[] {\n                return option.renderContent;\n            }\n\n            public createTableHeader(option: MiiCostumeAppOption,): | SingleHeaderContent | null {\n                return option.renderTableHeader;\n            }\n\n            //endregion -------------------- Table interpreter --------------------\n\n        }();\n    }\n\n    //endregion -------------------- Create methods --------------------\n\n}\n"],"sourceRoot":""}