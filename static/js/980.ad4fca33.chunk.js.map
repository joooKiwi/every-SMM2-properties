{"version":3,"file":"static/js/980.ad4fca33.chunk.js","mappings":"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","sources":["app/options/PredefinedMessageAppOption.ts","app/PredefinedMessageApp.tsx"],"sourcesContent":["import type {CompanionEnumSingleton} from '@joookiwi/enumerable'\nimport {CompanionEnum, Enum}         from '@joookiwi/enumerable'\n\nimport type {AppOption}           from 'app/options/AppOption'\nimport type {Names, Ordinals}     from 'app/options/CharacterNameAppOption.types'\nimport type {SingleHeaderContent} from 'app/tools/table/SimpleHeader'\nimport type {PredefinedMessages}  from 'core/predefinedMessage/PredefinedMessages'\n\nimport {CommonOptions} from 'app/options/CommonOptions'\n\nexport abstract class PredefinedMessageAppOption\n    extends Enum<Ordinals, Names>\n    implements AppOption<PredefinedMessages> {\n\n    //region -------------------- Enum instances --------------------\n\n    public static readonly NAME = new class PredefinedMessageAppOption_Name extends PredefinedMessageAppOption {\n\n        protected override _createContentOption(enumeration: PredefinedMessages,) {\n            return CommonOptions.get.getNameContent(enumeration,)\n        }\n\n        protected override _createTableHeaderOption() {\n            return CommonOptions.get.nameHeader\n        }\n\n    }('name',)\n\n    //endregion -------------------- Enum instances --------------------\n    //region -------------------- Companion enum --------------------\n\n    public static readonly CompanionEnum: CompanionEnumSingleton<PredefinedMessageAppOption, typeof PredefinedMessageAppOption> = class CompanionEnum_PredefinedMessageAppOption\n        extends CompanionEnum<PredefinedMessageAppOption, typeof PredefinedMessageAppOption> {\n\n        //region -------------------- Singleton usage --------------------\n\n        static #instance?: CompanionEnum_PredefinedMessageAppOption\n\n        private constructor() {\n            super(PredefinedMessageAppOption,)\n        }\n\n        public static get get() {\n            return this.#instance ??= new this()\n        }\n\n        //endregion -------------------- Singleton usage --------------------\n\n    }\n\n    //endregion -------------------- Companion enum --------------------\n    //region -------------------- Fields --------------------\n\n    readonly #associatedClass\n    readonly #additionalClasses\n\n    //endregion -------------------- Fields --------------------\n    //region -------------------- Constructor --------------------\n\n    private constructor(associatedClass: string,) {\n        super()\n        this.#additionalClasses = [this.#associatedClass = associatedClass,] as const\n    }\n\n    //endregion -------------------- Constructor --------------------\n    //region -------------------- Getter methods --------------------\n\n    public get associatedClass(): string {\n        return this.#associatedClass\n    }\n\n    public get additionalClasses(): readonly [string,] {\n        return this.#additionalClasses\n    }\n\n    //endregion -------------------- Getter methods --------------------\n    //region -------------------- Methods --------------------\n\n    //region -------------------- App option - content --------------------\n\n    protected abstract _createContentOption(enumeration: PredefinedMessages,): ReactElement\n\n    public renderContent(enumeration: PredefinedMessages,): readonly [ReactElement,] {\n        return [this._createContentOption(enumeration,),]\n    }\n\n    //endregion -------------------- App option - content --------------------\n    //region -------------------- App option - table --------------------\n\n    protected abstract _createTableHeaderOption(): SingleHeaderContent\n\n    public renderTableHeader(): SingleHeaderContent {\n        return this._createTableHeaderOption()\n    }\n\n    //endregion -------------------- App option - table --------------------\n\n    //endregion -------------------- Methods --------------------\n\n}\n","import './PredefinedMessageApp.scss'\n\nimport type {Array}                                from '@joookiwi/type'\nimport type {CollectionHolder} from '@joookiwi/collection'\nimport {GenericCollectionHolder} from '@joookiwi/collection'\n\nimport type {AppWithInterpreterProperties} from 'app/AppProperties.types'\nimport type {AppInterpreterWithTable}      from 'app/interpreter/AppInterpreterWithTable'\nimport type {DimensionOnList}              from 'app/interpreter/DimensionOnList'\nimport type {ViewAndRouteName}             from 'app/withInterpreter/DisplayButtonGroup.properties'\nimport type {ReactProperties}            from 'util/react/ReactProperties'\n\nimport SubMainContainer             from 'app/_SubMainContainer'\nimport Table                        from 'app/tools/table/Table'\nimport {unfinishedText}             from 'app/tools/text/UnfinishedText'\nimport {PredefinedMessageAppOption} from 'app/options/PredefinedMessageAppOption'\nimport List                         from 'app/util/List'\nimport CardList                     from 'app/withInterpreter/CardList'\nimport {ViewDisplays}               from 'app/withInterpreter/ViewDisplays'\nimport {PredefinedMessages}         from 'core/predefinedMessage/PredefinedMessages'\nimport {gameContentTranslation}     from 'lang/components/translationMethods'\nimport NameComponent                from 'lang/name/component/Name.component'\n\nimport ALL = PredefinedMessages.ALL\n\nclass PredefinedMessageAppInterpreter\n    implements AppInterpreterWithTable<PredefinedMessages> {\n\n    public get content() {\n        return new GenericCollectionHolder(ALL,)\n    }\n\n    //region -------------------- Card --------------------\n\n    public createCardListDimension() {\n        return {\n            default: 1,\n            small: 2,\n            medium: 3,\n            large: 5,\n            extraLarge: 6,\n        } as const satisfies DimensionOnList\n    }\n\n    public createCardListContent(): null {\n        return null\n    }\n\n    //endregion -------------------- Card --------------------\n    //region -------------------- Table --------------------\n\n    public readonly tableHeadersColor = 'info' satisfies BootstrapThemeColor\n    public readonly tableCaption = gameContentTranslation('predefined message.all', {\n        singularName: unfinishedText('predefined message',),//TODO add predefined reference (singular form)\n        pluralName: unfinishedText('predefined messages',),//TODO add predefined reference (plural form)\n    },) satisfies ReactElementOrString\n\n    public get tableOptions(): Array<PredefinedMessageAppOption> {\n        return [PredefinedMessageAppOption.NAME,]\n    }\n\n\n    public getAdditionalClass(option: PredefinedMessageAppOption,) {\n        return option.additionalClasses\n    }\n\n    public createTableContent(content: PredefinedMessages, option: PredefinedMessageAppOption,) {\n        return option.renderContent(content,)\n    }\n\n    public createTableHeader(option: PredefinedMessageAppOption,) {\n        return option.renderTableHeader()\n    }\n\n    //endregion -------------------- Table --------------------\n\n}\n\nconst viewDisplayAndRouteName = [\n    [ViewDisplays.SIMPLE_LIST, 'everyPredefinedMessage (list)',],\n    [ViewDisplays.CARD_LIST, 'everyPredefinedMessage (card)',],\n    [ViewDisplays.TABLE, 'everyPredefinedMessage (table)',],\n] as const satisfies Array<ViewAndRouteName>\nconst appInterpreter = new PredefinedMessageAppInterpreter()\n\n/** @reactComponent */\nexport default function PredefinedMessageApp({viewDisplay,}: AppWithInterpreterProperties,) {\n    return <SubMainContainer reactKey=\"predefinedMessage\" viewDisplayAndRouteName={viewDisplayAndRouteName} viewDisplay={viewDisplay}\n                             titleContent={gameContentTranslation('predefined message.all', {\n                                 singularName: unfinishedText('predefined message',),//TODO add predefined reference (singular form)\n                                 pluralName: unfinishedText('predefined messages',),//TODO add predefined reference (plural form)\n                             },)}>\n        <SubContent viewDisplay={viewDisplay}/>\n    </SubMainContainer>\n}\n\n/** @reactComponent */\nfunction SubContent({viewDisplay,}: AppWithInterpreterProperties,) {\n    if (viewDisplay === ViewDisplays.SIMPLE_LIST)\n        return <PredefinedMessageList items={appInterpreter.content}/>\n    if (viewDisplay === ViewDisplays.CARD_LIST)\n        return <CardList reactKey=\"predefinedMessage\" interpreter={appInterpreter}/>\n    return <Table id=\"predefinedMessage-table\" interpreter={appInterpreter}/>\n}\n\n//region -------------------- List --------------------\n\ninterface PredefinedMessage_ListProperties\n    extends ReactProperties {\n\n    readonly items: CollectionHolder<PredefinedMessages>\n\n}\n\n/** @reactComponent */\nfunction PredefinedMessageList({items,}: PredefinedMessage_ListProperties,) {\n    return <List partialId=\"predefinedMessage\" items={items}>{it =>\n        <NameComponent id=\"predefinedMessage-name\" name={it.reference} popoverOrientation=\"right\"/>\n    }</List>\n}\n\n//endregion -------------------- List --------------------\n"],"names":["_associatedClass","_classPrivateFieldLooseKey","_additionalClasses","PredefinedMessageAppOption","Enum","constructor","associatedClass","super","Object","defineProperty","writable","value","_classPrivateFieldLooseBase","this","additionalClasses","renderContent","enumeration","_createContentOption","renderTableHeader","_createTableHeaderOption","_PredefinedMessageAppOption","NAME","CommonOptions","get","getNameContent","nameHeader","CompanionEnum","_instance","_CompanionEnum_PredefinedMessageAppOption","_classPrivateFieldLoo","_classPrivateFieldLoo2","ALL","PredefinedMessages","viewDisplayAndRouteName","ViewDisplays","SIMPLE_LIST","CARD_LIST","TABLE","appInterpreter","tableHeadersColor","tableCaption","gameContentTranslation","singularName","unfinishedText","pluralName","content","GenericCollectionHolder","createCardListDimension","default","small","medium","large","extraLarge","createCardListContent","tableOptions","getAdditionalClass","option","createTableContent","createTableHeader","PredefinedMessageApp","_ref","viewDisplay","_jsx","SubMainContainer","reactKey","titleContent","children","SubContent","_ref2","PredefinedMessageList","items","CardList","interpreter","Table","id","_ref3","List","partialId","it","NameComponent","name","reference","popoverOrientation"],"sourceRoot":""}