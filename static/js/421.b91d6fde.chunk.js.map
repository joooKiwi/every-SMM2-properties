{"version":3,"file":"static/js/421.b91d6fde.chunk.js","mappings":"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","sources":["app/options/EntityLimitAppOption.tsx","app/LimitApp.tsx","app/tools/button/LinkButton.tsx"],"sourcesContent":["import './EntityLimitAppOption.scss'\n\nimport type {BasicCompanionEnumDeclaration, CollectionHolder, PossibleEnumerableValueBy, Singleton} from '@joookiwi/enumerable/dist/types'\nimport {BasicCompanionEnum, Enum}                                                                   from '@joookiwi/enumerable'\n\nimport type {Names, Ordinals}                                  from 'app/options/EntityLimitAppOption.types'\nimport type {AppOptionWithContent, PossibleRenderReactElement} from 'app/options/component/AppOptionWithContent'\nimport type {AppOptionWithTable}                               from 'app/options/component/AppOptionWithTable'\nimport type {SingleHeaderContent}                              from 'app/tools/table/SimpleHeader'\nimport type {EntityLimit}                                      from 'core/entityLimit/EntityLimit'\nimport type {EntityLimits}                                     from 'core/entityLimit/EntityLimits'\nimport type {ReactElement}                                     from 'util/react/ReactProperties'\nimport type {NullOr}                                           from 'util/types/nullable'\n\nimport {CommonOptions}                 from 'app/options/CommonOptions'\nimport {COURSE_THEME_IMAGE_FILE}       from 'app/options/file/themeImageFiles'\nimport {AppOptionWithContentComponent} from 'app/options/component/AppOptionWithContent.component'\nimport {AppOptionWithTableComponent}   from 'app/options/component/AppOptionWithTable.component'\nimport TextComponent                   from 'app/tools/text/TextComponent'\nimport Image                           from 'app/tools/images/Image'\nimport {Games}                         from 'core/game/Games'\nimport {EmptyEntityLimit}              from 'core/entityLimit/EmptyEntityLimit'\nimport {contentTranslation}            from 'lang/components/translationMethods'\nimport NameComponent                   from 'lang/name/component/Name.component'\n\nexport abstract class EntityLimitAppOption\n    extends Enum<Ordinals, Names> {\n\n    //region -------------------- Enum instances --------------------\n\n    public static readonly ACRONYM = new class EntityLimitAppOption_Acronym extends EntityLimitAppOption {\n\n        protected override _createContentOption({reference: {acronym, alternativeAcronym,},}: EntityLimits,) {\n            return alternativeAcronym == null\n                ? acronym == null\n                    ? null\n                    : <TextComponent content={acronym}/>\n                : <div className=\"acronyms-container d-flex flex-column flex-md-row\">\n                    <TextComponent content={acronym}/>\n                    <div className=\"vertical-separator vr mx-2 d-none d-md-inline-block\"/>\n                    <hr className=\"horizontal-separator my-1 d-block d-md-none\"/>\n                    <TextComponent content={alternativeAcronym}/>\n                </div>\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {key: 'acronym', element: contentTranslation('Acronym(s)'),}\n        }\n\n    }()\n    public static readonly NAME = new class EntityLimitAppOption_Name extends EntityLimitAppOption {\n\n        protected override _createContentOption({reference, isEditorLimit,}: EntityLimits,) {\n            const {alternativeContainer} = reference\n            return alternativeContainer instanceof EmptyEntityLimit\n                ? this.#createNameComponent(reference, isEditorLimit,)\n                : <div className=\"names-container d-flex flex-column flex-md-row\">\n                    {this.#createNameComponent(reference, isEditorLimit,)}\n                    <div className=\"vertical-separator vr mx-3 d-none d-md-inline-block\"/>\n                    <hr className=\"horizontal-separator my-1 d-block d-md-none\"/>\n                    <NameComponent id=\"alternativeName\" name={alternativeContainer} popoverOrientation=\"bottom\"/>\n                </div>\n        }\n\n        #createNameComponent(reference: EntityLimit, isEditorLimit: boolean,): ReactElement {\n            return isEditorLimit\n                ? <div className=\"nameWithImage-container d-flex position-relative\">\n                    <Image file={COURSE_THEME_IMAGE_FILE} className=\"course-theme-image badge bg-transparent position-absolute top-0 start-0\"/>\n                    <NameComponent id=\"name\" name={reference} popoverOrientation=\"bottom\"/>\n                </div>\n                : <NameComponent id=\"name\" name={reference} popoverOrientation=\"bottom\"/>\n        }\n\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return CommonOptions.get.nameHeader\n        }\n\n    }()\n    public static readonly AMOUNT = new class EntityLimitAppOption_Amount extends EntityLimitAppOption {\n\n        protected override _createContentOption(enumeration: EntityLimits,) {\n            return [\n                EntityLimitAppOption.AMOUNT_IN_SMM1_AND_SMM3DS._createContentOption(enumeration,),\n                EntityLimitAppOption.AMOUNT_IN_SMM2._createContentOption(enumeration,),\n            ]\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return CommonOptions.get.getLimitHeader(\n                    {key: 'limit-SuperMarioMaker1And3DS', alt: Games.SUPER_MARIO_MAKER_1.imageFile.fallbackName, path: Games.SUPER_MARIO_MAKER_1.imageFile.fullName,},\n                    {key: 'limit-SuperMarioMaker2', alt: Games.SUPER_MARIO_MAKER_2.imageFile.fallbackName, path: Games.SUPER_MARIO_MAKER_2.imageFile.fullName,},\n            )\n        }\n\n    }()\n    public static readonly AMOUNT_IN_SMM1_AND_SMM3DS = new class EntityLimitAppOption_AmountInSMM1AndSMM3DS extends EntityLimitAppOption {\n\n        public override _createContentOption({reference, englishName,}: EntityLimits,) {\n            return <TextComponent key={`${englishName} - text component (amount SMM1&3DS)`} content={reference.limitAmountInSMM1AndSMM3DS} isUnknown={reference.isUnknownLimitInSMM1AndSMM3DS}/>\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return CommonOptions.get.limitHeader\n        }\n\n    }()\n    public static readonly AMOUNT_IN_SMM2 = new class EntityLimitAppOption_AmountInSMM2 extends EntityLimitAppOption {\n\n        public override _createContentOption({reference, englishName,}: EntityLimits,) {\n            return <TextComponent key={`${englishName} - text component (amount SMM2)`} content={reference.limitAmountInSMM2} isUnknown={reference.isUnknownLimitInSMM2}/>\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return CommonOptions.get.limitHeader\n        }\n\n    }()\n\n    //endregion -------------------- Enum instances --------------------\n    //region -------------------- Companion enum --------------------\n\n    public static readonly CompanionEnum: Singleton<BasicCompanionEnumDeclaration<EntityLimitAppOption, typeof EntityLimitAppOption>> = class CompanionEnum_EntityLimitAppOption\n        extends BasicCompanionEnum<EntityLimitAppOption, typeof EntityLimitAppOption> {\n\n        //region -------------------- Singleton usage --------------------\n\n        static #instance?: CompanionEnum_EntityLimitAppOption\n\n        private constructor() {\n            super(EntityLimitAppOption,)\n        }\n\n        public static get get() {\n            return this.#instance ??= new CompanionEnum_EntityLimitAppOption()\n        }\n\n        //endregion -------------------- Singleton usage --------------------\n\n    }\n\n    //endregion -------------------- Companion enum --------------------\n    //region -------------------- Fields --------------------\n\n    /**\n     * The callback to get the enumeration based for each option.\n     *\n     * @note It should only be set by {@link EntityLimitAppOption} and get by {@link EntityLimitApp}.\n     */\n    public static CALLBACK_TO_GET_ENUMERATION: () => EntityLimits\n\n    #appOptionWithContent?: AppOptionWithContent\n    #appOptionWithTable?: AppOptionWithTable\n\n    //endregion -------------------- Fields --------------------\n    //region -------------------- Constructor --------------------\n\n    private constructor() {\n        super()\n    }\n\n    //endregion -------------------- Constructor --------------------\n    //region -------------------- Getter methods --------------------\n    //endregion -------------------- Getter methods --------------------\n    //region -------------------- Methods --------------------\n\n    //region -------------------- App option - content --------------------\n\n    protected abstract _createContentOption(enumeration: EntityLimits,): PossibleRenderReactElement\n\n    private get __appOptionWithContent(): AppOptionWithContent {\n        return this.#appOptionWithContent ??= new AppOptionWithContentComponent(() => this._createContentOption(EntityLimitAppOption.CALLBACK_TO_GET_ENUMERATION()),)\n    }\n\n    public get renderContent(): readonly ReactElement[] {\n        return this.__appOptionWithContent.renderContent\n    }\n\n    //endregion -------------------- App option - content --------------------\n    //region -------------------- App option - table --------------------\n\n    protected abstract _createTableHeaderOption(): SingleHeaderContent\n\n    private get __appOptionWithTable(): AppOptionWithTable {\n        return this.#appOptionWithTable ??= new AppOptionWithTableComponent(() => this._createTableHeaderOption(),)\n    }\n\n    public get renderTableHeader(): NullOr<SingleHeaderContent> {\n        return this.__appOptionWithTable.renderTableHeader\n    }\n\n    //endregion -------------------- App option - table --------------------\n\n    //endregion -------------------- Methods --------------------\n    //region -------------------- Enum methods --------------------\n\n    public static getValue(value: PossibleEnumerableValueBy<EntityLimitAppOption>,): EntityLimitAppOption {\n        return EntityLimitAppOption.CompanionEnum.get.getValue(value,)\n    }\n\n    public static get values(): CollectionHolder<EntityLimitAppOption> {\n        return EntityLimitAppOption.CompanionEnum.get.values\n    }\n\n    public static* [Symbol.iterator](): IterableIterator<EntityLimitAppOption> {\n        yield* EntityLimitAppOption.CompanionEnum.get\n    }\n\n    //endregion -------------------- Enum methods --------------------\n\n}\n","import './LimitApp.scss'\n\nimport type {LimitAppProperties}                                   from 'app/AppProperties.types'\nimport type {AppInterpreterWithTable, SimplifiedTableProperties}   from 'app/interpreter/AppInterpreterWithTable'\nimport type {PossibleDimensionOnCardList, PossibleDimensionOnList} from 'app/interpreter/DimensionOnList'\nimport type {LimitTypes}                                           from 'app/property/LimitTypes'\nimport type {ClassWithType}                                        from 'core/ClassWithType'\nimport type {EntityLimits}                                         from 'core/entityLimit/EntityLimits'\nimport type {EveryPossibleRouteNames}                              from 'route/everyRoutes.types'\nimport type {ReactElementOrString}                                 from 'util/react/ReactProperties'\n\nimport {EntityLimitAppOption}                       from 'app/options/EntityLimitAppOption'\nimport {COURSE_THEME_IMAGE_FILE}                    from 'app/options/file/themeImageFiles'\nimport LinkButton                                   from 'app/tools/button/LinkButton'\nimport Image                                        from 'app/tools/images/Image'\nimport TextComponent                                from 'app/tools/text/TextComponent'\nimport {AbstractTableApp}                           from 'app/withInterpreter/AbstractTableApp'\nimport {contentTranslation, gameContentTranslation} from 'lang/components/translationMethods'\nimport {newIterableIterator}                        from 'util/utilitiesMethods'\n\nexport default class LimitApp\n    extends AbstractTableApp<AppInterpreterWithTable<EntityLimits, EntityLimitAppOption>, LimitAppProperties>\n    implements ClassWithType<LimitTypes> {\n\n    //region -------------------- Getter methods --------------------\n\n    public get type(): LimitTypes {\n        return this.props.type\n    }\n\n    //endregion -------------------- Getter methods --------------------\n    //region -------------------- Create methods --------------------\n\n    protected override _createKey(): string {\n        return 'limit'\n    }\n\n\n    protected override _createSimpleListRouteName(): EveryPossibleRouteNames {\n        return `${this.type.routeName} (list)`\n    }\n\n    protected override _createCardListRouteName(): EveryPossibleRouteNames {\n        return `${this.type.routeName} (card)`\n    }\n\n    protected override _createTableRouteName(): EveryPossibleRouteNames {\n        return `${this.type.routeName} (table)`\n    }\n\n\n    protected override _createTitleContent(): ReactElementOrString {\n        return gameContentTranslation(`limit.${this.type.type}.all`)\n    }\n\n    protected override _createAsideContent(): ReactElementOrString {\n        const {type, viewDisplay,} = this\n\n        return <div id=\"limit-linkButton-container\" className=\"btn-group btn-group-vertical btn-group-sm\">\n            <LinkButton partialId=\"allLimit\" routeName={viewDisplay.getRoutePath(type.allRouteName)} color={type.allColor}>{contentTranslation('All')}</LinkButton>\n            <div id=\"limit-linkButton-playAndEditor-container\" className=\"btn-group btn-group-sm\">\n                <LinkButton partialId=\"playLimit\" routeName={viewDisplay.getRoutePath(type.playRouteName)} color={type.playColor}>{gameContentTranslation('limit.play.simple')}</LinkButton>\n                <LinkButton partialId=\"editorLimit\" routeName={viewDisplay.getRoutePath(type.editorRouteName)} color={type.editorColor}>{gameContentTranslation('limit.editor.simple')}</LinkButton>\n            </div>\n        </div>\n    }\n\n    protected override _createAppOptionInterpreter(): AppInterpreterWithTable<EntityLimits, EntityLimitAppOption> {\n        const $this = this\n\n        return new class implements AppInterpreterWithTable<EntityLimits, EntityLimitAppOption> {\n\n            public get iterable() {\n                return newIterableIterator($this.props.games, $this.type.iterator,)\n            }\n\n            //region -------------------- List interpreter --------------------\n\n            public createListDimension(): PossibleDimensionOnList {\n                return {\n                    small: 6,\n                    large: null,\n                    extraLarge: 2,\n                }\n            }\n\n            //endregion -------------------- List interpreter --------------------\n            //region -------------------- Card list interpreter --------------------\n\n            public createCardListDimension(): PossibleDimensionOnCardList {\n                return 'list'\n            }\n\n            public createCardListContent(enumeration: EntityLimits,) {\n                EntityLimitAppOption.CALLBACK_TO_GET_ENUMERATION = () => enumeration\n\n                return enumeration.isEditorLimit\n                    ? <div className=\"card-bodyWithEditor-container\">\n                        <Image file={COURSE_THEME_IMAGE_FILE} className=\"course-theme-image position-absolute start-0 bottom-0\"/>\n                        {this.#createBody(enumeration)}\n                    </div>\n                    : this.#createBody(enumeration)\n            }\n\n            #createBody({reference: {limitAmountInSMM1AndSMM3DS, limitAmountInSMM2, isUnknownLimitInSMM2,}, englishName, englishNameInHtml,}: EntityLimits,) {\n                return <div className=\"card-body\" id={`limit-${englishNameInHtml}`}>\n                    {limitAmountInSMM1AndSMM3DS === limitAmountInSMM2\n                        ? <TextComponent key={`${englishName} - card list text component`} content={limitAmountInSMM2} isUnknown={isUnknownLimitInSMM2}/>\n                        : EntityLimitAppOption.AMOUNT.renderContent}\n                </div>\n            }\n\n            //endregion -------------------- Card list interpreter --------------------\n            //region -------------------- Table interpreter --------------------\n\n            public set callbackToGetEnumerable(value: () => EntityLimits,) {\n                EntityLimitAppOption.CALLBACK_TO_GET_ENUMERATION = value\n            }\n\n            public get tableOptions(): readonly EntityLimitAppOption[] {\n                const games = $this.props.games,\n                    hasSMM1Or3DSGames = games.hasSMM1Or3DS,\n                    hasSMM2Games = games.hasSMM2\n\n                return [\n                    EntityLimitAppOption.ACRONYM,\n                    EntityLimitAppOption.NAME,\n                    hasSMM1Or3DSGames && hasSMM2Games ? EntityLimitAppOption.AMOUNT\n                        : hasSMM1Or3DSGames ? EntityLimitAppOption.AMOUNT_IN_SMM1_AND_SMM3DS\n                            : EntityLimitAppOption.AMOUNT_IN_SMM2,\n                ]\n            }\n\n            public get tableProperties(): SimplifiedTableProperties {\n                return {\n                    caption: gameContentTranslation(`limit.${$this.type.type}.all`),\n                }\n            }\n\n\n            public createTableContent(option: EntityLimitAppOption,) {\n                return option.renderContent\n            }\n\n            public createTableHeader(option: EntityLimitAppOption,) {\n                return option.renderTableHeader\n            }\n\n            //endregion -------------------- Table interpreter --------------------\n\n        }()\n    }\n\n    //endregion -------------------- Create methods --------------------\n}\n","import {Link} from 'react-router-dom'\n\nimport type {BootstrapColor}                                                     from 'bootstrap/Bootstrap.types'\nimport type {EveryPossibleRouteNames}                                            from 'route/everyRoutes.types'\nimport type {ReactElementOrString, ReactProperties, ReactPropertiesWithChildren} from 'util/react/ReactProperties'\nimport type {Nullable}                                                           from 'util/types/nullable'\n\nimport {routeFromName} from 'route/route'\n\ninterface LinkButtonsProperties\n    extends ReactProperties {\n\n    partialId: string\n\n    routeName: Nullable<EveryPossibleRouteNames>\n\n    color: BootstrapColor\n\n}\n\n/**\n * @reactComponent\n */\nexport default function LinkButton({partialId, routeName, color, children,}: ReactPropertiesWithChildren<LinkButtonsProperties, ReactElementOrString>,) {\n    const id = `${partialId}-button`,\n        className = `btn btn-${color} link-button`\n\n    return routeName == null\n        ? <button type=\"button\" id={id} className={className} disabled>{children}</button>\n        : <Link type=\"button\" id={id} className={className} to={routeFromName(routeName)}>{children}</Link>\n}\n\n/**\n * Create a {@link Link} button or a simple disabled button (if the route name is <b>null</b>)\n *\n * @param partialId The partial ID (with \"-button\") added after-end\n * @param routeName The route name\n * @param color The Bootstrap color\n * @param value The value to display\n */\nexport function createLinkButton(partialId: string, [routeName, color,]: readonly [Nullable<EveryPossibleRouteNames>, BootstrapColor,], value: ReactElementOrString,) {\n    return <LinkButton partialId={partialId} routeName={routeName} color={color}>{value}</LinkButton>\n}\n"],"names":["_appOptionWithContent","_classPrivateFieldLooseKey","_appOptionWithTable","_Symbol$iterator","Symbol","iterator","EntityLimitAppOption","_Enum","_inherits","_super","_createSuper","_this","_classCallCheck","call","Object","defineProperty","_assertThisInitialized","writable","value","_createClass","key","get","_classPrivateFieldLoo","_classPrivateFieldLoo2","_this2","_classPrivateFieldLooseBase","this","AppOptionWithContentComponent","_createContentOption","CALLBACK_TO_GET_ENUMERATION","__appOptionWithContent","renderContent","_classPrivateFieldLoo3","_classPrivateFieldLoo4","_this3","AppOptionWithTableComponent","_createTableHeaderOption","__appOptionWithTable","renderTableHeader","CompanionEnum","getValue","values","_regeneratorRuntime","mark","wrap","_context","prev","next","delegateYield","stop","Enum","_createNameComponent2","reference","isEditorLimit","_jsxs","className","children","_jsx","Image","file","COURSE_THEME_IMAGE_FILE","NameComponent","id","name","popoverOrientation","ACRONYM","_EntityLimitAppOption","EntityLimitAppOption_Acronym","_super2","apply","arguments","_ref","_ref$reference","acronym","alternativeAcronym","TextComponent","content","element","contentTranslation","NAME","_createNameComponent","_EntityLimitAppOption2","EntityLimitAppOption_Name","_super3","_this4","_len","length","args","Array","_key","concat","_ref2","alternativeContainer","EmptyEntityLimit","CommonOptions","nameHeader","AMOUNT","_EntityLimitAppOption3","EntityLimitAppOption_Amount","_super4","enumeration","AMOUNT_IN_SMM1_AND_SMM3DS","AMOUNT_IN_SMM2","getLimitHeader","alt","Games","SUPER_MARIO_MAKER_1","imageFile","fallbackName","path","fullName","SUPER_MARIO_MAKER_2","_EntityLimitAppOption4","EntityLimitAppOption_AmountInSMM1AndSMM3DS","_super5","_ref3","englishName","limitAmountInSMM1AndSMM3DS","isUnknown","isUnknownLimitInSMM1AndSMM3DS","limitHeader","_EntityLimitAppOption5","EntityLimitAppOption_AmountInSMM2","_super6","_ref4","limitAmountInSMM2","isUnknownLimitInSMM2","_instance","_class2","_BasicCompanionEnum","CompanionEnum_EntityLimitAppOption","_super7","_classPrivateFieldLoo5","_classPrivateFieldLoo6","BasicCompanionEnum","LimitApp","props","type","routeName","gameContentTranslation","viewDisplay","LinkButton","partialId","getRoutePath","allRouteName","color","allColor","playRouteName","playColor","editorRouteName","editorColor","_createBody","$this","_createBody2","newIterableIterator","games","small","large","extraLarge","set","hasSMM1Or3DSGames","hasSMM1Or3DS","hasSMM2Games","hasSMM2","caption","option","_ref2$reference","englishNameInHtml","AbstractTableApp","disabled","Link","to","routeFromName"],"sourceRoot":""}