{"version":3,"file":"static/js/503.94957552.chunk.js","mappings":"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","sources":["app/options/ThemeAppOption.tsx","app/ThemeApp.tsx","app/tools/button/LinkButton.tsx","core/nightEffect/NightEffect.component.tsx"],"sourcesContent":["import type {BasicCompanionEnumDeclaration, CollectionHolder, PossibleEnumerableValueBy, Singleton} from '@joookiwi/enumerable/dist/types'\nimport {BasicCompanionEnum, Enum}                                                                   from '@joookiwi/enumerable'\n\nimport type {Names, Ordinals}                                  from 'app/options/ThemeAppOption.types'\nimport type {AppOptionWithContent, PossibleRenderReactElement} from 'app/options/component/AppOptionWithContent'\nimport type {AppOptionWithTable}                               from 'app/options/component/AppOptionWithTable'\nimport type {SingleHeaderContent}                              from 'app/tools/table/SimpleHeader'\nimport type {ReactElement}                                     from 'util/react/ReactProperties'\nimport type {NullOr}                                           from 'util/types/nullable'\n\nimport {AppOptionWithContentComponent}              from 'app/options/component/AppOptionWithContent.component'\nimport {AppOptionWithTableComponent}                from 'app/options/component/AppOptionWithTable.component'\nimport {CommonOptions}                              from 'app/options/CommonOptions'\nimport Image                                        from 'app/tools/images/Image'\nimport NightEffectComponent                         from 'core/nightEffect/NightEffect.component'\nimport {Themes}                                     from 'core/theme/Themes'\nimport {Times}                                      from 'core/time/Times'\nimport {contentTranslation, gameContentTranslation} from 'lang/components/translationMethods'\n\n/**\n * @todo change the SMM1 & SMM2 yes/no result into something different like the sounds or other things\n * @fixme if the yes/no is still in used after the change, use Texts.renderYesNoComponent() instead.\n */\nexport abstract class ThemeAppOption\n    extends Enum<Ordinals, Names> {\n\n    //region -------------------- Enum instances --------------------\n\n    public static readonly IMAGE =                  new class ThemeAppOption_Image extends ThemeAppOption {\n\n        protected override _createContentOption(enumeration: Themes,) {\n            const {endlessMarioImageFile,} = enumeration\n\n            return [\n                enumeration.renderSingleComponent(false),\n                <Image file={endlessMarioImageFile}/>,\n            ]\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {\n                key: 'image', element: contentTranslation('Image'),\n                subHeaders: [\n                    {key: 'image-empty', element: null,},\n                    {key: 'image-endless-mario', element: '--Endless Mario--',},//TODO add Endless Mario\n                ],\n            }\n        }\n\n    }()\n    public static readonly NAME =                   new class ThemeAppOptionName extends ThemeAppOption {\n\n        protected override _createContentOption(enumeration: Themes,) {\n            return <div className=\"nameWithContent-container\">\n                <div className=\"col-10\">\n                    {CommonOptions.get.getGameContent(enumeration)}\n                    {CommonOptions.get.getNameContent(enumeration)}\n                </div>\n                <div className=\"col-2\">{CommonOptions.get.getThemeContent(enumeration)}</div>\n            </div>\n        }\n\n        protected override _createTableHeaderOption() {\n            return CommonOptions.get.nameHeader\n        }\n\n    }()\n    public static readonly NIGHT_EFFECT =           new class ThemeAppOption_NightEffect extends ThemeAppOption {\n\n        protected override _createContentOption({reference: {courseTheme,},}: Themes,) {\n            return <NightEffectComponent theme={courseTheme}/>\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {\n                key: 'effect', element: <div className=\"nightDesert-header-image-container position-relative mx-auto\">\n                    {Themes.DESERT.renderSingleComponent(false)}\n                    {Times.NIGHT.renderSingleComponent}\n                </div>,\n                tooltip: gameContentTranslation('Effect (night)', {night: '--night effect name--',},)//TODO add translation for the night effect name\n            }\n        }\n\n    }()\n\n    //endregion -------------------- Enum instances --------------------\n    //region -------------------- Companion enum --------------------\n\n    public static readonly CompanionEnum: Singleton<BasicCompanionEnumDeclaration<ThemeAppOption, typeof ThemeAppOption>> = class CompanionEnum_ThemeAppOption\n        extends BasicCompanionEnum<ThemeAppOption, typeof ThemeAppOption> {\n\n        //region -------------------- Singleton usage --------------------\n\n        static #instance?: CompanionEnum_ThemeAppOption\n\n        private constructor() {\n            super(ThemeAppOption,)\n        }\n\n        public static get get() {\n            return this.#instance ??= new CompanionEnum_ThemeAppOption()\n        }\n\n        //endregion -------------------- Singleton usage --------------------\n\n    }\n\n    //endregion -------------------- Companion enum --------------------\n    //region -------------------- Fields --------------------\n\n    /**\n     * The callback to get the enumeration based for each option.\n     *\n     * @note It should only be set by {@link ThemeAppOption} and get by {@link ThemeApp}.\n     */\n    public static CALLBACK_TO_GET_ENUMERATION: () => Themes\n\n    #appOptionWithContent?: AppOptionWithContent\n    #appOptionWithTable?: AppOptionWithTable\n\n    //endregion -------------------- Fields --------------------\n    //region -------------------- Constructor --------------------\n\n    private constructor() {\n        super()\n    }\n\n    //endregion -------------------- Constructor --------------------\n    //region -------------------- Getter methods --------------------\n    //endregion -------------------- Getter methods --------------------\n    //region -------------------- Methods --------------------\n\n    //region -------------------- App option - content --------------------\n\n    protected abstract _createContentOption(enumeration: Themes,): PossibleRenderReactElement\n\n    private get __appOptionWithContent(): AppOptionWithContent {\n        return this.#appOptionWithContent ??= new AppOptionWithContentComponent(() => this._createContentOption(ThemeAppOption.CALLBACK_TO_GET_ENUMERATION()),)\n    }\n\n    public get renderContent(): readonly ReactElement[] {\n        return this.__appOptionWithContent.renderContent\n    }\n\n    //endregion -------------------- App option - content --------------------\n    //region -------------------- App option - table --------------------\n\n    protected abstract _createTableHeaderOption(): SingleHeaderContent\n\n    private get __appOptionWithTable(): AppOptionWithTable {\n        return this.#appOptionWithTable ??= new AppOptionWithTableComponent(() => this._createTableHeaderOption(),)\n    }\n\n    public get renderTableHeader(): NullOr<SingleHeaderContent> {\n        return this.__appOptionWithTable.renderTableHeader\n    }\n\n    //endregion -------------------- App option - table --------------------\n\n    //endregion -------------------- Methods --------------------\n    //region -------------------- Enum methods --------------------\n\n    public static getValue(value: PossibleEnumerableValueBy<ThemeAppOption>,): ThemeAppOption {\n        return ThemeAppOption.CompanionEnum.get.getValue(value,)\n    }\n\n    public static get values(): CollectionHolder<ThemeAppOption> {\n        return ThemeAppOption.CompanionEnum.get.values\n    }\n\n    public static* [Symbol.iterator](): IterableIterator<ThemeAppOption> {\n        yield* ThemeAppOption.CompanionEnum.get\n    }\n\n    //endregion -------------------- Enum methods --------------------\n\n}\n","import './ThemeApp.scss'\n\nimport type {ThemeAppProperties}                                   from 'app/AppProperties.types'\nimport type {AppInterpreterWithTable, SimplifiedTableProperties}   from 'app/interpreter/AppInterpreterWithTable'\nimport type {PossibleDimensionOnCardList, PossibleDimensionOnList} from 'app/interpreter/DimensionOnList'\nimport type {ThemeTypes}                                           from 'app/property/ThemeTypes'\nimport type {Themes}                                               from 'core/theme/Themes'\nimport type {EveryPossibleRouteNames}                              from 'route/everyRoutes.types'\nimport type {ReactElementOrString}                                 from 'util/react/ReactProperties'\n\nimport {CommonOptions}                                   from 'app/options/CommonOptions'\nimport {ThemeAppOption}                                  from 'app/options/ThemeAppOption'\nimport {COURSE_THEME_IMAGE_FILE, WORLD_THEME_IMAGE_FILE} from 'app/options/file/themeImageFiles'\nimport LinkButton                                        from 'app/tools/button/LinkButton'\nimport Image                                             from 'app/tools/images/Image'\nimport {AbstractTableApp}                                from 'app/withInterpreter/AbstractTableApp'\nimport {contentTranslation, gameContentTranslation}      from 'lang/components/translationMethods'\nimport {newIterableIterator}                             from 'util/utilitiesMethods'\n\n/**\n * @reactComponent\n */\nexport default class ThemeApp\n    extends AbstractTableApp<AppInterpreterWithTable<Themes, ThemeAppOption>, ThemeAppProperties> {\n\n    //region -------------------- Getter methods --------------------\n\n\n    public get type(): ThemeTypes {\n        return this.props.type\n    }\n\n    //endregion -------------------- Getter methods --------------------\n    //region -------------------- Create methods --------------------\n\n    protected override _createKey() {\n        return 'theme'\n    }\n\n\n    protected override _createSimpleListRouteName(): EveryPossibleRouteNames {\n        return `${this.type.routeName} (list)`\n    }\n\n    protected override _createCardListRouteName(): EveryPossibleRouteNames {\n        return `${this.type.routeName} (card)`\n    }\n\n    protected override _createTableRouteName(): EveryPossibleRouteNames {\n        return `${this.type.routeName} (table)`\n    }\n\n\n    protected override _createTitleContent(): ReactElementOrString {\n        return gameContentTranslation('theme.all.all')\n    }\n\n    protected override _createAsideContent(): ReactElementOrString {\n        const {type, viewDisplay,} = this\n\n        return <div id=\"theme-linkButton-container\" className=\"btn-group btn-group-vertical btn-group-sm\">\n            <LinkButton partialId=\"allTheme\" routeName={viewDisplay.getRoutePath(type.allRouteName)} color={type.allColor}>{contentTranslation('All')}</LinkButton>\n            <div id=\"theme-linkButton-courseAndWorld-container\" className=\"btn-group btn-group-sm\">\n                <LinkButton partialId=\"courseTheme\" routeName={viewDisplay.getRoutePath(type.courseRouteName)} color={type.courseColor}>\n                    <Image id=\"courseTheme-button-image\" file={COURSE_THEME_IMAGE_FILE} className=\"theme-button-image\"/>\n                </LinkButton>\n                <LinkButton partialId=\"worldTheme\" routeName={viewDisplay.getRoutePath(type.worldRouteName)} color={type.worldColor}>\n                    <Image id=\"worldTheme-button-image\" file={WORLD_THEME_IMAGE_FILE} className=\"theme-button-image\"/>\n                </LinkButton>\n            </div>\n        </div>\n    }\n\n    protected override _createAppOptionInterpreter(): AppInterpreterWithTable<Themes, ThemeAppOption> {\n        const $this = this\n\n        return new class implements AppInterpreterWithTable<Themes, ThemeAppOption> {\n\n            public get iterable(): IterableIterator<Themes> {\n                return newIterableIterator($this.props.games, $this.type.iterator,)\n            }\n\n            //region -------------------- List interpreter --------------------\n\n            public createListDimension(): PossibleDimensionOnList {\n                return {\n                    small: 6,\n                    medium: 4,\n                    large: 3,\n                    extraLarge: 2,\n                }\n            }\n\n            //endregion -------------------- List interpreter --------------------\n            //region -------------------- Card list interpreter --------------------\n\n            public createCardListDimension(): PossibleDimensionOnCardList {\n                return 'list'\n            }\n\n            public createCardListContent(enumerable: Themes,) {\n                const {englishNameInHtml, endlessMarioImageFile,} = enumerable\n\n                return <div className=\"card-body\" id={`theme-${englishNameInHtml}`}>\n                    <div className=\"col-2\">{CommonOptions.get.getGameContent(enumerable)}</div>\n                    <div className=\"images-container col-7\">\n                        {enumerable.renderSingleComponent(true)}\n                        <Image file={endlessMarioImageFile}/>\n                    </div>\n                    <div className=\"col-2\">{CommonOptions.get.getThemeContent(enumerable)}</div>\n                </div>\n            }\n\n            //endregion -------------------- Card list interpreter --------------------\n            //region -------------------- Table interpreter --------------------\n\n            public set callbackToGetEnumerable(value: () => Themes,) {\n                ThemeAppOption.CALLBACK_TO_GET_ENUMERATION = value\n            }\n\n            public get tableOptions(): ThemeAppOption[] {\n                return [\n                    ThemeAppOption.IMAGE,\n                    ThemeAppOption.NAME,\n                    ThemeAppOption.NIGHT_EFFECT,\n                ]\n            }\n\n            public get tableProperties(): SimplifiedTableProperties {\n                return {\n                    caption: gameContentTranslation('theme.all.all')\n                }\n            }\n\n\n            public createTableContent(option: ThemeAppOption,) {\n                return option.renderContent\n            }\n\n            public createTableHeader(option: ThemeAppOption,) {\n                return option.renderTableHeader\n            }\n\n            //endregion -------------------- Table interpreter --------------------\n\n        }()\n    }\n\n    //endregion -------------------- Create methods --------------------\n\n}\n","import {Link} from 'react-router-dom'\n\nimport type {BootstrapColor}                                                     from 'bootstrap/Bootstrap.types'\nimport type {EveryPossibleRouteNames}                                            from 'route/everyRoutes.types'\nimport type {ReactElementOrString, ReactProperties, ReactPropertiesWithChildren} from 'util/react/ReactProperties'\nimport type {Nullable}                                                           from 'util/types/nullable'\n\nimport {routeFromName} from 'route/route'\n\ninterface LinkButtonsProperties\n    extends ReactProperties {\n\n    partialId: string\n\n    routeName: Nullable<EveryPossibleRouteNames>\n\n    color: BootstrapColor\n\n}\n\n/**\n * @reactComponent\n */\nexport default function LinkButton({partialId, routeName, color, children,}: ReactPropertiesWithChildren<LinkButtonsProperties, ReactElementOrString>,) {\n    const id = `${partialId}-button`,\n        className = `btn btn-${color} link-button`\n\n    return routeName == null\n        ? <button type=\"button\" id={id} className={className} disabled>{children}</button>\n        : <Link type=\"button\" id={id} className={className} to={routeFromName(routeName)}>{children}</Link>\n}\n\n/**\n * Create a {@link Link} button or a simple disabled button (if the route name is <b>null</b>)\n *\n * @param partialId The partial ID (with \"-button\") added after-end\n * @param routeName The route name\n * @param color The Bootstrap color\n * @param value The value to display\n */\nexport function createLinkButton(partialId: string, [routeName, color,]: readonly [Nullable<EveryPossibleRouteNames>, BootstrapColor,], value: ReactElementOrString,) {\n    return <LinkButton partialId={partialId} routeName={routeName} color={color}>{value}</LinkButton>\n}\n","import type {GameStyle}       from 'core/gameStyle/GameStyle'\nimport type {CourseTheme}     from 'core/theme/CourseTheme'\nimport type {ReactProperties} from 'util/react/ReactProperties'\n\nimport {gameContentTranslation} from 'lang/components/translationMethods'\n\ninterface NightEffectComponentProperties_GameStyle\n    extends ReactProperties {\n\n    gameStyle: GameStyle\n\n}\n\ninterface NightEffectComponentProperties_Theme\n    extends ReactProperties {\n\n    theme: CourseTheme\n\n}\n\n/**\n * @param properties\n * @reactComponent\n */\nexport default function NightEffectComponent(properties: | NightEffectComponentProperties_GameStyle | NightEffectComponentProperties_Theme,) {\n    return 'gameStyle' in properties\n        ? <NightEffectByGameStyle {...properties}/>\n        : <NightEffectByTheme {...properties}/>\n}\n\nfunction NightEffectByGameStyle({gameStyle: {nightDesertWindTranslationKey: translationKey,},}: NightEffectComponentProperties_GameStyle,) {\n    return translationKey == null ? null : <>{gameContentTranslation(`nightEffect.nightDesertWindEffect.${translationKey}`)}</>\n}\n\nfunction NightEffectByTheme({theme: {effect,},}: NightEffectComponentProperties_Theme,) {\n    return effect?.createNewComponent ?? null\n}\n"],"names":["_appOptionWithContent","_classPrivateFieldLooseKey","_appOptionWithTable","_Symbol$iterator","Symbol","iterator","ThemeAppOption","_Enum","_inherits","_super","_createSuper","_this","_classCallCheck","call","Object","defineProperty","_assertThisInitialized","writable","value","_createClass","key","get","_classPrivateFieldLoo","_classPrivateFieldLoo2","_this2","_classPrivateFieldLooseBase","this","AppOptionWithContentComponent","_createContentOption","CALLBACK_TO_GET_ENUMERATION","__appOptionWithContent","renderContent","_classPrivateFieldLoo3","_classPrivateFieldLoo4","_this3","AppOptionWithTableComponent","_createTableHeaderOption","__appOptionWithTable","renderTableHeader","CompanionEnum","getValue","values","_regeneratorRuntime","mark","wrap","_context","prev","next","delegateYield","stop","Enum","IMAGE","_ThemeAppOption","ThemeAppOption_Image","_super2","apply","arguments","enumeration","endlessMarioImageFile","renderSingleComponent","_jsx","Image","file","element","contentTranslation","subHeaders","NAME","_ThemeAppOption2","ThemeAppOptionName","_super3","_jsxs","className","children","CommonOptions","getGameContent","getNameContent","getThemeContent","nameHeader","NIGHT_EFFECT","_ThemeAppOption3","ThemeAppOption_NightEffect","_super4","_ref","courseTheme","reference","NightEffectComponent","theme","Themes","DESERT","Times","NIGHT","tooltip","gameContentTranslation","night","_instance","_class","_BasicCompanionEnum","CompanionEnum_ThemeAppOption","_super5","_classPrivateFieldLoo5","_classPrivateFieldLoo6","BasicCompanionEnum","ThemeApp","_AbstractTableApp","props","type","concat","routeName","viewDisplay","id","LinkButton","partialId","getRoutePath","allRouteName","color","allColor","courseRouteName","courseColor","COURSE_THEME_IMAGE_FILE","worldRouteName","worldColor","WORLD_THEME_IMAGE_FILE","$this","newIterableIterator","games","small","medium","large","extraLarge","enumerable","englishNameInHtml","set","caption","option","AbstractTableApp","disabled","Link","to","routeFromName","properties","NightEffectByGameStyle","_objectSpread","NightEffectByTheme","translationKey","gameStyle","nightDesertWindTranslationKey","_Fragment","_ref2","_effect$createNewComp","effect","createNewComponent"],"sourceRoot":""}