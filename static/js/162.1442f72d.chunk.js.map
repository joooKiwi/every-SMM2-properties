{"version":3,"file":"static/js/162.1442f72d.chunk.js","mappings":"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","sources":["app/options/MiiCostumeAppOption.tsx","app/MiiCostumeApp.tsx"],"sourcesContent":["import type {CompanionEnumSingleton} from '@joookiwi/enumerable'\nimport {CompanionEnum, Enum}         from '@joookiwi/enumerable'\n\nimport type {AppOption}           from 'app/options/AppOption'\nimport type {Names, Ordinals}     from 'app/options/MiiCostumeAppOption.types'\nimport type {SingleHeaderContent} from 'app/tools/table/SimpleHeader'\nimport type {MiiCostumes}         from 'core/miiCostume/MiiCostumes'\n\nimport {CommonOptions}        from 'app/options/CommonOptions'\nimport Image                  from 'app/tools/images/Image'\nimport {MiiCostumeCategories} from 'core/miiCostumeCategory/MiiCostumeCategories'\nimport {contentTranslation}   from 'lang/components/translationMethods'\n\n/**\n * @todo convert the \"_createTableHeaderOption\" to have the enumerable as an argument and to be non-null\n * @todo Change CATEGORY to use {IMAGE, TEXT or NONE} instead of 2 different options.\n */\nexport abstract class MiiCostumeAppOption\n    extends Enum<Ordinals, Names>\n    implements AppOption<MiiCostumes> {\n\n    //region -------------------- Enum instances --------------------\n\n    public static readonly IMAGE =                 new class MiiCostumeAppOption_Image extends MiiCostumeAppOption {\n\n        protected override _createContentOption(enumeration: MiiCostumes,) {\n            return <Image file={enumeration.imageFile}/>\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {key: 'image', element: contentTranslation('Image'),}\n        }\n\n    }()\n    public static readonly NAME =                  new class MiiCostumeAppOption_Name extends MiiCostumeAppOption {\n\n        protected override _createContentOption(enumeration: MiiCostumes,) {\n            return CommonOptions.get.getNameContent(enumeration,)\n        }\n\n        protected override _createTableHeaderOption() {\n            return CommonOptions.get.nameHeader\n        }\n\n    }()\n    public static readonly OFFICIAL_NOTIFICATION = new class MiiCostumeAppOption_ConditionToUnlockIt extends MiiCostumeAppOption {\n\n        protected override _createContentOption(enumeration: MiiCostumes,) {\n            const miiCostume = enumeration.reference\n            return miiCostume.officialNotification?.createSimpleTranslationComponent(miiCostume.english, miiCostume.officialNotificationAmount,)\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            //TODO add new translation to the header value.\n            return {key: 'officialNotification', element: '--Official notification--',}\n        }\n\n    }()\n\n    public static readonly CATEGORY =              new class MiiCostumeAppOption_Category extends MiiCostumeAppOption {\n\n        protected override _createContentOption(enumeration: MiiCostumes,) {\n            const categoryName = enumeration.reference.categoryContainer.nameContainer\n            return CommonOptions.get.getCategoryContent(enumeration, () => MiiCostumeCategories.CompanionEnum.get.getValueByName(categoryName.english,).imageFile,)\n        }\n\n        protected override _createTableHeaderOption() {\n            return CommonOptions.get.categoryHeader\n        }\n\n    }()\n    /**\n     * Tell whenever a {@link MiiCostumeAppOption.CATEGORY category} is displayed\n     * as a text (<i>true</i>) or an image (<i>false</i>).\n     */\n    public static readonly CATEGORY_AS_TEXT =      new class MiiCostumeAppOption_CategoryAsText extends MiiCostumeAppOption {}()\n\n    //endregion -------------------- Enum instances --------------------\n    //region -------------------- Companion enum --------------------\n\n    public static readonly CompanionEnum: CompanionEnumSingleton<MiiCostumeAppOption, typeof MiiCostumeAppOption> = class CompanionEnum_MiiCostumeAppOption\n        extends CompanionEnum<MiiCostumeAppOption, typeof MiiCostumeAppOption> {\n\n        //region -------------------- Singleton usage --------------------\n\n        static #instance?: CompanionEnum_MiiCostumeAppOption\n\n        private constructor() {\n            super(MiiCostumeAppOption,)\n        }\n\n        public static get get() {\n            return this.#instance ??= new CompanionEnum_MiiCostumeAppOption()\n        }\n\n        //endregion -------------------- Singleton usage --------------------\n\n    }\n\n    //endregion -------------------- Companion enum --------------------\n    //region -------------------- Fields --------------------\n    //endregion -------------------- Fields --------------------\n    //region -------------------- Constructor --------------------\n\n    private constructor() {\n        super()\n    }\n\n    //endregion -------------------- Constructor --------------------\n    //region -------------------- Getter methods --------------------\n    //endregion -------------------- Getter methods --------------------\n    //region -------------------- Methods --------------------\n\n    //region -------------------- App option - content --------------------\n\n    protected _createContentOption(enumeration: MiiCostumes,): ReactElement {\n        throw new ReferenceError(`The MiiCostumeAppOption.${this.name} cannot create a content option`,)\n    }\n\n    public renderContent(enumeration: MiiCostumes,): readonly [ReactElement,] {\n        return [this._createContentOption(enumeration,),]\n    }\n\n    //endregion -------------------- App option - content --------------------\n    //region -------------------- App option - table --------------------\n\n    protected _createTableHeaderOption(): NullOr<SingleHeaderContent> {\n        throw new ReferenceError(`The MiiCostumeAppOption.${this.name} cannot create a table header option`,)\n    }\n\n    public renderTableHeader(): NullOr<SingleHeaderContent> {\n        const content = this._createTableHeaderOption()\n        if (content == null)\n            return null\n        return content\n    }\n\n    //endregion -------------------- App option - table --------------------\n\n    //endregion -------------------- Methods --------------------\n\n}\n","import './MiiCostumeApp.scss'\n\nimport type {AppWithInterpreterProperties} from 'app/AppProperties.types'\nimport type {AppInterpreterWithTable}      from 'app/interpreter/AppInterpreterWithTable'\nimport type {DimensionOnList}              from 'app/interpreter/DimensionOnList'\nimport type {ViewAndRouteName}             from 'app/withInterpreter/DisplayButtonGroup.properties'\n\nimport SubMainContainer         from 'app/_SubMainContainer'\nimport {MiiCostumeAppOption}    from 'app/options/MiiCostumeAppOption'\nimport Image                    from 'app/tools/images/Image'\nimport Table                    from 'app/tools/table/Table'\nimport TextComponent            from 'app/tools/text/TextComponent'\nimport {unfinishedText}         from 'app/tools/text/UnfinishedText'\nimport CardList                 from 'app/withInterpreter/CardList'\nimport SimpleList               from 'app/withInterpreter/SimpleList'\nimport {ViewDisplays}           from 'app/withInterpreter/ViewDisplays'\nimport {MiiCostumes}            from 'core/miiCostume/MiiCostumes'\nimport {OtherWordInTheGames}    from 'core/otherWordInTheGame/OtherWordInTheGames'\nimport {gameContentTranslation} from 'lang/components/translationMethods'\n\nclass MiiCostumeAppInterpreter\n    implements AppInterpreterWithTable<MiiCostumes, MiiCostumeAppOption> {\n\n    public get content() {\n        return MiiCostumes.CompanionEnum.get.values.toArray()\n    }\n\n    //region -------------------- List interpreter --------------------\n\n    public createListDimension(): DimensionOnList {\n        return {\n            default: 1,\n            small: 2,\n            medium: 3,\n            large: 4,\n            extraLarge: 5,\n            extraExtraLarge: 6,\n        }\n    }\n\n    //endregion -------------------- List interpreter --------------------\n    //region -------------------- Card list interpreter --------------------\n\n    public createCardListDimension() {\n        return this.createListDimension()\n    }\n\n    public createCardListContent({reference, imageFile,}: MiiCostumes,) {\n        const category = reference.categoryEnglish === '' ? '' : `entityCategory-${reference.categoryEnglish}`//TODO move to the parent container className.\n        return <div className={category}>\n            <Image file={imageFile}/>\n        </div>\n    }\n\n    //endregion -------------------- Card list interpreter --------------------\n    //region -------------------- Table interpreter --------------------\n\n    public readonly tableHeadersColor = 'info' satisfies BootstrapThemeColor\n    public readonly tableColor = 'primary' satisfies BootstrapThemeColor\n    public readonly tableCaption = gameContentTranslation('mii costume.all', {\n        singularName: <TextComponent key=\"miiCostume-singularName\" content={OtherWordInTheGames.MII_COSTUME.singularLowerCaseNameOnReferenceOrNull ?? unfinishedText(OtherWordInTheGames.MII_COSTUME.singularEnglishName,)} className=\"text-decoration-underline\"/>,\n        pluralName: <TextComponent key=\"miiCostume-pluralName\" content={OtherWordInTheGames.MII_COSTUME.pluralLowerCaseNameOnReferenceOrNull ?? unfinishedText(OtherWordInTheGames.MII_COSTUME.pluralEnglishName,)} className=\"text-decoration-underline\"/>,\n    },) satisfies ReactElementOrString\n\n    public get tableOptions(): readonly MiiCostumeAppOption[] {\n        return [\n            MiiCostumeAppOption.IMAGE,\n            MiiCostumeAppOption.NAME,\n            MiiCostumeAppOption.OFFICIAL_NOTIFICATION,\n            MiiCostumeAppOption.CATEGORY,\n        ]\n    }\n\n\n    public createTableContent(content: MiiCostumes, option: MiiCostumeAppOption,) {\n        return option.renderContent(content,)\n    }\n\n    public createTableHeader(option: MiiCostumeAppOption,) {\n        return option.renderTableHeader()\n    }\n\n    //endregion -------------------- Table interpreter --------------------\n\n}\n\nconst viewDisplayAndRouteName = [\n    [ViewDisplays.SIMPLE_LIST, 'everyMiiCostume (list)',],\n    [ViewDisplays.CARD_LIST, 'everyMiiCostume (card)',],\n    [ViewDisplays.TABLE, 'everyMiiCostume (table)',],\n] as const satisfies readonly ViewAndRouteName[]\nconst titleContent = gameContentTranslation('mii costume.all', {\n    singularName: OtherWordInTheGames.MII_COSTUME.singularLowerCaseNameOnReferenceOrNull ?? unfinishedText(OtherWordInTheGames.MII_COSTUME.singularEnglishName,),\n    pluralName: OtherWordInTheGames.MII_COSTUME.pluralLowerCaseNameOnReferenceOrNull ?? unfinishedText(OtherWordInTheGames.MII_COSTUME.pluralEnglishName,),\n},)\nconst appInterpreter = new MiiCostumeAppInterpreter()\n\n/** @reactComponent */\nexport default function MiiCostumeApp({viewDisplay,}: AppWithInterpreterProperties,) {\n    if (viewDisplay === ViewDisplays.SIMPLE_LIST)\n        return <SubMainContainer reactKey=\"miiCostume\" viewDisplayAndRouteName={viewDisplayAndRouteName} viewDisplay={viewDisplay} titleContent={titleContent}>\n            <SimpleList reactKey=\"miiCostume\" interpreter={appInterpreter}/>\n        </SubMainContainer>\n    if (viewDisplay === ViewDisplays.CARD_LIST)\n        return <SubMainContainer reactKey=\"miiCostume\" viewDisplayAndRouteName={viewDisplayAndRouteName} viewDisplay={viewDisplay} titleContent={titleContent}>\n            <CardList reactKey=\"miiCostume\" interpreter={appInterpreter}/>\n        </SubMainContainer>\n    return <SubMainContainer reactKey=\"miiCostume\" viewDisplayAndRouteName={viewDisplayAndRouteName} viewDisplay={viewDisplay} titleContent={titleContent}>\n        <Table id=\"miiCostume-table\" interpreter={appInterpreter}/>\n    </SubMainContainer>\n}\n"],"names":["MiiCostumeAppOption","Enum","constructor","super","_createContentOption","enumeration","ReferenceError","concat","this","name","renderContent","_createTableHeaderOption","renderTableHeader","content","_MiiCostumeAppOption","IMAGE","_jsx","Image","file","imageFile","key","element","contentTranslation","NAME","CommonOptions","get","getNameContent","nameHeader","OFFICIAL_NOTIFICATION","_miiCostume$officialN","miiCostume","reference","officialNotification","createSimpleTranslationComponent","english","officialNotificationAmount","CATEGORY","categoryName","categoryContainer","nameContainer","getCategoryContent","MiiCostumeCategories","CompanionEnum","getValueByName","categoryHeader","CATEGORY_AS_TEXT","_instance","_classPrivateFieldLooseKey","_CompanionEnum_MiiCostumeAppOption","CompanionEnum_MiiCostumeAppOption","_classPrivateFieldLoo","_classPrivateFieldLoo2","_classPrivateFieldLooseBase","Object","defineProperty","writable","value","viewDisplayAndRouteName","ViewDisplays","SIMPLE_LIST","CARD_LIST","TABLE","titleContent","gameContentTranslation","singularName","_OtherWordInTheGames$3","OtherWordInTheGames","MII_COSTUME","singularLowerCaseNameOnReferenceOrNull","unfinishedText","singularEnglishName","pluralName","_OtherWordInTheGames$4","pluralLowerCaseNameOnReferenceOrNull","pluralEnglishName","appInterpreter","_OtherWordInTheGames$","_OtherWordInTheGames$2","tableHeadersColor","tableColor","tableCaption","TextComponent","className","MiiCostumes","values","toArray","createListDimension","default","small","medium","large","extraLarge","extraExtraLarge","createCardListDimension","createCardListContent","_ref","category","categoryEnglish","children","tableOptions","createTableContent","option","createTableHeader","MiiCostumeApp","_ref2","viewDisplay","SubMainContainer","reactKey","SimpleList","interpreter","CardList","Table","id"],"sourceRoot":""}