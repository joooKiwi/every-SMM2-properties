{"version":3,"file":"static/js/94.ab8aa4a2.chunk.js","mappings":"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","sources":["app/options/SampleCourseAppOption.tsx","core/sampleCourse/SampleCourse.container.ts","core/sampleCourse/SampleCourse.loader.ts","core/sampleCourse/SampleCourses.ts","app/SampleCourseApp.tsx"],"sourcesContent":["import type {CompanionEnumSingleton} from '@joookiwi/enumerable'\nimport {CompanionEnum, Enum}         from '@joookiwi/enumerable'\n\nimport type {AppOption}           from 'app/options/AppOption'\nimport type {Names, Ordinals}     from 'app/options/SampleCourseAppOption.types'\nimport type {SingleHeaderContent} from 'app/tools/table/SimpleHeader'\nimport type {SampleCourses}       from 'core/sampleCourse/SampleCourses'\n\nimport {CommonOptions}                  from 'app/options/CommonOptions'\nimport UnfinishedText, {unfinishedText} from 'app/tools/text/UnfinishedText'\nimport {ProjectLanguages}               from 'lang/ProjectLanguages'\nimport {gameContentTranslation}         from 'lang/components/translationMethods'\n\nexport abstract class SampleCourseAppOption\n    extends Enum<Ordinals, Names>\n    implements AppOption<SampleCourses> {\n\n    //region -------------------- Enum instances --------------------\n\n    public static readonly NUMBER = new class SampleCourseAppOption_Number extends SampleCourseAppOption {\n\n        protected override _createContentOption({reference: {worldNumber, firstNumberInFirst10MarioChallenges,}}: SampleCourses,): ReactElement {\n            if (firstNumberInFirst10MarioChallenges == null)\n                return <span className=\"number-container\">{worldNumber}</span>\n            return <span className=\"number-container\">{worldNumber}<sub className=\"opacity-75\">({firstNumberInFirst10MarioChallenges})</sub></span>\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {\n                key: 'number', element: <span><UnfinishedText>Level number</UnfinishedText><br/><sub className=\"opacity-75\">{ProjectLanguages.current.textInParentheses(unfinishedText('with 1st-time in 10 Mario Challenges',),)}</sub></span>,\n            }\n        }\n\n\n    }()\n    public static readonly NAME = new class SampleCourseAppOption_Name extends SampleCourseAppOption {\n\n        protected override _createContentOption(enumeration: SampleCourses,): ReactElement {\n            return CommonOptions.get.getNameContent(enumeration,)\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return CommonOptions.get.nameHeader\n        }\n\n\n    }()\n    public static readonly GAME_STYLE_AND_AREAS = new class SampleCourseAppOption_GameStyleAndAreas extends SampleCourseAppOption {\n\n        protected override _createContentOption({reference,}: SampleCourses,): ReactElement {\n            const themeInSubArea = reference.themeInSubArea\n            if (themeInSubArea == null)\n                return <div className=\"gameStyleAndAreas-container d-flex\">\n                    {reference.gameStyle.renderSingleComponent}\n                    <div className=\"ps-2\">\n                        {reference.themeInMainArea.renderSingleComponent(true,)}\n                    </div>\n                </div>\n            return <div className=\"gameStyleAndAreas-container d-flex\">\n                {reference.gameStyle.renderSingleComponent}\n                <div className=\"ps-2\">\n                    {reference.themeInMainArea.renderSingleComponent(true,)}\n                </div>\n                <div className=\"ps-1\">\n                    {themeInSubArea.renderSingleComponent(true,)}\n                </div>\n            </div>\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {key: 'gameStyleAndAreas', element: unfinishedText('Game style & areas',),}\n        }\n\n\n    }()\n    public static readonly TIME = new class SampleCourseAppOption_Time extends SampleCourseAppOption {\n\n        protected override _createContentOption({reference,}: SampleCourses,): ReactElement {\n            return <span>{reference.amountOfTime} <UnfinishedText>seconds</UnfinishedText></span>\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {key: 'time', element: gameContentTranslation('time.singular',),}\n        }\n\n\n    }()\n\n    //endregion -------------------- Enum instances --------------------\n    //region -------------------- Companion enum --------------------\n\n    public static CompanionEnum: CompanionEnumSingleton<SampleCourseAppOption, typeof SampleCourseAppOption> = class CompanionEnum_SampleCourseAppOption\n        extends CompanionEnum<SampleCourseAppOption, typeof SampleCourseAppOption> {\n\n        //region -------------------- Singleton usage --------------------\n\n        static #instance?: CompanionEnum_SampleCourseAppOption\n\n        private constructor() {\n            super(SampleCourseAppOption,)\n        }\n\n        public static get get() {\n            return this.#instance ??= new this()\n        }\n\n        //endregion -------------------- Singleton usage --------------------\n\n    }\n\n    //endregion -------------------- Companion enum --------------------\n    //region -------------------- Fields --------------------\n    //endregion -------------------- Fields --------------------\n    //region -------------------- Constructor --------------------\n\n    private constructor() {\n        super()\n    }\n\n    //endregion -------------------- Constructor --------------------\n    //region -------------------- Getter methods --------------------\n    //endregion -------------------- Getter methods --------------------\n    //region -------------------- Methods --------------------\n\n    //region -------------------- App option - content --------------------\n\n    protected abstract _createContentOption(enumeration: SampleCourses,): ReactElement\n\n    public renderContent(enumeration: SampleCourses,): readonly [ReactElement,] {\n        return [this._createContentOption(enumeration,),]\n    }\n\n    //endregion -------------------- App option - content --------------------\n    //region -------------------- App option - table --------------------\n\n    protected abstract _createTableHeaderOption(): SingleHeaderContent\n\n    public renderTableHeader(): SingleHeaderContent {\n        return this._createTableHeaderOption()\n    }\n\n    //endregion -------------------- App option - table --------------------\n\n    //endregion -------------------- Methods --------------------\n\n}","import type {GameStyles}                                                                             from 'core/gameStyle/GameStyles'\nimport type {SampleCourse}                                                                           from 'core/sampleCourse/SampleCourse'\nimport type {PossibleAmountOfTime, PossibleFirstNumberInFirst10MarioChallenges, PossibleWorldNumber} from 'core/sampleCourse/loader.types'\nimport type {Themes}                                                                                 from 'core/theme/Themes'\nimport type {Name}                                                                                   from 'lang/name/Name'\n\nimport {ClassContainingAName} from 'lang/name/ClassContainingAName'\n\nexport class SampleCourseContainer\n    extends ClassContainingAName<string>\n    implements SampleCourse {\n\n    //region -------------------- Fields --------------------\n\n    readonly #worldNumber\n    readonly #firstNumberInFirst10MarioChallenges\n    readonly #gameStyle\n    readonly #themeInMainArea\n    readonly #themeInSubArea\n    readonly #amountOfTime\n\n    //endregion -------------------- Fields --------------------\n    //region -------------------- Constructor --------------------\n\n    public constructor(name: Name<string>,\n                       worldNumber: PossibleWorldNumber,\n                       firstNumberInFirst10MarioChallenges: PossibleFirstNumberInFirst10MarioChallenges,\n                       gameStyle: GameStyles,\n                       themeInMainArea: Themes,\n                       themeInSubArea: NullOr<Themes>,\n                       amountOfTime: PossibleAmountOfTime,) {\n        super(name,)\n        this.#worldNumber = worldNumber\n        this.#firstNumberInFirst10MarioChallenges = firstNumberInFirst10MarioChallenges\n        this.#gameStyle = gameStyle\n        this.#themeInMainArea = themeInMainArea\n        this.#themeInSubArea = themeInSubArea\n        this.#amountOfTime = amountOfTime\n    }\n\n    //endregion -------------------- Constructor --------------------\n    //region -------------------- Getter methods --------------------\n\n    public get worldNumber(): PossibleWorldNumber {\n        return this.#worldNumber\n    }\n\n    public get firstNumberInFirst10MarioChallenges(): PossibleFirstNumberInFirst10MarioChallenges {\n        return this.#firstNumberInFirst10MarioChallenges\n    }\n\n    public get gameStyle(): GameStyles {\n        return this.#gameStyle\n    }\n\n    public get themeInMainArea(): Themes {\n        return this.#themeInMainArea\n    }\n\n    public get themeInSubArea(): NullOr<Themes> {\n        return this.#themeInSubArea\n    }\n\n    public get amountOfTime(): PossibleAmountOfTime {\n        return this.#amountOfTime\n    }\n\n    //endregion -------------------- Getter methods --------------------\n\n}","import file from 'resources/compiled/Sample course (SMM).json'\n\nimport type {LanguageContent}                                                                        from 'core/_template/LanguageContent'\nimport type {PossibleAcronym_GameStyle_SMM1}                                                         from 'core/gameReference/GameReferences.types'\nimport type {PossibleEnglishName_CourseTheme_SMM1}                                                   from 'core/theme/Themes.types'\nimport type {SampleCourse}                                                                           from 'core/sampleCourse/SampleCourse'\nimport type {PossibleAmountOfTime, PossibleFirstNumberInFirst10MarioChallenges, PossibleWorldNumber} from 'core/sampleCourse/loader.types'\nimport type {PossibleEnglishName}                                                                    from 'core/sampleCourse/SampleCourses.types'\nimport type {Loader}                                                                                 from 'util/loader/Loader'\n\nimport {isInProduction}        from 'variables'\nimport {GameStyles}            from 'core/gameStyle/GameStyles'\nimport {SampleCourseContainer} from 'core/sampleCourse/SampleCourse.container'\nimport {Themes}                from 'core/theme/Themes'\nimport {createNameFromContent} from 'lang/name/createNameFromContent'\n\n/**\n * @dependsOn<{@link GameStyles}>\n * @dependsOn<{@link Themes}>\n * @singleton\n */\nexport class SampleCourseLoader\n    implements Loader<ReadonlyMap<PossibleEnglishName, SampleCourse>> {\n\n    //region -------------------- Singleton usage --------------------\n\n    static #instance?: SampleCourseLoader\n\n    private constructor() {}\n\n    public static get get() {\n        return this.#instance ??= new this()\n    }\n\n    //endregion -------------------- Singleton usage --------------------\n\n    #map?: Map<PossibleEnglishName, SampleCourse>\n\n    public load(): ReadonlyMap<PossibleEnglishName, SampleCourse> {\n        if (this.#map != null)\n            return this.#map\n\n        const references = new Map<PossibleEnglishName, SampleCourse>()\n        let index = file.length\n        while (index-- > 0) {\n            const content = file[index] as Content\n            references.set(`Level ${content.worldNumber}`, createReference(content,),)\n        }\n\n        if (!isInProduction)\n            console.info(\n                '-------------------- \"sample course\" has been loaded --------------------\\n',\n                references,\n                '\\n-------------------- \"sample course\" has been loaded --------------------',\n            )\n\n        return this.#map = references\n    }\n}\n\ninterface Content\n    extends LanguageContent {\n\n    readonly worldNumber: PossibleWorldNumber\n    readonly courseNumberInFirst10MarioChallenge: PossibleFirstNumberInFirst10MarioChallenges\n\n    readonly gameStyle: PossibleAcronym_GameStyle_SMM1\n    readonly courseTheme_mainArea: PossibleEnglishName_CourseTheme_SMM1\n    readonly courseTheme_subArea: NullOr<PossibleEnglishName_CourseTheme_SMM1>\n\n    readonly amountOfTime: PossibleAmountOfTime\n\n}\n\nfunction createReference(content: Content,): SampleCourse {\n    const subArea = content.courseTheme_subArea\n\n    return new SampleCourseContainer(\n        createNameFromContent(content, 1, true,),\n        content.worldNumber,\n        content.courseNumberInFirst10MarioChallenge,\n        GameStyles.CompanionEnum.get.getValueByAcronym(content.gameStyle,),\n        Themes.CompanionEnum.get.getValueByName(content.courseTheme_mainArea,),\n        subArea == null ? null : Themes.CompanionEnum.get.getValueByName(subArea,),\n        content.amountOfTime,\n    )\n}\n","import type {CompanionEnumSingleton} from '@joookiwi/enumerable'\nimport {CompanionEnum, Enum}         from '@joookiwi/enumerable'\n\nimport type {ClassWithEnglishName}                 from 'core/ClassWithEnglishName'\nimport type {ClassWithReference}                   from 'core/ClassWithReference'\nimport type {SampleCourse}                         from 'core/sampleCourse/SampleCourse'\nimport type {Names, Ordinals, PossibleEnglishName} from 'core/sampleCourse/SampleCourses.types'\n\nimport {SampleCourseLoader} from 'core/sampleCourse/SampleCourse.loader'\nimport {StringContainer}    from 'util/StringContainer'\n\nexport class SampleCourses\n    extends Enum<Ordinals, Names>\n    implements ClassWithEnglishName<PossibleEnglishName>, ClassWithReference<SampleCourse> {\n\n    //region -------------------- Enum instances --------------------\n\n    public static readonly '1-1' = new SampleCourses('Level 1-1',)\n    public static readonly '1-2' = new SampleCourses('Level 1-2',)\n    public static readonly '1-3' = new SampleCourses('Level 1-3',)\n    public static readonly '1-4' = new SampleCourses('Level 1-4',)\n    public static readonly '2-1' = new SampleCourses('Level 2-1',)\n    public static readonly '2-2' = new SampleCourses('Level 2-2',)\n    public static readonly '2-3' = new SampleCourses('Level 2-3',)\n    public static readonly '2-4' = new SampleCourses('Level 2-4',)\n    public static readonly '3-1' = new SampleCourses('Level 3-1',)\n    public static readonly '3-2' = new SampleCourses('Level 3-2',)\n    public static readonly '3-3' = new SampleCourses('Level 3-3',)\n    public static readonly '3-4' = new SampleCourses('Level 3-4',)\n    public static readonly '4-1' = new SampleCourses('Level 4-1',)\n    public static readonly '4-2' = new SampleCourses('Level 4-2',)\n    public static readonly '4-3' = new SampleCourses('Level 4-3',)\n    public static readonly '4-4' = new SampleCourses('Level 4-4',)\n    public static readonly '5-1' = new SampleCourses('Level 5-1',)\n    public static readonly '5-2' = new SampleCourses('Level 5-2',)\n    public static readonly '5-3' = new SampleCourses('Level 5-3',)\n    public static readonly '5-4' = new SampleCourses('Level 5-4',)\n    public static readonly '6-1' = new SampleCourses('Level 6-1',)\n    public static readonly '6-2' = new SampleCourses('Level 6-2',)\n    public static readonly '6-3' = new SampleCourses('Level 6-3',)\n    public static readonly '6-4' = new SampleCourses('Level 6-4',)\n    public static readonly '7-1' = new SampleCourses('Level 7-1',)\n    public static readonly '7-2' = new SampleCourses('Level 7-2',)\n    public static readonly '7-3' = new SampleCourses('Level 7-3',)\n    public static readonly '7-4' = new SampleCourses('Level 7-4',)\n    public static readonly '8-1' = new SampleCourses('Level 8-1',)\n    public static readonly '8-2' = new SampleCourses('Level 8-2',)\n    public static readonly '8-3' = new SampleCourses('Level 8-3',)\n    public static readonly '8-4' = new SampleCourses('Level 8-4',)\n    public static readonly '9-1' = new SampleCourses('Level 9-1',)\n    public static readonly '9-2' = new SampleCourses('Level 9-2',)\n    public static readonly '9-3' = new SampleCourses('Level 9-3',)\n    public static readonly '9-4' = new SampleCourses('Level 9-4',)\n    public static readonly '10-1' = new SampleCourses('Level 10-1',)\n    public static readonly '10-2' = new SampleCourses('Level 10-2',)\n    public static readonly '10-3' = new SampleCourses('Level 10-3',)\n    public static readonly '10-4' = new SampleCourses('Level 10-4',)\n    public static readonly '11-1' = new SampleCourses('Level 11-1',)\n    public static readonly '11-2' = new SampleCourses('Level 11-2',)\n    public static readonly '11-3' = new SampleCourses('Level 11-3',)\n    public static readonly '11-4' = new SampleCourses('Level 11-4',)\n    public static readonly '12-1' = new SampleCourses('Level 12-1',)\n    public static readonly '12-2' = new SampleCourses('Level 12-2',)\n    public static readonly '12-3' = new SampleCourses('Level 12-3',)\n    public static readonly '12-4' = new SampleCourses('Level 12-4',)\n    public static readonly '13-1' = new SampleCourses('Level 13-1',)\n    public static readonly '13-2' = new SampleCourses('Level 13-2',)\n    public static readonly '13-3' = new SampleCourses('Level 13-3',)\n    public static readonly '13-4' = new SampleCourses('Level 13-4',)\n    public static readonly '14-1' = new SampleCourses('Level 14-1',)\n    public static readonly '14-2' = new SampleCourses('Level 14-2',)\n    public static readonly '14-3' = new SampleCourses('Level 14-3',)\n    public static readonly '14-4' = new SampleCourses('Level 14-4',)\n    public static readonly '15-1' = new SampleCourses('Level 15-1',)\n    public static readonly '15-2' = new SampleCourses('Level 15-2',)\n    public static readonly '15-3' = new SampleCourses('Level 15-3',)\n    public static readonly '15-4' = new SampleCourses('Level 15-4',)\n    public static readonly '16-1' = new SampleCourses('Level 16-1',)\n    public static readonly '16-2' = new SampleCourses('Level 16-2',)\n    public static readonly '16-3' = new SampleCourses('Level 16-3',)\n    public static readonly '16-4' = new SampleCourses('Level 16-4',)\n    public static readonly '17-1' = new SampleCourses('Level 17-1',)\n    public static readonly '17-2' = new SampleCourses('Level 17-2',)\n    public static readonly '17-3' = new SampleCourses('Level 17-3',)\n    public static readonly '17-4' = new SampleCourses('Level 17-4',)\n\n    //endregion -------------------- Enum instances --------------------\n    //region -------------------- Companion enum --------------------\n\n    public static readonly CompanionEnum: CompanionEnumSingleton<SampleCourses, typeof SampleCourses> = class CompanionEnum_SampleCourses\n        extends CompanionEnum<SampleCourses, typeof SampleCourses> {\n\n        //region -------------------- Singleton usage --------------------\n\n        static #instance?: CompanionEnum_SampleCourses\n\n        private constructor() {\n            super(SampleCourses,)\n        }\n\n        public static get get() {\n            return this.#instance ??= new CompanionEnum_SampleCourses()\n        }\n\n        //endregion -------------------- Singleton usage --------------------\n\n    }\n\n    //endregion -------------------- Companion enum --------------------\n    //region -------------------- Fields --------------------\n\n    static #REFERENCE_MAP?: ReadonlyMap<PossibleEnglishName, SampleCourse>\n\n    #reference?: SampleCourse\n\n    readonly #englishName\n\n    //endregion -------------------- Fields --------------------\n    //region -------------------- Constructor --------------------\n\n    public constructor(englishName: PossibleEnglishName,) {\n        super()\n        this.#englishName = new StringContainer(englishName,)\n    }\n\n    //endregion -------------------- Constructor --------------------\n    //region -------------------- Getter methods --------------------\n\n    public static get REFERENCE_MAP(): ReadonlyMap<PossibleEnglishName, SampleCourse> {\n        return this.#REFERENCE_MAP ??= SampleCourseLoader.get.load()\n    }\n\n    public get reference(): SampleCourse {\n        return this.#reference ??= SampleCourses.REFERENCE_MAP.get(this.englishName,)!\n    }\n\n\n    public get englishName(): PossibleEnglishName {\n        return this.#englishName.get\n    }\n\n    public get englishNameInHtml(): string {\n        return this.#englishName.getInHtml\n    }\n\n    //endregion -------------------- Getter methods --------------------\n    //region -------------------- Methods --------------------\n    //endregion -------------------- Methods --------------------\n\n}","import type {AppInterpreterWithTable} from 'app/interpreter/AppInterpreterWithTable'\nimport type {DimensionOnList}         from 'app/interpreter/DimensionOnList'\nimport type {PossibleRouteName}       from 'route/EveryRoutes.types'\n\nimport {SampleCourseAppOption}  from 'app/options/SampleCourseAppOption'\nimport {unfinishedText}         from 'app/tools/text/UnfinishedText'\nimport {AbstractTableApp}       from 'app/withInterpreter/AbstractTableApp'\nimport {OtherWordInTheGames}    from 'core/otherWordInTheGame/OtherWordInTheGames'\nimport {SampleCourses}          from 'core/sampleCourse/SampleCourses'\nimport {gameContentTranslation} from 'lang/components/translationMethods'\n\n//region -------------------- Deconstruction imports --------------------\n\nconst {COURSE,} = OtherWordInTheGames\n\n//endregion -------------------- Deconstruction imports --------------------\n\nexport default class SampleCourseApp\n    extends AbstractTableApp<SampleCourses, AppInterpreterWithTable<SampleCourses>> {\n\n    //region -------------------- Create methods --------------------\n\n    protected override _createKey(): string {\n        return 'sampleCourse'\n    }\n\n\n    protected override _createSimpleListRouteName(): PossibleRouteName {\n        return 'everySampleCourse (list)'\n    }\n\n    protected override _createCardListRouteName(): PossibleRouteName {\n        return 'everySampleCourse (card)'\n    }\n\n    protected override _createTableRouteName(): PossibleRouteName {\n        return 'everySampleCourse (table)'\n    }\n\n\n    protected override _createTitleContent(): ReactElementOrString {\n        const singularCourseName = COURSE.singularNameOnReferenceOrNull ?? unfinishedText(COURSE.singularEnglishName), singularCourseLowerCaseName = COURSE.singularLowerCaseNameOnReferenceOrNull ?? singularCourseName.toLowerCase()\n        return gameContentTranslation('sample course.all', {SingularName: singularCourseName, singularName: singularCourseLowerCaseName,},)\n    }\n\n\n    protected override _createAppOptionInterpreter() {\n        return new class SampleCourseInterpreter implements AppInterpreterWithTable<SampleCourses, SampleCourseAppOption> {\n\n            public get content() {\n                return SampleCourses.CompanionEnum.get.values.toArray()\n            }\n\n            //region -------------------- List interpreter --------------------\n\n            public createListDimension(): DimensionOnList {\n                return {\n                    default: 1,\n                    small: 2,\n                    medium: 4,\n                }\n            }\n\n            //endregion -------------------- List interpreter --------------------\n            //region -------------------- Card list interpreter --------------------\n\n            public createCardListDimension() {\n                return this.createListDimension()\n            }\n\n            public createCardListContent(enumerable: SampleCourses,) {\n                return <></>//TODO add card list content\n            }\n\n            //endregion -------------------- Card list interpreter --------------------\n            //region -------------------- Table interpreter --------------------\n\n            public readonly tableHeadersColor = 'info' satisfies BootstrapThemeColor\n            public readonly tableColor = 'primary' satisfies BootstrapThemeColor\n\n            public get tableCaption() {\n                const singularCourseName = COURSE.singularNameOnReferenceOrNull ?? unfinishedText(COURSE.singularEnglishName), singularCourseLowerCaseName = COURSE.singularLowerCaseNameOnReferenceOrNull ?? singularCourseName.toLowerCase()\n                return gameContentTranslation('sample course.all', {SingularName: singularCourseName, singularName: singularCourseLowerCaseName,},) satisfies ReactElementOrString\n            }\n\n            public get tableOptions(): readonly SampleCourseAppOption[] {\n                return [\n                    SampleCourseAppOption.NUMBER,\n                    SampleCourseAppOption.NAME,\n                    SampleCourseAppOption.GAME_STYLE_AND_AREAS,\n                    SampleCourseAppOption.TIME,\n                ]\n            }\n\n            public createTableContent(content: SampleCourses, option: SampleCourseAppOption,) {\n                return option.renderContent(content,)\n            }\n\n            public createTableHeader(option: SampleCourseAppOption,) {\n                return option.renderTableHeader()\n            }\n\n            //endregion -------------------- Table interpreter --------------------\n\n        }()\n    }\n\n    //endregion -------------------- Create methods --------------------\n\n}\n"],"names":["SampleCourseAppOption","Enum","constructor","super","renderContent","enumeration","this","_createContentOption","renderTableHeader","_createTableHeaderOption","NUMBER","_ref","reference","worldNumber","firstNumberInFirst10MarioChallenges","_jsx","className","children","_jsxs","key","element","UnfinishedText","ProjectLanguages","current","textInParentheses","unfinishedText","NAME","CommonOptions","get","getNameContent","nameHeader","GAME_STYLE_AND_AREAS","_ref2","themeInSubArea","gameStyle","renderSingleComponent","themeInMainArea","TIME","_ref3","amountOfTime","gameContentTranslation","CompanionEnum","_instance","_classPrivateFieldLooseKey","_class","_classPrivateFieldLoo","_classPrivateFieldLoo2","_classPrivateFieldLooseBase","Object","defineProperty","writable","value","_worldNumber","_firstNumberInFirst10MarioChallenges","_gameStyle","_themeInMainArea","_themeInSubArea","_amountOfTime","SampleCourseContainer","ClassContainingAName","name","_map","SampleCourseLoader","load","references","Map","index","file","length","content","set","concat","createReference","isInProduction","console","info","subArea","courseTheme_subArea","createNameFromContent","courseNumberInFirst10MarioChallenge","GameStyles","getValueByAcronym","Themes","getValueByName","courseTheme_mainArea","_REFERENCE_MAP","_reference","_englishName","SampleCourses","englishName","StringContainer","REFERENCE_MAP","_classPrivateFieldLoo3","_classPrivateFieldLoo4","englishNameInHtml","getInHtml","CompanionEnum_SampleCourses","_classPrivateFieldLoo5","_classPrivateFieldLoo6","COURSE","OtherWordInTheGames","SampleCourseApp","AbstractTableApp","_createKey","_createSimpleListRouteName","_createCardListRouteName","_createTableRouteName","_createTitleContent","_COURSE$singularNameO","_COURSE$singularLower","singularCourseName","singularNameOnReferenceOrNull","singularEnglishName","singularCourseLowerCaseName","singularLowerCaseNameOnReferenceOrNull","toLowerCase","SingularName","singularName","_createAppOptionInterpreter","tableHeadersColor","tableColor","values","toArray","createListDimension","default","small","medium","createCardListDimension","createCardListContent","enumerable","_Fragment","tableCaption","_COURSE$singularNameO2","_COURSE$singularLower2","tableOptions","createTableContent","option","createTableHeader"],"sourceRoot":""}