{"version":3,"file":"static/js/524.11560001.chunk.js","mappings":"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","sources":["app/tools/text/BooleanTextComponent.tsx","app/tools/text/BooleanResultTextComponent.tsx","app/tools/text/YesOrNoResultTextComponent.tsx","app/options/GameStyleAppOption.tsx","app/GameStyleApp.tsx","core/nightEffect/NightEffect.component.tsx"],"sourcesContent":["import type {BooleanTextProperties} from 'app/tools/text/properties/BooleanTextProperties'\n\nimport TextComponent from 'app/tools/text/TextComponent'\n\n/**\n * Create a simple {@link TextComponent}\n * with a variable value based on a simple boolean.\n * @reactComponent\n */\nexport default function BooleanTextComponent({boolean, true: _true, false: _false, ...otherProperties}: BooleanTextProperties,) {\n    return <TextComponent content={boolean ? _true : _false} {...otherProperties}/>\n}\n","import type {BooleanResultTextProperties, TextColor} from 'app/tools/text/properties/BooleanResultTextProperties'\n\nimport BooleanTextComponent from 'app/tools/text/BooleanTextComponent'\n\nconst TRUE_DEFAULT_COLOR: TextColor = 'text-success'\nconst FALSE_DEFAULT_COLOR: TextColor = 'text-danger'\n\n/**\n * Create a coloration based on the boolean value.\n *\n * Return a new {@link BooleanTextComponent}\n * with the classes \"text-success\" or \"text-danger\".\n * @reactComponent\n */\nexport default function BooleanResultTextComponent({boolean, classes, true: _true, false: _false, ...otherProperties}: BooleanResultTextProperties,) {\n    const [trueValue, trueColor,] = typeof _true == 'string' ? [_true, TRUE_DEFAULT_COLOR] : _true\n    const [falseValue, falseColor,] = typeof _false == 'string' ? [_false, FALSE_DEFAULT_COLOR] : _false\n\n    return <BooleanTextComponent classes={[...(classes ?? []), (boolean ? trueColor : falseColor)]} boolean={boolean} true={trueValue} false={falseValue} {...otherProperties}/>\n}\n","import './YesOrNoResultTextComponent.scss'\n\nimport type {TextColor}             from 'app/tools/text/properties/BooleanResultTextProperties'\nimport type {YesOrNoTextProperties} from 'app/tools/text/properties/YesOrNoTextProperties'\n\nimport BooleanResultTextComponent from 'app/tools/text/BooleanResultTextComponent'\nimport {contentTranslation}       from 'lang/components/translationMethods'\n\nconst YES_COLOR: TextColor = 'text-yes'\nconst NO_COLOR: TextColor = 'text-no'\n\n/**\n * Return a new {@link BooleanResultTextComponent} with a value based on the translation \"Yes\" or \"No\".\n *\n * @return {@link BooleanResultContainer}\n * @reactComponent\n */\nexport default function YesOrNoResultTextComponent(properties: YesOrNoTextProperties,): JSX.Element {\n    return <BooleanResultTextComponent\n        true={[contentTranslation('Yes'), YES_COLOR,]}\n        false={[contentTranslation('No'), NO_COLOR,]}\n        {...properties}\n    />\n}\n","import type {CollectionHolder, EnumerableConstructor, PossibleValueByEnumerable} from '@joookiwi/enumerable/dist/types'\nimport {Enum}                                                                    from '@joookiwi/enumerable'\n\nimport type {Names, Ordinals}                                  from 'app/options/GameStyleAppOption.types'\nimport type {AppOptionWithContent, PossibleRenderReactElement} from 'app/options/component/AppOptionWithContent'\nimport type {AppOptionWithTable}                               from 'app/options/component/AppOptionWithTable'\nimport type {SingleHeaderContent}                              from 'app/tools/table/SimpleHeader'\nimport type {GameStyles}                                       from 'core/gameStyle/GameStyles'\nimport type {ReactElement}                                     from 'util/react/ReactProperties'\nimport type {NullOr}                                           from 'util/types/nullable'\n\nimport {CommonOptions}                              from 'app/options/CommonOptions'\nimport {AppOptionWithContentComponent}              from 'app/options/component/AppOptionWithContent.component'\nimport {AppOptionWithTableComponent}                from 'app/options/component/AppOptionWithTable.component'\nimport {unfinishedText}                             from 'app/tools/text/UnfinishedText'\nimport YesOrNoResultTextComponent                   from 'app/tools/text/YesOrNoResultTextComponent'\nimport NightEffectComponent                         from 'core/nightEffect/NightEffect.component'\nimport {Themes}                                     from 'core/theme/Themes'\nimport {Times}                                      from 'core/time/Times'\nimport {ProjectLanguages}                           from 'lang/ProjectLanguages'\nimport {contentTranslation, gameContentTranslation} from 'lang/components/translationMethods'\n\nexport abstract class GameStyleAppOption\n    extends Enum<Ordinals, Names>\n    implements AppOptionWithContent, AppOptionWithTable {\n\n    //region -------------------- Enum instances --------------------\n\n    public static readonly IMAGE =             new class GameStyleAppOption_Images extends GameStyleAppOption {\n\n        protected override _createContentOption(enumeration: GameStyles,) {\n            return enumeration.renderSingleComponent\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {key: 'image', element: contentTranslation('Image'),}\n        }\n\n    }()\n    public static readonly NAME =              new class GameStyleAppOption_Name extends GameStyleAppOption {\n\n        protected override _createContentOption(enumeration: GameStyles,) {\n            return CommonOptions.get.getNameContent(enumeration)\n        }\n\n        protected override _createTableHeaderOption() {\n            return CommonOptions.get.nameHeader\n        }\n\n    }()\n    public static readonly GAME =              new class GameStyleAppOption_Game extends GameStyleAppOption {\n\n        protected override _createContentOption({reference,}: GameStyles,) {\n            return [\n                <YesOrNoResultTextComponent boolean={reference.isInSuperMarioMaker1}/>,\n                <YesOrNoResultTextComponent boolean={reference.isInSuperMarioMakerFor3DS}/>,\n                <YesOrNoResultTextComponent boolean={reference.isInSuperMarioMaker2}/>,\n            ]\n        }\n\n        protected override _createTableHeaderOption() {\n            return CommonOptions.get.gameHeaderWithAllGames\n        }\n\n    }()\n    public static readonly NIGHT_DESERT_WIND = new class GameStyleAppOption_NightDesertWind extends GameStyleAppOption {\n\n        protected override _createContentOption({reference,}: GameStyles,) {\n            return <NightEffectComponent gameStyle={reference}/>\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {\n                key: 'nightDesertWind',\n                element: <div className=\"night-desert-wind-effect-container\">{Themes.DESERT.renderSingleComponent(false)}{Times.NIGHT.renderSingleComponent}</div>,\n                tooltip: gameContentTranslation('Wind effect (night desert)', {\n                    night: unfinishedText('night'),//TODO add night reference\n                    desert: ProjectLanguages.current.get(Themes.DESERT.reference)!.toLowerCase(),\n                },),\n            }\n        }\n\n    }()\n\n    //endregion -------------------- Enum instances --------------------\n    //region -------------------- Enum fields --------------------\n\n    static [index: number]: GameStyleAppOption\n\n    //endregion -------------------- Enum fields --------------------\n    //region -------------------- Fields --------------------\n\n    /**\n     * The callback to get the enumeration based for each option.\n     *\n     * @note It should only be set by {@link GameStyleAppOption} and get by {@link EntityAppOption}.\n     */\n    public static CALLBACK_TO_GET_ENUMERATION: () => GameStyles\n\n    #appOptionWithContent?: AppOptionWithContent\n    #appOptionWithTable?: AppOptionWithTable\n\n    //endregion -------------------- Fields --------------------\n\n    private constructor() {\n        super()\n    }\n\n    //region -------------------- Getter methods --------------------\n    //endregion -------------------- Getter methods --------------------\n    //region -------------------- Methods --------------------\n\n    //region -------------------- App option - content --------------------\n\n    protected abstract _createContentOption(enumeration: GameStyles,): PossibleRenderReactElement\n\n    private get __appOptionWithContent(): AppOptionWithContent {\n        return this.#appOptionWithContent ??= new AppOptionWithContentComponent(() => this._createContentOption(GameStyleAppOption.CALLBACK_TO_GET_ENUMERATION()),)\n    }\n\n    public get renderContent(): readonly ReactElement[] {\n        return this.__appOptionWithContent.renderContent\n    }\n\n    //endregion -------------------- App option - content --------------------\n    //region -------------------- App option - table --------------------\n\n    protected abstract _createTableHeaderOption(): SingleHeaderContent\n\n    private get __appOptionWithTable(): AppOptionWithTable {\n        return this.#appOptionWithTable ??= new AppOptionWithTableComponent(() => this._createTableHeaderOption(),)\n    }\n\n    public get renderTableHeader(): NullOr<SingleHeaderContent> {\n        return this.__appOptionWithTable.renderTableHeader\n    }\n\n    //endregion -------------------- App option - table --------------------\n\n    //endregion -------------------- Methods --------------------\n    //region -------------------- Enum methods --------------------\n\n    protected override get _static(): EnumerableConstructor<Ordinals, Names> {\n        return GameStyleAppOption\n    }\n\n    public static getValue(value: PossibleValueByEnumerable<GameStyleAppOption>,): GameStyleAppOption {\n        return Enum.getValueOn(this, value,)\n    }\n\n    public static get values(): CollectionHolder<GameStyleAppOption> {\n        return Enum.getValuesOn(this,)\n    }\n\n    public static* [Symbol.iterator](): IterableIterator<GameStyleAppOption> {\n        yield* this.values\n    }\n\n    //endregion -------------------- Enum methods --------------------\n\n}\n","import './GameStyleApp.scss'\n\nimport type {CollectionHolder} from '@joookiwi/enumerable/dist/types'\n\nimport type {GameStyleProperties}                                  from 'app/AppProperties.types'\nimport type {AppInterpreterWithTable, SimplifiedTableProperties}   from 'app/interpreter/AppInterpreterWithTable'\nimport type {PossibleDimensionOnCardList, PossibleDimensionOnList} from 'app/interpreter/DimensionOnList'\nimport type {Games}                                                from 'core/game/Games'\nimport type {EveryPossibleRouteNames}                              from 'route/everyRoutes.types'\nimport type {ReactElementOrString}                                 from 'util/react/ReactProperties'\n\nimport {GameStyleAppOption}     from 'app/options/GameStyleAppOption'\nimport {AbstractTableApp}       from 'app/withInterpreter/AbstractTableApp'\nimport {GameStyles}             from 'core/gameStyle/GameStyles'\nimport {gameContentTranslation} from 'lang/components/translationMethods'\n\nexport default class GameStyleApp\n    extends AbstractTableApp<AppInterpreterWithTable<GameStyles, GameStyleAppOption>, GameStyleProperties> {\n\n    //region -------------------- Getter methods --------------------\n\n    /**\n     * Get the {@link GameStyles} that are in the {@link Games} received in the constructor\n     *\n     * @computedAtEachCall\n     */\n    public get gameStyles(): CollectionHolder<GameStyles> {\n        const games = this.props.games\n        return GameStyles.values.filter(({reference,}) => games.find((it: Games) => it.get(reference)) != null)\n    }\n\n    //endregion -------------------- Getter methods --------------------\n    //region -------------------- Create methods --------------------\n\n    protected override _createKey(): string {\n        return 'gameStyle'\n    }\n\n\n    protected override _createSimpleListRouteName(): EveryPossibleRouteNames {\n        return 'everyGameStyle (list)'\n    }\n\n    protected override _createCardListRouteName(): EveryPossibleRouteNames {\n        return 'everyGameStyle (card)'\n    }\n\n    protected override _createTableRouteName(): EveryPossibleRouteNames {\n        return 'everyGameStyle (table)'\n    }\n\n\n    protected override _createTitleContent(): ReactElementOrString {\n        return gameContentTranslation('game style.all')\n    }\n\n    protected override _createAppOptionInterpreter(): AppInterpreterWithTable<GameStyles, GameStyleAppOption> {\n        const $this = this\n        return new class implements AppInterpreterWithTable<GameStyles, GameStyleAppOption> {\n\n            public get iterable() {\n                return $this.gameStyles[Symbol.iterator]()\n            }\n\n            //region -------------------- List interpreter --------------------\n\n            public createListDimension(): PossibleDimensionOnList {\n                return {\n                    small: 6,\n                    medium: 4,\n                    large: null,\n                }\n            }\n\n            //endregion -------------------- List interpreter --------------------\n            //region -------------------- Card list interpreter --------------------\n\n            public createCardListDimension(): PossibleDimensionOnCardList {\n                return 'list'\n            }\n\n            public createCardListContent(enumerable: GameStyles,) {\n                return <div className=\"card-body\" id={`gameStyle-${enumerable.englishNameInHtml}`}>\n                    {enumerable.renderSingleComponent}\n                </div>\n            }\n\n            //endregion -------------------- Card list interpreter --------------------\n\n            public set callbackToGetEnumerable(value: () => GameStyles,) {\n                GameStyleAppOption.CALLBACK_TO_GET_ENUMERATION = value\n            }\n\n            public get tableOptions(): readonly GameStyleAppOption[] {\n                return [\n                    GameStyleAppOption.IMAGE,\n                    GameStyleAppOption.NAME,\n                    GameStyleAppOption.GAME,\n                    GameStyleAppOption.NIGHT_DESERT_WIND,\n                ]\n            }\n\n            public get tableProperties(): SimplifiedTableProperties {\n                return {\n                    caption: gameContentTranslation('game style.all'),\n                }\n            }\n\n\n            public createTableContent(option: GameStyleAppOption,) {\n                return option.renderContent\n            }\n\n            public createTableHeader(option: GameStyleAppOption,) {\n                return option.renderTableHeader\n            }\n\n        }()\n    }\n\n    //endregion -------------------- Create methods --------------------\n\n}\n","import type {GameStyle}       from 'core/gameStyle/GameStyle'\nimport type {CourseTheme}     from 'core/theme/CourseTheme'\nimport type {ReactProperties} from 'util/react/ReactProperties'\n\nimport {gameContentTranslation} from 'lang/components/translationMethods'\n\ninterface NightEffectComponentProperties_GameStyle\n    extends ReactProperties {\n\n    gameStyle: GameStyle\n\n}\n\ninterface NightEffectComponentProperties_Theme\n    extends ReactProperties {\n\n    theme: CourseTheme\n\n}\n\n/**\n * @param properties\n * @reactComponent\n */\nexport default function NightEffectComponent(properties: | NightEffectComponentProperties_GameStyle | NightEffectComponentProperties_Theme,) {\n    return 'gameStyle' in properties\n        ? <NightEffectByGameStyle {...properties}/>\n        : <NightEffectByTheme {...properties}/>\n}\n\nfunction NightEffectByGameStyle({gameStyle: {nightDesertWindTranslationKey: translationKey,},}: NightEffectComponentProperties_GameStyle,) {\n    return translationKey == null ? null : <>{gameContentTranslation(`nightEffect.nightDesertWindEffect.${translationKey}`)}</>\n}\n\nfunction NightEffectByTheme({theme: {effect,},}: NightEffectComponentProperties_Theme,) {\n    return effect?.createNewComponent ?? null\n}\n"],"names":["BooleanTextComponent","_ref","boolean","_true","true","_false","false","otherProperties","_objectWithoutProperties","_excluded","_jsx","TextComponent","_objectSpread","content","TRUE_DEFAULT_COLOR","FALSE_DEFAULT_COLOR","BooleanResultTextComponent","classes","_ref2","_ref3","_slicedToArray","trueValue","trueColor","_ref4","_ref5","falseValue","falseColor","concat","_toConsumableArray","YesOrNoResultTextComponent","properties","contentTranslation","_appOptionWithContent","_classPrivateFieldLooseKey","_appOptionWithTable","_Symbol$iterator","Symbol","iterator","GameStyleAppOption","_inherits","_super","_createSuper","_this","_classCallCheck","call","Object","defineProperty","_assertThisInitialized","writable","value","_createClass","key","get","_classPrivateFieldLoo","_classPrivateFieldLoo2","_this2","_classPrivateFieldLooseBase","this","AppOptionWithContentComponent","_createContentOption","CALLBACK_TO_GET_ENUMERATION","__appOptionWithContent","renderContent","_classPrivateFieldLoo3","_classPrivateFieldLoo4","_this3","AppOptionWithTableComponent","_createTableHeaderOption","__appOptionWithTable","renderTableHeader","Enum","getValueOn","getValuesOn","_regeneratorRuntime","mark","wrap","_context","prev","next","delegateYield","values","stop","IMAGE","_GameStyleAppOption","GameStyleAppOption_Images","_super2","apply","arguments","enumeration","renderSingleComponent","element","NAME","_GameStyleAppOption2","GameStyleAppOption_Name","_super3","CommonOptions","getNameContent","nameHeader","GAME","_GameStyleAppOption3","GameStyleAppOption_Game","_super4","reference","isInSuperMarioMaker1","isInSuperMarioMakerFor3DS","isInSuperMarioMaker2","gameHeaderWithAllGames","NIGHT_DESERT_WIND","_GameStyleAppOption4","GameStyleAppOption_NightDesertWind","_super5","NightEffectComponent","gameStyle","_jsxs","className","children","Themes","DESERT","Times","NIGHT","tooltip","gameContentTranslation","night","unfinishedText","desert","ProjectLanguages","current","toLowerCase","GameStyleApp","_AbstractTableApp","games","props","GameStyles","filter","find","it","$this","_class","gameStyles","small","medium","large","enumerable","id","englishNameInHtml","set","caption","option","AbstractTableApp","NightEffectByGameStyle","NightEffectByTheme","translationKey","nightDesertWindTranslationKey","_Fragment","_effect$createNewComp","effect","theme","createNewComponent"],"sourceRoot":""}