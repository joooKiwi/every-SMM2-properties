{"version":3,"file":"static/js/993.099e3822.chunk.js","mappings":"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","sources":["app/util/PageProgress.tsx","lang/name/SimpleName.container.ts","lang/name/SimpleName.builder.ts","external/WikiLinks.ts","app/HomeApp.tsx"],"sourcesContent":["import './PageProgress.scss'\n\nimport {Link} from 'react-router-dom'\n\nimport type {EveryPossibleRoutes} from 'route/EveryRoutes.types'\nimport type {ReactProperties}     from 'util/react/ReactProperties'\n\nimport {ProjectLanguages}   from 'lang/ProjectLanguages'\nimport {contentTranslation} from 'lang/components/translationMethods'\n\ninterface PageProgressProperties\n    extends ReactProperties {\n\n    readonly progress: PageProgressType\n\n    readonly link?: EveryPossibleRoutes\n\n    readonly content: string\n\n    readonly exclusiveGame?: | 'SMM1' | 'SMM2' | 'SMM3DS'\n\n}\n\n\ntype PageProgressType = | 'completed' | 'page almost done' | 'page in progress'\n                        | 'data in progress' | 'data done'\n                        | 'not created'\n\n/**\n * A single text container to display some progress over the content received\n * (and possibly add a link to the content)\n *\n * @reactComponent\n * @see TextComponent\n */\nexport default function PageProgress({progress, link, content, exclusiveGame,}: PageProgressProperties,) {\n    const currentLanguage = ProjectLanguages.current\n    const exclusiveGameComponent = exclusiveGame == null ? null : <sup className=\"fst-italic text-dark text-opacity-25\">{currentLanguage.space}{currentLanguage.textInParentheses(exclusiveGame)}</sup>\n\n    return <div className=\"pageProgress-container\">\n        {createPageProgressType(progress)}\n        {link == null\n            ? <span>{content}{exclusiveGameComponent}</span>\n            : <Link to={link} className=\"link-info\">{content}{exclusiveGameComponent}</Link>}\n    </div>\n}\n\nfunction createPageProgressType(type: PageProgressType,) {\n    switch (type) {\n        case 'completed':\n            return <small className=\"pageProgress pageProgress-completed d-block text-center text-light bg-green-teal rounded px-1 me-1\">{contentTranslation('home.progress.Completed')}</small>\n        case 'page almost done':\n            return <small className=\"pageProgress pageProgress-pageAlmostDone d-block text-center text-light bg-green-yellow rounded px-1 me-1\">{contentTranslation('home.progress.Page almost done')}</small>\n        case 'page in progress':\n            return <small className=\"pageProgress pageProgress-pageInProgress d-block text-center bg-yellow-orange rounded px-1 me-1\">{contentTranslation('home.progress.Page in progress')}</small>\n        case 'data done':\n            return <small className=\"pageProgress pageProgress-dataDone d-block text-center bg-orange-yellow rounded px-1 me-1\">{contentTranslation('home.progress.Data done')}</small>\n        case 'data in progress':\n            return <small className=\"pageProgress pageProgress-dataInProgress d-block text-center text-light bg-red-orange rounded px-1 me-1\">{contentTranslation('home.progress.Data in progress')}</small>\n        case 'not created':\n            return <small className=\"pageProgress pageProgress-notCreated d-block text-center text-light bg-red-pink rounded px-1 me-1\">{contentTranslation('home.progress.Not created')}</small>\n    }\n}\n","import type {EmptyableOptionalLanguage}                                                                                                                         from 'lang/name/containers/EmptyableOptionalLanguage'\nimport type {EmptyableLanguage}                                                                                                                                 from 'lang/name/containers/EmptyableLanguage'\nimport type {AmericanOrEuropeanArray, AmericanOrEuropeanOriginal, CanadianOrEuropeanArray, CanadianOrEuropeanOriginal, ChineseArray, ChineseOriginal, Language} from 'lang/name/containers/Language'\nimport type {OptionalLanguage}                                                                                                                                  from 'lang/name/containers/OptionalLanguage'\n\nimport {EveryLanguages}                   from 'lang/EveryLanguages'\nimport {ProjectLanguages}                 from 'lang/ProjectLanguages'\nimport {newLanguage, newOptionalLanguage} from 'lang/name/containers/Language.provider'\n\n//region -------------------- Import from deconstruction --------------------\n\nconst {ENGLISH, FRENCH, GERMAN, SPANISH, ITALIAN, DUTCH, PORTUGUESE, RUSSIAN, JAPANESE, CHINESE, KOREAN, HEBREW, POLISH, UKRAINIAN, GREEK,} = EveryLanguages\n\n//endregion -------------------- Import from deconstruction --------------------\n\n//TODO make this class the base parent or another one to remove the duplicate code\nexport class SimpleNameContainer<T extends NonNullable<unknown>,> {\n\n    //region -------------------- Fields --------------------\n\n    public static readonly OPTIONAL_LANGUAGES = [HEBREW, POLISH, UKRAINIAN, GREEK,] as const\n\n    readonly #originalLanguages: readonly EveryLanguages[]\n    #map?: Map<EveryLanguages, T>\n\n    readonly #englishContainer: Language<T, T, AmericanOrEuropeanArray<T>>\n    readonly #frenchContainer: EmptyableLanguage<T, T, CanadianOrEuropeanArray<T>>\n    readonly #germanContainer: EmptyableLanguage<T, T, never>\n    readonly #spanishContainer: EmptyableLanguage<T, T, AmericanOrEuropeanArray<T>>\n    readonly #italianContainer: EmptyableLanguage<T, T, never>\n    readonly #dutchContainer: EmptyableLanguage<T, T, never>\n    readonly #portugueseContainer: EmptyableLanguage<T, T, AmericanOrEuropeanArray<T>>\n    readonly #russianContainer: EmptyableLanguage<T, T, never>\n    readonly #japaneseContainer: EmptyableLanguage<T, T, never>\n    readonly #chineseContainer: EmptyableLanguage<T, T, ChineseArray<T>>\n    readonly #koreanContainer: EmptyableLanguage<T, T, never>\n    readonly #hebrewContainer: EmptyableOptionalLanguage<T, T, never>\n    readonly #polishContainer: EmptyableOptionalLanguage<T, T, never>\n    readonly #ukrainianContainer: EmptyableOptionalLanguage<T, T, never>\n    readonly #greekContainer: EmptyableOptionalLanguage<T, T, never>\n\n    //endregion -------------------- Fields --------------------\n    //region -------------------- Constructor --------------------\n\n    public constructor(english: AmericanOrEuropeanOriginal<T>,\n                       french: Nullable<CanadianOrEuropeanOriginal<T>>,\n                       german: Nullable<T>,\n                       spanish: Nullable<AmericanOrEuropeanOriginal<T>>,\n                       italian: Nullable<T>,\n                       dutch: Nullable<T>,\n                       portuguese: Nullable<AmericanOrEuropeanOriginal<T>>,\n                       russian: Nullable<T>,\n                       japanese: Nullable<T>,\n                       chinese: Nullable<ChineseOriginal<T>>,\n                       korean: Nullable<T>,\n                       hebrew: Nullable<T>,\n                       polish: Nullable<T>,\n                       ukrainian: Nullable<T>,\n                       greek: Nullable<T>,) {\n        const originalLanguages: EveryLanguages[] = []\n\n        this.#englishContainer = SimpleNameContainer.#newLanguageContainer<T, T, AmericanOrEuropeanArray<T>>(ENGLISH, originalLanguages, english,)\n        this.#frenchContainer = SimpleNameContainer.#newLanguageContainer<T, T, CanadianOrEuropeanArray<T>>(FRENCH, originalLanguages, french,)\n        this.#germanContainer = SimpleNameContainer.#newLanguageContainer<T, T>(GERMAN, originalLanguages, german,)\n        this.#spanishContainer = SimpleNameContainer.#newLanguageContainer<T, T, AmericanOrEuropeanArray<T>>(SPANISH, originalLanguages, spanish,)\n        this.#italianContainer = SimpleNameContainer.#newLanguageContainer<T, T>(ITALIAN, originalLanguages, italian,)\n        this.#dutchContainer = SimpleNameContainer.#newLanguageContainer<T, T>(DUTCH, originalLanguages, dutch,)\n        this.#portugueseContainer = SimpleNameContainer.#newLanguageContainer<T, T, AmericanOrEuropeanArray<T>>(PORTUGUESE, originalLanguages, portuguese,)\n        this.#russianContainer = SimpleNameContainer.#newLanguageContainer<T, T>(RUSSIAN, originalLanguages, russian,)\n        this.#japaneseContainer = SimpleNameContainer.#newLanguageContainer<T, T>(JAPANESE, originalLanguages, japanese,)\n        this.#chineseContainer = SimpleNameContainer.#newLanguageContainer<T, T, ChineseArray<T>>(CHINESE, originalLanguages, chinese,)\n        this.#koreanContainer = SimpleNameContainer.#newLanguageContainer<T, T>(KOREAN, originalLanguages, korean,)\n        this.#hebrewContainer = SimpleNameContainer.#newLanguageContainer<T, T>(HEBREW, originalLanguages, hebrew,)\n        this.#polishContainer = SimpleNameContainer.#newLanguageContainer<T, T>(POLISH, originalLanguages, polish,)\n        this.#ukrainianContainer = SimpleNameContainer.#newLanguageContainer<T, T>(UKRAINIAN, originalLanguages, ukrainian,)\n        this.#greekContainer = SimpleNameContainer.#newLanguageContainer<T, T>(GREEK, originalLanguages, greek,)\n\n        this.#originalLanguages = originalLanguages\n    }\n\n    //endregion -------------------- Constructor --------------------\n    //region -------------------- Getter methods --------------------\n\n    public get languageValue(): NonNullable<T> {\n        // @ts-ignore: FIXME Support this implementation for the Languages\n        return ProjectLanguages.current.get<T>(this) ?? this.english\n    }\n\n    //region -------------------- English properties --------------------\n\n    public get originalEnglish(): AmericanOrEuropeanOriginal<T> {\n        return this.#englishContainer.original\n    }\n\n    public get english(): T {\n        return this.#englishContainer.get()\n    }\n\n    public get americanEnglish(): T {\n        return this.#englishContainer.get(0)\n    }\n\n    public get europeanEnglish(): T {\n        return this.#englishContainer.get(1)\n    }\n\n    //endregion -------------------- English properties --------------------\n    //region -------------------- French properties --------------------\n\n    public get originalFrench(): NullOr<CanadianOrEuropeanOriginal<T>> {\n        return this.#frenchContainer.original\n    }\n\n    public get french(): NullOr<T> {\n        return this.#frenchContainer.get()\n    }\n\n    public get canadianFrench(): NullOr<T> {\n        return this.#frenchContainer.get(0)\n    }\n\n    public get europeanFrench(): NullOr<T> {\n        return this.#frenchContainer.get(1)\n    }\n\n    //endregion -------------------- French properties --------------------\n    //region -------------------- German properties --------------------\n\n    public get german(): NullOr<T> {\n        return this.#germanContainer.original\n    }\n\n    //endregion -------------------- German properties --------------------\n    //region -------------------- Spanish properties --------------------\n\n    public get originalSpanish(): NullOr<AmericanOrEuropeanOriginal<T>> {\n        return this.#spanishContainer.original\n    }\n\n    public get spanish(): NullOr<T> {\n        return this.#spanishContainer.get()\n    }\n\n    public get americanSpanish(): NullOr<T> {\n        return this.#spanishContainer.get(0)\n    }\n\n    public get europeanSpanish(): NullOr<T> {\n        return this.#spanishContainer.get(1)\n    }\n\n    //endregion -------------------- Spanish properties --------------------\n    //region -------------------- Italian properties --------------------\n\n    public get italian(): NullOr<T> {\n        return this.#italianContainer.original\n    }\n\n    //endregion -------------------- Italian properties --------------------\n    //region -------------------- Dutch properties --------------------\n\n    public get dutch(): NullOr<T> {\n        return this.#dutchContainer.original\n    }\n\n    //endregion -------------------- Dutch properties --------------------\n    //region -------------------- Portuguese properties --------------------\n\n    public get originalPortuguese(): NullOr<AmericanOrEuropeanOriginal<T>> {\n        return this.#portugueseContainer.original\n    }\n\n    public get portuguese(): NullOr<T> {\n        return this.#portugueseContainer.get()\n    }\n\n    public get americanPortuguese(): NullOr<T> {\n        return this.#portugueseContainer.get(0)\n    }\n\n    public get europeanPortuguese(): NullOr<T> {\n        return this.#portugueseContainer.get(1)\n    }\n\n    //endregion -------------------- Portuguese properties --------------------\n    //region -------------------- Russian properties --------------------\n\n    public get russian(): NullOr<T> {\n        return this.#russianContainer.original\n    }\n\n    //endregion -------------------- Russian properties --------------------\n    //region -------------------- Japanese properties --------------------\n\n    public get japanese(): NullOr<T> {\n        return this.#japaneseContainer.original\n    }\n\n    //endregion -------------------- Japanese properties --------------------\n    //region -------------------- Chinese properties --------------------\n\n    public get originalChinese(): NullOr<ChineseOriginal<T>> {\n        return this.#chineseContainer.original\n    }\n\n    public get chinese(): NullOr<T> {\n        return this.#chineseContainer.get()\n    }\n\n    public get traditionalChinese(): NullOr<T> {\n        return this.#chineseContainer.get(1)\n    }\n\n    public get simplifiedChinese(): NullOr<T> {\n        return this.#chineseContainer.get(0)\n    }\n\n    //endregion -------------------- Chinese properties --------------------\n    //region -------------------- Korean properties --------------------\n\n    public get korean(): NullOr<T> {\n        return this.#koreanContainer.original\n    }\n\n    //endregion -------------------- Korean properties --------------------\n    //region -------------------- Hebrew properties --------------------\n\n    public get isHebrewUsed(): boolean {\n        return this.#hebrewContainer.isUsed\n    }\n\n    public get hebrew(): NullOr<T> {\n        return this.#hebrewContainer.original\n    }\n\n    //endregion -------------------- Hebrew properties --------------------\n    //region -------------------- Polish properties --------------------\n\n    public get isPolishUsed(): boolean {\n        return this.#polishContainer.isUsed\n    }\n\n    public get polish(): NullOr<T> {\n        return this.#polishContainer.original\n    }\n\n    //endregion -------------------- Polish properties --------------------\n    //region -------------------- Ukrainian properties --------------------\n\n    public get isUkrainianUsed(): boolean {\n        return this.#ukrainianContainer.isUsed\n    }\n\n    public get ukrainian(): NullOr<T> {\n        return this.#ukrainianContainer.original\n    }\n\n    //endregion -------------------- Ukrainian properties --------------------\n    //region -------------------- Greek properties --------------------\n\n    public get isGreekUsed(): boolean {\n        return this.#greekContainer.isUsed\n    }\n\n    public get greek(): NullOr<T> {\n        return this.#greekContainer.original\n    }\n\n    //endregion -------------------- Greek properties --------------------\n\n    public get originalLanguages(): readonly EveryLanguages[] {\n        return this.#originalLanguages\n    }\n\n    //endregion -------------------- Getter methods --------------------\n    //region -------------------- Convertor methods --------------------\n\n    public toNameMap(): ReadonlyMap<EveryLanguages, T> {\n        return this.#map ??= new Map(this.originalLanguages.map(language => [language, language.get(this)!,]))\n    }\n\n    //endregion -------------------- Convertor methods --------------------\n\n    static #newLanguageContainer<T, S extends T, >(language: OptionalLanguages, originalLanguages: EveryLanguages[], value: S,): EmptyableOptionalLanguage<T, S, never>\n    static #newLanguageContainer<T, S extends T, >(language: OptionalLanguages, originalLanguages: EveryLanguages[], value: Nullable<S>,): OptionalLanguage<T, S, never>\n    static #newLanguageContainer<T, S extends T, >(language: EveryLanguages, originalLanguages: EveryLanguages[], value: | S,): EmptyableLanguage<T, S, never>\n    static #newLanguageContainer<T, S extends T, >(language: EveryLanguages, originalLanguages: EveryLanguages[], value: Nullable<S>,): Language<T, S, never>\n    static #newLanguageContainer<T, S extends T, A extends readonly T[], >(language: OptionalLanguages, originalLanguages: EveryLanguages[], value: | S | A,): OptionalLanguage<T, S, A>\n    static #newLanguageContainer<T, S extends T, A extends readonly T[], >(language: OptionalLanguages, originalLanguages: EveryLanguages[], value: Nullable<| S | A>,): EmptyableOptionalLanguage<T, S, A>\n    static #newLanguageContainer<T, S extends T, A extends readonly T[], >(language: EveryLanguages, originalLanguages: EveryLanguages[], value: Nullable<| S | A>,): Language<T, S, A>\n    static #newLanguageContainer<T, S extends T, A extends readonly T[], >(language: EveryLanguages, originalLanguages: EveryLanguages[], value: | S | A,): EmptyableLanguage<T, S, A>\n    static #newLanguageContainer<T, >(language: EveryLanguages, originalLanguages: EveryLanguages[], value: Nullable<| T | readonly T[]>,) {\n        const languageContainer = (SimpleNameContainer.OPTIONAL_LANGUAGES as readonly EveryLanguages[]).includes(language) ? newOptionalLanguage(value,) : newLanguage(value,)\n        const isValueArray = value instanceof Array\n\n        switch (language) {\n            case ENGLISH:\n            case FRENCH:\n            case SPANISH:\n            case CHINESE:\n            case PORTUGUESE:\n                if (isValueArray)\n                    originalLanguages.push(...language.children)\n                else\n                    originalLanguages.push(language)\n                break\n            case HEBREW:\n            case POLISH:\n            case UKRAINIAN:\n            case GREEK:\n                if ((languageContainer as OptionalLanguage<T>).isUsed)\n                    originalLanguages.push(language)\n                break\n            default:\n                originalLanguages.push(language)\n        }\n\n        return languageContainer\n    }\n\n}\n\ntype OptionalLanguages = typeof SimpleNameContainer['OPTIONAL_LANGUAGES'][number]\n","import type {AmericanOrEuropeanOriginal, CanadianOrEuropeanOriginal, ChineseOriginal} from 'lang/name/containers/Language'\nimport type {Builder}                                                                 from 'util/builder/Builder'\n\nimport {SimpleNameContainer} from 'lang/name/SimpleName.container'\nimport {assert}              from 'util/utilitiesMethods'\n\nexport class SimpleNameBuilder<T extends NonNullable<unknown>, >\n    implements Builder<SimpleNameContainer<T>> {\n\n    //region -------------------- Fields --------------------\n\n    #english?: NullOr<AmericanOrEuropeanOriginal<T>>\n    #french?: NullOr<CanadianOrEuropeanOriginal<T>>\n    #german?: NullOr<T>\n    #spanish?: NullOr<AmericanOrEuropeanOriginal<T>>\n    #italian?: NullOr<T>\n    #dutch?: NullOr<T>\n    #portuguese?: NullOr<AmericanOrEuropeanOriginal<T>>\n    #russian?: NullOr<T>\n    #japanese?: NullOr<T>\n    #chinese?: NullOr<ChineseOriginal<T>>\n    #korean?: NullOr<T>\n    #hebrew?: NullOr<T>\n    #polish?: NullOr<T>\n    #ukrainian?: NullOr<T>\n    #greek?: NullOr<T>\n\n    //endregion -------------------- Fields --------------------\n    //region -------------------- Getter & setter methods --------------------\n\n    //region -------------------- English getter & setter methods --------------------\n\n    public get english(): NullOr<AmericanOrEuropeanOriginal<T>> {\n        return this.#english ?? null\n    }\n\n    public setEnglish(value: Nullable<AmericanOrEuropeanOriginal<T>>,): this {\n        this.#english = value ?? null\n        return this\n    }\n\n    //endregion -------------------- English getter & setter methods --------------------\n    //region -------------------- French getter & setter methods --------------------\n\n    public get french(): NullOr<CanadianOrEuropeanOriginal<T>> {\n        return this.#french ?? null\n    }\n\n    public setFrench(value: Nullable<CanadianOrEuropeanOriginal<T>>,): this {\n        this.#french = value ?? null\n        return this\n    }\n\n    //endregion -------------------- French getter & setter methods --------------------\n    //region -------------------- German getter & setter methods --------------------\n\n    public get german(): NullOr<T> {\n        return this.#german ?? null\n    }\n\n    public setGerman(value: Nullable<T>,): this {\n        this.#german = value ?? null\n        return this\n    }\n\n    //endregion -------------------- German getter & setter methods --------------------\n    //region -------------------- Spanish getter & setter methods --------------------\n\n    public get spanish(): NullOr<AmericanOrEuropeanOriginal<T>> {\n        return this.#spanish ?? null\n    }\n\n    public setSpanish(value: Nullable<AmericanOrEuropeanOriginal<T>>,): this {\n        this.#spanish = value ?? null\n        return this\n    }\n\n    //endregion -------------------- Spanish getter & setter methods --------------------\n    //region -------------------- Italian getter & setter methods --------------------\n\n    public get italian(): NullOr<T> {\n        return this.#italian ?? null\n    }\n\n    public setItalian(value: Nullable<T>,): this {\n        this.#italian = value ?? null\n        return this\n    }\n\n    //endregion -------------------- Italian getter & setter methods --------------------\n    //region -------------------- Dutch getter & setter methods --------------------\n\n    public get dutch(): NullOr<T> {\n        return this.#dutch ?? null\n    }\n\n    public setDutch(value: Nullable<T>,): this {\n        this.#dutch = value ?? null\n        return this\n    }\n\n    //endregion -------------------- Dutch getter & setter methods --------------------\n    //region -------------------- Portuguese getter & setter methods --------------------\n\n    public get portuguese(): NullOr<AmericanOrEuropeanOriginal<T>> {\n        return this.#portuguese ?? null\n    }\n\n    public setPortuguese(value: Nullable<AmericanOrEuropeanOriginal<T>>,): this {\n        this.#portuguese = value ?? null\n        return this\n    }\n\n    //endregion -------------------- Portuguese getter & setter methods --------------------\n    //region -------------------- Russian getter & setter methods --------------------\n\n    public get russian(): NullOr<T> {\n        return this.#russian ?? null\n    }\n\n    public setRussian(value: Nullable<T>,): this {\n        this.#russian = value ?? null\n        return this\n    }\n\n    //endregion -------------------- Russian getter & setter methods --------------------\n    //region -------------------- Japanese getter & setter methods --------------------\n\n    public get japanese(): NullOr<T> {\n        return this.#japanese ?? null\n    }\n\n    public setJapanese(value: Nullable<T>,): this {\n        this.#japanese = value ?? null\n        return this\n    }\n\n    //endregion -------------------- Japanese getter & setter methods --------------------\n    //region -------------------- Chinese getter & setter methods --------------------\n\n    public get chinese(): NullOr<ChineseOriginal<T>> {\n        return this.#chinese ?? null\n    }\n\n    public setChinese(value: Nullable<ChineseOriginal<T>>,): this {\n        this.#chinese = value ?? null\n        return this\n    }\n\n    //endregion -------------------- Chinese getter & setter methods --------------------\n    //region -------------------- Korean getter & setter methods --------------------\n\n    public get korean(): NullOr<T> {\n        return this.#korean ?? null\n    }\n\n    public setKorean(value: Nullable<T>,): this {\n        this.#korean = value ?? null\n        return this\n    }\n\n    //endregion -------------------- Korean getter & setter methods --------------------\n    //region -------------------- Hebrew getter & setter methods --------------------\n\n    public get hebrew(): NullOr<T> {\n        return this.#hebrew ?? null\n    }\n\n    public setHebrew(value: Nullable<T>,): this {\n        this.#hebrew = value ?? null\n        return this\n    }\n\n    //endregion -------------------- Hebrew getter & setter methods --------------------\n    //region -------------------- Polish getter & setter methods --------------------\n\n    public get polish(): NullOr<T> {\n        return this.#polish ?? null\n    }\n\n    public setPolish(value: Nullable<T>,): this {\n        this.#polish = value ?? null\n        return this\n    }\n\n    //endregion -------------------- Polish getter & setter methods --------------------\n    //region -------------------- Ukrainian getter & setter methods --------------------\n\n    public get ukrainian(): NullOr<T> {\n        return this.#ukrainian ?? null\n    }\n\n    public setUkrainian(value: Nullable<T>,): this {\n        this.#ukrainian = value ?? null\n        return this\n    }\n\n    //endregion -------------------- Ukrainian getter & setter methods --------------------\n    //region -------------------- Greek getter & setter methods --------------------\n\n    public get greek(): NullOr<T> {\n        return this.#greek ?? null\n    }\n\n    public setGreek(value: Nullable<T>,): this {\n        this.#greek = value ?? null\n        return this\n    }\n\n    //endregion -------------------- Greek getter & setter methods --------------------\n\n    //endregion -------------------- Getter & setter methods --------------------\n\n    public build(): SimpleNameContainer<T> {\n        const {english,} = this\n        assert(english != null, 'The english reference has not been initialized.',)\n\n        return new SimpleNameContainer(\n            english,\n            this.french,\n            this.german,\n            this.spanish,\n            this.italian,\n            this.dutch,\n            this.portuguese,\n            this.russian,\n            this.japanese,\n            this.chinese,\n            this.korean,\n            this.hebrew,\n            this.polish,\n            this.ukrainian,\n            this.greek,\n        )\n    }\n}\n","import type {GameStructure} from 'core/game/GameStructure'\n\nimport {SimpleNameBuilder} from 'lang/name/SimpleName.builder'\n\ntype MarioWikiLinkOnSMM1 = `${MarioWikiStartingUrl}.${MarioKiwiDomain}/Super_Mario_Maker`\ntype MarioWikiLinkOnSMM3DS = `${MarioWikiStartingUrl}.${Exclude<MarioKiwiDomain, 'net'>}/Super_Mario_Maker_for_Nintendo_3DS` | null\ntype MarioWikiLinkOnSMM2 = `${MarioWikiStartingUrl}.${MarioKiwiDomain}/Super_Mario_Maker_2`\ntype MarioWikiStartingUrl = 'https://www.mariowiki'\ntype MarioKiwiDomain = | 'com' | 'net' | 'it'\nexport const SUPER_MARIO_WIKI_LINK = new SimpleNameBuilder<GameStructure<MarioWikiLinkOnSMM1, MarioWikiLinkOnSMM3DS, MarioWikiLinkOnSMM2>>()\n    .setEnglish({superMarioMaker: 'https://www.mariowiki.com/Super_Mario_Maker', superMarioMakerForNintendo3DS: 'https://www.mariowiki.com/Super_Mario_Maker_for_Nintendo_3DS', superMarioMaker2: 'https://www.mariowiki.com/Super_Mario_Maker_2',},)\n    .setGerman({superMarioMaker: 'https://www.mariowiki.net/Super_Mario_Maker', superMarioMakerForNintendo3DS: null, superMarioMaker2: 'https://www.mariowiki.net/Super_Mario_Maker_2',},)\n    .setItalian({superMarioMaker: 'https://www.mariowiki.it/Super_Mario_Maker', superMarioMakerForNintendo3DS: 'https://www.mariowiki.it/Super_Mario_Maker_for_Nintendo_3DS', superMarioMaker2: 'https://www.mariowiki.it/Super_Mario_Maker_2',},)\n    .build()\n\n\ntype MarioWikiFandomOnSMM1 = 'https://supermariomaker.fandom.com'\ntype MarioWikiFandomOnSMM3DS = null\ntype MarioWikiFandomOnSMM2 = 'https://supermariomaker2.fandom.com'\nexport const MARIO_MAKER_2_WIKI_FANDOM_LINK: GameStructure<MarioWikiFandomOnSMM1, MarioWikiFandomOnSMM3DS, MarioWikiFandomOnSMM2> =\n    {superMarioMaker: 'https://supermariomaker.fandom.com', superMarioMakerForNintendo3DS: null, superMarioMaker2: 'https://supermariomaker2.fandom.com',}\n\n\ntype TheCuttingFloorUrl = 'https://tcrf.net'\ntype TheCuttingFloorOnSMM1 = `${TheCuttingFloorUrl}/Super_Mario_Maker`\ntype TheCuttingFloorOnSMM3DS = `${TheCuttingFloorUrl}/Super_Mario_Maker_for_Nintendo_3DS`\ntype TheCuttingFloorOnSMM2 = `${TheCuttingFloorUrl}/Super_Mario_Maker_2`\nexport const THE_CUTTING_FLOOR_LINK: GameStructure<TheCuttingFloorOnSMM1, TheCuttingFloorOnSMM3DS, TheCuttingFloorOnSMM2> =\n    {superMarioMaker: 'https://tcrf.net/Super_Mario_Maker', superMarioMakerForNintendo3DS: 'https://tcrf.net/Super_Mario_Maker_for_Nintendo_3DS', superMarioMaker2: 'https://tcrf.net/Super_Mario_Maker_2',}\n","import AbstractApp                                                                     from 'app/AbstractApp'\nimport {unfinishedText}                                                                from 'app/tools/text/UnfinishedText'\nimport PageProgress                                                                    from 'app/util/PageProgress'\nimport {OtherWordInTheGames}                                                           from 'core/otherWordInTheGame/OtherWordInTheGames'\nimport {contentTranslation, gameContentTranslation}                                    from 'lang/components/translationMethods'\nimport {routeFromName}                                                                 from 'route/route'\nimport {MARIO_MAKER_2_WIKI_FANDOM_LINK, SUPER_MARIO_WIKI_LINK, THE_CUTTING_FLOOR_LINK} from 'external/WikiLinks'\n\n//region -------------------- Deconstruction imports --------------------\n\nconst {TAG, MYSTERY_MUSHROOM, MII_COSTUME, ENTITY, COURSE, POWER_UP,} = OtherWordInTheGames\n\n//endregion -------------------- Deconstruction imports --------------------\n\n/** @reactComponent */\nexport default class HomeApp\n    extends AbstractApp {\n\n    protected override _mainContent() {\n        const singularEntityName = ENTITY.singularNameOnReferenceOrNull ?? unfinishedText(ENTITY.singularEnglishName), singularEntityLowerCaseName = ENTITY.singularLowerCaseNameOnReferenceOrNull ?? singularEntityName.toLowerCase()\n        const singularTagName = TAG.singularNameOnReference, singularTagLowerCaseName = TAG.singularLowerCaseNameOnReference\n        const singularCourseName = COURSE.singularNameOnReferenceOrNull ?? unfinishedText(COURSE.singularEnglishName), singularCourseLowerCaseName = COURSE.singularLowerCaseNameOnReferenceOrNull ?? singularCourseName.toLowerCase()\n        const singularMysteryMushroomName = MYSTERY_MUSHROOM.singularNameOnReferenceOrNull ?? unfinishedText(MYSTERY_MUSHROOM.singularEnglishName)\n        const singularMiiCostumeName = MII_COSTUME.singularNameOnReferenceOrNull ?? unfinishedText(MII_COSTUME.singularEnglishName), singularMiiCostumeLowerCaseName = MII_COSTUME.singularLowerCaseNameOnReferenceOrNull ?? unfinishedText(MII_COSTUME.singularEnglishName)\n        const pluralMiiCostumeName = MII_COSTUME.pluralNameOnReferenceOrNull ?? unfinishedText(MII_COSTUME.pluralEnglishName!), pluralMiiCostumeLowerCaseName = MII_COSTUME.pluralLowerCaseNameOnReferenceOrNull ?? unfinishedText(MII_COSTUME.pluralEnglishName!)\n        const singularPowerUpName = POWER_UP.singularNameOnReferenceOrNull ?? unfinishedText(POWER_UP.singularEnglishName), singularPowerUpLowerCaseName = singularPowerUpName.toLowerCase()\n\n        return <>\n            <h1 className=\"text-center fw-bold text-decoration-underline\">{contentTranslation('home.title')}</h1>\n            <div className=\"container-lg alert alert-warning\" role=\"alert\">\n                {contentTranslation('home.warning.in construction')}\n                {contentTranslation('home.warning.more details')}\n                {contentTranslation('home.warning.links may be unstable')}\n                {contentTranslation('home.warning.words are in English')}\n            </div>\n            <div id=\"homeDescription-container\" className=\"container-md mb-3\">\n                <p className=\"mb-2\">{contentTranslation('home.description.first')}</p>\n                <p className=\"mb-2\">{contentTranslation('home.description.community')}</p>\n                <p className=\"mb-2\">{contentTranslation('home.description.wiki', {\n                    marioWikiLink: <a key=\"Mario Wiki link\" href={SUPER_MARIO_WIKI_LINK.languageValue.superMarioMaker2} className=\"link-info\" >{contentTranslation('home.description.name.mario wiki')}</a>,\n                    marioFandomLink: <a key=\"Mario Fandom link\" href={MARIO_MAKER_2_WIKI_FANDOM_LINK.superMarioMaker2} className=\"link-info\">{contentTranslation('home.description.name.mario fandom')}</a>,\n                    theCuttingFloorLink: <a key=\"The cutting floor link\" href={THE_CUTTING_FLOOR_LINK.superMarioMaker2} className=\"link-info\">{contentTranslation('home.description.name.the cutting floor')}</a>\n                },)}</p>\n            </div>\n            <h2 className=\"text-center fw-bold text-decoration-underline\">{contentTranslation('home.progress.title')}</h2>\n            <div id=\"progressDescription-container\" className=\"container-md mb-4\">\n                <p className=\"mb-2\">{contentTranslation('home.progress.description')}</p>\n                <p className=\"mb-2\">{contentTranslation('home.progress.list to do.description')}</p>\n                <ol>\n                   <li className=\"text-decoration-line-through\">{contentTranslation('home.progress.list to do.automatic language')}</li>\n                   <li>{contentTranslation('home.progress.list to do.font family')}</li>\n                   <li>{contentTranslation('home.progress.list to do.color mode')}</li>\n                   <li>{contentTranslation('home.progress.list to do.more info', {\n                       gitHubLink: <a key=\"GitHub link\" href=\"https://github.com/joooKiwi/smm-encyclopedia#list-of-elements-to-do\" className=\"link-info\">{contentTranslation('GitHub repository').toLowerCase().replace('github', 'GitHub',)}</a>,\n                   },)}</li>\n                </ol>\n            </div>\n            <div className=\"row row-cols-1 row-cols-md-2 row-cols-xl-3 row-cols-xxl-4 justify-content-center px-0 px-sm-5 px-md-3 px-lg-2 px-xl-4 px-xxl-5 gx-2 gy-1\">\n                <PageProgress progress=\"page in progress\" link={routeFromName('everyEntity')}                   content={singularEntityName}/>\n                <PageProgress progress=\"page in progress\" link={routeFromName('everyCharacterName')}            content={gameContentTranslation('character name.singular')}/>\n                <PageProgress progress=\"data in progress\"                                                             content={unfinishedText('Clear condition')} exclusiveGame=\"SMM2\"/>\n                <PageProgress progress=\"data done\"                                                                    content={unfinishedText('Clear condition category')} exclusiveGame=\"SMM2\"/>\n                <PageProgress progress=\"completed\"        link={routeFromName('everyLimit')}                    content={gameContentTranslation('limit.singular')}/>\n                <PageProgress progress=\"data in progress\"                                                             content={unfinishedText('Projectile')}/>\n                <PageProgress progress=\"data in progress\"                                                             content={unfinishedText('Object')}/>\n                <PageProgress progress=\"completed\"        link={routeFromName('everyEntityCategory')}           content={gameContentTranslation('entity category.singular', {Entity: singularEntityName, entity: singularEntityLowerCaseName,},)}/>\n                <PageProgress progress=\"data in progress\"                                                             content={gameContentTranslation('entity group.singular', {Entity: singularEntityName, entity: singularEntityLowerCaseName,},)}/>\n                <PageProgress progress=\"page almost done\" link={routeFromName('everyTheme')}                    content={gameContentTranslation('theme.singular')}/>\n                <PageProgress progress=\"not created\"                                                                  content={gameContentTranslation('time.singular')} exclusiveGame=\"SMM2\"/>\n                <PageProgress progress=\"page in progress\" link={routeFromName('everyGameReference')}            content={gameContentTranslation('game reference.singular')}/>\n                <PageProgress progress=\"page almost done\" link={routeFromName('everyGameStyle')}                content={gameContentTranslation('game style.singular')}/>\n                <PageProgress progress=\"data in progress\"                                                             content={unfinishedText('Entity behaviour')}/>\n                <PageProgress progress=\"page almost done\" link={routeFromName('everySoundEffect')}              content={gameContentTranslation('sound effect.singular')}/>\n                <PageProgress progress=\"page in progress\" link={routeFromName('everySoundEffectCategory')}      content={gameContentTranslation('sound effect category.singular')}/>\n                <PageProgress progress=\"completed\"        link={routeFromName('everyCourseTag')}                content={gameContentTranslation('course tag.singular', {Course: singularCourseName, course: singularCourseLowerCaseName, Tag: singularTagName, tag: singularTagLowerCaseName,},)} exclusiveGame=\"SMM2\"/>\n                <PageProgress progress=\"completed\"        link={routeFromName('everyPredefinedMessage')}        content={unfinishedText('Predefined message')} exclusiveGame=\"SMM2\"/>\n                <PageProgress progress=\"completed\"        link={routeFromName('everySampleCourse')}             content={gameContentTranslation('sample course.singular', {SingularName: singularCourseName, singularName: singularCourseLowerCaseName,},)} exclusiveGame=\"SMM1\"/>\n                <PageProgress progress=\"page almost done\" link={routeFromName('everyMedal')}                    content={gameContentTranslation('medal.singular')} exclusiveGame=\"SMM1\"/>\n                <PageProgress progress=\"data in progress\"                                                             content={unfinishedText('Super Mario Challenges levels')} exclusiveGame=\"SMM3DS\"/>\n                <PageProgress progress=\"data in progress\"                                                             content={unfinishedText(\"Job\")} exclusiveGame=\"SMM2\"/>\n                <PageProgress progress=\"data in progress\"                                                             content={unfinishedText('Official notification')} exclusiveGame=\"SMM2\"/>\n                <PageProgress progress=\"data in progress\"                                                             content={unfinishedText('Ninji speedrun')} exclusiveGame=\"SMM2\"/>\n                <PageProgress progress=\"page almost done\" link={routeFromName('everyMysteryMushroom')}          content={singularMysteryMushroomName} exclusiveGame=\"SMM1\"/>\n                <PageProgress progress=\"completed\"        link={routeFromName('everyMiiCostume')}               content={singularMiiCostumeName} exclusiveGame=\"SMM2\"/>\n                <PageProgress progress=\"completed\"        link={routeFromName('everyMiiCostumeCategory')}       content={gameContentTranslation('mii costume category.singular', {SingularName: singularMiiCostumeName, singularName: singularMiiCostumeLowerCaseName, PluralName: pluralMiiCostumeName, pluralName: pluralMiiCostumeLowerCaseName,},)} exclusiveGame=\"SMM2\"/>\n                <PageProgress progress=\"page in progress\" link={routeFromName('everyEditorVoice')}              content={gameContentTranslation('editor voice.singular')}/>\n                <PageProgress progress=\"page in progress\" link={routeFromName('everyInstrument')}               content={gameContentTranslation('instrument.singular')}/>\n                <PageProgress progress=\"page in progress\" link={routeFromName('everyPowerUp&Ride&HatPriority')} content={gameContentTranslation('power-up, ride & hat priority.all.singular', {PowerUp: singularPowerUpName, powerUp: singularPowerUpLowerCaseName, Ride: gameContentTranslation('ride.singular'), ride: gameContentTranslation('ride.singular').toLowerCase(), Hat: gameContentTranslation('hat.singular'), hat: gameContentTranslation('hat.singular').toLowerCase(),},)}/>\n            </div>\n        </>\n    }\n\n}\n"],"names":["PageProgress","_ref","progress","link","content","exclusiveGame","currentLanguage","ProjectLanguages","current","exclusiveGameComponent","_jsxs","className","children","space","textInParentheses","createPageProgressType","Link","to","type","_jsx","contentTranslation","ENGLISH","FRENCH","GERMAN","SPANISH","ITALIAN","DUTCH","PORTUGUESE","RUSSIAN","JAPANESE","CHINESE","KOREAN","HEBREW","POLISH","UKRAINIAN","GREEK","EveryLanguages","_originalLanguages","_classPrivateFieldLooseKey","_map","_englishContainer","_frenchContainer","_germanContainer","_spanishContainer","_italianContainer","_dutchContainer","_portugueseContainer","_russianContainer","_japaneseContainer","_chineseContainer","_koreanContainer","_hebrewContainer","_polishContainer","_ukrainianContainer","_greekContainer","_newLanguageContainer","SimpleNameContainer","constructor","english","french","german","spanish","italian","dutch","portuguese","russian","japanese","chinese","korean","hebrew","polish","ukrainian","greek","Object","defineProperty","writable","value","originalLanguages","_classPrivateFieldLooseBase","this","languageValue","_ProjectLanguages$cur","get","originalEnglish","original","americanEnglish","europeanEnglish","originalFrench","canadianFrench","europeanFrench","originalSpanish","americanSpanish","europeanSpanish","originalPortuguese","americanPortuguese","europeanPortuguese","originalChinese","traditionalChinese","simplifiedChinese","isHebrewUsed","isUsed","isPolishUsed","isUkrainianUsed","isGreekUsed","toNameMap","_classPrivateFieldLoo","_classPrivateFieldLoo2","Map","map","language","languageContainer","OPTIONAL_LANGUAGES","includes","newOptionalLanguage","newLanguage","isValueArray","Array","push","_english","_french","_german","_spanish","_italian","_dutch","_portuguese","_russian","_japanese","_chinese","_korean","_hebrew","_polish","_ukrainian","_greek","SUPER_MARIO_WIKI_LINK","setEnglish","setFrench","_classPrivateFieldLoo3","setGerman","_classPrivateFieldLoo4","setSpanish","_classPrivateFieldLoo5","setItalian","_classPrivateFieldLoo6","setDutch","_classPrivateFieldLoo7","setPortuguese","_classPrivateFieldLoo8","setRussian","_classPrivateFieldLoo9","setJapanese","_classPrivateFieldLoo10","setChinese","_classPrivateFieldLoo11","setKorean","_classPrivateFieldLoo12","setHebrew","_classPrivateFieldLoo13","setPolish","_classPrivateFieldLoo14","setUkrainian","_classPrivateFieldLoo15","setGreek","build","assert","superMarioMaker","superMarioMakerForNintendo3DS","superMarioMaker2","MARIO_MAKER_2_WIKI_FANDOM_LINK","THE_CUTTING_FLOOR_LINK","TAG","MYSTERY_MUSHROOM","MII_COSTUME","ENTITY","COURSE","POWER_UP","OtherWordInTheGames","HomeApp","AbstractApp","_mainContent","_ENTITY$singularNameO","_ENTITY$singularLower","_COURSE$singularNameO","_COURSE$singularLower","_MYSTERY_MUSHROOM$sin","_MII_COSTUME$singular","_MII_COSTUME$singular2","_MII_COSTUME$pluralNa","_MII_COSTUME$pluralLo","_POWER_UP$singularNam","singularEntityName","singularNameOnReferenceOrNull","unfinishedText","singularEnglishName","singularEntityLowerCaseName","singularLowerCaseNameOnReferenceOrNull","toLowerCase","singularTagName","singularNameOnReference","singularTagLowerCaseName","singularLowerCaseNameOnReference","singularCourseName","singularCourseLowerCaseName","singularMysteryMushroomName","singularMiiCostumeName","singularMiiCostumeLowerCaseName","pluralMiiCostumeName","pluralNameOnReferenceOrNull","pluralEnglishName","pluralMiiCostumeLowerCaseName","pluralLowerCaseNameOnReferenceOrNull","singularPowerUpName","singularPowerUpLowerCaseName","_Fragment","role","id","marioWikiLink","href","marioFandomLink","theCuttingFloorLink","gitHubLink","replace","routeFromName","gameContentTranslation","Entity","entity","Course","course","Tag","tag","SingularName","singularName","PluralName","pluralName","PowerUp","powerUp","Ride","ride","Hat","hat"],"sourceRoot":""}