{"version":3,"file":"static/js/619.e98c4496.chunk.js","mappings":"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","sources":["app/util/PageProgress.tsx","lang/name/SimpleName.container.ts","lang/name/SimpleName.builder.ts","external/WikiLinks.ts","app/HomeApp.tsx"],"sourcesContent":["import './PageProgress.scss'\n\nimport {Link} from 'react-router-dom'\n\nimport type {PossibleRouteName} from 'route/EveryRoutes.types'\nimport type {ReactProperties}   from 'util/react/ReactProperties'\n\nimport {ProjectLanguages}   from 'lang/ProjectLanguages'\nimport {contentTranslation} from 'lang/components/translationMethods'\nimport {routeFromName}      from 'route/method/route.fromName'\n\nimport LanguageCompanion = ProjectLanguages.Companion\n\ninterface PageProgressProperties\n    extends ReactProperties {\n\n    readonly progress: PageProgressType\n\n    readonly link?: PossibleRouteName\n\n    readonly content: ReactElementOrString\n\n    readonly exclusiveGame?: | 'SMM1' | 'SMM2' | 'SMM3DS'\n\n}\n\n\ntype PageProgressType = | 'completed' | 'completed with missing data'\n                        | 'page almost done' | 'page in progress' | 'page with missing data'\n                        | 'data in progress' | 'data done'\n                        | 'not created'\n\n/**\n * A single text container to display some progress over the content received\n * (and possibly add a link to the content)\n *\n * @reactComponent\n * @see TextComponent\n */\nexport default function PageProgress({progress, link, content, exclusiveGame,}: PageProgressProperties,) {\n    const currentLanguage = LanguageCompanion.current\n    const exclusiveGameComponent = exclusiveGame == null ? null : <sup className=\"fst-italic text-dark text-opacity-25\">{currentLanguage.space}{currentLanguage.textInParentheses(exclusiveGame)}</sup>\n\n    return <div className=\"pageProgress-container\">\n        {createPageProgressType(progress,)}\n        {link == null\n            ? <span>{content}{exclusiveGameComponent}</span>\n            : <Link to={routeFromName(link,)} className=\"link-info\">{content}{exclusiveGameComponent}</Link>}\n    </div>\n}\n\nfunction createPageProgressType(type: PageProgressType,) {\n    switch (type) {\n        case 'completed':\n            return <small className=\"pageProgress pageProgress-completed d-block text-center text-light bg-green-teal rounded px-1 me-1\">{contentTranslation('home.progress.Completed',)}</small>\n        case 'completed with missing data':\n            return <small className=\"pageProgress pageProgress-completedWithMissingData d-block text-center text-light bg-green-red rounded px-1 me-1\">{contentTranslation('home.progress.Completed with missing data',)}</small>\n        case 'page almost done':\n            return <small className=\"pageProgress pageProgress-pageAlmostDone d-block text-center text-light bg-green-yellow rounded px-1 me-1\">{contentTranslation('home.progress.Page almost done',)}</small>\n        case 'page in progress':\n            return <small className=\"pageProgress pageProgress-pageInProgress d-block text-center bg-yellow-orange rounded px-1 me-1\">{contentTranslation('home.progress.Page in progress',)}</small>\n        case 'page with missing data':\n            return <small className=\"pageProgress pageProgress-pageWithMissingData d-block text-center text-light bg-orange-pink rounded px-1 me-1\">{contentTranslation('home.progress.Page with missing data',)}</small>\n        case 'data done':\n            return <small className=\"pageProgress pageProgress-dataDone d-block text-center bg-orange-yellow rounded px-1 me-1\">{contentTranslation('home.progress.Data done',)}</small>\n        case 'data in progress':\n            return <small className=\"pageProgress pageProgress-dataInProgress d-block text-center text-light bg-red-orange rounded px-1 me-1\">{contentTranslation('home.progress.Data in progress',)}</small>\n        case 'not created':\n            return <small className=\"pageProgress pageProgress-notCreated d-block text-center text-light bg-red-pink rounded px-1 me-1\">{contentTranslation('home.progress.Not created',)}</small>\n    }\n}\n","import type {Array, MutableArray, Nullable, NullOr} from '@joookiwi/type'\nimport {isArray}                                    from '@joookiwi/collection'\n\nimport type {EmptyableOptionalLanguage}                                                                                                                         from 'lang/name/containers/EmptyableOptionalLanguage'\nimport type {EmptyableLanguage}                                                                                                                                 from 'lang/name/containers/EmptyableLanguage'\nimport type {AmericanOrEuropeanArray, AmericanOrEuropeanOriginal, CanadianOrEuropeanArray, CanadianOrEuropeanOriginal, ChineseArray, ChineseOriginal, Language} from 'lang/name/containers/Language'\n\nimport {EveryLanguages}            from 'lang/EveryLanguages'\nimport {ProjectLanguages}          from 'lang/ProjectLanguages'\nimport {LanguageContainer}         from 'lang/name/containers/Language.container'\nimport {OptionalLanguageContainer} from 'lang/name/containers/OptionalLanguage.container'\nimport {EmptyLanguageContainer}    from 'lang/name/containers/EmptyLanguage.container'\n\nimport Companion = ProjectLanguages.Companion\n\n//region -------------------- Import from deconstruction --------------------\n\nconst {\n    ENGLISH, AMERICAN_ENGLISH, EUROPEAN_ENGLISH,\n    FRENCH, CANADIAN_FRENCH, EUROPEAN_FRENCH,\n    GERMAN,\n    SPANISH, AMERICAN_SPANISH, EUROPEAN_SPANISH,\n    ITALIAN,\n    DUTCH,\n    PORTUGUESE, AMERICAN_PORTUGUESE, EUROPEAN_PORTUGUESE,\n    RUSSIAN,\n    JAPANESE,\n    CHINESE, TRADITIONAL_CHINESE, SIMPLIFIED_CHINESE,\n    KOREAN,\n    HEBREW, POLISH, UKRAINIAN, GREEK,\n} = EveryLanguages\n\n//endregion -------------------- Import from deconstruction --------------------\n\n//TODO make this class the base parent or another one to remove the duplicate code\nexport class SimpleNameContainer<const out T extends NonNullable<unknown>, > {\n\n    //region -------------------- Fields --------------------\n\n    readonly #originalLanguages: Array<EveryLanguages>\n    #map?: Map<EveryLanguages, T>\n\n    readonly #englishContainer: Language<T, T, AmericanOrEuropeanArray<T>>\n    readonly #frenchContainer: EmptyableLanguage<T, T, CanadianOrEuropeanArray<T>>\n    readonly #germanContainer: EmptyableLanguage<T, T, never>\n    readonly #spanishContainer: EmptyableLanguage<T, T, AmericanOrEuropeanArray<T>>\n    readonly #italianContainer: EmptyableLanguage<T, T, never>\n    readonly #dutchContainer: EmptyableLanguage<T, T, never>\n    readonly #portugueseContainer: EmptyableLanguage<T, T, AmericanOrEuropeanArray<T>>\n    readonly #russianContainer: EmptyableLanguage<T, T, never>\n    readonly #japaneseContainer: EmptyableLanguage<T, T, never>\n    readonly #chineseContainer: EmptyableLanguage<T, T, ChineseArray<T>>\n    readonly #koreanContainer: EmptyableLanguage<T, T, never>\n    readonly #hebrewContainer: EmptyableOptionalLanguage<T, T, never>\n    readonly #polishContainer: EmptyableOptionalLanguage<T, T, never>\n    readonly #ukrainianContainer: EmptyableOptionalLanguage<T, T, never>\n    readonly #greekContainer: EmptyableOptionalLanguage<T, T, never>\n\n    //endregion -------------------- Fields --------------------\n    //region -------------------- Constructor --------------------\n\n    public constructor(english: AmericanOrEuropeanOriginal<T>,\n                       french: Nullable<CanadianOrEuropeanOriginal<T>>,\n                       german: Nullable<T>,\n                       spanish: Nullable<AmericanOrEuropeanOriginal<T>>,\n                       italian: Nullable<T>,\n                       dutch: Nullable<T>,\n                       portuguese: Nullable<AmericanOrEuropeanOriginal<T>>,\n                       russian: Nullable<T>,\n                       japanese: Nullable<T>,\n                       chinese: Nullable<ChineseOriginal<T>>,\n                       korean: Nullable<T>,\n                       hebrew: Nullable<T>,\n                       polish: Nullable<T>,\n                       ukrainian: Nullable<T>,\n                       greek: Nullable<T>,) {\n        const originalLanguages: MutableArray<EveryLanguages> = []\n\n        //region -------------------- English initialization --------------------\n\n        if (isArray(english,))\n            originalLanguages.push(AMERICAN_ENGLISH, EUROPEAN_ENGLISH,)\n        else\n            originalLanguages.push(ENGLISH,)\n        this.#englishContainer = new LanguageContainer<T, T, AmericanOrEuropeanArray<T>>(english,)\n\n        //endregion -------------------- English initialization --------------------\n        //region -------------------- French initialization --------------------\n\n        if (french == null)\n            this.#frenchContainer = EmptyLanguageContainer.get\n        else {\n            if (isArray(french,))\n                originalLanguages.push(CANADIAN_FRENCH, EUROPEAN_FRENCH,)\n            else\n                originalLanguages.push(FRENCH,)\n            this.#frenchContainer = new LanguageContainer<T, T, CanadianOrEuropeanArray<T>>(french,)\n        }\n\n        //endregion -------------------- French initialization --------------------\n        //region -------------------- German initialization --------------------\n\n        if (german == null)\n            this.#germanContainer = EmptyLanguageContainer.get\n        else {\n            originalLanguages.push(GERMAN,)\n            this.#germanContainer = new LanguageContainer<T, T, never>(german,)\n        }\n\n        //endregion -------------------- German initialization --------------------\n        //region -------------------- Spanish initialization --------------------\n\n        if (spanish == null)\n            this.#spanishContainer = EmptyLanguageContainer.get\n        else {\n            if (isArray(spanish,))\n                originalLanguages.push(AMERICAN_SPANISH, EUROPEAN_SPANISH,)\n            else\n                originalLanguages.push(SPANISH,)\n            this.#spanishContainer = new LanguageContainer<T, T, AmericanOrEuropeanArray<T>>(spanish,)\n        }\n\n        //endregion -------------------- Spanish initialization --------------------\n        //region -------------------- Italian initialization --------------------\n\n        if (italian == null)\n            this.#italianContainer = EmptyLanguageContainer.get\n        else {\n            originalLanguages.push(ITALIAN,)\n            this.#italianContainer = new LanguageContainer<T, T, never>(italian,)\n        }\n\n        //endregion -------------------- Italian initialization --------------------\n        //region -------------------- Dutch initialization --------------------\n\n        if (dutch == null)\n            this.#dutchContainer = EmptyLanguageContainer.get\n        else {\n            originalLanguages.push(DUTCH,)\n            this.#dutchContainer = new LanguageContainer<T, T, never>(dutch,)\n        }\n\n        //endregion -------------------- Dutch initialization --------------------\n        //region -------------------- Portuguese initialization --------------------\n\n        if (portuguese == null)\n            this.#portugueseContainer = EmptyLanguageContainer.get\n        else {\n            if (isArray(portuguese,))\n                originalLanguages.push(AMERICAN_PORTUGUESE, EUROPEAN_PORTUGUESE,)\n            else\n                originalLanguages.push(PORTUGUESE,)\n            this.#portugueseContainer = new LanguageContainer<T, T, AmericanOrEuropeanArray<T>>(portuguese,)\n        }\n\n        //endregion -------------------- Portuguese initialization --------------------\n        //region -------------------- Russian initialization --------------------\n\n        if (russian == null)\n            this.#russianContainer = EmptyLanguageContainer.get\n        else {\n            originalLanguages.push(RUSSIAN,)\n            this.#russianContainer = new LanguageContainer<T, T, never>(russian,)\n        }\n\n        //endregion -------------------- Russian initialization --------------------\n        //region -------------------- Japanese initialization --------------------\n\n        if (japanese == null)\n            this.#japaneseContainer = EmptyLanguageContainer.get\n        else {\n            originalLanguages.push(JAPANESE,)\n            this.#japaneseContainer = new LanguageContainer<T, T, never>(japanese,)\n        }\n\n        //endregion -------------------- Japanese initialization --------------------\n        //region -------------------- Chinese initialization --------------------\n\n        if (chinese == null)\n            this.#chineseContainer = EmptyLanguageContainer.get\n        else {\n            if (isArray(chinese,))\n                originalLanguages.push(TRADITIONAL_CHINESE, SIMPLIFIED_CHINESE,)\n            else\n                originalLanguages.push(CHINESE,)\n            this.#chineseContainer = new LanguageContainer<T, T, ChineseArray<T>>(chinese,)\n        }\n\n        //endregion -------------------- Chinese initialization --------------------\n        //region -------------------- Korean initialization --------------------\n\n        if (korean == null)\n            this.#koreanContainer = EmptyLanguageContainer.get\n        else {\n            originalLanguages.push(KOREAN,)\n            this.#koreanContainer = new LanguageContainer<T, T, never>(korean,)\n        }\n\n        //endregion -------------------- Korean initialization --------------------\n        //region -------------------- Hebrew initialization --------------------\n\n        if (hebrew == null)\n            this.#hebrewContainer = EmptyLanguageContainer.get\n        else if ((this.#hebrewContainer = new OptionalLanguageContainer<T, T, never>(hebrew,)).isUsed)\n            originalLanguages.push(HEBREW,)\n\n        //endregion -------------------- Hebrew initialization --------------------\n        //region -------------------- Polish initialization --------------------\n\n        if (polish == null)\n            this.#polishContainer = EmptyLanguageContainer.get\n        else if ((this.#polishContainer = new OptionalLanguageContainer<T, T, never>(polish,)).isUsed)\n            originalLanguages.push(POLISH,)\n\n        //endregion -------------------- Polish initialization --------------------\n        //region -------------------- Ukrainian initialization --------------------\n\n        if (ukrainian == null)\n            this.#ukrainianContainer = EmptyLanguageContainer.get\n        else if ((this.#ukrainianContainer = new OptionalLanguageContainer<T, T, never>(ukrainian,)).isUsed)\n            originalLanguages.push(UKRAINIAN,)\n\n        //endregion -------------------- Ukrainian initialization --------------------\n        //region -------------------- Greek initialization --------------------\n\n        if (greek == null)\n            this.#greekContainer = EmptyLanguageContainer.get\n        else if ((this.#greekContainer = new OptionalLanguageContainer<T, T, never>(greek,)).isUsed)\n            originalLanguages.push(GREEK,)\n\n        //endregion -------------------- Greek initialization --------------------\n\n        this.#originalLanguages = originalLanguages\n    }\n\n    //endregion -------------------- Constructor --------------------\n    //region -------------------- Getter methods --------------------\n\n    public get languageValue(): NonNullable<T> {\n        // @ts-ignore: FIXME Support this implementation for the Languages\n        return Companion.current.get<T>(this,) ?? this.english\n    }\n\n    //region -------------------- English properties --------------------\n\n    public get originalEnglish(): AmericanOrEuropeanOriginal<T> {\n        return this.#englishContainer.original\n    }\n\n    public get english(): T {\n        return this.#englishContainer.get()\n    }\n\n    public get americanEnglish(): T {\n        return this.#englishContainer.get(0)\n    }\n\n    public get europeanEnglish(): T {\n        return this.#englishContainer.get(1)\n    }\n\n    //endregion -------------------- English properties --------------------\n    //region -------------------- French properties --------------------\n\n    public get originalFrench(): NullOr<CanadianOrEuropeanOriginal<T>> {\n        return this.#frenchContainer.original\n    }\n\n    public get french(): NullOr<T> {\n        return this.#frenchContainer.get()\n    }\n\n    public get canadianFrench(): NullOr<T> {\n        return this.#frenchContainer.get(0)\n    }\n\n    public get europeanFrench(): NullOr<T> {\n        return this.#frenchContainer.get(1)\n    }\n\n    //endregion -------------------- French properties --------------------\n    //region -------------------- German properties --------------------\n\n    public get german(): NullOr<T> {\n        return this.#germanContainer.original\n    }\n\n    //endregion -------------------- German properties --------------------\n    //region -------------------- Spanish properties --------------------\n\n    public get originalSpanish(): NullOr<AmericanOrEuropeanOriginal<T>> {\n        return this.#spanishContainer.original\n    }\n\n    public get spanish(): NullOr<T> {\n        return this.#spanishContainer.get()\n    }\n\n    public get americanSpanish(): NullOr<T> {\n        return this.#spanishContainer.get(0)\n    }\n\n    public get europeanSpanish(): NullOr<T> {\n        return this.#spanishContainer.get(1)\n    }\n\n    //endregion -------------------- Spanish properties --------------------\n    //region -------------------- Italian properties --------------------\n\n    public get italian(): NullOr<T> {\n        return this.#italianContainer.original\n    }\n\n    //endregion -------------------- Italian properties --------------------\n    //region -------------------- Dutch properties --------------------\n\n    public get dutch(): NullOr<T> {\n        return this.#dutchContainer.original\n    }\n\n    //endregion -------------------- Dutch properties --------------------\n    //region -------------------- Portuguese properties --------------------\n\n    public get originalPortuguese(): NullOr<AmericanOrEuropeanOriginal<T>> {\n        return this.#portugueseContainer.original\n    }\n\n    public get portuguese(): NullOr<T> {\n        return this.#portugueseContainer.get()\n    }\n\n    public get americanPortuguese(): NullOr<T> {\n        return this.#portugueseContainer.get(0)\n    }\n\n    public get europeanPortuguese(): NullOr<T> {\n        return this.#portugueseContainer.get(1)\n    }\n\n    //endregion -------------------- Portuguese properties --------------------\n    //region -------------------- Russian properties --------------------\n\n    public get russian(): NullOr<T> {\n        return this.#russianContainer.original\n    }\n\n    //endregion -------------------- Russian properties --------------------\n    //region -------------------- Japanese properties --------------------\n\n    public get japanese(): NullOr<T> {\n        return this.#japaneseContainer.original\n    }\n\n    //endregion -------------------- Japanese properties --------------------\n    //region -------------------- Chinese properties --------------------\n\n    public get originalChinese(): NullOr<ChineseOriginal<T>> {\n        return this.#chineseContainer.original\n    }\n\n    public get chinese(): NullOr<T> {\n        return this.#chineseContainer.get()\n    }\n\n    public get traditionalChinese(): NullOr<T> {\n        return this.#chineseContainer.get(1)\n    }\n\n    public get simplifiedChinese(): NullOr<T> {\n        return this.#chineseContainer.get(0)\n    }\n\n    //endregion -------------------- Chinese properties --------------------\n    //region -------------------- Korean properties --------------------\n\n    public get korean(): NullOr<T> {\n        return this.#koreanContainer.original\n    }\n\n    //endregion -------------------- Korean properties --------------------\n    //region -------------------- Hebrew properties --------------------\n\n    public get isHebrewUsed(): boolean {\n        return this.#hebrewContainer.isUsed\n    }\n\n    public get hebrew(): NullOr<T> {\n        return this.#hebrewContainer.original\n    }\n\n    //endregion -------------------- Hebrew properties --------------------\n    //region -------------------- Polish properties --------------------\n\n    public get isPolishUsed(): boolean {\n        return this.#polishContainer.isUsed\n    }\n\n    public get polish(): NullOr<T> {\n        return this.#polishContainer.original\n    }\n\n    //endregion -------------------- Polish properties --------------------\n    //region -------------------- Ukrainian properties --------------------\n\n    public get isUkrainianUsed(): boolean {\n        return this.#ukrainianContainer.isUsed\n    }\n\n    public get ukrainian(): NullOr<T> {\n        return this.#ukrainianContainer.original\n    }\n\n    //endregion -------------------- Ukrainian properties --------------------\n    //region -------------------- Greek properties --------------------\n\n    public get isGreekUsed(): boolean {\n        return this.#greekContainer.isUsed\n    }\n\n    public get greek(): NullOr<T> {\n        return this.#greekContainer.original\n    }\n\n    //endregion -------------------- Greek properties --------------------\n\n    public get originalLanguages(): Array<EveryLanguages> {\n        return this.#originalLanguages\n    }\n\n    //endregion -------------------- Getter methods --------------------\n    //region -------------------- Convertor methods --------------------\n\n    public toNameMap(): ReadonlyMap<EveryLanguages, T> {\n        return this.#map ??= new Map(this.originalLanguages.map(language => [language, language.get(this)!,]))\n    }\n\n    //endregion -------------------- Convertor methods --------------------\n\n}\n","import type {Nullable, NullOr} from '@joookiwi/type'\n\nimport type {AmericanOrEuropeanOriginal, CanadianOrEuropeanOriginal, ChineseOriginal} from 'lang/name/containers/Language'\nimport type {Builder}                                                                 from 'util/builder/Builder'\n\nimport {SimpleNameContainer} from 'lang/name/SimpleName.container'\nimport {assert}              from 'util/utilitiesMethods'\n\n/** @deprecated Use the class directly or a child name instead */\nexport class SimpleNameBuilder<const out T extends NonNullable<unknown>, >\n    implements Builder<SimpleNameContainer<T>> {\n\n    //region -------------------- Fields --------------------\n\n    #english?: NullOr<AmericanOrEuropeanOriginal<T>>\n    #french?: NullOr<CanadianOrEuropeanOriginal<T>>\n    #german?: NullOr<T>\n    #spanish?: NullOr<AmericanOrEuropeanOriginal<T>>\n    #italian?: NullOr<T>\n    #dutch?: NullOr<T>\n    #portuguese?: NullOr<AmericanOrEuropeanOriginal<T>>\n    #russian?: NullOr<T>\n    #japanese?: NullOr<T>\n    #chinese?: NullOr<ChineseOriginal<T>>\n    #korean?: NullOr<T>\n    #hebrew?: NullOr<T>\n    #polish?: NullOr<T>\n    #ukrainian?: NullOr<T>\n    #greek?: NullOr<T>\n\n    //endregion -------------------- Fields --------------------\n    //region -------------------- Getter & setter methods --------------------\n\n    //region -------------------- English getter & setter methods --------------------\n\n    public get english(): NullOr<AmericanOrEuropeanOriginal<T>> {\n        return this.#english ?? null\n    }\n\n    public setEnglish(value: Nullable<AmericanOrEuropeanOriginal<T>>,): this {\n        this.#english = value ?? null\n        return this\n    }\n\n    //endregion -------------------- English getter & setter methods --------------------\n    //region -------------------- French getter & setter methods --------------------\n\n    public get french(): NullOr<CanadianOrEuropeanOriginal<T>> {\n        return this.#french ?? null\n    }\n\n    public setFrench(value: Nullable<CanadianOrEuropeanOriginal<T>>,): this {\n        this.#french = value ?? null\n        return this\n    }\n\n    //endregion -------------------- French getter & setter methods --------------------\n    //region -------------------- German getter & setter methods --------------------\n\n    public get german(): NullOr<T> {\n        return this.#german ?? null\n    }\n\n    public setGerman(value: Nullable<T>,): this {\n        this.#german = value ?? null\n        return this\n    }\n\n    //endregion -------------------- German getter & setter methods --------------------\n    //region -------------------- Spanish getter & setter methods --------------------\n\n    public get spanish(): NullOr<AmericanOrEuropeanOriginal<T>> {\n        return this.#spanish ?? null\n    }\n\n    public setSpanish(value: Nullable<AmericanOrEuropeanOriginal<T>>,): this {\n        this.#spanish = value ?? null\n        return this\n    }\n\n    //endregion -------------------- Spanish getter & setter methods --------------------\n    //region -------------------- Italian getter & setter methods --------------------\n\n    public get italian(): NullOr<T> {\n        return this.#italian ?? null\n    }\n\n    public setItalian(value: Nullable<T>,): this {\n        this.#italian = value ?? null\n        return this\n    }\n\n    //endregion -------------------- Italian getter & setter methods --------------------\n    //region -------------------- Dutch getter & setter methods --------------------\n\n    public get dutch(): NullOr<T> {\n        return this.#dutch ?? null\n    }\n\n    public setDutch(value: Nullable<T>,): this {\n        this.#dutch = value ?? null\n        return this\n    }\n\n    //endregion -------------------- Dutch getter & setter methods --------------------\n    //region -------------------- Portuguese getter & setter methods --------------------\n\n    public get portuguese(): NullOr<AmericanOrEuropeanOriginal<T>> {\n        return this.#portuguese ?? null\n    }\n\n    public setPortuguese(value: Nullable<AmericanOrEuropeanOriginal<T>>,): this {\n        this.#portuguese = value ?? null\n        return this\n    }\n\n    //endregion -------------------- Portuguese getter & setter methods --------------------\n    //region -------------------- Russian getter & setter methods --------------------\n\n    public get russian(): NullOr<T> {\n        return this.#russian ?? null\n    }\n\n    public setRussian(value: Nullable<T>,): this {\n        this.#russian = value ?? null\n        return this\n    }\n\n    //endregion -------------------- Russian getter & setter methods --------------------\n    //region -------------------- Japanese getter & setter methods --------------------\n\n    public get japanese(): NullOr<T> {\n        return this.#japanese ?? null\n    }\n\n    public setJapanese(value: Nullable<T>,): this {\n        this.#japanese = value ?? null\n        return this\n    }\n\n    //endregion -------------------- Japanese getter & setter methods --------------------\n    //region -------------------- Chinese getter & setter methods --------------------\n\n    public get chinese(): NullOr<ChineseOriginal<T>> {\n        return this.#chinese ?? null\n    }\n\n    public setChinese(value: Nullable<ChineseOriginal<T>>,): this {\n        this.#chinese = value ?? null\n        return this\n    }\n\n    //endregion -------------------- Chinese getter & setter methods --------------------\n    //region -------------------- Korean getter & setter methods --------------------\n\n    public get korean(): NullOr<T> {\n        return this.#korean ?? null\n    }\n\n    public setKorean(value: Nullable<T>,): this {\n        this.#korean = value ?? null\n        return this\n    }\n\n    //endregion -------------------- Korean getter & setter methods --------------------\n    //region -------------------- Hebrew getter & setter methods --------------------\n\n    public get hebrew(): NullOr<T> {\n        return this.#hebrew ?? null\n    }\n\n    public setHebrew(value: Nullable<T>,): this {\n        this.#hebrew = value ?? null\n        return this\n    }\n\n    //endregion -------------------- Hebrew getter & setter methods --------------------\n    //region -------------------- Polish getter & setter methods --------------------\n\n    public get polish(): NullOr<T> {\n        return this.#polish ?? null\n    }\n\n    public setPolish(value: Nullable<T>,): this {\n        this.#polish = value ?? null\n        return this\n    }\n\n    //endregion -------------------- Polish getter & setter methods --------------------\n    //region -------------------- Ukrainian getter & setter methods --------------------\n\n    public get ukrainian(): NullOr<T> {\n        return this.#ukrainian ?? null\n    }\n\n    public setUkrainian(value: Nullable<T>,): this {\n        this.#ukrainian = value ?? null\n        return this\n    }\n\n    //endregion -------------------- Ukrainian getter & setter methods --------------------\n    //region -------------------- Greek getter & setter methods --------------------\n\n    public get greek(): NullOr<T> {\n        return this.#greek ?? null\n    }\n\n    public setGreek(value: Nullable<T>,): this {\n        this.#greek = value ?? null\n        return this\n    }\n\n    //endregion -------------------- Greek getter & setter methods --------------------\n\n    //endregion -------------------- Getter & setter methods --------------------\n\n    public build(): SimpleNameContainer<T> {\n        const {english,} = this\n        assert(english != null, 'The english reference has not been initialized.',)\n\n        return new SimpleNameContainer(\n            english,\n            this.french,\n            this.german,\n            this.spanish,\n            this.italian,\n            this.dutch,\n            this.portuguese,\n            this.russian,\n            this.japanese,\n            this.chinese,\n            this.korean,\n            this.hebrew,\n            this.polish,\n            this.ukrainian,\n            this.greek,\n        )\n    }\n}\n","import type {NullOrString}  from '@joookiwi/type'\nimport type {GameStructure} from 'core/game/GameStructure'\n\nimport {SimpleNameBuilder} from 'lang/name/SimpleName.builder'\n\ntype MarioWikiLinkOnSMM1 = `${MarioWikiStartingUrl}.${MarioWikiDomain}/Super_Mario_Maker`\ntype MarioWikiLinkOnSMM3DS = NullOrString<`${MarioWikiStartingUrl}.${Exclude<MarioWikiDomain, 'net'>}/Super_Mario_Maker_for_Nintendo_3DS`>\ntype MarioWikiLinkOnSMM2 = `${MarioWikiStartingUrl}.${MarioWikiDomain}/Super_Mario_Maker_2`\ntype MarioWikiStartingUrl = 'https://www.mariowiki'\ntype MarioWikiDomain = | 'com' | 'net' | 'it'\nexport const SUPER_MARIO_WIKI_LINK = new SimpleNameBuilder<GameStructure<MarioWikiLinkOnSMM1, MarioWikiLinkOnSMM3DS, MarioWikiLinkOnSMM2>>()\n    .setEnglish({superMarioMaker: 'https://www.mariowiki.com/Super_Mario_Maker', superMarioMakerForNintendo3DS: 'https://www.mariowiki.com/Super_Mario_Maker_for_Nintendo_3DS', superMarioMaker2: 'https://www.mariowiki.com/Super_Mario_Maker_2',},)\n    .setGerman({superMarioMaker: 'https://www.mariowiki.net/Super_Mario_Maker', superMarioMakerForNintendo3DS: null, superMarioMaker2: 'https://www.mariowiki.net/Super_Mario_Maker_2',},)\n    .setItalian({superMarioMaker: 'https://www.mariowiki.it/Super_Mario_Maker', superMarioMakerForNintendo3DS: 'https://www.mariowiki.it/Super_Mario_Maker_for_Nintendo_3DS', superMarioMaker2: 'https://www.mariowiki.it/Super_Mario_Maker_2',},)\n    .build()\n\n\ntype MarioWikiFandomOnSMM1 = 'https://supermariomaker.fandom.com'\ntype MarioWikiFandomOnSMM3DS = null\ntype MarioWikiFandomOnSMM2 = 'https://supermariomaker2.fandom.com'\nexport const MARIO_MAKER_2_WIKI_FANDOM_LINK: GameStructure<MarioWikiFandomOnSMM1, MarioWikiFandomOnSMM3DS, MarioWikiFandomOnSMM2> =\n    {superMarioMaker: 'https://supermariomaker.fandom.com', superMarioMakerForNintendo3DS: null, superMarioMaker2: 'https://supermariomaker2.fandom.com',}\n\n\ntype TheCuttingFloorUrl = 'https://tcrf.net'\ntype TheCuttingFloorOnSMM1 = `${TheCuttingFloorUrl}/Super_Mario_Maker`\ntype TheCuttingFloorOnSMM3DS = `${TheCuttingFloorUrl}/Super_Mario_Maker_for_Nintendo_3DS`\ntype TheCuttingFloorOnSMM2 = `${TheCuttingFloorUrl}/Super_Mario_Maker_2`\nexport const THE_CUTTING_FLOOR_LINK: GameStructure<TheCuttingFloorOnSMM1, TheCuttingFloorOnSMM3DS, TheCuttingFloorOnSMM2> =\n    {superMarioMaker: 'https://tcrf.net/Super_Mario_Maker', superMarioMakerForNintendo3DS: 'https://tcrf.net/Super_Mario_Maker_for_Nintendo_3DS', superMarioMaker2: 'https://tcrf.net/Super_Mario_Maker_2',}\n","import {unfinishedText}                                                                from 'app/tools/text/UnfinishedText'\nimport PageProgress                                                                    from 'app/util/PageProgress'\nimport {OtherWordInTheGames}                                                           from 'core/otherWordInTheGame/OtherWordInTheGames'\nimport {contentTranslation, gameContentTranslation}                                    from 'lang/components/translationMethods'\nimport {MARIO_MAKER_2_WIKI_FANDOM_LINK, SUPER_MARIO_WIKI_LINK, THE_CUTTING_FLOOR_LINK} from 'external/WikiLinks'\n\n/** @reactComponent */\nexport default function HomeApp() {\n    const entity = OtherWordInTheGames.ENTITY.singularNameOnReferenceOrNull ?? unfinishedText(OtherWordInTheGames.ENTITY.singularEnglishName,)\n    const entityAsLowerCase = OtherWordInTheGames.ENTITY.singularLowerCaseNameOnReferenceOrNull ?? entity.toLowerCase()\n    const tag = OtherWordInTheGames.TAG.singularNameOnReference\n    const tagAsLowerCase = OtherWordInTheGames.TAG.singularLowerCaseNameOnReference\n    const course = OtherWordInTheGames.COURSE.singularNameOnReferenceOrNull ?? unfinishedText(OtherWordInTheGames.COURSE.singularEnglishName,)\n    const courseAsLowerCase = OtherWordInTheGames.COURSE.singularLowerCaseNameOnReferenceOrNull ?? course.toLowerCase()\n    const mysteryMushroom = OtherWordInTheGames.MYSTERY_MUSHROOM.singularNameOnReferenceOrNull ?? unfinishedText(OtherWordInTheGames.MYSTERY_MUSHROOM.singularEnglishName,)\n    const miiCostume = OtherWordInTheGames.MII_COSTUME.singularNameOnReferenceOrNull ?? unfinishedText(OtherWordInTheGames.MII_COSTUME.singularEnglishName,)\n    const miiCostumeAsLowerCase = OtherWordInTheGames.MII_COSTUME.singularLowerCaseNameOnReferenceOrNull ?? miiCostume.toLowerCase()\n    const miiCostumes = OtherWordInTheGames.MII_COSTUME.pluralNameOnReferenceOrNull ?? unfinishedText(OtherWordInTheGames.MII_COSTUME.pluralEnglishName,)\n    const miiCostumesAsLowerCase = OtherWordInTheGames.MII_COSTUME.pluralLowerCaseNameOnReferenceOrNull ?? unfinishedText(OtherWordInTheGames.MII_COSTUME.pluralEnglishName,)\n    const powerUp = OtherWordInTheGames.POWER_UP.singularNameOnReferenceOrNull ?? unfinishedText(OtherWordInTheGames.POWER_UP.singularEnglishName,)\n    const powerUpAsLowerCase = powerUp.toLowerCase()\n\n    return <>\n        <h1 className=\"text-center fw-bold text-decoration-underline\">{contentTranslation('home.title',)}</h1>\n        <div className=\"container-lg alert alert-warning\" role=\"alert\">\n            {contentTranslation('home.warning.in construction',)}\n            {contentTranslation('home.warning.more details',)}\n            {contentTranslation('home.warning.links may be unstable',)}\n            {contentTranslation('home.warning.words are in English',)}\n        </div>\n        <div id=\"homeDescription-container\" className=\"container-md mb-3\">\n            <p className=\"mb-2\">{contentTranslation('home.description.first',)}</p>\n            <p className=\"mb-2\">{contentTranslation('home.description.community',)}</p>\n            <p className=\"mb-2\">{contentTranslation('home.description.wiki', {\n                marioWikiLink: <a key=\"Mario Wiki link\" href={SUPER_MARIO_WIKI_LINK.languageValue.superMarioMaker2} className=\"link-info\">{contentTranslation('home.description.name.mario wiki',)}</a>,\n                marioFandomLink: <a key=\"Mario Fandom link\" href={MARIO_MAKER_2_WIKI_FANDOM_LINK.superMarioMaker2} className=\"link-info\">{contentTranslation('home.description.name.mario fandom',)}</a>,\n                theCuttingFloorLink: <a key=\"The cutting floor link\" href={THE_CUTTING_FLOOR_LINK.superMarioMaker2} className=\"link-info\">{contentTranslation('home.description.name.the cutting floor',)}</a>\n            },)}</p>\n        </div>\n        <h2 className=\"text-center fw-bold text-decoration-underline\">{contentTranslation('home.progress.title',)}</h2>\n        <div id=\"progressDescription-container\" className=\"container-md mb-4\">\n            <p className=\"mb-2\">{contentTranslation('home.progress.description',)}</p>\n            <p className=\"mb-2\">{contentTranslation('home.progress.list to do.description',)}</p>\n            <ol>\n                <li className=\"text-decoration-line-through\">{contentTranslation('home.progress.list to do.automatic language',)}</li>\n                <li>{contentTranslation('home.progress.list to do.font family',)}</li>\n                <li>{contentTranslation('home.progress.list to do.color mode',)}</li>\n                <li>{contentTranslation('home.progress.list to do.more info', {\n                    gitHubLink: <a key=\"GitHub link\" href=\"https://github.com/joooKiwi/smm-encyclopedia#list-of-elements-to-do\" className=\"link-info\">{contentTranslation('GitHub repository',).toLowerCase().replace('github', 'GitHub',)}</a>,\n                },)}</li>\n            </ol>\n        </div>\n        <div className=\"row row-cols-1 row-cols-md-2 row-cols-xl-3 row-cols-xxl-4 justify-content-center px-0 px-sm-5 px-md-3 px-lg-2 px-xl-4 px-xxl-5 gx-2 gy-1\">\n            <PageProgress progress=\"page in progress\"            link=\"everyEntity\"                                          content={entity}/>\n            <PageProgress progress=\"page in progress\"            link=\"everyCharacterName\"                                   content={gameContentTranslation('character name.singular',)}/>\n            <PageProgress progress=\"data in progress\"                                                 exclusiveGame=\"SMM2\"   content={unfinishedText('Clear condition',)}/>\n            <PageProgress progress=\"data done\"                                                        exclusiveGame=\"SMM2\"   content={unfinishedText('Clear condition category',)}/>\n            <PageProgress progress=\"completed\"                   link=\"everyLimit\"                                           content={gameContentTranslation('limit.singular',)}/>\n            <PageProgress progress=\"data done\"                                                                               content={unfinishedText('Projectile',)}/>\n            <PageProgress progress=\"data done\"                                                                               content={unfinishedText('Playable character',)}/>\n            <PageProgress progress=\"data in progress\"                                                                        content={unfinishedText('Object',)}/>\n            <PageProgress progress=\"completed\"                   link=\"everyEntityCategory\"                                  content={gameContentTranslation('entity category.singular', {Entity: entity, entity: entityAsLowerCase,},)}/>\n            <PageProgress progress=\"data in progress\"                                                                        content={gameContentTranslation('entity group.singular', {Entity: entity, entity: entityAsLowerCase,},)}/>\n            <PageProgress progress=\"page almost done\"            link=\"everyTheme\"                                           content={gameContentTranslation('theme.singular',)}/>\n            <PageProgress progress=\"not created\"                                                      exclusiveGame=\"SMM2\"   content={gameContentTranslation('time.singular',)}/>\n            <PageProgress progress=\"page in progress\"            link=\"everyGameReference\"                                   content={gameContentTranslation('game reference.singular',)}/>\n            <PageProgress progress=\"page almost done\"            link=\"everyGameStyle\"                                       content={gameContentTranslation('game style.singular',)}/>\n            <PageProgress progress=\"data in progress\"                                                                        content={unfinishedText('Entity behaviour',)}/>\n            <PageProgress progress=\"page in progress\"            link=\"everyMusic\"                                           content={contentTranslation('music.singular',)}/>\n            <PageProgress progress=\"page almost done\"            link=\"everySoundEffect\"                                     content={gameContentTranslation('sound effect.singular',)}/>\n            <PageProgress progress=\"page in progress\"            link=\"everySoundEffectCategory\"      exclusiveGame=\"SMM2\"   content={gameContentTranslation('sound effect category.singular',)}/>\n            <PageProgress progress=\"completed\"                   link=\"everyCourseTag\"                exclusiveGame=\"SMM2\"   content={gameContentTranslation('course tag.singular', {Course: course, course: courseAsLowerCase, Tag: tag, tag: tagAsLowerCase,},)}/>\n            <PageProgress progress=\"completed\"                   link=\"everyPredefinedMessage\"        exclusiveGame=\"SMM2\"   content={unfinishedText('Predefined message',)}/>\n            <PageProgress progress=\"completed\"                   link=\"everySampleCourse\"             exclusiveGame=\"SMM1\"   content={gameContentTranslation('sample course.singular', {SingularName: course, singularName: courseAsLowerCase,},)}/>\n            <PageProgress progress=\"page almost done\"            link=\"everyMedal\"                    exclusiveGame=\"SMM1\"   content={gameContentTranslation('medal.singular',)}/>\n            <PageProgress progress=\"data in progress\"                                                 exclusiveGame=\"SMM3DS\" content={unfinishedText('Super Mario Challenges levels',)}/>\n            <PageProgress progress=\"data in progress\"                                                 exclusiveGame=\"SMM2\"   content={unfinishedText('Job',)}/>\n            <PageProgress progress=\"data in progress\"                                                 exclusiveGame=\"SMM2\"   content={unfinishedText('Official notification',)}/>\n            <PageProgress progress=\"page with missing data\"      link=\"everyOfficialCourse\"                                  content={gameContentTranslation('official course.singular', {singularName: courseAsLowerCase, SingularName: course,})}/>\n            <PageProgress progress=\"data in progress\"                                                 exclusiveGame=\"SMM2\"   content={unfinishedText('Ninji speedrun',)}/>\n            <PageProgress progress=\"page almost done\"            link=\"everyMysteryMushroom\"          exclusiveGame=\"SMM1\"   content={mysteryMushroom}/>\n            <PageProgress progress=\"completed\"                   link=\"everyMiiCostume\"               exclusiveGame=\"SMM2\"   content={miiCostume}/>\n            <PageProgress progress=\"completed\"                   link=\"everyMiiCostumeCategory\"       exclusiveGame=\"SMM2\"   content={gameContentTranslation('mii costume category.singular', {SingularName: miiCostume, singularName: miiCostumeAsLowerCase, PluralName: miiCostumes, pluralName: miiCostumesAsLowerCase,},)}/>\n            <PageProgress progress=\"page in progress\"            link=\"everyEditorVoice\"                                     content={gameContentTranslation('editor voice.singular',)}/>\n            <PageProgress progress=\"page in progress\"            link=\"everyInstrument\"                                      content={gameContentTranslation('instrument.singular',)}/>\n            <PageProgress progress=\"page in progress\"            link=\"everyPowerUp&Ride&HatPriority\"                        content={gameContentTranslation('power-up, ride & hat priority.all.singular', {PowerUp: powerUp, powerUp: powerUpAsLowerCase, Ride: gameContentTranslation('ride.singular'), ride: gameContentTranslation('ride.singular').toLowerCase(), Hat: gameContentTranslation('hat.singular'), hat: gameContentTranslation('hat.singular').toLowerCase(),},)}/>\n        </div>\n    </>\n}\n"],"names":["LanguageCompanion","ProjectLanguages","Companion","PageProgress","_ref","progress","link","content","exclusiveGame","currentLanguage","current","exclusiveGameComponent","_jsxs","className","children","space","textInParentheses","createPageProgressType","Link","to","routeFromName","type","_jsx","contentTranslation","ENGLISH","AMERICAN_ENGLISH","EUROPEAN_ENGLISH","FRENCH","CANADIAN_FRENCH","EUROPEAN_FRENCH","GERMAN","SPANISH","AMERICAN_SPANISH","EUROPEAN_SPANISH","ITALIAN","DUTCH","PORTUGUESE","AMERICAN_PORTUGUESE","EUROPEAN_PORTUGUESE","RUSSIAN","JAPANESE","CHINESE","TRADITIONAL_CHINESE","SIMPLIFIED_CHINESE","KOREAN","HEBREW","POLISH","UKRAINIAN","GREEK","EveryLanguages","_originalLanguages","_classPrivateFieldLooseKey","_map","_englishContainer","_frenchContainer","_germanContainer","_spanishContainer","_italianContainer","_dutchContainer","_portugueseContainer","_russianContainer","_japaneseContainer","_chineseContainer","_koreanContainer","_hebrewContainer","_polishContainer","_ukrainianContainer","_greekContainer","SimpleNameContainer","constructor","english","french","german","spanish","italian","dutch","portuguese","russian","japanese","chinese","korean","hebrew","polish","ukrainian","greek","Object","defineProperty","writable","value","originalLanguages","isArray","push","_classPrivateFieldLooseBase","this","LanguageContainer","EmptyLanguageContainer","get","OptionalLanguageContainer","isUsed","languageValue","_Companion$current$ge","originalEnglish","original","americanEnglish","europeanEnglish","originalFrench","canadianFrench","europeanFrench","originalSpanish","americanSpanish","europeanSpanish","originalPortuguese","americanPortuguese","europeanPortuguese","originalChinese","traditionalChinese","simplifiedChinese","isHebrewUsed","isPolishUsed","isUkrainianUsed","isGreekUsed","toNameMap","_classPrivateFieldLoo","_classPrivateFieldLoo2","Map","map","language","_english","_french","_german","_spanish","_italian","_dutch","_portuguese","_russian","_japanese","_chinese","_korean","_hebrew","_polish","_ukrainian","_greek","SUPER_MARIO_WIKI_LINK","setEnglish","setFrench","_classPrivateFieldLoo3","setGerman","_classPrivateFieldLoo4","setSpanish","_classPrivateFieldLoo5","setItalian","_classPrivateFieldLoo6","setDutch","_classPrivateFieldLoo7","setPortuguese","_classPrivateFieldLoo8","setRussian","_classPrivateFieldLoo9","setJapanese","_classPrivateFieldLoo10","setChinese","_classPrivateFieldLoo11","setKorean","_classPrivateFieldLoo12","setHebrew","_classPrivateFieldLoo13","setPolish","_classPrivateFieldLoo14","setUkrainian","_classPrivateFieldLoo15","setGreek","build","assert","superMarioMaker","superMarioMakerForNintendo3DS","superMarioMaker2","MARIO_MAKER_2_WIKI_FANDOM_LINK","THE_CUTTING_FLOOR_LINK","HomeApp","_OtherWordInTheGames$","_OtherWordInTheGames$2","_OtherWordInTheGames$3","_OtherWordInTheGames$4","_OtherWordInTheGames$5","_OtherWordInTheGames$6","_OtherWordInTheGames$7","_OtherWordInTheGames$8","_OtherWordInTheGames$9","_OtherWordInTheGames$10","entity","OtherWordInTheGames","ENTITY","singularNameOnReferenceOrNull","unfinishedText","singularEnglishName","entityAsLowerCase","singularLowerCaseNameOnReferenceOrNull","toLowerCase","tag","TAG","singularNameOnReference","tagAsLowerCase","singularLowerCaseNameOnReference","course","COURSE","courseAsLowerCase","mysteryMushroom","MYSTERY_MUSHROOM","miiCostume","MII_COSTUME","miiCostumeAsLowerCase","miiCostumes","pluralNameOnReferenceOrNull","pluralEnglishName","miiCostumesAsLowerCase","pluralLowerCaseNameOnReferenceOrNull","powerUp","POWER_UP","powerUpAsLowerCase","_Fragment","role","id","marioWikiLink","href","marioFandomLink","theCuttingFloorLink","gitHubLink","replace","gameContentTranslation","Entity","Course","Tag","SingularName","singularName","PluralName","pluralName","PowerUp","Ride","ride","Hat","hat"],"sourceRoot":""}