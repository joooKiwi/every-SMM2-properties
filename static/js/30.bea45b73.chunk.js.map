{"version":3,"sources":["core/entityLimit/Limit.component.tsx"],"names":["LimitComponent","id","limits","displayAcronymIfApplicable","EntityLimits","createSingleComponent","selectedLimits","filter","map","length","limit","index","createReturnOfLine","englishName","ProjectLanguages","currentLanguage","comma","entityLimit","acronym","createSingleNameComponent","content","name","reference"],"mappings":"gPA2Be,SAASA,EAAT,GAA4F,IAAnEC,EAAkE,EAAlEA,GAAIC,EAA8D,EAA9DA,OAAQC,EAAsD,EAAtDA,2BAChD,GAAID,aAAkBE,eAClB,OAAOC,EAAsBJ,EAAIC,EAAQC,GAE7C,IAAMG,EAAiB,YAAIJ,GAAQK,QAAO,0CAA4BC,KAAI,0CAC1E,OAAiC,IAA1BF,EAAeG,OAChB,6BACA,mCAAGH,EAAeE,KAAI,SAACE,EAAOC,GAAR,OACpB,eAAC,WAAD,WAA8DN,EAAsBJ,EAAIS,EAAOP,GAA8BS,EAAmBN,EAAgBK,KAAhK,UAAkBD,EAAMG,YAAxB,aAAwCF,EAAQ,EAAhD,mBAAuDV,SAInE,SAASW,EAAmBN,EAAyCK,GACjE,OAAOA,IAAUL,EAAeG,OAAS,EAAI,6BAAQ,qCAAGK,IAAiBC,gBAAgBC,MAAM,0BAGnG,SAASX,EAAsBJ,EAAQgB,EAA2Bd,GAC9D,GAAIA,EAA4B,CAC5B,IAAMe,EAAUD,EAAYC,QAC5B,OAAe,MAAXA,EACOC,EAA0BlB,EAAIgB,GAClC,cAAC,UAAD,CAAoEhB,GAAE,8BAAyBA,GAAMmB,QAASF,GAA9G,UAAuBD,EAAYJ,YAAnC,6BAA8DZ,IAEzE,OAAOkB,EAA0BlB,EAAIgB,GAGzC,SAASE,EAA0BlB,EAAQgB,GACvC,OAAO,cAAC,UAAD,CAAiEhB,GAAE,2BAAsBA,GAAMoB,KAAMJ,EAAYK,WAAjH,UAAuBL,EAAYJ,YAAnC,0BAA2DZ","file":"static/js/30.bea45b73.chunk.js","sourcesContent":["import {Fragment} from 'react';\n\nimport type {ReactProperty} from '../../util/react/ReactProperty';\n\nimport {EntityLimits}     from './EntityLimits';\nimport NameComponent      from '../../lang/name/component/Name.component';\nimport {ProjectLanguages} from '../../lang/ProjectLanguages';\nimport TextComponent      from '../../app/tools/text/TextComponent';\n\ntype Id = `${| 'editor' | 'whilePlaying'}-${string}`;\n\ninterface EditorLimitProperties\n    extends ReactProperty {\n\n    id: Id\n\n    limits: | EntityLimits | ReadonlyMap<EntityLimits, boolean>\n\n    displayAcronymIfApplicable: boolean\n\n}\n\n/**\n *\n * @param properties\n * @reactComponent\n */\nexport default function LimitComponent({id, limits, displayAcronymIfApplicable,}: EditorLimitProperties,) {\n    if (limits instanceof EntityLimits)\n        return createSingleComponent(id, limits, displayAcronymIfApplicable,);\n\n    const selectedLimits = [...limits].filter(([, hasLimit]) => hasLimit).map(([limit,]) => limit);\n    return selectedLimits.length === 0\n        ? <></>\n        : <>{selectedLimits.map((limit, index,) =>\n            <Fragment key={`${limit.englishName} #${index + 1} → ${id}`}>{createSingleComponent(id, limit, displayAcronymIfApplicable,)}{createReturnOfLine(selectedLimits, index,)}</Fragment>\n        )}</>;\n}\n\nfunction createReturnOfLine(selectedLimits: readonly EntityLimits[], index: number,) {\n    return index === selectedLimits.length - 1 ? <></> : <>{ProjectLanguages.currentLanguage.comma}<br/></>;\n}\n\nfunction createSingleComponent(id: Id, entityLimit: EntityLimits, displayAcronymIfApplicable: boolean,) {\n    if (displayAcronymIfApplicable) {\n        const acronym = entityLimit.acronym;\n        if (acronym == null)\n            return createSingleNameComponent(id, entityLimit,);\n        return <TextComponent key={`${entityLimit.englishName} (acronym) → ${id}`} id={`entityLimit-acronym-${id}`} content={acronym}/>;\n    }\n    return createSingleNameComponent(id, entityLimit,);\n}\n\nfunction createSingleNameComponent(id: Id, entityLimit: EntityLimits,) {\n    return <NameComponent key={`${entityLimit.englishName} (name) → ${id}`} id={`entityLimit-name-${id}`} name={entityLimit.reference}/>;\n}"],"sourceRoot":""}