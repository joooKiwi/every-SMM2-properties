{"version":3,"file":"static/js/854.357aabe2.chunk.js","mappings":"8SAce,SAASA,EAAeC,GAA4C,IAA3C,UAACC,GAAsCD,EAC3E,MAAME,EAAaD,EAAUA,UAC7B,OAAOE,EAAAA,EAAAA,MAAA,OAAKC,GAAE,GAAAC,OAAKJ,EAAUK,kBAAiB,+BAA+BC,UAAU,uDAAsDC,SAAA,CACxIN,EAAWO,iBAAkBC,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CAACC,KAAMC,EAAAA,EAAyBN,UAAU,0CAA4C,KACzHL,EAAWY,gBAAiBJ,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CAACC,KAAMG,EAAAA,EAAwBR,UAAU,yCAA2C,OAE/H,C,gDCEO,MAAeS,UACVC,EAAAA,KAyFAC,WAAAA,GACJC,OACJ,CAWOC,aAAAA,CAAcC,GACjB,MAAO,CAACC,KAAKC,qBAAqBF,GACtC,CAOOG,iBAAAA,GACH,OAAOF,KAAKG,0BAChB,EAMHC,EAxHqBV,EAAAA,EAMKW,KAAwB,IAAI,cAAmCX,EAE/DO,oBAAAA,CAAqBF,GACpC,OAAOX,EAAAA,EAAAA,KAACkB,EAAAA,EAAU,CAAC3B,UAAWoB,GAClC,CAEmBI,wBAAAA,GACf,OAAOI,EAAAA,EAAcC,IAAIC,UAC7B,GAdcf,EAiBKgB,mBAAwB,IAAI,cAA+ChB,EAE3EO,oBAAAA,CAAoBvB,GAAqC,IAApC,sBAACiC,GAA+BjC,EACpE,OAAOU,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CAACC,KAAMqB,GACxB,CAEmBR,wBAAAA,GACf,MAAO,CAACS,IAAK,qBAAsBC,SAASC,EAAAA,EAAAA,GAAe,iBAC/D,GAzBcpB,EA4BKqB,KAAyB,IAAI,cAAiCrB,EAE9DO,oBAAAA,CAAqBF,GACpC,OAAOlB,EAAAA,EAAAA,MAAA,OAAKI,UAAU,4BAA2BC,SAAA,EAC7CL,EAAAA,EAAAA,MAAA,OAAKI,UAAU,SAAQC,SAAA,CAClBqB,EAAAA,EAAcC,IAAIQ,eAAejB,GACjCQ,EAAAA,EAAcC,IAAIS,eAAelB,OAEtCX,EAAAA,EAAAA,KAAA,OAAKH,UAAU,QAAOC,UAACE,EAAAA,EAAAA,KAACX,EAAe,CAACE,UAAWoB,QAE3D,CAEmBI,wBAAAA,GACf,OAAOI,EAAAA,EAAcC,IAAIU,UAC7B,GA1CcxB,EA6CKyB,aAAyB,IAAI,cAAyCzB,EAEtEO,oBAAAA,CAAoBmB,GAAyC,IAAvCzC,WAAW,YAAC0C,IAAuBD,EACxE,OAAOhC,EAAAA,EAAAA,KAACkC,EAAAA,EAAoB,CAACC,MAAOF,GACxC,CAEmBlB,wBAAAA,GACf,MAAO,CACHS,IAAK,SAAUC,SAAShC,EAAAA,EAAAA,MAAA,OAAKI,UAAU,+DAA8DC,SAAA,EACjGE,EAAAA,EAAAA,KAACkB,EAAAA,EAAU,CAAC3B,UAAW6C,EAAAA,EAAOC,UAC9BrC,EAAAA,EAAAA,KAACsC,EAAAA,EAAS,CAAC/C,UAAWgD,EAAAA,EAAMC,WAEhCC,SAASC,EAAAA,EAAAA,IAAuB,iBAAkB,CAACC,OAAOjB,EAAAA,EAAAA,GAAe,uBAEjF,GA3DcpB,EAkEKsC,eAAaC,GAAAC,EAAAA,EAAAA,GAAA,YAAAC,EAAkE,MAAMC,UAChGJ,EAAAA,cAMApC,WAAAA,GACJC,MAAMH,EACV,CAEA,cAAkBc,GAAO,IAAD6B,EAAAC,EACpB,OAAW,QAAXA,GAAAD,GAAAE,EAAAA,EAAAA,GAAOvC,KAAIiC,IAAAA,UAAA,IAAAK,EAAAA,EAAAD,EAAAJ,GAAe,IAAIG,CAClC,GAIHI,OAAAC,eAAAN,EAAAF,EAAA,CAAAS,UAAA,EAAAC,WAAA,IAAAR,GClGE,MAAMS,UACDjD,EAAAA,KAkDAC,WAAAA,GACJC,OACJ,CAKA,kBAAWgD,GACP,MAAO,SACX,CAEA,aAAWC,GACP,MAAO,SACX,CAKOC,qBAAAA,CAAsBC,GACzB,MAAM,GAANjE,OAAUiE,EAAKC,UAAS,gBAC5B,CAEOC,gBAAAA,CAAiBF,GACpB,MAAM,GAANjE,OAAUiE,EAAKC,UAAS,YAC5B,EAIHE,EA/EYP,EAAAA,EAKcQ,wDAA0D,IAAI,cAAwER,EAEzJ,aAAoBE,GAChB,MAAO,SACX,CAEgBC,qBAAAA,GACZ,OAAO,IACX,GAbKH,EAgBcS,oBAAsB,IAAI,cAA0CT,EAEvEM,gBAAAA,GACZ,OAAO,IACX,GApBKN,EA2BcZ,eAAaC,GAAAC,EAAAA,EAAAA,GAAA,YAAAoB,EAA0D,MAAMC,UACxFvB,EAAAA,cAMApC,WAAAA,GACJC,MAAM+C,EACV,CAEA,cAAkBpC,GAAO,IAAD6B,EAAAC,EACpB,OAAW,QAAXA,GAAAD,GAAAE,EAAAA,EAAAA,GAAOvC,KAAIiC,IAAAA,UAAA,IAAAK,EAAAA,EAAAD,EAAAJ,GAAe,IAAIsB,CAClC,GAIHf,OAAAC,eAAAa,EAAArB,EAAA,CAAAS,UAAA,EAAAC,WAAA,IAAAW,G,4FCtCU,SAASE,EAAiB9E,GAA8C,IAA7C,UAACC,GAAwCD,EAC/E,OAAOU,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CAACC,KAAMX,EAAUgC,sBAAuB1B,UAAU,sBACnE,C,eCoBOwE,EAASC,EAAAA,EAAMD,KACfE,EAASD,EAAAA,EAAMC,KACfC,EAASF,EAAAA,EAAME,OAAMC,GAAA3B,EAAAA,EAAAA,GAAA,QAAA4B,GAAA5B,EAAAA,EAAAA,GAAA,SAE5B,MAAM6B,EAWKnE,WAAAA,CAAYoD,EAAkBgB,GARrCxB,OAAAC,eAAA,KAAAoB,EAAA,CAAAnB,UAAA,EAAAC,WAAA,IAAAH,OAAAC,eAAA,KAAAqB,EAAA,CAAApB,UAAA,EAAAC,WAAA,IA0DA,KAEgBsB,kBAAoB,OAAM,KAC1BC,cAAepC,EAAAA,EAAAA,IAAuB,kBApDlDS,EAAAA,EAAAA,GAAAvC,KAAI6D,GAAAA,GAASb,GACbT,EAAAA,EAAAA,GAAAvC,KAAI8D,GAAAA,GAAUE,CAClB,CAIA,WAAWG,GACP,MAAMH,GAAKzB,EAAAA,EAAAA,GAAGvC,KAAI8D,GAAAA,GAClB,OAAOM,EAAAA,EAAAA,gBAAc7B,EAAAA,EAAAA,GAAAvC,KAAI6D,GAAAA,GAAOM,SAASzF,IAAA,IAAC,UAACC,GAAWD,EAAA,OAClDsF,EAAMK,SAAS1F,EAAW,GAClC,CAIO2F,uBAAAA,GACH,MAAMtB,GAAIT,EAAAA,EAAAA,GAAGvC,KAAI6D,GAAAA,GACjB,OAAIb,IAASuB,EAAAA,EAAWC,OACb,CACHC,QAAS,EACTC,MAAO,EACPC,OAAQ,GAEZ3B,IAASuB,EAAAA,EAAWK,MACb,CACHH,QAAS,EACTC,MAAO,EACPC,OAAQ,GAET,CACHF,QAAS,EACTC,MAAO,EACPC,OAAQ,EACRE,MAAO,EACPC,WAAY,EAEpB,CAEOC,qBAAAA,CAAsBC,GACzB,OAAOnG,EAAAA,EAAAA,MAAA,OAAKI,UAAU,YAAYH,GAAE,SAAAC,OAAWiG,EAAWhG,mBAAoBE,SAAA,EAC1EE,EAAAA,EAAAA,KAAA,OAAKH,UAAU,QAAOC,SAAEqB,EAAAA,EAAcC,IAAIQ,eAAegE,MACzDnG,EAAAA,EAAAA,MAAA,OAAKI,UAAU,yBAAwBC,SAAA,EACnCE,EAAAA,EAAAA,KAACkB,EAAAA,EAAU,CAAC3B,UAAWqG,EAAYC,aAAW,KAC9C7F,EAAAA,EAAAA,KAACoE,EAAiB,CAAC7E,UAAWqG,QAElC5F,EAAAA,EAAAA,KAAA,OAAKH,UAAU,QAAOC,UAACE,EAAAA,EAAAA,KAACX,EAAe,CAACE,UAAWqG,QAE3D,CAQA,gBAAWE,GACP,MAAO,CACHxF,EAAeW,KACfX,EAAegB,mBACfhB,EAAeqB,KACfrB,EAAeyB,aAEvB,CAGOgE,kBAAAA,CAAmBhB,EAAiBiB,GACvC,OAAOA,EAAOtF,cAAcqE,EAChC,CAEOkB,iBAAAA,CAAkBD,GACrB,OAAOA,EAAOlF,mBAClB,EAOW,SAASoF,EAAQlE,GAAoD,IAAnD,YAACmE,EAAW,KAAEvC,EAAI,MAAEgB,GAA2B5C,EAC5E,MAAM6B,EAAYD,EAAKC,UACjBuC,EAA0B,CAC5B,CAACC,EAAAA,EAAaC,YAAY,GAAD3G,OAAKkE,EAAS,YACvC,CAACwC,EAAAA,EAAaE,UAAU,GAAD5G,OAAKkE,EAAS,YACrC,CAACwC,EAAAA,EAAaG,MAAM,GAAD7G,OAAKkE,EAAS,cAGrC,OAAO7D,EAAAA,EAAAA,KAACyG,EAAAA,EAAgB,CAACC,SAAS,QAAQN,wBAAyBA,EAAyBD,YAAaA,EAChFQ,cAAcjE,EAAAA,EAAAA,IAAuB,iBACrCkE,cAAc5G,EAAAA,EAAAA,KAAC6G,EAAiB,CAACjD,KAAMA,EAAMgB,MAAOA,IAAS9E,UAClFE,EAAAA,EAAAA,KAAC8G,EAAU,CAACX,YAAaA,EAAavC,KAAMA,EAAMgB,MAAOA,KAEjE,CAGA,SAASkC,EAAUC,GAAoF,IAAnF,YAACZ,EAAW,KAAEvC,EAAI,MAAEgB,GAA2DmC,EAC/F,MAAMC,EAAiB,IAAIrC,EAAoBf,EAAMgB,GAErD,OAAIuB,IAAgBE,EAAAA,EAAaC,aACtBtG,EAAAA,EAAAA,KAACiH,EAAS,CAACC,MAAOF,EAAejC,UACxCoB,IAAgBE,EAAAA,EAAaE,WACtBvG,EAAAA,EAAAA,KAACmH,EAAAA,EAAQ,CAACT,SAAS,QAAQU,YAAaJ,KAC5ChH,EAAAA,EAAAA,KAACqH,EAAAA,EAAK,CAAC3H,GAAG,cAAc0H,YAAaJ,GAChD,CAYA,SAASC,EAASK,GAAmC,IAAlC,MAACJ,GAA6BI,EAC7C,OAAOtH,EAAAA,EAAAA,KAACuH,EAAAA,EAAI,CAACC,UAAU,QAAQN,MAAOA,EAAOO,eAAa,EAAA3H,SAAE4H,IACxDjI,EAAAA,EAAAA,MAAA,OAAKI,UAAU,oDAAmDC,SAAA,EAC9DE,EAAAA,EAAAA,KAAC2H,EAAAA,EAAa,CAACjI,GAAG,aAAakI,KAAMF,EAAGnI,UAAWsI,mBAAmB,WACtEpI,EAAAA,EAAAA,MAAA,OAAKI,UAAU,wBAAuBC,SAAA,EAClCE,EAAAA,EAAAA,KAACkB,EAAAA,EAAU,CAAC3B,UAAWmI,KACvB1H,EAAAA,EAAAA,KAACX,EAAe,CAACE,UAAWmI,KAC5B1H,EAAAA,EAAAA,KAACoE,EAAiB,CAAC7E,UAAWmI,WAI9C,CAeA,SAASb,EAAiBiB,GAAgD,IAA/C,KAAClE,EAAI,MAAEgB,GAAoCkD,EAClE,OAAOrI,EAAAA,EAAAA,MAAA,OAAKI,UAAU,+BAA8BC,SAAA,EAChDE,EAAAA,EAAAA,KAAC+H,EAAgB,CAACnE,KAAMA,KACxB5D,EAAAA,EAAAA,KAAA,OAAKH,UAAU,mBACfG,EAAAA,EAAAA,KAACgI,EAAgB,CAACpE,KAAMA,EAAMgB,MAAOA,MAE7C,CAGA,SAASmD,EAAgBE,GAAuD,IAAtD,KAACrE,GAAiDqE,EACxE,OAAOxI,EAAAA,EAAAA,MAAA,OAAKC,GAAG,6BAA6BG,UAAU,4CAA2CC,SAAA,EAC7FE,EAAAA,EAAAA,KAACkI,EAAAA,EAAU,CAACV,UAAU,WAAW3D,UAAWD,EAAKuE,aAAcC,MAAOxE,EAAKyE,SAASvI,UAAEwI,EAAAA,EAAAA,IAAmB,UACzG7I,EAAAA,EAAAA,MAAA,OAAKC,GAAG,4CAA4CG,UAAU,yBAAwBC,SAAA,EAClFE,EAAAA,EAAAA,KAACkI,EAAAA,EAAU,CAACV,UAAU,cAAc3D,UAAWD,EAAK2E,gBAAiBH,MAAOxE,EAAK4E,YAAY1I,UACzFE,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CAACP,GAAG,2BAA2BQ,KAAMC,EAAAA,EAAyBN,UAAU,0BAElFG,EAAAA,EAAAA,KAACkI,EAAAA,EAAU,CAACV,UAAU,aAAa3D,UAAWD,EAAK6E,eAAgBL,MAAOxE,EAAK8E,WAAW5I,UACtFE,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CAACP,GAAG,0BAA0BQ,KAAMG,EAAAA,EAAwBR,UAAU,8BAI5F,CAGA,SAASmI,EAAgBW,GAAgD,IAA/C,KAAC/E,EAAI,MAAEgB,GAAoC+D,EACjE,MAAMC,EAAYhE,EAAMiE,QAClBrF,EAAWS,oBACXT,EAAWQ,wDAEjB,OAAOvE,EAAAA,EAAAA,MAAA,OAAKC,GAAG,2CAA2CG,UAAU,oDAAmDC,SAAA,EACnHL,EAAAA,EAAAA,MAACyI,EAAAA,EAAU,CAACV,UAAU,gBAAgB3D,UAAW+E,EAAUjF,sBAAsBC,GAAQwE,MAAOQ,EAAUnF,eAAe3D,SAAA,EACrHE,EAAAA,EAAAA,KAAC8I,EAAAA,EAAS,CAACvJ,UAAW8E,KACtBrE,EAAAA,EAAAA,KAAC8I,EAAAA,EAAS,CAACvJ,UAAWiF,QAE1BxE,EAAAA,EAAAA,KAACkI,EAAAA,EAAU,CAACV,UAAU,WAAW3D,UAAW+E,EAAU9E,iBAAiBF,GAAQwE,MAAOQ,EAAUlF,UAAU5D,UACtGE,EAAAA,EAAAA,KAAC8I,EAAAA,EAAS,CAACvJ,UAAWgF,QAGlC,C,sEC5Me,SAAS2D,EAAU5I,GAA8H,IAA7H,UAACkI,EAAS,UAAE3D,EAAS,MAAEuE,EAAK,SAAEtI,GAA2FR,EACxJ,MAAMI,EAAE,GAAAC,OAAM6H,EAAS,WACjB3H,EAAS,WAAAF,OAAcyI,EAAK,gBAElC,OAAiB,MAAbvE,GACO7D,EAAAA,EAAAA,KAAA,UAAQ4D,KAAK,SAASlE,GAAIA,EAAIG,UAAWA,EAAWkJ,UAAQ,EAAAjJ,SAAEA,KAClEE,EAAAA,EAAAA,KAACgJ,EAAAA,GAAI,CAACpF,KAAK,SAASlE,GAAIA,EAAIG,UAAWA,EAAWoJ,IAAIC,EAAAA,EAAAA,GAAcrF,GAAY/D,SAAEA,GAC7F,C,4DCPe,SAASoC,EAAqBiH,GACzC,MAAO,cAAeA,GAChBnJ,EAAAA,EAAAA,KAACoJ,EAAsB,IAAKD,KAC5BnJ,EAAAA,EAAAA,KAACqJ,EAAkB,IAAKF,GAClC,CAEA,SAASC,EAAsB9J,GAA6G,IAA3GgK,WAAYC,8BAA+BC,IAA4DlK,EACpI,OAAyB,MAAlBkK,EAAyB,MAAOxJ,EAAAA,EAAAA,KAAAyJ,EAAAA,SAAA,CAAA3J,UAAG4C,EAAAA,EAAAA,IAAuB,qCAAD/C,OAAsC6J,KAC1G,CAEA,SAASH,EAAkBrH,GAA8D,IAAD0H,EAAA,IAA3DvH,OAAO,OAACwH,IAAgD3H,EACjF,OAAiC,QAAjC0H,EAAa,OAANC,QAAM,IAANA,OAAM,EAANA,EAAQC,0BAAkB,IAAAF,EAAAA,EAAI,IACzC,C,sEC5BOG,EAAeC,EAAAA,EAAMD,aAYb,SAASvH,EAAShD,GAAiD,IAAhD,UAACC,EAAS,UAAEM,GAAgCP,EAC1E,OAAiB,MAAbC,EACO,MACJS,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CAACC,KAAMX,EAAUwK,UAAWlK,UAAS,cAAAF,OAAgBJ,EAAUK,kBAAiB,UAAAD,OAAsB,MAAbE,EAAoBgK,EAAY,IAAAlK,OAAOE,KACjJ,C","sources":["core/theme/component/ThemeTypeImages.tsx","app/options/ThemeAppOption.tsx","app/property/ThemeGames.ts","core/theme/component/EndlessMarioImage.tsx","app/ThemeApp.tsx","app/tools/button/LinkButton.tsx","core/nightEffect/NightEffect.component.tsx","core/time/component/TimeImage.tsx"],"sourcesContent":["import type {Themes}          from 'core/theme/Themes'\nimport type {ReactProperties} from 'util/react/ReactProperties'\n\nimport {COURSE_THEME_IMAGE_FILE, WORLD_THEME_IMAGE_FILE} from 'app/options/file/themeImageFiles'\nimport Image                                             from 'app/tools/images/Image'\n\ninterface ThemeTypeImagesProperties\n    extends ReactProperties {\n\n    readonly reference: Themes\n\n}\n\n/** @reactComponent */\nexport default function ThemeTypeImages({reference,}: ThemeTypeImagesProperties,) {\n    const reference2 = reference.reference\n    return <div id={`${reference.englishNameInHtml}-themeTypesImages-container`} className=\"themeTypesImages-container d-inline-flex flex-column\">\n        {reference2.isInCourseTheme ? <Image file={COURSE_THEME_IMAGE_FILE} className=\"themeType-image themeType-courseTheme\"/> : null}\n        {reference2.isInWorldTheme ? <Image file={WORLD_THEME_IMAGE_FILE} className=\"themeType-image themeType-worldTheme\"/> : null}\n    </div>\n}\n","import type {CompanionEnumSingleton} from '@joookiwi/enumerable'\nimport {CompanionEnum, Enum}         from '@joookiwi/enumerable'\n\nimport type {AppOption}           from 'app/options/AppOption'\nimport type {Names, Ordinals}     from 'app/options/ThemeAppOption.types'\nimport type {SingleHeaderContent} from 'app/tools/table/SimpleHeader'\n\nimport {CommonOptions}          from 'app/options/CommonOptions'\nimport Image                    from 'app/tools/images/Image'\nimport {unfinishedText}         from 'app/tools/text/UnfinishedText'\nimport NightEffectComponent     from 'core/nightEffect/NightEffect.component'\nimport {Themes}                 from 'core/theme/Themes'\nimport ThemeImage               from 'core/theme/component/ThemeImage'\nimport ThemeTypeImages          from 'core/theme/component/ThemeTypeImages'\nimport {Times}                  from 'core/time/Times'\nimport TimeImage                from 'core/time/component/TimeImage'\nimport {gameContentTranslation} from 'lang/components/translationMethods'\n\n/**\n * @todo change the SMM1 & SMM2 yes/no result into something different like the sounds or other things\n * @fixme if the yes/no is still in used after the change, use Texts.renderYesNoComponent() instead.\n */\nexport abstract class ThemeAppOption\n    extends Enum<Ordinals, Names>\n    implements AppOption<Themes> {\n\n    //region -------------------- Enum instances --------------------\n\n    public static readonly ICON =                  new class ThemeAppOption_Image extends ThemeAppOption {\n\n        protected override _createContentOption(enumeration: Themes,) {\n            return <ThemeImage reference={enumeration}/>\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return CommonOptions.get.iconHeader\n        }\n\n    }()\n    public static readonly ENDLESS_MARIO_ICON =    new class ThemeAppOption_EndlessMarioImage extends ThemeAppOption {\n\n        protected override _createContentOption({endlessMarioImageFile,}: Themes,) {\n            return <Image file={endlessMarioImageFile}/>\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {key: 'endless-mario-icon', element: unfinishedText('Endless Mario',),}//TODO add Endless Mario\n        }\n\n    }()\n    public static readonly NAME =                   new class ThemeAppOptionName extends ThemeAppOption {\n\n        protected override _createContentOption(enumeration: Themes,) {\n            return <div className=\"nameWithContent-container\">\n                <div className=\"col-10\">\n                    {CommonOptions.get.getGameContent(enumeration,)}\n                    {CommonOptions.get.getNameContent(enumeration,)}\n                </div>\n                <div className=\"col-2\"><ThemeTypeImages reference={enumeration}/></div>\n            </div>\n        }\n\n        protected override _createTableHeaderOption() {\n            return CommonOptions.get.nameHeader\n        }\n\n    }()\n    public static readonly NIGHT_EFFECT =           new class ThemeAppOption_NightEffect extends ThemeAppOption {\n\n        protected override _createContentOption({reference: {courseTheme,},}: Themes,) {\n            return <NightEffectComponent theme={courseTheme}/>\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {\n                key: 'effect', element: <div className=\"nightDesert-header-image-container position-relative mx-auto\">\n                    <ThemeImage reference={Themes.DESERT}/>\n                    <TimeImage reference={Times.NIGHT}/>\n                </div>,\n                tooltip: gameContentTranslation('Effect (night)', {night: unfinishedText('night effect name',),},)//TODO add translation for the night effect name\n            }\n        }\n\n    }()\n\n    //endregion -------------------- Enum instances --------------------\n    //region -------------------- Companion enum --------------------\n\n    public static readonly CompanionEnum: CompanionEnumSingleton<ThemeAppOption, typeof ThemeAppOption> = class CompanionEnum_ThemeAppOption\n        extends CompanionEnum<ThemeAppOption, typeof ThemeAppOption> {\n\n        //region -------------------- Singleton usage --------------------\n\n        static #instance?: CompanionEnum_ThemeAppOption\n\n        private constructor() {\n            super(ThemeAppOption,)\n        }\n\n        public static get get() {\n            return this.#instance ??= new CompanionEnum_ThemeAppOption()\n        }\n\n        //endregion -------------------- Singleton usage --------------------\n\n    }\n\n    //endregion -------------------- Companion enum --------------------\n    //region -------------------- Fields --------------------\n    //endregion -------------------- Fields --------------------\n    //region -------------------- Constructor --------------------\n\n    private constructor() {\n        super()\n    }\n\n    //endregion -------------------- Constructor --------------------\n    //region -------------------- Getter methods --------------------\n    //endregion -------------------- Getter methods --------------------\n    //region -------------------- Methods --------------------\n\n    //region -------------------- App option - content --------------------\n\n    protected abstract _createContentOption(enumeration: Themes,): ReactElement\n\n    public renderContent(enumeration: Themes,): readonly [ReactElement,] {\n        return [this._createContentOption(enumeration,),]\n    }\n\n    //endregion -------------------- App option - content --------------------\n    //region -------------------- App option - table --------------------\n\n    protected abstract _createTableHeaderOption(): SingleHeaderContent\n\n    public renderTableHeader(): SingleHeaderContent {\n        return this._createTableHeaderOption()\n    }\n\n    //endregion -------------------- App option - table --------------------\n\n    //endregion -------------------- Methods --------------------\n\n}\n","import type {CompanionEnumSingleton} from '@joookiwi/enumerable'\nimport type {NullOrString}           from '@joookiwi/type'\nimport {CompanionEnum, Enum}         from '@joookiwi/enumerable'\n\nimport type {Names, Ordinals, PossibleRouteName} from 'app/property/ThemeGames.types'\nimport type {ThemeTypes}                         from 'app/property/ThemeTypes'\n\nexport class ThemeGames\n    extends Enum<Ordinals, Names> {\n\n    //region -------------------- Enum instances --------------------\n\n    public static readonly SUPER_MARIO_MAKER_OR_SUPER_MARIO_MAKER_FOR_NINTENDO_3DS = new class ThemeGames_SuperMarioMakerOrSuperMarioMakerForNintendo3DS extends ThemeGames {\n\n        public override get smm2Color(): PossibleColor {\n            return 'warning'\n        }\n\n        public override getSmm1Or3dsRouteName() {\n            return null\n        }\n\n    }()\n    public static readonly SUPER_MARIO_MAKER_2 = new class ThemeGames_SuperMarioMaker2 extends ThemeGames {\n\n        public override getSmm2RouteName() {\n            return null\n        }\n\n    }()\n\n    //endregion -------------------- Enum instances --------------------\n    //region -------------------- Companion enum --------------------\n\n    public static readonly CompanionEnum: CompanionEnumSingleton<ThemeGames, typeof ThemeGames> = class CompanionEnum_ThemeGames\n        extends CompanionEnum<ThemeGames, typeof ThemeGames> {\n\n        //region -------------------- Singleton usage --------------------\n\n        static #instance?: CompanionEnum_ThemeGames\n\n        private constructor() {\n            super(ThemeGames,)\n        }\n\n        public static get get() {\n            return this.#instance ??= new CompanionEnum_ThemeGames()\n        }\n\n        //endregion -------------------- Singleton usage --------------------\n\n    }\n\n    //endregion -------------------- Companion enum --------------------\n    //region -------------------- Fields --------------------\n    //endregion -------------------- Fields --------------------\n    //region -------------------- Constructor --------------------\n\n    private constructor() {\n        super()\n    }\n\n    //endregion -------------------- Constructor --------------------\n    //region -------------------- Getter methods --------------------\n\n    public get smm1Or3dsColor(): PossibleColor {\n        return 'success'\n    }\n\n    public get smm2Color(): PossibleColor {\n        return 'success'\n    }\n\n    //endregion -------------------- Getter methods --------------------\n    //region -------------------- Methods --------------------\n\n    public getSmm1Or3dsRouteName(type: ThemeTypes,): NullOrString<PossibleRouteName> {\n        return `${type.routeName} (Game=1&3DS)`\n    }\n\n    public getSmm2RouteName(type: ThemeTypes,): NullOrString<PossibleRouteName> {\n        return `${type.routeName} (Game=2)`\n    }\n\n    //endregion -------------------- Methods --------------------\n\n}\n\ntype PossibleColor = Extract<BootstrapColor, | 'success' | 'warning'>\n","import type {Themes}          from 'core/theme/Themes'\nimport type {ReactProperties} from 'util/react/ReactProperties'\n\nimport Image from 'app/tools/images/Image'\n\ninterface EndlessMarioImageProperties\n    extends ReactProperties {\n\n    readonly reference: Themes\n\n}\n\n/** @reactComponent */\nexport default function EndlessMarioImage({reference,}: EndlessMarioImageProperties,) {\n    return <Image file={reference.endlessMarioImageFile} className=\"endlessMario-image\"/>\n}\n","import 'app/_GameAsideContent.scss'\nimport './ThemeApp.scss'\n\nimport type {Array}            from '@joookiwi/type'\nimport type {CollectionHolder} from '@joookiwi/collection'\nimport {filterByArray}         from '@joookiwi/collection'\n\nimport type {ThemeAppProperties}      from 'app/AppProperties.types'\nimport type {AppInterpreterWithTable} from 'app/interpreter/AppInterpreterWithTable'\nimport type {DimensionOnList}         from 'app/interpreter/DimensionOnList'\nimport type {ViewAndRouteName}        from 'app/withInterpreter/DisplayButtonGroup.properties'\nimport type {Themes}                  from 'core/theme/Themes'\nimport type {GameCollection}          from 'util/collection/GameCollection'\nimport type {ReactProperties}         from 'util/react/ReactProperties'\n\nimport SubMainContainer                                  from 'app/_SubMainContainer'\nimport {CommonOptions}                                   from 'app/options/CommonOptions'\nimport {ThemeAppOption}                                  from 'app/options/ThemeAppOption'\nimport {COURSE_THEME_IMAGE_FILE, WORLD_THEME_IMAGE_FILE} from 'app/options/file/themeImageFiles'\nimport {ThemeGames}                                      from 'app/property/ThemeGames'\nimport {ThemeTypes}                                      from 'app/property/ThemeTypes'\nimport LinkButton                                        from 'app/tools/button/LinkButton'\nimport Image                                             from 'app/tools/images/Image'\nimport Table                                             from 'app/tools/table/Table'\nimport List                                              from 'app/util/List'\nimport CardList                                          from 'app/withInterpreter/CardList'\nimport {ViewDisplays}                                    from 'app/withInterpreter/ViewDisplays'\nimport {Games}                                           from 'core/game/Games'\nimport GameImage                                         from 'core/game/component/GameImage'\nimport EndlessMarioImage                                 from 'core/theme/component/EndlessMarioImage'\nimport ThemeImage                                        from 'core/theme/component/ThemeImage'\nimport ThemeTypeImages                                   from 'core/theme/component/ThemeTypeImages'\nimport {contentTranslation, gameContentTranslation}      from 'lang/components/translationMethods'\nimport NameComponent                                     from 'lang/name/component/Name.component'\n\nimport SMM1 =   Games.SMM1\nimport SMM2 =   Games.SMM2\nimport SMM3DS = Games.SMM3DS\n\nclass ThemeAppInterpreter\n    implements AppInterpreterWithTable<Themes, ThemeAppOption> {\n\n    //region -------------------- Fields --------------------\n\n    readonly #type\n    readonly #games\n\n    //endregion -------------------- Fields --------------------\n    //region -------------------- Constructor --------------------\n\n    public constructor(type: ThemeTypes, games: GameCollection,) {\n        this.#type = type\n        this.#games = games\n    }\n\n    //endregion -------------------- Constructor --------------------\n\n    public get content() {\n        const games = this.#games\n        return filterByArray(this.#type.content, ({reference,},) =>\n            games.hasAnyIn(reference,),)\n    }\n\n    //region -------------------- Card --------------------\n\n    public createCardListDimension() {\n        const type = this.#type\n        if (type === ThemeTypes.COURSE)\n            return {\n                default: 1,\n                small: 2,\n                medium: 5,\n            } as const satisfies DimensionOnList\n        if (type === ThemeTypes.WORLD)\n            return {\n                default: 1,\n                small: 2,\n                medium: 4,\n            } as const satisfies DimensionOnList\n        return {\n            default: 1,\n            small: 2,\n            medium: 3,\n            large: 4,\n            extraLarge: 6,\n        } as const satisfies DimensionOnList\n    }\n\n    public createCardListContent(enumerable: Themes,) {\n        return <div className=\"card-body\" id={`theme-${enumerable.englishNameInHtml}`}>\n            <div className=\"col-2\">{CommonOptions.get.getGameContent(enumerable,)}</div>\n            <div className=\"images-container col-7\">\n                <ThemeImage reference={enumerable} isSmallPath/>\n                <EndlessMarioImage reference={enumerable}/>\n            </div>\n            <div className=\"col-2\"><ThemeTypeImages reference={enumerable}/></div>\n        </div>\n    }\n\n    //endregion -------------------- Card  --------------------\n    //region -------------------- Table --------------------\n\n    public readonly tableHeadersColor = 'info' satisfies BootstrapThemeColor\n    public readonly tableCaption = gameContentTranslation('theme.all.all',) satisfies ReactElementOrString\n\n    public get tableOptions(): Array<ThemeAppOption> {\n        return [\n            ThemeAppOption.ICON,\n            ThemeAppOption.ENDLESS_MARIO_ICON,\n            ThemeAppOption.NAME,\n            ThemeAppOption.NIGHT_EFFECT,\n        ]\n    }\n\n\n    public createTableContent(content: Themes, option: ThemeAppOption,) {\n        return option.renderContent(content,)\n    }\n\n    public createTableHeader(option: ThemeAppOption,) {\n        return option.renderTableHeader()\n    }\n\n    //endregion -------------------- Table --------------------\n\n}\n\n/** @reactComponent */\nexport default function ThemeApp({viewDisplay, type, games,}: ThemeAppProperties,) {\n    const routeName = type.routeName\n    const viewDisplayAndRouteName = [\n        [ViewDisplays.SIMPLE_LIST, `${routeName} (list)`,],\n        [ViewDisplays.CARD_LIST, `${routeName} (card)`,],\n        [ViewDisplays.TABLE, `${routeName} (table)`,],\n    ] as const satisfies Array<ViewAndRouteName>\n\n    return <SubMainContainer reactKey=\"theme\" viewDisplayAndRouteName={viewDisplayAndRouteName} viewDisplay={viewDisplay}\n                             titleContent={gameContentTranslation('theme.all.all',)}\n                             asideContent={<ThemeAsideContent type={type} games={games}/>}>\n        <SubContent viewDisplay={viewDisplay} type={type} games={games}/>\n    </SubMainContainer>\n}\n\n/** @reactComponent */\nfunction SubContent({viewDisplay, type, games,}: Omit<ThemeAppProperties, | 'gameStyles' | 'times'>,) {\n    const appInterpreter = new ThemeAppInterpreter(type, games,)\n\n    if (viewDisplay === ViewDisplays.SIMPLE_LIST)\n        return <ThemeList items={appInterpreter.content}/>\n    if (viewDisplay === ViewDisplays.CARD_LIST)\n        return <CardList reactKey=\"theme\" interpreter={appInterpreter}/>\n    return <Table id=\"theme-table\" interpreter={appInterpreter}/>\n}\n\n//region -------------------- List --------------------\n\ninterface Theme_ListProperties\n    extends ReactProperties {\n\n    readonly items: CollectionHolder<Themes>\n\n}\n\n/** @reactComponent */\nfunction ThemeList({items,}: Theme_ListProperties,) {\n    return <List partialId=\"theme\" items={items} withSeparator>{it =>\n        <div className=\"d-flex justify-content-between align-items-center\">\n            <NameComponent id=\"theme-name\" name={it.reference} popoverOrientation=\"right\"/>\n            <div className=\"images-container ms-1\">\n                <ThemeImage reference={it}/>\n                <ThemeTypeImages reference={it}/>\n                <EndlessMarioImage reference={it}/>\n            </div>\n        </div>\n    }</List>\n}\n\n//endregion -------------------- List --------------------\n//region -------------------- Aside content --------------------\n\ninterface ThemeAsideContentProperties\n    extends ReactProperties {\n\n    readonly type: ThemeTypes\n\n    readonly games: GameCollection\n\n}\n\n/** @reactComponent */\nfunction ThemeAsideContent({type, games,}: ThemeAsideContentProperties,) {\n    return <div className=\"theme-asideContent-container\">\n        <TypeAsideContent type={type}/>\n        <div className=\"d-inline mx-1\"/>\n        <GameAsideContent type={type} games={games}/>\n    </div>\n}\n\n/** @reactComponent */\nfunction TypeAsideContent({type,}: Pick<ThemeAsideContentProperties, 'type'>,) {\n    return <div id=\"theme-linkButton-container\" className=\"btn-group btn-group-vertical btn-group-sm\">\n        <LinkButton partialId=\"allTheme\" routeName={type.allRouteName} color={type.allColor}>{contentTranslation('All',)}</LinkButton>\n        <div id=\"theme-linkButton-courseAndWorld-container\" className=\"btn-group btn-group-sm\">\n            <LinkButton partialId=\"courseTheme\" routeName={type.courseRouteName} color={type.courseColor}>\n                <Image id=\"courseTheme-button-image\" file={COURSE_THEME_IMAGE_FILE} className=\"theme-button-image\"/>\n            </LinkButton>\n            <LinkButton partialId=\"worldTheme\" routeName={type.worldRouteName} color={type.worldColor}>\n                <Image id=\"worldTheme-button-image\" file={WORLD_THEME_IMAGE_FILE} className=\"theme-button-image\"/>\n            </LinkButton>\n        </div>\n    </div>\n}\n\n/** @reactComponent */\nfunction GameAsideContent({type, games,}: ThemeAsideContentProperties,) {\n    const themeGame = games.hasSmm2\n        ? ThemeGames.SUPER_MARIO_MAKER_2\n        : ThemeGames.SUPER_MARIO_MAKER_OR_SUPER_MARIO_MAKER_FOR_NINTENDO_3DS\n\n    return <div id=\"theme-gamesButton-singularGame-container\" className=\"gameAsideContent-container btn-group btn-group-sm\">\n        <LinkButton partialId=\"smm1Or3dsGame\" routeName={themeGame.getSmm1Or3dsRouteName(type,)} color={themeGame.smm1Or3dsColor}>\n            <GameImage reference={SMM1}/>\n            <GameImage reference={SMM3DS}/>\n        </LinkButton>\n        <LinkButton partialId=\"smm2Game\" routeName={themeGame.getSmm2RouteName(type,)} color={themeGame.smm2Color}>\n            <GameImage reference={SMM2}/>\n        </LinkButton>\n    </div>\n}\n\n//endregion -------------------- Aside content --------------------\n","import type {NullableString} from '@joookiwi/type'\nimport {Link}                from 'react-router-dom'\n\nimport type {PossibleRouteName}                            from 'route/EveryRoutes.types'\nimport type {ReactProperties, ReactPropertiesWithChildren} from 'util/react/ReactProperties'\n\nimport {routeFromName} from 'route/method/route.fromName'\n\ninterface LinkButtonsProperties\n    extends ReactProperties {\n\n    readonly partialId: string\n\n    readonly routeName: NullableString<PossibleRouteName>\n\n    readonly color: BootstrapColor\n\n}\n\n/**\n * Create a {@link Link} button or a disabled button (if the {@link LinkButtonsProperties.routeName route name} is <b>null</b>)\n *\n * @reactComponent\n */\nexport default function LinkButton({partialId, routeName, color, children,}: ReactPropertiesWithChildren<LinkButtonsProperties, ReactElementOrStringOrArray>,) {\n    const id = `${partialId}-button`\n    const className = `btn btn-${color} link-button`\n\n    if (routeName == null)\n        return <button type=\"button\" id={id} className={className} disabled>{children}</button>\n    return <Link type=\"button\" id={id} className={className} to={routeFromName(routeName,)}>{children}</Link>\n}\n","import type {GameStyle}       from 'core/gameStyle/GameStyle'\nimport type {CourseTheme}     from 'core/theme/CourseTheme'\nimport type {ReactProperties} from 'util/react/ReactProperties'\n\nimport {gameContentTranslation} from 'lang/components/translationMethods'\n\ninterface NightEffectComponentProperties_GameStyle\n    extends ReactProperties {\n\n    readonly gameStyle: GameStyle\n\n}\n\ninterface NightEffectComponentProperties_Theme\n    extends ReactProperties {\n\n    readonly theme: CourseTheme\n\n}\n\n/**\n * @param properties\n * @reactComponent\n */\nexport default function NightEffectComponent(properties: | NightEffectComponentProperties_GameStyle | NightEffectComponentProperties_Theme,) {\n    return 'gameStyle' in properties\n        ? <NightEffectByGameStyle {...properties}/>\n        : <NightEffectByTheme {...properties}/>\n}\n\nfunction NightEffectByGameStyle({gameStyle: {nightDesertWindTranslationKey: translationKey,},}: NightEffectComponentProperties_GameStyle,) {\n    return translationKey == null ? null : <>{gameContentTranslation(`nightEffect.nightDesertWindEffect.${translationKey}`,)}</>\n}\n\nfunction NightEffectByTheme({theme: {effect,},}: NightEffectComponentProperties_Theme,) {\n    return effect?.createNewComponent ?? null\n}\n","import type {Nullable, NullableString} from '@joookiwi/type'\n\nimport type {Times}           from 'core/time/Times'\nimport type {ReactProperties} from 'util/react/ReactProperties'\n\nimport Image   from 'app/tools/images/Image'\nimport {Empty} from 'util/emptyVariables'\n\nimport EMPTY_STRING = Empty.EMPTY_STRING\n\ninterface TimeImageProperties\n    extends ReactProperties {\n\n    readonly reference: Nullable<Times>\n\n    readonly className?: NullableString\n\n}\n\n/** @reactComponent */\nexport default function TimeImage({reference, className,}: TimeImageProperties,) {\n    if (reference == null)\n        return null\n    return <Image file={reference.imageFile} className={`time-image ${reference.englishNameInHtml}-image${className == null ? EMPTY_STRING : ` ${className}`}`}/>\n}\n"],"names":["ThemeTypeImages","_ref","reference","reference2","_jsxs","id","concat","englishNameInHtml","className","children","isInCourseTheme","_jsx","Image","file","COURSE_THEME_IMAGE_FILE","isInWorldTheme","WORLD_THEME_IMAGE_FILE","ThemeAppOption","Enum","constructor","super","renderContent","enumeration","this","_createContentOption","renderTableHeader","_createTableHeaderOption","_ThemeAppOption","ICON","ThemeImage","CommonOptions","get","iconHeader","ENDLESS_MARIO_ICON","endlessMarioImageFile","key","element","unfinishedText","NAME","getGameContent","getNameContent","nameHeader","NIGHT_EFFECT","_ref2","courseTheme","NightEffectComponent","theme","Themes","DESERT","TimeImage","Times","NIGHT","tooltip","gameContentTranslation","night","CompanionEnum","_instance","_classPrivateFieldLooseKey","_CompanionEnum_ThemeAppOption","CompanionEnum_ThemeAppOption","_classPrivateFieldLoo","_classPrivateFieldLoo2","_classPrivateFieldLooseBase","Object","defineProperty","writable","value","ThemeGames","smm1Or3dsColor","smm2Color","getSmm1Or3dsRouteName","type","routeName","getSmm2RouteName","_ThemeGames","SUPER_MARIO_MAKER_OR_SUPER_MARIO_MAKER_FOR_NINTENDO_3DS","SUPER_MARIO_MAKER_2","_CompanionEnum_ThemeGames","CompanionEnum_ThemeGames","EndlessMarioImage","SMM1","Games","SMM2","SMM3DS","_type","_games","ThemeAppInterpreter","games","tableHeadersColor","tableCaption","content","filterByArray","hasAnyIn","createCardListDimension","ThemeTypes","COURSE","default","small","medium","WORLD","large","extraLarge","createCardListContent","enumerable","isSmallPath","tableOptions","createTableContent","option","createTableHeader","ThemeApp","viewDisplay","viewDisplayAndRouteName","ViewDisplays","SIMPLE_LIST","CARD_LIST","TABLE","SubMainContainer","reactKey","titleContent","asideContent","ThemeAsideContent","SubContent","_ref3","appInterpreter","ThemeList","items","CardList","interpreter","Table","_ref4","List","partialId","withSeparator","it","NameComponent","name","popoverOrientation","_ref5","TypeAsideContent","GameAsideContent","_ref6","LinkButton","allRouteName","color","allColor","contentTranslation","courseRouteName","courseColor","worldRouteName","worldColor","_ref7","themeGame","hasSmm2","GameImage","disabled","Link","to","routeFromName","properties","NightEffectByGameStyle","NightEffectByTheme","gameStyle","nightDesertWindTranslationKey","translationKey","_Fragment","_effect$createNewComp","effect","createNewComponent","EMPTY_STRING","Empty","imageFile"],"sourceRoot":""}