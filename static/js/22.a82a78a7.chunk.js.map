{"version":3,"file":"static/js/22.a82a78a7.chunk.js","mappings":"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","sources":["core/entity/properties/component/CanBeFiredOutOfABulletLauncher.tsx","core/entity/properties/component/CanBeInAParachute.tsx","core/entity/properties/component/CanBePutInABlock.tsx","core/entity/properties/component/CanBePutInAClownCar.tsx","core/entity/properties/component/CanBePutInALakituCloud.tsx","core/entity/properties/component/CanBePutInATree.tsx","core/entity/properties/component/CanBePutOnASwingingClaw.tsx","core/entity/properties/component/CanBeStacked.tsx","core/entity/properties/component/CanBeThrownByALakitu.tsx","core/entity/properties/component/CanContainOrSpawnAKey.tsx","core/entity/properties/component/CanHaveWings.tsx","core/entity/properties/component/CanMakeASoundOutOfAMusicBlock.tsx","core/entity/properties/component/CanSpawnOutOfAPipe.tsx","core/entity/properties/component/HasAMushroomVariant.tsx","core/entity/properties/component/IsAffectedDirectlyByAnOnOffState.tsx","core/game/Game.component.tsx","core/gameStyle/GameStyle.component.tsx","core/limit/Limit.component.tsx","core/limit/PlayLimit.component.tsx","core/limit/SMM1And3DSEditorLimit.component.tsx","core/limit/SMM2EditorLimit.component.tsx","core/theme/CourseTheme.component.tsx","core/time/Time.component.tsx","app/options/EntityAppOption.tsx","app/property/EntityGames.ts","app/property/EntityGameStyles.ts","app/property/EntityTimes.ts","core/entity/component/SingleEntityImage.tsx","app/EntityApp.tsx","app/tools/button/LinkButton.tsx","core/editorVoice/EditorVoiceSound.component.tsx","core/entityCategory/component/EntityCategoryIcon.tsx","core/time/component/TimeImage.tsx"],"sourcesContent":["import './CanBeFiredOutOfABulletLauncher.scss'\n\nimport type {EntityOnlyProperties} from 'core/entity/properties/EntityOnlyProperties'\n\n/** @reactComponent */\nexport default function CanBeFiredOutOfABulletLauncher({value,}: EntityOnlyProperties,) {\n    if (!value.reference.canBeFiredOutOfABulletLauncher)\n        return null\n    return <em className=\"canBeFiredOutOfABulletLauncher-property bullet-launcher-image-property\"/>\n}\n","import './CanBeInAParachute.scss'\nimport './PropertyWithComment.scss'\n\nimport {useRef} from 'react'\n\nimport type {EntityOnlyProperties} from 'core/entity/properties/EntityOnlyProperties'\n\nimport Tooltip                  from 'bootstrap/tooltip/Tooltip'\nimport {Limits}                 from 'core/limit/Limits'\nimport {gameContentTranslation} from 'lang/components/translationMethods'\n\n/** @reactComponent */\nexport default function CanBeInAParachute({value,}: EntityOnlyProperties,) {\n    const htmlElement = useRef<HTMLElement>(null,)\n    const reference = value.reference\n    if (!reference.canBeInAParachute)\n        return null\n\n    const comment = reference.canBeInAParachuteComment\n    if (comment == null)\n        return <em className=\"canBeInAParachute-property parachute-image-property\"/>\n\n    const limit = Limits.LOOSE_COIN_LIMIT\n    return <Tooltip option={{title: gameContentTranslation(`entity.property.${comment}`, {acronym: limit.acronym!, limit: limit.reference.languageValue,},),}} reference={htmlElement}>\n        <em ref={htmlElement} className=\"canBeInAParachute-property parachute-image-property property-with-comment\"/>\n    </Tooltip>\n}\n","import './CanBePutInABlock.scss'\n\nimport type {EntityOnlyProperties} from 'core/entity/properties/EntityOnlyProperties'\n\n/** @reactComponent */\nexport default function CanBePutInABlock({value,}: EntityOnlyProperties,) {\n    if (!value.reference.canComeOutOfABlock)\n        return null\n    return <em className=\"CanBeFiredOutOfABulletLauncher.tsx-property question-block-image-property\"/>\n}\n","import './CanBePutInAClownCar.scss'\n\nimport type {EntityOnlyProperties} from 'core/entity/properties/EntityOnlyProperties'\n\n/** @reactComponent */\nexport default function CanBePutInAClownCar({value,}: EntityOnlyProperties,) {\n    if (!value.reference.canBePutInAClownCar)\n        return null\n    return <em className=\"canBePutInAClownCar-property clown-car-image-property\"/>\n}\n","import './CanBePutInALakituCloud.scss'\n\nimport type {EntityOnlyProperties} from 'core/entity/properties/EntityOnlyProperties'\n\n/** @reactComponent */\nexport default function CanBePutInALakituCloud({value,}: EntityOnlyProperties,) {\n    if (value.reference.canBePutInALakituCloud !== true)\n        return null\n    return <em className=\"canBePutInALakituCloud-property lakitu-cloud-image-property\"/>\n}\n","import './CanBePutInATree.scss'\n\nimport type {EntityOnlyProperties} from 'core/entity/properties/EntityOnlyProperties'\n\n/** @reactComponent */\nexport default function CanBePutInATree({value,}: EntityOnlyProperties,) {\n    if (!value.reference.canBePutInATree)\n        return null\n    return <em className=\"canBePutInATree-property tree-image-property\"/>\n}\n","import './CanBePutOnASwingingClaw.scss'\n\nimport type {EntityOnlyProperties} from 'core/entity/properties/EntityOnlyProperties'\n\n/** @reactComponent */\nexport default function CanBePutOnASwingingClaw({value,}: EntityOnlyProperties,) {\n    if (!value.reference.canBePutOnASwingingClaw)\n        return null\n    return <em className=\"canBePutOnASwingingClaw-property swinging-claw-image-property\"/>\n}\n","import './CanBeStacked.scss'\n\nimport type {EntityOnlyProperties} from 'core/entity/properties/EntityOnlyProperties'\n\n/** @reactComponent */\nexport default function CanBeStacked({value,}: EntityOnlyProperties,) {\n    if (!value.reference.canBeStacked)\n        return null\n    return <em className=\"canBeStacked-property stacked-goomba-image-property\"/>\n}\n","import './CanBeThrownByALakitu.scss'\n\nimport type {EntityOnlyProperties} from 'core/entity/properties/EntityOnlyProperties'\n\n/** @reactComponent */\nexport default function CanBeThrownByALakitu({value,}: EntityOnlyProperties,) {\n    if (value.reference.canBeThrownByALakitu !== true)\n        return null\n    return <em className=\"canBeThrownByALakitu-property lakitu-throwing-image-property\"/>\n}\n","import './CanContainOrSpawnAKey.scss'\n\nimport type {EntityOnlyProperties} from 'core/entity/properties/EntityOnlyProperties'\n\n/** @reactComponent */\nexport default function CanContainOrSpawnAKey({value,}: EntityOnlyProperties,) {\n    if (!value.reference.canContainOrSpawnAKey)\n        return null\n    return <em className=\"canContainOrSpawnAKey-property key-image-property\"/>\n}\n","import './CanHaveWings.scss'\nimport './PropertyWithComment.scss'\n\nimport {useRef} from 'react'\n\nimport type {EntityOnlyProperties} from 'core/entity/properties/EntityOnlyProperties'\n\nimport Tooltip                  from 'bootstrap/tooltip/Tooltip'\nimport {Limits}                 from 'core/limit/Limits'\nimport {gameContentTranslation} from 'lang/components/translationMethods'\n\n/** @reactComponent */\nexport default function CanHaveWings({value,}: EntityOnlyProperties,) {\n    const htmlElement = useRef<HTMLElement>(null,)\n    const reference = value.reference\n    if (!reference.canHaveWings)\n        return null\n\n    const comment = reference.canHaveWingsComment\n    if (comment == null)\n        return <em className=\"canHaveWings wing-image-property\"/>\n\n    const limit = Limits.LOOSE_COIN_LIMIT\n    return <Tooltip option={{title: gameContentTranslation(`entity.property.${comment}`, {acronym: limit.acronym!, limit: limit.reference.languageValue,},),}} reference={htmlElement}>\n        <em ref={htmlElement} className=\"canHaveWings wing-image-property property-with-comment\"/>\n    </Tooltip>\n}\n","import './CanMakeASoundOutOfAMusicBlock.scss'\nimport './PropertyWithComment.scss'\n\nimport {useRef} from 'react'\n\nimport type {EntityOnlyProperties} from 'core/entity/properties/EntityOnlyProperties'\n\nimport Tooltip                  from 'bootstrap/tooltip/Tooltip'\nimport {gameContentTranslation} from 'lang/components/translationMethods'\n\nexport default function CanMakeASoundOutOfAMusicBlock({value,}: EntityOnlyProperties,) {\n    const htmlElement = useRef<HTMLElement>(null,)\n    const reference = value.reference\n    if (!reference.canMakeASoundOutOfAMusicBlock)\n        return null\n\n    const comment = reference.canMakeASoundOutOfAMusicBlockComment\n    if (comment == null)\n        return <em className=\"canMakeASoundOutOfAMusicBlock-property music-block-property\"/>\n\n    return <Tooltip option={{title: gameContentTranslation(`instrument.${comment}`),}} reference={htmlElement}>\n        <em ref={htmlElement} className=\"canMakeASoundOutOfAMusicBlock-property music-block-property property-with-comment\"/>\n    </Tooltip>\n}\n","import './CanSpawnOutOfAPipe.scss'\n\nimport type {EntityOnlyProperties} from 'core/entity/properties/EntityOnlyProperties'\n\n/** @reactComponent */\nexport default function CanSpawnOutOfAPipe({value,}: EntityOnlyProperties,) {\n    if (!value.reference.canSpawnOutOfAPipe)\n        return null\n    return <em className=\"canSpawnOutOfAPipe-property pipe-image-property\"/>\n}\n","import './HasAMushroomVariant.scss'\n\nimport type {EntityOnlyProperties} from 'core/entity/properties/EntityOnlyProperties'\n\n/** @reactComponent */\nexport default function HasAMushroomVariant({value,}: EntityOnlyProperties,) {\n    if (!value.reference.hasAMushroomVariant)\n        return null\n\n    return <em className=\"hasAMushroom-property mushroom-image-property\"/>\n}\n","import './IsAffectedDirectlyByAnOnOffState.scss'\nimport './PropertyWithComment.scss'\n\nimport {useRef} from 'react'\n\nimport type {EntityOnlyProperties} from 'core/entity/properties/EntityOnlyProperties'\n\nimport {unfinishedText}         from 'app/tools/text/UnfinishedText'\nimport Tooltip                  from 'bootstrap/tooltip/Tooltip'\nimport {OtherWordInTheGames}    from 'core/otherWordInTheGame/OtherWordInTheGames'\nimport {gameContentTranslation} from 'lang/components/translationMethods'\n\n/** @reactComponent */\nexport default function IsAffectedDirectlyByAnOnOffState({value,}: EntityOnlyProperties,) {\n    const htmlElement = useRef<HTMLElement>(null,)\n    const reference = value.reference\n    if (!reference.isAffectDirectlyByAnOnOffState)\n        return null\n\n    const comment = reference.isAffectDirectlyByAnOnOffStateComment\n    if (comment == null)\n        return <em className=\"isAffectDirectlyByAnOnOffState-property onOffBlock-image-property\"/>\n\n    const entity = OtherWordInTheGames.ENTITY.singularNameOnReferenceOrNull ?? unfinishedText(OtherWordInTheGames.ENTITY.singularEnglishName,)\n    const entityAsLowerCase = OtherWordInTheGames.ENTITY.singularLowerCaseNameOnReferenceOrNull ?? entity.toLowerCase()\n    return <Tooltip option={{title: gameContentTranslation(`entity.property.${comment}`, {entity: entityAsLowerCase,},),}} reference={htmlElement}>\n        <em ref={htmlElement} className=\"isAffectDirectlyByAnOnOffState-property onOffBlock-image-property property-with-comment\"/>\n    </Tooltip>\n}\n","import {allByArray, filterByArray, mapByArray} from '@joookiwi/collection'\n\nimport type {GameProperty}             from 'core/entity/properties/game/GameProperty'\nimport type {EntityPropertyProperties} from 'core/_component/EntityPropertyProperties'\n\nimport TextComponent            from 'app/tools/text/TextComponent'\nimport {Games}                  from 'core/game/Games'\nimport GameImage                from 'core/game/component/GameImage'\nimport {gameContentTranslation} from 'lang/components/translationMethods'\n\nimport ALL = Games.ALL\n\n/**\n * @deprecated This component should be replaced to something else\n * @reactComponent\n */\nexport default function GameComponent({reference, name, displayAllAsText,}: EntityPropertyProperties<GameProperty>,) {\n    if (allByArray(ALL, it => it.get(reference,),))\n        if (displayAllAsText)\n            return <TextComponent content={gameContentTranslation('game.all',)}/>\n        else\n            return <div key={`${name.english} (every games)`}>{mapByArray(ALL, it => <GameImage reference={it}/>,)}</div>\n\n    const games = filterByArray(ALL, it => it.get(reference,),)\n    if (games.length === 1)\n        return <GameImage reference={games.getFirst()}/>\n    return <div key={`${name.english} - group`}>{games.map(it => <GameImage reference={it}/>)}</div>\n}\n","import {allByArray, filterByArray, mapByArray} from '@joookiwi/collection'\n\nimport type {EntityPropertyProperties} from 'core/_component/EntityPropertyProperties'\nimport type {GameStyleProperty}        from 'core/entity/properties/gameStyle/GameStyleProperty'\n\nimport TextComponent            from 'app/tools/text/TextComponent'\nimport {GameStyles}             from 'core/gameStyle/GameStyles'\nimport GameStyleImage           from 'core/gameStyle/component/GameStyleImage'\nimport {gameContentTranslation} from 'lang/components/translationMethods'\n\nimport ALL = GameStyles.ALL\n\n/**\n * @deprecated This component should be replaced to something else\n * @reactComponent\n */\nexport default function GameStyleComponent({reference, name, displayAllAsText,}: EntityPropertyProperties<GameStyleProperty>,) {\n    if (allByArray(ALL, it => it.get(reference,),))\n        if (displayAllAsText)\n            return <TextComponent content={gameContentTranslation('game style.all',)}/>\n        else\n            return <div key={`${name.english} (every game styles)`}>{mapByArray(ALL, it => <GameStyleImage reference={it}/>,)}</div>\n\n    const gameStyles = filterByArray(ALL, it => it.get(reference,),)\n    if (gameStyles.length === 1)\n        return <GameStyleImage reference={gameStyles.getFirst()}/>\n    return <div key={`${name.english} - group`}>{gameStyles.map(it => <GameStyleImage reference={it}/>)}</div>\n}\n","import type {CollectionHolder} from '@joookiwi/collection'\nimport {filterByArray}         from '@joookiwi/collection'\nimport {Fragment}              from 'react'\n\nimport type {ReactProperties} from 'util/react/ReactProperties'\n\nimport {Limits}           from 'core/limit/Limits'\nimport NameComponent      from 'lang/name/component/Name.component'\nimport {ProjectLanguages} from 'lang/ProjectLanguages'\nimport TextComponent      from 'app/tools/text/TextComponent'\nimport Tooltip            from 'bootstrap/tooltip/Tooltip'\nimport {StringContainer}  from 'util/StringContainer'\n\nimport getInHtml =         StringContainer.getInHtml\nimport LanguageCompanion = ProjectLanguages.Companion\n\ntype Id = `${| 'editor' | 'play'}-${string}`\n\ninterface EditorLimitProperties\n    extends ReactProperties {\n\n    readonly id: Id\n\n    readonly limits: | Limits | ReadonlyMap<Limits, boolean>\n\n    readonly displayAcronymIfApplicable: boolean\n\n}\n\n/**\n *\n * @param properties\n * @reactComponent\n */\nexport default function LimitComponent({id, limits, displayAcronymIfApplicable,}: EditorLimitProperties,) {\n    if (limits instanceof Limits)\n        return createSingleComponent(id, limits, displayAcronymIfApplicable,)\n\n    const selectedLimits = filterByArray([...limits], it => it[1],).map(it => it[0],)\n    return <>{selectedLimits.map((it, i,) =>\n            <Fragment key={`${it.englishName} #${i + 1} → ${id}`}>{createSingleComponent(id, it, displayAcronymIfApplicable,)}{createReturnOfLine(selectedLimits, i,)}</Fragment>\n        )}</>\n}\n\nfunction createReturnOfLine(selectedLimits: CollectionHolder<Limits>, index: number,) {\n    return index === selectedLimits.size - 1 ? <></> : <>{LanguageCompanion.current.comma}<br/></>\n}\n\nfunction createSingleComponent(id: Id, limit: Limits, displayAcronymIfApplicable: boolean,) {\n    if (displayAcronymIfApplicable) {\n        const acronym = limit.acronym\n        if (acronym == null)\n            return createSingleNameComponent(id, limit,)\n        const acronymId = `limit-acronym-${id}-${getInHtml(limit.acronym!)}`\n        //TODO Transform the tooltip to a popover to display every names instead\n        return <Tooltip option={{title: limit.reference.nameContainer.languageValue,}} reference={acronymId}>\n            <TextComponent key={`${limit.englishName} (acronym) → ${id}`} id={acronymId} content={acronym}/>\n        </Tooltip>\n    }\n    return createSingleNameComponent(id, limit,)\n}\n\nfunction createSingleNameComponent(id: Id, limit: Limits,) {\n    return <NameComponent key={`${limit.englishName} (name) → ${id}`} id={`limit-name-${id}`} name={limit.reference}/>\n}\n","import type {SimpleLimitComponentProperties} from 'core/limit/Limit.component.types'\n\nimport LimitComponent from 'core/limit/Limit.component'\n\nexport default function PlayLimitComponent({reference,}: SimpleLimitComponentProperties,) {\n    return <LimitComponent id={`play-${reference.englishNameInHtml}`} limits={reference.reference.toPlayLimitMap()} displayAcronymIfApplicable/>\n}\n","import type {SimpleLimitComponentProperties} from 'core/limit/Limit.component.types'\n\nimport TextComponent    from 'app/tools/text/TextComponent'\nimport LimitComponent   from 'core/limit/Limit.component'\nimport {NOT_APPLICABLE} from 'util/commonVariables'\n\nexport default function SMM1And3DSEditorLimitComponent({reference,}: SimpleLimitComponentProperties,) {\n    const editorLimit = reference.reference.editorLimit_smm1And3ds\n\n    if (editorLimit == null)\n        return null\n    if (editorLimit === NOT_APPLICABLE)\n        return <TextComponent id={`editor-SuperMarioMaker1And3DS-${reference.englishNameInHtml}`} content={NOT_APPLICABLE}/>\n    return <LimitComponent id={`editor-SuperMarioMaker1And3DS-${reference.englishNameInHtml}`} limits={editorLimit} displayAcronymIfApplicable/>\n}\n","import type {SimpleLimitComponentProperties} from 'core/limit/Limit.component.types'\n\nimport TextComponent    from 'app/tools/text/TextComponent'\nimport LimitComponent   from 'core/limit/Limit.component'\nimport {NOT_APPLICABLE} from 'util/commonVariables'\n\nexport default function SMM2EditorLimitComponent({reference,}: SimpleLimitComponentProperties,) {\n    const entity = reference.reference\n    const editorLimit = entity.editorLimit_smm2\n\n    return editorLimit == null || editorLimit === NOT_APPLICABLE\n        ? <TextComponent id={`editor-SuperMarioMaker2-${reference.englishNameInHtml}`} content={editorLimit} isUnknown={entity.isUnknown_editorLimit_smm2}/>\n        : <LimitComponent id={`editor-SuperMarioMaker2-${reference.englishNameInHtml}`} limits={editorLimit} displayAcronymIfApplicable/>\n}\n","import {allByArray, filterByArray, mapByArray} from '@joookiwi/collection'\n\nimport type {EntityPropertyProperties} from 'core/_component/EntityPropertyProperties'\nimport type {ThemeProperty}            from 'core/entity/properties/theme/ThemeProperty'\n\nimport {COURSE_THEME_IMAGE_FILE} from 'app/options/file/themeImageFiles'\nimport Image                     from 'app/tools/images/Image'\nimport TextComponent             from 'app/tools/text/TextComponent'\nimport {Themes}                  from 'core/theme/Themes'\nimport ThemeImage                from 'core/theme/component/ThemeImage'\nimport {gameContentTranslation}  from 'lang/components/translationMethods'\n\nimport COURSE_THEMES = Themes.COURSE_THEMES\n\n/**\n * @deprecated This should be replaced with something else\n * @reactComponent\n */\nexport default function CourseThemeComponent({reference, name, displayAllAsText,}: EntityPropertyProperties<ThemeProperty>,) {\n    if (allByArray(COURSE_THEMES, it => it.get(reference,),))\n        if (displayAllAsText)\n            return <TextComponent content={gameContentTranslation('theme.course.all', {courseThemeImage: <Image file={COURSE_THEME_IMAGE_FILE}/>,},)}/>\n        else\n            return <div key={`${name.english} (every course themes)`}>{mapByArray(COURSE_THEMES, it => <ThemeImage reference={it}/>,)}</div>\n\n    const courseThemes = filterByArray(COURSE_THEMES, it => it.get(reference,),)\n    if (courseThemes.length === 1)\n        return <ThemeImage reference={courseThemes.getFirst()}/>\n    return <div key={`${name.english} - group`}>{courseThemes.map(it => <ThemeImage reference={it}/>,)}</div>\n}\n","import {allByArray, mapByArray} from '@joookiwi/collection'\n\nimport type {EntityPropertyProperties} from 'core/_component/EntityPropertyProperties'\nimport type {TimeProperty}             from 'core/entity/properties/time/TimeProperty'\n\nimport TextComponent            from 'app/tools/text/TextComponent'\nimport {Times}                  from 'core/time/Times'\nimport TimeImage                from 'core/time/component/TimeImage'\nimport {gameContentTranslation} from 'lang/components/translationMethods'\n\nimport ALL = Times.ALL\n\n/**\n * @deprecated This component should be replaced with something else\n * @reactComponent\n */\nexport default function TimeComponent({reference, name, displayAllAsText,}: EntityPropertyProperties<TimeProperty>,) {\n    if (allByArray(ALL, it => it.get(reference,),))\n        if (displayAllAsText)\n            return <TextComponent content={gameContentTranslation('time.all',)}/>\n        else\n            return <div key={`Every times images (${name.english})`}>{mapByArray(ALL, it => <TimeImage reference={it}/>,)}</div>\n\n    if (reference.isInDayTheme)\n        return <TimeImage reference={Times.DAY}/>\n    return <TimeImage reference={Times.NIGHT}/>\n}\n","import type {CompanionEnumSingleton} from '@joookiwi/enumerable'\nimport type {NullOr}                 from '@joookiwi/type'\nimport {forEachByArray}              from '@joookiwi/collection'\nimport {CompanionEnum, Enum}         from '@joookiwi/enumerable'\nimport {Fragment}                    from 'react'\n\nimport type {AppOption}           from 'app/options/AppOption'\nimport type {Names, Ordinals}     from 'app/options/EntityAppOption.types'\nimport type {SingleHeaderContent} from 'app/tools/table/SimpleHeader'\nimport type {Entities}            from 'core/entity/Entities'\n\nimport {isInProduction}                 from 'variables'\nimport {CommonOptions}                  from 'app/options/CommonOptions'\nimport Image                            from 'app/tools/images/Image'\nimport {gameContentTranslation}         from 'lang/components/translationMethods'\nimport EditorVoiceSoundComponent        from 'core/editorVoice/EditorVoiceSound.component'\nimport CanBeFiredOutOfABulletLauncher   from 'core/entity/properties/component/CanBeFiredOutOfABulletLauncher'\nimport CanBeInAParachute                from 'core/entity/properties/component/CanBeInAParachute'\nimport CanBePutInABlock                 from 'core/entity/properties/component/CanBePutInABlock'\nimport CanBePutInAClownCar              from 'core/entity/properties/component/CanBePutInAClownCar'\nimport CanBePutInALakituCloud           from 'core/entity/properties/component/CanBePutInALakituCloud'\nimport CanBePutInATree                  from 'core/entity/properties/component/CanBePutInATree'\nimport CanBePutOnASwingingClaw          from 'core/entity/properties/component/CanBePutOnASwingingClaw'\nimport CanBeStacked                     from 'core/entity/properties/component/CanBeStacked'\nimport CanBeThrownByALakitu             from 'core/entity/properties/component/CanBeThrownByALakitu'\nimport CanContainOrSpawnAKey            from 'core/entity/properties/component/CanContainOrSpawnAKey'\nimport CanHaveWings                     from 'core/entity/properties/component/CanHaveWings'\nimport CanMakeASoundOutOfAMusicBlock    from 'core/entity/properties/component/CanMakeASoundOutOfAMusicBlock'\nimport CanSpawnOutOfAPipe               from 'core/entity/properties/component/CanSpawnOutOfAPipe'\nimport HasAMushroomVariant              from 'core/entity/properties/component/HasAMushroomVariant'\nimport IsAffectedDirectlyByAnOnOffState from 'core/entity/properties/component/IsAffectedDirectlyByAnOnOffState'\nimport {EntityCategories}               from 'core/entityCategory/EntityCategories'\nimport EntityCategoryIcon               from 'core/entityCategory/component/EntityCategoryIcon'\nimport GameComponent                    from 'core/game/Game.component'\nimport {GameStyles}                     from 'core/gameStyle/GameStyles'\nimport GameStyleComponent               from 'core/gameStyle/GameStyle.component'\nimport GameStyleImage                   from 'core/gameStyle/component/GameStyleImage'\nimport PlayLimitComponent               from 'core/limit/PlayLimit.component'\nimport SMM1And3DSEditorLimitComponent   from 'core/limit/SMM1And3DSEditorLimit.component'\nimport SMM2EditorLimitComponent         from 'core/limit/SMM2EditorLimit.component'\nimport CourseThemeComponent             from 'core/theme/CourseTheme.component'\nimport TimeComponent                    from 'core/time/Time.component'\nimport {Empty}                          from 'util/emptyVariables'\n\nimport CategoryCompanion = EntityCategories.Companion\nimport EMPTY_STRING =      Empty.EMPTY_STRING\nimport NSMBU =             GameStyles.NSMBU\nimport SMB =               GameStyles.SMB\nimport SMB3 =              GameStyles.SMB3\nimport SMW =               GameStyles.SMW\nimport SM3DW =             GameStyles.SM3DW\n\nexport class EntityAppOption\n    extends Enum<Ordinals, Names>\n    implements AppOption<Entities> {\n\n    //region -------------------- Enum instances --------------------\n\n    public static readonly IMAGE_IN_SMB = new class EntityAppOption_Images extends EntityAppOption {\n\n        protected override _createContentOption({englishName, englishNameInHtml, image,}: Entities,) {\n            const imageFiles = image.get(SMB,)\n            if (imageFiles == null) {\n                if (!isInProduction)\n                    console.warn(\"The images were null when attempting to retrieve the SMB images\", image,)\n                return null\n            }\n\n            const images = new Array<ReactJSXElement>(imageFiles.length,)\n            forEachByArray(imageFiles, (it, i,) =>\n                images[i] = <Image key={`Entity image (${englishName} - SMB - image #${i + 1})`} className={`entity-image ${englishNameInHtml}-image`} file={it}/>,)\n            return <Fragment key={`unique image (${englishName})`}>{images}</Fragment>\n        }\n\n        protected override _createTableHeaderOption() {\n            return {key: `image-smb`, element: <GameStyleImage reference={SMB}/>,} as const satisfies SingleHeaderContent\n        }\n\n    }('smb-images',)\n    public static readonly IMAGE_IN_SMB3 = new class EntityAppOption_Images extends EntityAppOption {\n\n        protected override _createContentOption({englishName, englishNameInHtml, image,}: Entities,) {\n            const imageFiles = image.get(SMB3,)\n            if (imageFiles == null) {\n                if (!isInProduction)\n                    console.warn(\"The images were null when attempting to retrieve the SMB3 images\", image,)\n                return null\n            }\n\n            const images = new Array<ReactJSXElement>(imageFiles.length,)\n            forEachByArray(imageFiles, (it, i,) =>\n                images[i] = <Image key={`Entity image (${englishName} - SMB3 - image #${i + 1})`} className={`entity-image ${englishNameInHtml}-image`} file={it}/>,)\n            return <Fragment key={`unique image (${englishName})`}>{images}</Fragment>\n        }\n\n        protected override _createTableHeaderOption() {\n            return {key: `image-smb3`, element: <GameStyleImage reference={SMB3}/>,} as const satisfies SingleHeaderContent\n        }\n\n    }('smb3-images',)\n    public static readonly IMAGE_IN_SMW = new class EntityAppOption_Images extends EntityAppOption {\n\n        protected override _createContentOption({englishName, englishNameInHtml, image,}: Entities,) {\n            const imageFiles = image.get(SMW,)\n            if (imageFiles == null) {\n                if (!isInProduction)\n                    console.warn(\"The images were null when attempting to retrieve the SMW images\", image,)\n                return null\n            }\n\n            const images = new Array<ReactJSXElement>(imageFiles.length,)\n            forEachByArray(imageFiles, (it, i,) =>\n                images[i] = <Image key={`Entity image (${englishName} - SMW - image #${i + 1})`} className={`entity-image ${englishNameInHtml}-image`} file={it}/>,)\n            return <Fragment key={`unique image (${englishName})`}>{images}</Fragment>\n        }\n\n        protected override _createTableHeaderOption() {\n            return {key: `image-smw`, element: <GameStyleImage reference={SMW}/>,} as const satisfies SingleHeaderContent\n        }\n\n    }('smw-images',)\n    public static readonly IMAGE_IN_NSMBU = new class EntityAppOption_Images extends EntityAppOption {\n\n        protected override _createContentOption({englishName, englishNameInHtml, image,}: Entities,) {\n            const imageFiles = image.get(NSMBU,)\n            if (imageFiles == null) {\n                if (!isInProduction)\n                    console.warn(\"The images were null when attempting to retrieve the NSMBU images\", image,)\n                return null\n            }\n\n            const images = new Array<ReactJSXElement>(imageFiles.length,)\n            forEachByArray(imageFiles, (it, i,) =>\n                    images[i] = <Image key={`Entity image (${englishName} - NSMBU - image #${i + 1})`} className={`entity-image ${englishNameInHtml}-image`} file={it}/>,)\n            return <Fragment key={`unique image (${englishName})`}>{images}</Fragment>\n        }\n\n        protected override _createTableHeaderOption() {\n            return {key: `image-nsmbu`, element: <GameStyleImage reference={NSMBU}/>,} as const satisfies SingleHeaderContent\n        }\n\n    }('nsmbu-images',)\n    public static readonly IMAGE_IN_SM3DW = new class EntityAppOption_Images extends EntityAppOption {\n\n        protected override _createContentOption({englishName, englishNameInHtml, image,}: Entities,) {\n            const imageFiles = image.get(SM3DW,)\n            if (imageFiles == null) {\n                if (!isInProduction)\n                    console.warn(\"The images were null when attempting to retrieve the SM3DW images\", image,)\n                return null\n            }\n\n            const images = new Array<ReactJSXElement>(imageFiles.length,)\n            forEachByArray(imageFiles, (it, i,) =>\n                    images[i] = <Image key={`Entity image (${englishName} - SM3DW - image #${i + 1})`} className={`entity-image ${englishNameInHtml}-image`} file={it}/>,)\n            return <Fragment key={`unique image (${englishName})`}>{images}</Fragment>\n        }\n\n        protected override _createTableHeaderOption() {\n            return {key: `image-sm3dw`, element: <GameStyleImage reference={SM3DW}/>,} as const satisfies SingleHeaderContent\n        }\n\n    }('sm3dw-images',)\n\n    public static readonly NAME = new class EntityAppOption_Name extends EntityAppOption {\n\n        protected override _createContentOption(enumeration: Entities,) {\n            return <div className=\"nameAndEditorVoiceSound-container container\">\n                <div className=\"nameAndEditorVoiceSound-nameAndProperties-container\">\n                    <div className=\"properties\">\n                        <HasAMushroomVariant value={enumeration}/>\n                        <CanBeInAParachute value={enumeration}/>\n                        <CanHaveWings value={enumeration}/>\n                        <CanMakeASoundOutOfAMusicBlock value={enumeration}/>\n                        <CanContainOrSpawnAKey value={enumeration}/>\n                        <IsAffectedDirectlyByAnOnOffState value={enumeration}/>\n                        <CanSpawnOutOfAPipe value={enumeration}/>\n                        <CanBePutOnASwingingClaw value={enumeration}/>\n                        <CanBeThrownByALakitu value={enumeration}/>\n                        <CanBePutInALakituCloud value={enumeration}/>\n                        <CanBePutInAClownCar value={enumeration}/>\n                        <CanBeFiredOutOfABulletLauncher value={enumeration}/>\n                        <CanBePutInABlock value={enumeration}/>\n                        <CanBePutInATree value={enumeration}/>\n                        <CanBeStacked value={enumeration}/>\n                    </div>\n                    {CommonOptions.get.getNameContent(enumeration,)}\n                </div>\n                <EditorVoiceSoundComponent editorVoiceSound={enumeration.editorVoiceSoundFileHolder} name={enumeration.englishName}/>\n            </div>\n        }\n\n        protected override _createTableHeaderOption() {\n            return CommonOptions.get.nameHeader\n        }\n\n    }('name',)\n    public static readonly GAME = new class EntityAppOption_Game extends EntityAppOption {\n\n        protected override _createContentOption({reference,}: Entities,) {\n            return <GameComponent reference={reference} name={reference} displayAllAsText/>\n        }\n\n        protected override _createTableHeaderOption() {\n            return CommonOptions.get.gameHeader\n        }\n\n    }('game',)\n    public static readonly GAME_STYLE = new class EntityAppOption_GameStyle extends EntityAppOption {\n\n        protected override _createContentOption({reference,}: Entities,) {\n            return <GameStyleComponent reference={reference} name={reference} displayAllAsText/>\n        }\n\n        protected override _createTableHeaderOption() {\n            return {key: 'gameStyle', element: gameContentTranslation('game style.singular',),} satisfies SingleHeaderContent\n        }\n\n    }('gameStyle',)\n    public static readonly COURSE_THEME = new class EntityAppOption_CourseTheme extends EntityAppOption {\n\n        protected override _createContentOption({reference,}: Entities,) {\n            return <CourseThemeComponent reference={reference} name={reference} displayAllAsText/>\n        }\n\n        protected override _createTableHeaderOption() {\n            return {key: 'courseTheme', element: gameContentTranslation('theme.course.singular',),} satisfies SingleHeaderContent\n        }\n\n    }('courseTheme',)\n    public static readonly TIME = new class EntityAppOption_Time extends EntityAppOption {\n\n        protected override _createContentOption({reference,}: Entities,) {\n            return <TimeComponent reference={reference} name={reference} displayAllAsText={false}/>\n        }\n\n        protected override _createTableHeaderOption() {\n            return {key: 'time', element: gameContentTranslation('time.singular',),} satisfies SingleHeaderContent\n        }\n\n    }('time',)\n    public static readonly CATEGORY = new class EntityAppOption_Category extends EntityAppOption {\n\n        protected override _createContentOption(enumeration: Entities,) {\n            const name = enumeration.reference.categoryAmericanEnglish\n            if (name === EMPTY_STRING)\n                return null\n            return <EntityCategoryIcon reference={CategoryCompanion.getValueByName(name,)}/>\n        }\n\n        protected override _createTableHeaderOption() {\n            return CommonOptions.get.categoryHeader\n        }\n\n    }('category',)\n\n    public static readonly EDITOR_LIMIT_IN_SMM1_AND_3DS = new class EntityAppOption_LimitInSMM1And3DS extends EntityAppOption {\n\n        protected override _createContentOption(enumeration: Entities,) {\n            return <SMM1And3DSEditorLimitComponent reference={enumeration}/>\n        }\n\n        protected override _createTableHeaderOption() {\n            return CommonOptions.get.completeEditorLimitInSmm1And3dsHeader\n        }\n\n    }('smm1And3ds-editorLimit',)\n    public static readonly EDITOR_LIMIT_IN_SMM1_AND_3DS_ONLY = new class EntityAppOption_LimitInSMM1And3DS extends EntityAppOption {\n\n        protected override _createContentOption(enumeration: Entities,) {\n            return <SMM1And3DSEditorLimitComponent reference={enumeration}/>\n        }\n\n        protected override _createTableHeaderOption() {\n            return CommonOptions.get.completeEditorLimitHeader\n        }\n\n    }('editorLimit',)\n    public static readonly EDITOR_LIMIT_IN_SMM2 = new class EntityAppOption_LimitInSMM2 extends EntityAppOption {\n\n        protected override _createContentOption(enumeration: Entities,) {\n            return <SMM2EditorLimitComponent reference={enumeration}/>\n        }\n\n        protected override _createTableHeaderOption() {\n            return CommonOptions.get.completeEditorLimitInSmm2Header\n        }\n\n    }('smm2-editorLimit',)\n    public static readonly EDITOR_LIMIT_IN_SMM2_ONLY = new class EntityAppOption_LimitInSMM2 extends EntityAppOption {\n\n        protected override _createContentOption(enumeration: Entities,) {\n            return <SMM2EditorLimitComponent reference={enumeration}/>\n        }\n\n        protected override _createTableHeaderOption() {\n            return CommonOptions.get.completeEditorLimitHeader\n        }\n\n    }('editorLimit',)\n    public static readonly PLAY_LIMIT = new class EntityAppOption_PlayLimit extends EntityAppOption {\n\n        protected override _createContentOption(enumeration: Entities,) {\n            return <PlayLimitComponent reference={enumeration}/>\n        }\n\n        protected override _createTableHeaderOption() {\n            return CommonOptions.get.completePlayLimitHeader\n        }\n    }('playLimit',)\n\n    //endregion -------------------- Enum instances --------------------\n    //region -------------------- Companion enum --------------------\n\n    public static readonly CompanionEnum: CompanionEnumSingleton<EntityAppOption, typeof EntityAppOption> = class CompanionEnum_EntityAppOption\n        extends CompanionEnum<EntityAppOption, typeof EntityAppOption> {\n\n        //region -------------------- Singleton usage --------------------\n\n        static #instance?: CompanionEnum_EntityAppOption\n\n        private constructor() {\n            super(EntityAppOption,)\n        }\n\n        public static get get() {\n            return this.#instance ??= new this()\n        }\n\n        //endregion -------------------- Singleton usage --------------------\n\n    }\n\n    //endregion -------------------- Companion enum --------------------\n    //region -------------------- Fields --------------------\n\n    readonly #associatedClass\n    readonly #additionalClasses\n\n    //endregion -------------------- Fields --------------------\n    //region -------------------- Constructor --------------------\n\n    private constructor(associatedClass: string,) {\n        super()\n        this.#additionalClasses = [this.#associatedClass = associatedClass,] as const\n    }\n\n    //endregion -------------------- Constructor --------------------\n    //region -------------------- Getter methods --------------------\n\n    public get associatedClass(): string {\n        return this.#associatedClass\n    }\n\n    public get additionalClasses(): readonly [string,] {\n        return this.#additionalClasses\n    }\n\n    //endregion -------------------- Getter methods --------------------\n    //region -------------------- Methods --------------------\n\n    //region -------------------- App option - content --------------------\n\n    protected _createContentOption(enumeration: Entities,): ReactElement {\n        throw new ReferenceError(`The EntityAppOption.${this.name} cannot create a content option`,)\n    }\n\n    public renderContent(enumeration: Entities,): readonly [ReactElement,] {\n        return [this._createContentOption(enumeration,),]\n    }\n\n    //endregion -------------------- App option - content --------------------\n    //region -------------------- App option - table --------------------\n\n    protected _createTableHeaderOption(): NullOr<SingleHeaderContent> {\n        throw new ReferenceError(`The EntityAppOption.${this.name} cannot create a table header option`,)\n    }\n\n    public renderTableHeader(): NullOr<SingleHeaderContent> {\n        const content = this._createTableHeaderOption()\n        if (content == null)\n            return null\n        return content\n    }\n\n    //endregion -------------------- App option - table --------------------\n\n    //endregion -------------------- Methods --------------------\n\n}\n","import type {CompanionEnumWithParentSingleton}           from '@joookiwi/enumerable'\nimport type {NullOrString}                               from '@joookiwi/type'\nimport {CompanionEnumWithParent, EnumWithNullableParent} from '@joookiwi/enumerable'\n\nimport type {Names, Ordinals, PossibleRouteName} from 'app/property/EntityGames.types'\n\nimport {Games} from 'core/game/Games'\n\nexport class EntityGames\n    extends EnumWithNullableParent<Games, Ordinals, Names> {\n\n    //region -------------------- Enum instances --------------------\n\n    public static readonly ALL_GAMES = new class EntityGames_AllGames extends EntityGames {\n\n        public override get allRouteName() {\n            return null\n        }\n\n    }()\n    public static readonly SUPER_MARIO_MAKER = new class EntityGames_SuperMarioMaker extends EntityGames {\n\n        public override get allColor(): PossibleColor {\n            return 'warning'\n        }\n\n        public override get smm2Color(): PossibleColor {\n            return 'warning'\n        }\n\n        public override get smm1RouteName() {\n            return null\n        }\n\n    }()\n    public static readonly SUPER_MARIO_MAKER_FOR_NINTENDO_3DS = new class EntityGames_SuperMarioMakerForNintendo3DS extends EntityGames {\n\n        public override get allColor(): PossibleColor {\n            return 'warning'\n        }\n\n        public override get smm1Color(): PossibleColor {\n            return 'warning'\n        }\n\n        public override get smm2Color(): PossibleColor {\n            return 'warning'\n        }\n\n        public override get smm3dsRouteName() {\n            return null\n        }\n\n    }()\n    public static readonly SUPER_MARIO_MAKER_2 = new class EntityGames_SuperMarioMaker2 extends EntityGames {\n\n        public override get allColor(): PossibleColor {\n            return 'warning'\n        }\n\n        public override get smm3dsColor(): PossibleColor {\n            return 'warning'\n        }\n\n        public override get smm1Color(): PossibleColor {\n            return 'warning'\n        }\n\n        public override get smm2RouteName() {\n            return null\n        }\n\n    }()\n\n    //endregion -------------------- Enum instances --------------------\n    //region -------------------- Companion enum --------------------\n\n    public static readonly CompanionEnum: CompanionEnumWithParentSingleton<EntityGames, typeof EntityGames, Games, typeof Games> = class CompanionEnum_EntityGames\n        extends CompanionEnumWithParent<EntityGames, typeof EntityGames, Games, typeof Games> {\n\n        //region -------------------- Singleton usage --------------------\n\n        static #instance?: CompanionEnum_EntityGames\n\n        private constructor() {\n            super(EntityGames, Games,)\n        }\n\n        public static get get() {\n            return this.#instance ??= new CompanionEnum_EntityGames()\n        }\n\n        //endregion -------------------- Singleton usage --------------------\n\n    }\n\n    //endregion -------------------- Companion enum --------------------\n    //region -------------------- Fields --------------------\n    //endregion -------------------- Fields --------------------\n    //region -------------------- Constructor --------------------\n\n    private constructor() {\n        super()\n    }\n\n    //endregion -------------------- Constructor --------------------\n    //region -------------------- Getter methods --------------------\n\n    public get allColor(): PossibleColor {\n        return 'success'\n    }\n\n    public get smm1Color(): PossibleColor {\n        return 'success'\n    }\n\n    public get smm3dsColor(): PossibleColor {\n        return 'success'\n    }\n\n    public get smm2Color(): PossibleColor {\n        return 'success'\n    }\n\n    //endregion -------------------- Getter methods --------------------\n    //region -------------------- Methods --------------------\n\n    public get allRouteName(): NullOrString<PossibleRouteName> {\n        return `everyEntity (Game=all)`\n    }\n\n    public get smm1RouteName(): NullOrString<PossibleRouteName> {\n        return `everyEntity (Game=1)`\n    }\n\n    public get smm3dsRouteName(): NullOrString<PossibleRouteName> {\n        return `everyEntity (Game=3DS)`\n    }\n\n    public get smm2RouteName(): NullOrString<PossibleRouteName> {\n        return `everyEntity (Game=2)`\n    }\n\n    //endregion -------------------- Methods --------------------\n\n}\n\ntype PossibleColor = Extract<BootstrapColor, | 'success' | 'warning'>\n","import type {CompanionEnumWithParentSingleton}           from '@joookiwi/enumerable'\nimport type {NullOrString}                               from '@joookiwi/type'\nimport {CompanionEnumWithParent, EnumWithNullableParent} from '@joookiwi/enumerable'\n\nimport type {Names, Ordinals, PossibleRouteName} from 'app/property/EntityGameStyles.types'\n\nimport {GameStyles} from 'core/gameStyle/GameStyles'\n\nexport class EntityGameStyles\n    extends EnumWithNullableParent<GameStyles, Ordinals, Names> {\n\n    //region -------------------- Enum instances --------------------\n\n    public static readonly ALL_GAME_STYLES = new class EntityGameStyles_AllGameStyles extends EntityGameStyles {\n\n        public override get allRouteName() {\n            return null\n        }\n\n    }()\n\n    public static readonly SUPER_MARIO_BROS = new class EntityGameStyles_SuperMarioBros extends EntityGameStyles {\n\n        public override get allColor(): PossibleColor {\n            return 'warning'\n        }\n\n        public override smb3Color(): PossibleColor {\n            return 'warning'\n        }\n\n        public override smwColor(): PossibleColor {\n            return 'warning'\n        }\n\n        public override nsmbuColor(): PossibleColor {\n            return 'warning'\n        }\n\n        public override sm3dwColor(): PossibleColor {\n            return 'warning'\n        }\n\n        public override get smbRouteName() {\n            return null\n        }\n\n    }()\n    public static readonly SUPER_MARIO_BROS_3 = new class EntityGameStyles_SuperMarioBros3 extends EntityGameStyles {\n\n        public override get allColor(): PossibleColor {\n            return 'warning'\n        }\n\n        public override smbColor(): PossibleColor {\n            return 'warning'\n        }\n\n        public override smwColor(): PossibleColor {\n            return 'warning'\n        }\n\n        public override nsmbuColor(): PossibleColor {\n            return 'warning'\n        }\n\n        public override sm3dwColor(): PossibleColor {\n            return 'warning'\n        }\n\n        public override get smb3RouteName() {\n            return null\n        }\n\n    }()\n    public static readonly SUPER_MARIO_WORLD = new class EntityGameStyles_SuperMarioWorld extends EntityGameStyles {\n\n        public override get allColor(): PossibleColor {\n            return 'warning'\n        }\n\n        public override smbColor(): PossibleColor {\n            return 'warning'\n        }\n\n        public override smb3Color(): PossibleColor {\n            return 'warning'\n        }\n\n        public override nsmbuColor(): PossibleColor {\n            return 'warning'\n        }\n\n        public override sm3dwColor(): PossibleColor {\n            return 'warning'\n        }\n\n        public override get smwRouteName() {\n            return null\n        }\n\n    }()\n    public static readonly NEW_SUPER_MARIO_BROS_U = new class EntityGameStyles_NewSuperMarioBrosU extends EntityGameStyles {\n\n        public override get allColor(): PossibleColor {\n            return 'warning'\n        }\n\n        public override smbColor(): PossibleColor {\n            return 'warning'\n        }\n\n        public override smb3Color(): PossibleColor {\n            return 'warning'\n        }\n\n        public override smwColor(): PossibleColor {\n            return 'warning'\n        }\n\n        public override sm3dwColor(): PossibleColor {\n            return 'warning'\n        }\n\n        public override get nsmbuRouteName() {\n            return null\n        }\n\n    }()\n    public static readonly SUPER_MARIO_3D_WORLD = new class EntityGameStyles_SuperMario3DWorld extends EntityGameStyles {\n\n        public override get allColor(): PossibleColor {\n            return 'warning'\n        }\n\n        public override smbColor(): PossibleColor {\n            return 'warning'\n        }\n\n        public override smb3Color(): PossibleColor {\n            return 'warning'\n        }\n\n        public override smwColor(): PossibleColor {\n            return 'warning'\n        }\n\n        public override nsmbuColor(): PossibleColor {\n            return 'warning'\n        }\n\n        public override get sm3dwRouteName() {\n            return null\n        }\n\n    }()\n\n    public static readonly NOT_INDIVIDUAL_GAME_STYLE = new class EntityGameStyles_NotIndividualGameStyle extends EntityGameStyles {\n\n        public override get allColor(): PossibleColor {\n            return 'warning'\n        }\n\n        public override smbColor(isSelected: boolean,): PossibleColor {\n            return isSelected ? 'success' : 'warning'\n        }\n\n        public override smb3Color(isSelected: boolean,): PossibleColor {\n            return isSelected ? 'success' : 'warning'\n        }\n\n        public override smwColor(isSelected: boolean,): PossibleColor {\n            return isSelected ? 'success' : 'warning'\n        }\n\n        public override nsmbuColor(isSelected: boolean,): PossibleColor {\n            return isSelected ? 'success' : 'warning'\n        }\n\n        public override sm3dwColor(isSelected: boolean,): PossibleColor {\n            return isSelected ? 'success' : 'warning'\n        }\n\n    }()\n\n    //endregion -------------------- Enum instances --------------------\n    //region -------------------- Companion enum --------------------\n\n    public static readonly CompanionEnum: CompanionEnumWithParentSingleton<EntityGameStyles, typeof EntityGameStyles, GameStyles, typeof GameStyles> = class CompanionEnum_EntityGameStyles\n        extends CompanionEnumWithParent<EntityGameStyles, typeof EntityGameStyles, GameStyles, typeof GameStyles> {\n\n        //region -------------------- Singleton usage --------------------\n\n        static #instance?: CompanionEnum_EntityGameStyles\n\n        private constructor() {\n            super(EntityGameStyles, GameStyles,)\n        }\n\n        public static get get() {\n            return this.#instance ??= new CompanionEnum_EntityGameStyles()\n        }\n\n        //endregion -------------------- Singleton usage --------------------\n\n    }\n\n    //endregion -------------------- Companion enum --------------------\n    //region -------------------- Fields --------------------\n    //endregion -------------------- Fields --------------------\n    //region -------------------- Constructor --------------------\n\n    private constructor() {\n        super()\n    }\n\n    //endregion -------------------- Constructor --------------------\n    //region -------------------- Getter methods --------------------\n\n    public get allColor(): PossibleColor {\n        return 'success'\n    }\n\n    public smbColor(isSelected: boolean,): PossibleColor {\n        return 'success'\n    }\n\n    public smb3Color(isSelected: boolean,): PossibleColor {\n        return 'success'\n    }\n\n    public smwColor(isSelected: boolean,): PossibleColor {\n        return 'success'\n    }\n\n    public nsmbuColor(isSelected: boolean,): PossibleColor {\n        return 'success'\n    }\n\n    public sm3dwColor(isSelected: boolean,): PossibleColor {\n        return 'success'\n    }\n\n    //endregion -------------------- Getter methods --------------------\n    //region -------------------- Methods --------------------\n\n    public get allRouteName(): NullOrString<PossibleRouteName> {\n        return `everyEntity (GameStyle=all)`\n    }\n\n    public get smbRouteName(): NullOrString<PossibleRouteName> {\n        return `everyEntity (GameStyle=1)`\n    }\n\n    public get smb3RouteName(): NullOrString<PossibleRouteName> {\n        return `everyEntity (GameStyle=3)`\n    }\n\n    public get smwRouteName(): NullOrString<PossibleRouteName> {\n        return `everyEntity (GameStyle=W)`\n    }\n\n    public get nsmbuRouteName(): NullOrString<PossibleRouteName> {\n        return `everyEntity (GameStyle=U)`\n    }\n\n    public get sm3dwRouteName(): NullOrString<PossibleRouteName> {\n        return `everyEntity (GameStyle=3DW)`\n    }\n\n    //endregion -------------------- Methods --------------------\n\n}\n\ntype PossibleColor = Extract<BootstrapColor, | 'success' | 'warning'>\n","import type {CompanionEnumWithParentSingleton}           from '@joookiwi/enumerable'\nimport type {NullOr}                                     from '@joookiwi/type'\nimport {CompanionEnumWithParent, EnumWithNullableParent} from '@joookiwi/enumerable'\n\nimport type {Names, Ordinals, PossibleRouteName} from 'app/property/EntityTimes.types'\n\nimport {Times} from 'core/time/Times'\n\nexport class EntityTimes\n    extends EnumWithNullableParent<Times, Ordinals, Names> {\n\n    //region -------------------- Enum instances --------------------\n\n    public static readonly ALL_TIMES = new class EntityTimes_All extends EntityTimes {\n\n        public override get allRouteName() {\n            return null\n        }\n\n    }()\n    public static readonly DAY = new class EntityTimes_Day extends EntityTimes {\n\n        public override get allColor(): PossibleColor {\n            return 'warning'\n        }\n\n        public override get nightColor(): PossibleColor {\n            return 'warning'\n        }\n\n        public override get dayRouteName() {\n            return null\n        }\n\n    }()\n    public static readonly NIGHT = new class EntityTimes_Night extends EntityTimes {\n\n        public override get allColor(): PossibleColor {\n            return 'warning'\n        }\n\n        public override get dayColor(): PossibleColor {\n            return 'warning'\n        }\n\n        public override get nightRouteName() {\n            return null\n        }\n\n    }()\n\n    //endregion -------------------- Enum instances --------------------\n    //region -------------------- Companion enum --------------------\n\n    public static readonly CompanionEnum: CompanionEnumWithParentSingleton<EntityTimes, typeof EntityTimes, Times, typeof Times> = class CompanionEnum_EntityTimes\n        extends CompanionEnumWithParent<EntityTimes, typeof EntityTimes, Times, typeof Times> {\n\n        //region -------------------- Singleton usage --------------------\n\n        static #instance?: CompanionEnum_EntityTimes\n\n        private constructor() {\n            super(EntityTimes, Times,)\n        }\n\n        public static get get() {\n            return this.#instance ??= new CompanionEnum_EntityTimes()\n        }\n\n        //endregion -------------------- Singleton usage --------------------\n\n    }\n\n    //endregion -------------------- Companion enum --------------------\n    //region -------------------- Fields --------------------\n    //endregion -------------------- Fields --------------------\n    //region -------------------- Constructor --------------------\n\n    private constructor() {\n        super()\n    }\n\n    //endregion -------------------- Constructor --------------------\n    //region -------------------- Getter methods --------------------\n\n    public get allColor(): PossibleColor {\n        return 'success'\n    }\n\n    public get dayColor(): PossibleColor {\n        return 'success'\n    }\n\n    public get nightColor(): PossibleColor {\n        return 'success'\n    }\n\n    //endregion -------------------- Getter methods --------------------\n    //region -------------------- Methods --------------------\n\n    public get allRouteName(): NullOr<PossibleRouteName> {\n        return `everyEntity (Time=all)`\n    }\n\n    public get dayRouteName(): NullOr<PossibleRouteName> {\n        return `everyEntity (Time=day)`\n    }\n\n    public get nightRouteName(): NullOr<PossibleRouteName> {\n        return `everyEntity (Time=night)`\n    }\n\n    //endregion -------------------- Methods --------------------\n\n}\n\ntype PossibleColor = Extract<BootstrapColor, | 'success' | 'warning'>\n","import {getFirstOrNullByArray} from '@joookiwi/collection'\n\nimport type {Entities}            from 'core/entity/Entities'\nimport type {GameStyleCollection} from 'util/collection/GameStyleCollection'\nimport type {ReactProperties}     from 'util/react/ReactProperties'\n\nimport Image        from 'app/tools/images/Image'\nimport {GameStyles} from 'core/gameStyle/GameStyles'\n\nimport NSMBU = GameStyles.NSMBU\nimport SMB =   GameStyles.SMB\nimport SMB3 =  GameStyles.SMB3\nimport SMW =   GameStyles.SMW\nimport SM3DW = GameStyles.SM3DW\n\ninterface SingleEntityImageProperties\n    extends ReactProperties {\n\n    /** The reference to retrieve its first image */\n    readonly reference: Entities\n\n    /** The {@link GameStyles} to display or not a selected image */\n    readonly gameStyles: GameStyleCollection\n\n}\n\n/**\n * Get the first image present on each {@link GameStyles game style} present in the {@link reference} received\n *\n * @param reference  The reference to retrieve its first image\n * @param gameStyles The collection to display or not a selected image in a {@link GameStyles game style}\n * @reactComponent\n */\nexport default function SingleEntityImage({reference, gameStyles,}:SingleEntityImageProperties,) {\n    if (gameStyles.isEmpty)\n        return <div className=\"singleEntityImage empty-singleEntityImage\"/>\n    if (gameStyles.size === 1)\n        if (gameStyles.hasSmb)\n            return <div className=\"singleEntityImage unique-singleEntityImage smb-singleEntityImage\">\n                <Image file={getFirstOrNullByArray(reference.image.get(SMB,),)} className=\"entity-image\"/>\n            </div>\n        else if (gameStyles.hasSmb3)\n            return <div className=\"singleEntityImage unique-singleEntityImage smb3-singleEntityImage\">\n                <Image file={getFirstOrNullByArray(reference.image.get(SMB3,),)} className=\"entity-image\"/>\n            </div>\n        else if (gameStyles.hasSmw)\n            return <div className=\"singleEntityImage unique-singleEntityImage smw-singleEntityImage\">\n                <Image file={getFirstOrNullByArray(reference.image.get(SMW,),)} className=\"entity-image\"/>\n            </div>\n        else if (gameStyles.hasNsmbu)\n            return <div className=\"singleEntityImage unique-singleEntityImage nsmbu-singleEntityImage\">\n                <Image file={getFirstOrNullByArray(reference.image.get(NSMBU,),)} className=\"entity-image\"/>\n            </div>\n        else\n            return <div className=\"singleEntityImage unique-singleEntityImage sm3dw-singleEntityImage\">\n                <Image file={getFirstOrNullByArray(reference.image.get(SM3DW,),)} className=\"entity-image\"/>\n            </div>\n    return <div className=\"singleEntityImage mixedGameStyle-singleEntityImage\">\n        {gameStyles.hasSmb ? <Image file={getFirstOrNullByArray(reference.image.get(SMB,),)} className=\"entity-image\"/> : null}\n        {gameStyles.hasSmb3 ? <Image file={getFirstOrNullByArray(reference.image.get(SMB3,),)} className=\"entity-image\"/> : null}\n        {gameStyles.hasSmw ? <Image file={getFirstOrNullByArray(reference.image.get(SMW,),)} className=\"entity-image\"/> : null}\n        {gameStyles.hasNsmbu ? <Image file={getFirstOrNullByArray(reference.image.get(NSMBU,),)} className=\"entity-image\"/> : null}\n        {gameStyles.hasSm3dw ? <Image file={getFirstOrNullByArray(reference.image.get(SM3DW,),)} className=\"entity-image\"/> : null}\n    </div>\n\n}\n","import 'app/_GameAsideContent.scss'\nimport 'app/_GameStyleAsideContent.scss'\nimport 'app/_TimeAsideContent.scss'\nimport './EntityApp.scss'\nimport 'app/options/EntityAppOption.scss'\n\nimport type {Array, MutableArray, NullOr} from '@joookiwi/type'\nimport type {CollectionHolder}            from '@joookiwi/collection'\nimport {filterByArray}                    from '@joookiwi/collection'\n\nimport type {EntityProperties}        from 'app/AppProperties.types'\nimport type {AppInterpreterWithTable} from 'app/interpreter/AppInterpreterWithTable'\nimport type {DimensionOnList}         from 'app/interpreter/DimensionOnList'\nimport type {ViewAndRouteName}        from 'app/withInterpreter/DisplayButtonGroup.properties'\nimport type {GameCollection}          from 'util/collection/GameCollection'\nimport type {GameStyleCollection}     from 'util/collection/GameStyleCollection'\nimport type {TimeCollection}          from 'util/collection/TimeCollection'\nimport type {ReactProperties}         from 'util/react/ReactProperties'\n\nimport SubMainContainer                             from 'app/_SubMainContainer'\nimport {EntityAppOption}                            from 'app/options/EntityAppOption'\nimport {EntityGames}                                from 'app/property/EntityGames'\nimport {EntityGameStyles}                           from 'app/property/EntityGameStyles'\nimport {EntityTimes}                                from 'app/property/EntityTimes'\nimport LinkButton                                   from 'app/tools/button/LinkButton'\nimport Table                                        from 'app/tools/table/Table'\nimport {unfinishedText}                             from 'app/tools/text/UnfinishedText'\nimport List                                         from 'app/util/List'\nimport CardList                                     from 'app/withInterpreter/CardList'\nimport {ViewDisplays}                               from 'app/withInterpreter/ViewDisplays'\nimport EditorVoiceSoundComponent                    from 'core/editorVoice/EditorVoiceSound.component'\nimport {Entities}                                   from 'core/entity/Entities'\nimport SingleEntityImage                            from 'core/entity/component/SingleEntityImage'\nimport {Games}                                      from 'core/game/Games'\nimport GameImage                                    from 'core/game/component/GameImage'\nimport {GameStyles}                                 from 'core/gameStyle/GameStyles'\nimport GameStyleImage                               from 'core/gameStyle/component/GameStyleImage'\nimport {OtherWordInTheGames}                        from 'core/otherWordInTheGame/OtherWordInTheGames'\nimport {Times}                                      from 'core/time/Times'\nimport TimeImage                                    from 'core/time/component/TimeImage'\nimport {contentTranslation, gameContentTranslation} from 'lang/components/translationMethods'\nimport NameComponent                                from 'lang/name/component/Name.component'\nimport {Empty}                                      from 'util/emptyVariables'\nimport {intersect}                                  from 'util/utilitiesMethods'\n\nimport ALL =             Entities.ALL\nimport ALL_GAME_STYLES = GameStyles.ALL\nimport EMPTY_STRING =    Empty.EMPTY_STRING\nimport NSMBU =           GameStyles.NSMBU\nimport SMB =             GameStyles.SMB\nimport SMB3 =            GameStyles.SMB3\nimport SMM1 =            Games.SMM1\nimport SMM2 =            Games.SMM2\nimport SMM3DS =          Games.SMM3DS\nimport SMW =             GameStyles.SMW\nimport SM3DW =           GameStyles.SM3DW\n\nclass EntityAppInterpreter\n    implements AppInterpreterWithTable<Entities, EntityAppOption> {\n\n    //region -------------------- Fields --------------------\n\n    readonly #games\n    readonly #gameStyles\n    readonly #times\n\n    //endregion -------------------- Fields --------------------\n    //region -------------------- Constructor --------------------\n\n    public constructor(games: GameCollection, gameStyles: GameStyleCollection, times: TimeCollection) {\n        this.#games = games\n        this.#gameStyles = gameStyles\n        this.#times = times\n    }\n\n    //endregion -------------------- Constructor --------------------\n\n    public get content() {\n        const games = this.#games\n        const gameStyles = this.#gameStyles\n        const times = this.#times\n        return filterByArray(ALL, ({reference,},) =>\n            games.hasAnyIn(reference,)\n            && gameStyles.hasAnyIn(reference,)\n            && times.hasAnyIn(reference,),)\n    }\n\n    //region -------------------- Card --------------------\n\n    public createCardListDimension() {\n        return {\n            default: 1,\n            small: 2,\n            medium: 3,\n            large: 4,\n            extraLarge: 6,\n        } as const satisfies DimensionOnList\n    }\n\n    public createCardListContent(entity: Entities,) {\n        const reference = entity.reference\n        const category = reference.categoryEnglish === EMPTY_STRING ? EMPTY_STRING : `entityCategory-${reference.categoryEnglish}`//TODO move to the parent container className.\n        //TODO encapsulate the voiceSound into a sound interpreter.\n        return <div className={`${category}`}>\n            <SingleEntityImage reference={entity} gameStyles={this.#gameStyles}/>\n            <EditorVoiceSoundComponent editorVoiceSound={entity.editorVoiceSoundFileHolder} name={entity.englishName}/>\n        </div>\n    }\n\n    //endregion -------------------- Card --------------------\n    //region -------------------- Table --------------------\n\n    public readonly tableHeadersColor = 'secondary' satisfies BootstrapThemeColor\n\n    public get tableCaption() {\n        const entity = OtherWordInTheGames.ENTITY.singularNameOnReferenceOrNull ?? unfinishedText(OtherWordInTheGames.ENTITY.singularEnglishName,)\n        const entityAsLowerCase = OtherWordInTheGames.ENTITY.singularLowerCaseNameOnReferenceOrNull ?? entity.toLowerCase()\n        return gameContentTranslation('entity.all', {Entity: entity, entity: entityAsLowerCase,},) satisfies ReactElementOrString\n    }\n\n    public get tableOptions(): Array<EntityAppOption> {\n        const games = this.#games\n        const gameStyles = this.#gameStyles\n        const hasSmm2 = games.hasSmm2\n\n        const options: MutableArray<EntityAppOption> = []\n        if (gameStyles.hasSmb)\n            options.push(EntityAppOption.IMAGE_IN_SMB,)\n        if (gameStyles.hasSmb3)\n            options.push(EntityAppOption.IMAGE_IN_SMB3,)\n        if (gameStyles.hasSmw)\n            options.push(EntityAppOption.IMAGE_IN_SMW,)\n        if (gameStyles.hasNsmbu)\n            options.push(EntityAppOption.IMAGE_IN_NSMBU,)\n        if (gameStyles.hasSm3dw && hasSmm2) // The SMM2 validation is a fail-safe\n            options.push(EntityAppOption.IMAGE_IN_SM3DW,)\n        options.push(\n            EntityAppOption.NAME,\n            // EntityAppOption.GAME,\n            // EntityAppOption.GAME_STYLE,\n            // EntityAppOption.COURSE_THEME,\n            // EntityAppOption.TIME,\n            EntityAppOption.CATEGORY,\n        )\n        if (games.hasAllGames)\n            options.push(EntityAppOption.EDITOR_LIMIT_IN_SMM1_AND_3DS, EntityAppOption.EDITOR_LIMIT_IN_SMM2,)\n        else {\n            if (games.hasSmm1Or3ds)\n                options.push(EntityAppOption.EDITOR_LIMIT_IN_SMM1_AND_3DS_ONLY,)\n            if (hasSmm2)\n                options.push(EntityAppOption.EDITOR_LIMIT_IN_SMM2_ONLY,)\n        }\n        options.push(EntityAppOption.PLAY_LIMIT,)\n        return options\n    }\n\n\n    public getAdditionalClass(option: EntityAppOption,) {\n        return option.additionalClasses\n    }\n\n    public createTableContent(content: Entities, option: EntityAppOption,) {\n        return option.renderContent(content,)\n    }\n\n    public createTableHeader(option: EntityAppOption,) {\n        return option.renderTableHeader()\n    }\n\n    //endregion -------------------- Table --------------------\n\n}\n\nconst viewDisplayAndRouteName = [\n    [ViewDisplays.SIMPLE_LIST, 'everyEntity (list)',],\n    [ViewDisplays.CARD_LIST, 'everyEntity (card)',],\n    [ViewDisplays.TABLE, 'everyEntity (table)',],\n] as const satisfies Array<ViewAndRouteName>\n\n/** @reactComponent */\nexport default function EntityApp({viewDisplay, games, gameStyles, times,}: EntityProperties,) {\n    const entity = OtherWordInTheGames.ENTITY.singularNameOnReferenceOrNull ?? unfinishedText(OtherWordInTheGames.ENTITY.singularEnglishName,)\n    const entityAsLowerCase = OtherWordInTheGames.ENTITY.singularLowerCaseNameOnReferenceOrNull ?? entity.toLowerCase()\n    const entities = OtherWordInTheGames.ENTITY.pluralNameOnReferenceOrNull ?? unfinishedText(OtherWordInTheGames.ENTITY.pluralEnglishName,)\n    const entitiesAsLowerCase = OtherWordInTheGames.ENTITY.pluralLowerCaseNameOnReferenceOrNull ?? entities.toLowerCase()\n\n    //region -------------------- Game selection --------------------\n\n    const game = games.hasAllGames\n        ? EntityGames.ALL_GAMES\n        : games.hasSmm2\n            ? EntityGames.SUPER_MARIO_MAKER_2\n            : games.hasSmm1\n                ? EntityGames.SUPER_MARIO_MAKER\n                : EntityGames.SUPER_MARIO_MAKER_FOR_NINTENDO_3DS\n\n    //endregion -------------------- Game selection --------------------\n    //region -------------------- Game style selection --------------------\n\n    const amountOfSelectedGameStyles = intersect(ALL_GAME_STYLES, gameStyles,).length\n    const gameStyle = games.hasSmm2\n        ? amountOfSelectedGameStyles === 5\n            ? EntityGameStyles.ALL_GAME_STYLES\n            : amountOfSelectedGameStyles !== 1\n                ? EntityGameStyles.NOT_INDIVIDUAL_GAME_STYLE\n                : gameStyles.hasSmb\n                    ? EntityGameStyles.SUPER_MARIO_BROS\n                    : gameStyles.hasSmb3\n                        ? EntityGameStyles.SUPER_MARIO_BROS_3\n                        : gameStyles.hasSmw\n                            ? EntityGameStyles.SUPER_MARIO_WORLD\n                            : gameStyles.hasNsmbu\n                                ? EntityGameStyles.NEW_SUPER_MARIO_BROS_U\n                                : EntityGameStyles.SUPER_MARIO_3D_WORLD\n        : amountOfSelectedGameStyles === 5 || amountOfSelectedGameStyles === 4\n            ? EntityGameStyles.ALL_GAME_STYLES\n            : amountOfSelectedGameStyles !== 1\n                ? EntityGameStyles.NOT_INDIVIDUAL_GAME_STYLE\n                : gameStyles.hasSmb\n                    ? EntityGameStyles.SUPER_MARIO_BROS\n                    : gameStyles.hasSmb3\n                        ? EntityGameStyles.SUPER_MARIO_BROS_3\n                        : gameStyles.hasSmw\n                            ? EntityGameStyles.SUPER_MARIO_WORLD\n                            : EntityGameStyles.NEW_SUPER_MARIO_BROS_U\n\n    //endregion -------------------- Game style selection --------------------\n    //region -------------------- Time selection --------------------\n\n    const time = games.hasNotSmm2AndSmm1Or3ds\n        ? null\n        : times.hasAllTimes\n            ? EntityTimes.ALL_TIMES\n            : times.hasDay\n                ? EntityTimes.DAY\n                : EntityTimes.NIGHT\n\n    //endregion -------------------- Time selection --------------------\n\n    return <SubMainContainer reactKey=\"entity\" viewDisplayAndRouteName={viewDisplayAndRouteName} viewDisplay={viewDisplay}\n                             titleContent={gameContentTranslation('entity.all', {\n                                 Entity: entity, Entities: entities, entity: entityAsLowerCase, entities: entitiesAsLowerCase,\n                             },)}\n                             asideContent={<EntityAsideContent game={game} gameStyle={gameStyle} time={time} games={games} gameStyles={gameStyles}/>}>\n        <SubContent viewDisplay={viewDisplay} games={games} gameStyles={gameStyles} times={times}/>\n    </SubMainContainer>\n}\n\n/** @reactComponent */\nfunction SubContent({viewDisplay, games, gameStyles, times,}: EntityProperties,) {\n    const appInterpreter = new EntityAppInterpreter(games, gameStyles, times,)\n\n    if (viewDisplay === ViewDisplays.SIMPLE_LIST)\n        return <EntityList items={appInterpreter.content} gameStyles={gameStyles}/>\n    if (viewDisplay === ViewDisplays.CARD_LIST)\n        return <CardList reactKey=\"entity\" interpreter={appInterpreter}/>\n    return <Table id=\"entity-table\" interpreter={appInterpreter}/>\n}\n\n//region -------------------- List --------------------\n\ninterface Entity_ListProperties\n    extends ReactProperties {\n\n    readonly items: CollectionHolder<Entities>\n\n    readonly gameStyles: GameStyleCollection\n\n}\n\n/** @reactComponent */\nfunction EntityList({items, gameStyles,}: Entity_ListProperties,) {\n    return <List partialId=\"entity\" items={items} withSeparator>{it =>\n        <div className=\"d-flex justify-content-between\">\n            <div className=\"d-flex\">\n                <NameComponent id=\"entity-name\" name={it.reference} popoverOrientation=\"top\"/>\n                <SingleEntityImage reference={it} gameStyles={gameStyles}/>\n            </div>\n            <EditorVoiceSoundComponent editorVoiceSound={it.editorVoiceSoundFileHolder} name={it.englishName}/>\n        </div>\n    }</List>\n}\n\n//endregion -------------------- List --------------------\n//region -------------------- Aside content --------------------\n\ninterface EntityAsideContentProperties\n    extends ReactProperties {\n\n    readonly game: NullOr<EntityGames>\n    readonly gameStyle: EntityGameStyles\n    readonly time: NullOr<EntityTimes>\n\n    readonly games: GameCollection\n    readonly gameStyles: GameStyleCollection\n\n}\n\n/** @reactComponent */\nfunction EntityAsideContent({games, gameStyles, time, game, gameStyle,}: EntityAsideContentProperties,) {\n    return <div className=\"entity-asideContent-container\">\n        <GameAsideContent game={game} gameStyles={gameStyles}/>\n        {game == null ? null : <div className=\"d-inline mx-1\"/>}\n        <GameStyleAsideContent gameStyle={gameStyle} games={games} gameStyles={gameStyles}/>\n        {time == null ? null : <div className=\"d-inline mx-1\"/>}\n        <TimeAsideContent time={time}/>\n    </div>\n}\n\n/** @reactComponent */\nfunction GameAsideContent({game, gameStyles,}: Pick<EntityAsideContentProperties, | 'game' | 'gameStyles'>,) {\n    if (game == null)\n        return null\n    if (gameStyles.hasSm3dwAndSizeOfNot4Or5)\n        return <div id=\"entity-gamesButton-container\" className=\"gameAsideContent-container btn-group-vertical btn-group-sm\">\n            <LinkButton partialId=\"allGameLimit\" routeName={game.allRouteName} color={game.allColor}>{contentTranslation('All',)}</LinkButton>\n            <LinkButton partialId=\"smm2Game\" routeName={game.smm2RouteName} color={game.smm2Color}>\n                <GameImage reference={SMM2}/>\n            </LinkButton>\n        </div>\n\n    return <div id=\"entity-gamesButton-container\" className=\"gameAsideContent-container btn-group-vertical btn-group-sm\">\n        <LinkButton partialId=\"allGameLimit\" routeName={game.allRouteName} color={game.allColor}>{contentTranslation('All',)}</LinkButton>\n        <div id=\"entity-gamesButton-singularGame-container\" className=\"btn-group btn-group-sm\">\n            <LinkButton partialId=\"smm1Game\" routeName={game.smm1RouteName} color={game.smm1Color}>\n                <GameImage reference={SMM1}/>\n            </LinkButton>\n            <LinkButton partialId=\"smm3dsGame\" routeName={game.smm3dsRouteName} color={game.smm3dsColor}>\n                <GameImage reference={SMM3DS}/>\n            </LinkButton>\n            <LinkButton partialId=\"smm2Game\" routeName={game.smm2RouteName} color={game.smm2Color}>\n                <GameImage reference={SMM2}/>\n            </LinkButton>\n        </div>\n    </div>\n}\n\n/** @reactComponent */\nfunction GameStyleAsideContent({gameStyle, games, gameStyles,}: Pick<EntityAsideContentProperties, | 'gameStyle' | 'games' | 'gameStyles'>,) {\n    if (games.hasSmm2)\n        //The game styles are in SMM2\n        return <div id=\"entity-gameStylesButton-container\" className=\"gameStyleAsideContent-container btn-group-vertical btn-group-sm\">\n            <LinkButton partialId=\"allGameStyleLimit\" routeName={gameStyle.allRouteName} color={gameStyle.allColor}>{contentTranslation('All',)}</LinkButton>\n            <div id=\"entity-gameStylesButton-singularGameStyle-top-container\" className=\"btn-group btn-group-sm\">\n                <LinkButton partialId=\"smbGameStyleLimit\" routeName={gameStyle.smbRouteName} color={gameStyle.smbColor(gameStyles.hasSmb,)}>\n                    <GameStyleImage reference={SMB}/>\n                </LinkButton>\n                <LinkButton partialId=\"smb3GameStyleLimit\" routeName={gameStyle.smb3RouteName} color={gameStyle.smb3Color(gameStyles.hasSmb3,)}>\n                    <GameStyleImage reference={SMB3}/>\n                </LinkButton>\n                <LinkButton partialId=\"smwGameStyleLimit\" routeName={gameStyle.smwRouteName} color={gameStyle.smwColor(gameStyles.hasSmw,)}>\n                    <GameStyleImage reference={SMW}/>\n                </LinkButton>\n            </div>\n            <div id=\"entity-gameStylesButton-singularGameStyle-bottom-container\" className=\"btn-group btn-group-sm\">\n                <LinkButton partialId=\"nsmbuGameStyleLimit\" routeName={gameStyle.nsmbuRouteName} color={gameStyle.nsmbuColor(gameStyles.hasNsmbu,)}>\n                    <GameStyleImage reference={NSMBU}/>\n                </LinkButton>\n                <LinkButton partialId=\"sm3dwGameStyleLimit\" routeName={gameStyle.sm3dwRouteName} color={gameStyle.sm3dwColor(gameStyles.hasSm3dw,)}>\n                    <GameStyleImage reference={SM3DW}/>\n                </LinkButton>\n            </div>\n        </div>\n    //The game styles are in SMM1 / SMM3DS\n    return <div id=\"entity-gameStylesButton-container\" className=\"gameStyleAsideContent-container btn-group-vertical btn-group-sm\">\n        <LinkButton partialId=\"allGameStyleLimit\" routeName={gameStyle.allRouteName} color={gameStyle.allColor}>{contentTranslation('All',)}</LinkButton>\n        <div id=\"entity-gameStylesButton-singularGameStyle-top-container\" className=\"btn-group btn-group-sm\">\n            <LinkButton partialId=\"smbGameStyleLimit\" routeName={gameStyle.smbRouteName} color={gameStyle.smbColor(gameStyles.hasSmb,)}>\n                <GameStyleImage reference={SMB}/>\n            </LinkButton>\n            <LinkButton partialId=\"smb3GameStyleLimit\" routeName={gameStyle.smb3RouteName} color={gameStyle.smb3Color(gameStyles.hasSmb3,)}>\n                <GameStyleImage reference={SMB3}/>\n            </LinkButton>\n        </div>\n        <div id=\"entity-gameStylesButton-singularGameStyle-bottom-container\" className=\"btn-group btn-group-sm\">\n            <LinkButton partialId=\"smwGameStyleLimit\" routeName={gameStyle.smwRouteName} color={gameStyle.smwColor(gameStyles.hasSmw,)}>\n                <GameStyleImage reference={SMW}/>\n            </LinkButton>\n            <LinkButton partialId=\"nsmbuGameStyleLimit\" routeName={gameStyle.nsmbuRouteName} color={gameStyle.nsmbuColor(gameStyles.hasNsmbu,)}>\n                <GameStyleImage reference={NSMBU}/>\n            </LinkButton>\n        </div>\n    </div>\n}\n\n/** @reactComponent */\nfunction TimeAsideContent({time,}: Pick<EntityAsideContentProperties, 'time'>,) {\n    if (time == null)\n        return null\n    return <div id=\"entity-timesButton-container\" className=\"timeAsideContent-container btn-group-vertical btn-group-sm\">\n        <LinkButton partialId=\"allTime\" routeName={time.allRouteName} color={time.allColor}>{contentTranslation('All',)}</LinkButton>\n        <div className=\"btn-group btn-group-sm\">\n            <LinkButton partialId=\"dayTime\" routeName={time.dayRouteName} color={time.dayColor}>\n                <TimeImage reference={Times.DAY}/>\n            </LinkButton>\n            <LinkButton partialId=\"nightTime\" routeName={time.nightRouteName} color={time.nightColor}>\n                <TimeImage reference={Times.NIGHT}/>\n            </LinkButton>\n        </div>\n    </div>\n}\n\n//endregion -------------------- Aside content --------------------\n","import type {NullableString} from '@joookiwi/type'\nimport {Link}                from 'react-router-dom'\n\nimport type {PossibleRouteName}                            from 'route/EveryRoutes.types'\nimport type {ReactProperties, ReactPropertiesWithChildren} from 'util/react/ReactProperties'\n\nimport {routeFromName} from 'route/method/route.fromName'\n\ninterface LinkButtonsProperties\n    extends ReactProperties {\n\n    readonly partialId: string\n\n    readonly routeName: NullableString<PossibleRouteName>\n\n    readonly color: BootstrapColor\n\n}\n\n/**\n * Create a {@link Link} button or a disabled button (if the {@link LinkButtonsProperties.routeName route name} is <b>null</b>)\n *\n * @reactComponent\n */\nexport default function LinkButton({partialId, routeName, color, children,}: ReactPropertiesWithChildren<LinkButtonsProperties, ReactElementOrStringOrArray>,) {\n    const id = `${partialId}-button`\n    const className = `btn btn-${color} link-button`\n\n    if (routeName == null)\n        return <button type=\"button\" id={id} className={className} disabled>{children}</button>\n    return <Link type=\"button\" id={id} className={className} to={routeFromName(routeName,)}>{children}</Link>\n}\n","import './EditorVoiceSound.component.scss'\n\nimport type {Nullable} from '@joookiwi/type'\n\nimport type {EditorVoiceSound} from 'core/editorVoice/sound/EditorVoiceSound'\nimport type {ReactProperties}  from 'util/react/ReactProperties'\n\nimport SimpleSoundComponent from 'util/file/sound/component/SimpleSound.component'\n\ninterface EditorVoiceSoundComponentProperties\n    extends ReactProperties {\n\n    readonly editorVoiceSound: Nullable<EditorVoiceSound>\n\n    readonly name: string\n\n}\n\n/**\n * @param properties\n * @reactComponent\n */\nexport default function EditorVoiceSoundComponent({editorVoiceSound, name,}: EditorVoiceSoundComponentProperties,) {\n    if (editorVoiceSound == null)\n        return null\n\n    const regularFile = editorVoiceSound.regularSound\n    if (regularFile == null)\n        return null\n\n    const europeanFile = editorVoiceSound.europeanSound\n    if (europeanFile == null)\n        return <div key={`Editor voice sound container (single - ${name})`} className=\"single-editorVoiceSound-container\">\n            <SimpleSoundComponent file={regularFile} title={name}/>\n        </div>\n    return <div key={`Editor voice sound container (double - ${name})`} className=\"double-editorVoiceSound-container container\">\n        <div key={`Editor voice sound container (single #1 - ${name}`} className=\"single-editorVoiceSound-container\">\n            <SimpleSoundComponent file={regularFile} title={name}/>\n        </div>\n        <div key={`Editor voice sound container (single #2 - ${name})`} className=\"single-editorVoiceSound-container\">\n            <SimpleSoundComponent file={europeanFile} title={name}/>\n        </div>\n    </div>\n\n}\n","import './EntityCategoryIcon.scss'\n\nimport type {ReactProperties}  from 'util/react/ReactProperties'\nimport type {EntityCategories} from 'core/entityCategory/EntityCategories'\n\nimport Image                   from 'app/tools/images/Image'\nimport {Nullable}              from '@joookiwi/type'\n\ninterface EntityCategoryIconProperties\n    extends ReactProperties {\n\n    readonly reference: Nullable<EntityCategories>\n\n    readonly asWhiteImage?: boolean\n\n}\n\n/** @reactComponent */\nexport default function EntityCategoryIcon({reference, asWhiteImage = false,}: EntityCategoryIconProperties,) {\n    if (reference == null)\n        return null\n    if (asWhiteImage)\n        return <Image file={reference.imageFile} className={`entityCategory-icon white-entityCategory-icon entityCategory-icon-${reference.englishNameInHtml}`}/>\n    return <Image file={reference.imageFile} className={`entityCategory-icon colored-entityCategory-icon entityCategory-icon-${reference.englishNameInHtml}`}/>\n}\n","import type {Nullable, NullableString} from '@joookiwi/type'\n\nimport type {Times}           from 'core/time/Times'\nimport type {ReactProperties} from 'util/react/ReactProperties'\n\nimport Image   from 'app/tools/images/Image'\nimport {Empty} from 'util/emptyVariables'\n\nimport EMPTY_STRING = Empty.EMPTY_STRING\n\ninterface TimeImageProperties\n    extends ReactProperties {\n\n    readonly reference: Nullable<Times>\n\n    readonly className?: NullableString\n\n}\n\n/** @reactComponent */\nexport default function TimeImage({reference, className,}: TimeImageProperties,) {\n    if (reference == null)\n        return null\n    return <Image file={reference.imageFile} className={`time-image ${reference.englishNameInHtml}-image${className == null ? EMPTY_STRING : ` ${className}`}`}/>\n}\n"],"names":["CanBeFiredOutOfABulletLauncher","_ref","value","reference","canBeFiredOutOfABulletLauncher","_jsx","className","CanBeInAParachute","htmlElement","useRef","canBeInAParachute","comment","canBeInAParachuteComment","limit","Limits","LOOSE_COIN_LIMIT","Tooltip","option","title","gameContentTranslation","concat","acronym","languageValue","children","ref","CanBePutInABlock","canComeOutOfABlock","CanBePutInAClownCar","canBePutInAClownCar","CanBePutInALakituCloud","canBePutInALakituCloud","CanBePutInATree","canBePutInATree","CanBePutOnASwingingClaw","canBePutOnASwingingClaw","CanBeStacked","canBeStacked","CanBeThrownByALakitu","canBeThrownByALakitu","CanContainOrSpawnAKey","canContainOrSpawnAKey","CanHaveWings","canHaveWings","canHaveWingsComment","CanMakeASoundOutOfAMusicBlock","canMakeASoundOutOfAMusicBlock","canMakeASoundOutOfAMusicBlockComment","CanSpawnOutOfAPipe","canSpawnOutOfAPipe","HasAMushroomVariant","hasAMushroomVariant","IsAffectedDirectlyByAnOnOffState","_OtherWordInTheGames$","_OtherWordInTheGames$2","isAffectDirectlyByAnOnOffState","isAffectDirectlyByAnOnOffStateComment","entity","OtherWordInTheGames","ENTITY","singularNameOnReferenceOrNull","unfinishedText","singularEnglishName","entityAsLowerCase","singularLowerCaseNameOnReferenceOrNull","toLowerCase","ALL","Games","GameComponent","name","displayAllAsText","allByArray","it","get","TextComponent","content","mapByArray","GameImage","english","games","filterByArray","length","getFirst","map","GameStyles","GameStyleComponent","GameStyleImage","gameStyles","getInHtml","StringContainer","LanguageCompanion","ProjectLanguages","Companion","LimitComponent","id","limits","displayAcronymIfApplicable","createSingleComponent","selectedLimits","_Fragment","i","_jsxs","Fragment","createReturnOfLine","englishName","index","size","current","comma","createSingleNameComponent","acronymId","nameContainer","NameComponent","PlayLimitComponent","englishNameInHtml","toPlayLimitMap","SMM1And3DSEditorLimitComponent","editorLimit","editorLimit_smm1And3ds","NOT_APPLICABLE","SMM2EditorLimitComponent","editorLimit_smm2","isUnknown","isUnknown_editorLimit_smm2","COURSE_THEMES","Themes","CourseThemeComponent","courseThemeImage","Image","file","COURSE_THEME_IMAGE_FILE","ThemeImage","courseThemes","Times","TimeComponent","TimeImage","isInDayTheme","DAY","NIGHT","CategoryCompanion","EntityCategories","EMPTY_STRING","Empty","NSMBU","SMB","SMB3","SMW","SM3DW","_associatedClass","_classPrivateFieldLooseKey","_additionalClasses","EntityAppOption","Enum","constructor","associatedClass","super","Object","defineProperty","writable","_classPrivateFieldLooseBase","this","additionalClasses","_createContentOption","enumeration","ReferenceError","renderContent","_createTableHeaderOption","renderTableHeader","_EntityAppOption","IMAGE_IN_SMB","image","imageFiles","isInProduction","console","warn","images","Array","forEachByArray","key","element","IMAGE_IN_SMB3","_ref2","IMAGE_IN_SMW","_ref3","IMAGE_IN_NSMBU","_ref4","IMAGE_IN_SM3DW","_ref5","NAME","CommonOptions","getNameContent","EditorVoiceSoundComponent","editorVoiceSound","editorVoiceSoundFileHolder","nameHeader","GAME","_ref6","gameHeader","GAME_STYLE","_ref7","COURSE_THEME","_ref8","TIME","_ref9","CATEGORY","categoryAmericanEnglish","EntityCategoryIcon","getValueByName","categoryHeader","EDITOR_LIMIT_IN_SMM1_AND_3DS","completeEditorLimitInSmm1And3dsHeader","EDITOR_LIMIT_IN_SMM1_AND_3DS_ONLY","completeEditorLimitHeader","EDITOR_LIMIT_IN_SMM2","completeEditorLimitInSmm2Header","EDITOR_LIMIT_IN_SMM2_ONLY","PLAY_LIMIT","completePlayLimitHeader","CompanionEnum","_instance","_CompanionEnum_EntityAppOption","_classPrivateFieldLoo","_classPrivateFieldLoo2","EntityGames","EnumWithNullableParent","allColor","smm1Color","smm3dsColor","smm2Color","allRouteName","smm1RouteName","smm3dsRouteName","smm2RouteName","_EntityGames","ALL_GAMES","SUPER_MARIO_MAKER","SUPER_MARIO_MAKER_FOR_NINTENDO_3DS","SUPER_MARIO_MAKER_2","_CompanionEnum_EntityGames","CompanionEnum_EntityGames","CompanionEnumWithParent","EntityGameStyles","smbColor","isSelected","smb3Color","smwColor","nsmbuColor","sm3dwColor","smbRouteName","smb3RouteName","smwRouteName","nsmbuRouteName","sm3dwRouteName","_EntityGameStyles","ALL_GAME_STYLES","SUPER_MARIO_BROS","SUPER_MARIO_BROS_3","SUPER_MARIO_WORLD","NEW_SUPER_MARIO_BROS_U","SUPER_MARIO_3D_WORLD","NOT_INDIVIDUAL_GAME_STYLE","_CompanionEnum_EntityGameStyles","CompanionEnum_EntityGameStyles","EntityTimes","dayColor","nightColor","dayRouteName","nightRouteName","_EntityTimes","ALL_TIMES","_CompanionEnum_EntityTimes","CompanionEnum_EntityTimes","SingleEntityImage","isEmpty","hasSmb","getFirstOrNullByArray","hasSmb3","hasSmw","hasNsmbu","hasSm3dw","Entities","SMM1","SMM2","SMM3DS","_games","_gameStyles","_times","EntityAppInterpreter","times","tableHeadersColor","hasAnyIn","createCardListDimension","default","small","medium","large","extraLarge","createCardListContent","category","categoryEnglish","tableCaption","Entity","tableOptions","hasSmm2","options","push","hasAllGames","hasSmm1Or3ds","getAdditionalClass","createTableContent","createTableHeader","viewDisplayAndRouteName","ViewDisplays","SIMPLE_LIST","CARD_LIST","TABLE","EntityApp","_OtherWordInTheGames$3","_OtherWordInTheGames$4","_OtherWordInTheGames$5","_OtherWordInTheGames$6","viewDisplay","entities","pluralNameOnReferenceOrNull","pluralEnglishName","entitiesAsLowerCase","pluralLowerCaseNameOnReferenceOrNull","game","hasSmm1","amountOfSelectedGameStyles","intersect","gameStyle","time","hasNotSmm2AndSmm1Or3ds","hasAllTimes","hasDay","SubMainContainer","reactKey","titleContent","asideContent","EntityAsideContent","SubContent","appInterpreter","EntityList","items","CardList","interpreter","Table","List","partialId","withSeparator","popoverOrientation","GameAsideContent","GameStyleAsideContent","TimeAsideContent","hasSm3dwAndSizeOfNot4Or5","LinkButton","routeName","color","contentTranslation","type","disabled","Link","to","routeFromName","regularFile","regularSound","europeanFile","europeanSound","SimpleSoundComponent","asWhiteImage","imageFile"],"sourceRoot":""}