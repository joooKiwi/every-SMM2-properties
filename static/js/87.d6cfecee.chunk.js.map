{"version":3,"file":"static/js/87.d6cfecee.chunk.js","mappings":"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","sources":["core/medal/Medal.container.ts","core/medal/Medal.loader.ts","core/medal/Medals.ts","core/medal/file/fileCreator.ts","app/MedalApp.tsx","app/withInterpreter/AbstractCardListApp.tsx"],"sourcesContent":["import type {PossibleAmountOfStarReceivedToUnlockIt, PossibleMaximumAmountAllowedToUploadALevel} from 'core/medal/loader.types'\nimport type {Medal}                                                                              from 'core/medal/Medal'\nimport type {PossibleEnglishName}                                                                from 'core/medal/Medals.types'\nimport type {Entity}                                                                             from 'core/entity/Entity'\nimport type {CharacterName}                                                                      from 'core/characterName/CharacterName'\n\nimport {ClassContainingAName} from 'lang/name/ClassContainingAName'\n\nexport class MedalContainer\n    extends ClassContainingAName<string>\n    implements Medal {\n\n    //region -------------------- Fields --------------------\n\n    readonly #imageName\n    readonly #maximumAmountAllowedToUploadALevel\n    readonly #amountOfStarReceivedToUnlockIt\n\n    //endregion -------------------- Fields --------------------\n    //region -------------------- Constructor --------------------\n\n    public constructor(associatedReference: | Entity | CharacterName,\n                       imageName: PossibleEnglishName,\n                       maximumAmountAllowedToUploadALevel: PossibleMaximumAmountAllowedToUploadALevel,\n                       amountOfStarReceivedToUnlockIt: PossibleAmountOfStarReceivedToUnlockIt,) {\n        super(associatedReference,)\n        this.#imageName = imageName\n        this.#maximumAmountAllowedToUploadALevel = maximumAmountAllowedToUploadALevel\n        this.#amountOfStarReceivedToUnlockIt = amountOfStarReceivedToUnlockIt\n    }\n\n    //endregion -------------------- Constructor --------------------\n    //region -------------------- Getter methods --------------------\n\n    public get imageName(): PossibleEnglishName {\n        return this.#imageName\n    }\n\n    public get maximumAmountAllowedToUploadALevel(): PossibleMaximumAmountAllowedToUploadALevel {\n        return this.#maximumAmountAllowedToUploadALevel\n    }\n\n    public get amountOfStarReceivedToUnlockIt(): PossibleAmountOfStarReceivedToUnlockIt {\n        return this.#amountOfStarReceivedToUnlockIt\n    }\n\n    //endregion -------------------- Getter methods --------------------\n\n}\n","import file from 'resources/compiled/Medals (SMM).json'\n\nimport type {PossibleAmountOfStarReceivedToUnlockIt, PossibleMaximumAmountAllowedToUploadALevel} from 'core/medal/loader.types'\nimport type {Medal}                                                                              from 'core/medal/Medal'\nimport type {PossibleEnglishName}                                                                from 'core/medal/Medals.types'\nimport type {Loader}                                                                             from 'util/loader/Loader'\n\nimport {isInProduction} from 'variables'\nimport {MedalContainer} from 'core/medal/Medal.container'\nimport {Medals}         from 'core/medal/Medals'\n\n/**\n * @dependsOn<{@link Medals}>\n * @indirectlyDependsOn<{@link CharacterNameLoader}>\n * @indirectlyDependsOn<{@link CharacterNames}>\n * @indirectlyDependsOn<{@link Entities}>\n * @indirectlyDependsOn<{@link EntityLoader}>\n * @recursiveReference<{@link Medals}>\n * @singleton\n */\nexport class MedalLoader\n    implements Loader<ReadonlyMap<PossibleEnglishName, Medal>> {\n\n    //region -------------------- Singleton usage --------------------\n\n    static #instance?: MedalLoader\n\n    private constructor() {}\n\n    public static get get() {\n        return this.#instance ??= new this()\n    }\n\n    //endregion -------------------- Singleton usage --------------------\n\n    #map?: Map<PossibleEnglishName, Medal>\n\n    public load(): ReadonlyMap<PossibleEnglishName, Medal> {\n        if (this.#map != null)\n            return this.#map\n\n        const references = new Map<PossibleEnglishName, Medal>()\n        let index = file.length\n        while (index-- > 0) {\n            const content = file[index] as Content\n            references.set(content.image, createReference(content,),)\n        }\n\n        if (!isInProduction)\n            console.info(\n                '-------------------- \"medal\" has been loaded --------------------\\n',\n                references,\n                '\\n-------------------- \"medal\" has been loaded --------------------',\n            )\n\n        return this.#map = references\n\n    }\n\n}\n\ninterface Content {\n\n    amountOfAllowedLevelToUpload: PossibleMaximumAmountAllowedToUploadALevel\n    amountOfStarReceived: PossibleAmountOfStarReceivedToUnlockIt\n    image: PossibleEnglishName\n\n}\n\nfunction createReference(content: Content,): Medal {\n    const imageName = content.image\n\n    return new MedalContainer(\n        Medals.CompanionEnum.get.getValueByName(imageName,).associatedReference.reference,\n        imageName,\n        content.amountOfAllowedLevelToUpload,\n        content.amountOfStarReceived,\n    )\n}\n","import {Enum} from '@joookiwi/enumerable'\n\nimport type {ClassWithEnglishName}                                                         from 'core/ClassWithEnglishName'\nimport type {Medal}                                                                        from 'core/medal/Medal'\nimport type {Names, Ordinals, PossibleEnglishName, PossibleImageName, PossibleImageNumber} from 'core/medal/Medals.types'\nimport type {MedalImageFile}                                                               from 'core/medal/file/MedalImageFile'\nimport type {CompanionEnumByNameSingleton}                                                 from 'util/enumerable/Singleton.types'\nimport type {ClassWithImageFile}                                                           from 'util/file/image/ClassWithImageFile'\n\nimport {MedalLoader}                    from 'core/medal/Medal.loader'\nimport * as FileCreator                 from 'core/medal/file/fileCreator'\nimport {StringContainer}                from 'util/StringContainer'\nimport {CompanionEnumByEnglishNameOnly} from 'util/enumerable/companion/CompanionEnumByEnglishNameOnly'\nimport {Entities}                       from 'core/entity/Entities'\nimport {CharacterNames}                 from 'core/characterName/CharacterNames'\n\n/**\n * @todo Change the \"associated reference\" used from the \"Green Koopa Troopa\" to \"Koopa Troopa\"\n * @recursiveReference<{@link MedalLoader}>\n */\nexport class Medals\n    extends Enum<Ordinals, Names>\n    implements ClassWithEnglishName<PossibleEnglishName>,\n        ClassWithImageFile<MedalImageFile> {\n\n    //region -------------------- Enum instances --------------------\n\n    public static readonly GOOMBA =         new Medals('Goomba', 0, Entities.GOOMBA,)\n    public static readonly KOOPA_TROOPA =   new Medals('Koopa Troopa', 1, Entities.GREEN_KOOPA_TROOPA,)\n    public static readonly PIRANHA_PLANT =  new Medals('Piranha Plant', 2, Entities.PIRANHA_PLANT,)\n    public static readonly SPINY =          new Medals('Spiny', 3, Entities.SPINY,)\n    public static readonly CHEEP_CHEEP =    new Medals('Cheep Cheep', 4, Entities.CHEEP_CHEEP,)\n    public static readonly BLOOPER =        new Medals('Blooper', 5, Entities.BLOOPER,)\n    public static readonly LAKITU =         new Medals('Lakitu', 6, Entities.LAKITU,)\n    public static readonly BOWSER =         new Medals('Bowser', 7, Entities.BOWSER,)\n    public static readonly TOAD =           new Medals('Toad', 8, CharacterNames.TOAD, )\n    public static readonly PRINCESS_PEACH = new Medals('Princess Peach', 9, CharacterNames.PRINCESS_PEACH,)\n\n    //endregion -------------------- Enum instances --------------------\n    //region -------------------- Companion enum --------------------\n\n    public static CompanionEnum: CompanionEnumByNameSingleton<Medals, typeof Medals> = class CompanionEnum_Medals\n        extends CompanionEnumByEnglishNameOnly<Medals, typeof Medals> {\n\n        //region -------------------- Singleton usage --------------------\n\n        static #instance?: CompanionEnum_Medals\n\n        private constructor() {\n            super(Medals,)\n        }\n\n        public static get get() {\n            return this.#instance ??= new CompanionEnum_Medals()\n        }\n\n        //endregion -------------------- Singleton usage --------------------\n\n    }\n\n    //endregion -------------------- Companion enum --------------------\n    //region -------------------- Fields --------------------\n\n    static #REFERENCE_MAP?: ReadonlyMap<PossibleEnglishName, Medal>\n\n    #reference?: Medal\n    readonly #associatedReference: | Entities | CharacterNames\n\n    readonly #englishName\n    readonly #imageName: PossibleImageName\n    #imageFile?: MedalImageFile\n\n    //endregion -------------------- Fields --------------------\n    //region -------------------- Constructor --------------------\n\n    private constructor(englishName: PossibleEnglishName, imageNumber: PossibleImageNumber, associatedReference: | Entities | CharacterNames,) {\n        super()\n        this.#englishName = new StringContainer(englishName,)\n        this.#imageName = `Honor_Medal_0${imageNumber}^l.bflim`\n        this.#associatedReference = associatedReference\n    }\n\n    //endregion -------------------- Constructor --------------------\n    //region -------------------- Getter methods --------------------\n\n    public static get REFERENCE_MAP(): ReadonlyMap<PossibleEnglishName, Medal> {\n        return this.#REFERENCE_MAP ??= MedalLoader.get.load()\n    }\n\n    /**\n     * {@inheritDoc}\n     * @semiAsynchronously\n     */\n    public get reference(): Medal {\n        return this.#reference ??= Medals.REFERENCE_MAP.get(this.englishName,)!\n    }\n\n    public get associatedReference(): | Entities | CharacterNames {\n        return this.#associatedReference\n    }\n\n\n    public get englishName(): PossibleEnglishName {\n        return this.#englishName.get\n    }\n\n    public get englishNameInHtml(): string {\n        return this.#englishName.getInHtml\n    }\n\n    public get imageFile(): MedalImageFile {\n        return this.#imageFile ??= FileCreator.medalImage(this.#imageName, this.englishName,)\n    }\n\n    //endregion -------------------- Getter methods --------------------\n    //region -------------------- Methods --------------------\n    //endregion -------------------- Methods --------------------\n\n}\n","import type {PossibleEnglishName, PossibleImageName} from 'core/medal/Medals.types'\nimport type {MedalImageFile}                         from 'core/medal/file/MedalImageFile'\n\nimport {SimpleImageFile} from 'util/file/image/SimpleImageFile'\n\n/**\n * Create a simple {@link MedalImageFile} from a {@link name} prpvided\n *\n * @param name The file name\n * @param commonName The fallback name\n */\nexport function medalImage(name: PossibleImageName, commonName: PossibleEnglishName,): MedalImageFile {\n    return new SimpleImageFile('medal', name, 'tiff', commonName,)\n}\n","import type {AppInterpreterWithCardList}                           from 'app/interpreter/AppInterpreterWithCardList'\nimport type {PossibleDimensionOnCardList, PossibleDimensionOnList} from 'app/interpreter/DimensionOnList'\nimport type {PossibleRouteName}                                    from 'route/EveryRoutes.types'\n\nimport {AbstractCardListApp}    from 'app/withInterpreter/AbstractCardListApp'\nimport {Medals}                 from 'core/medal/Medals'\nimport {gameContentTranslation} from 'lang/components/translationMethods'\nimport Image                    from 'app/tools/images/Image'\n\nexport default class MedalApp\n    extends AbstractCardListApp<AppInterpreterWithCardList<Medals>> {\n\n    //region -------------------- Create methods --------------------\n\n    protected override _createKey(): string {\n        return 'medal'\n    }\n\n    protected override _createSimpleListRouteName(): PossibleRouteName {\n        return 'everyMedal (list)'\n    }\n\n    protected override _createCardListRouteName(): PossibleRouteName {\n        return 'everyMedal (card)'\n    }\n\n    protected override _createTitleContent(): ReactElementOrString {\n        return gameContentTranslation('medal.all',)\n    }\n\n    protected override _createAppOptionInterpreter() {\n        return new class MedalAppInterpreter implements AppInterpreterWithCardList<Medals> {\n\n            public get content() {\n                return Medals.CompanionEnum.get.values.toArray()\n            }\n\n            //region -------------------- List interpreter --------------------\n\n            public createListDimension(): PossibleDimensionOnList {\n                return {\n                    default: 6,\n                    small: 3,\n                    medium: 2,\n                    large: null,\n                    extraExtraLarge: 1,\n                }\n            }\n\n            //endregion -------------------- List interpreter --------------------\n            //region -------------------- Card list interpreter --------------------\n\n            public createCardListDimension(): PossibleDimensionOnCardList {\n                return 'list'\n            }\n\n            public createCardListContent(enumerable: Medals,): ReactElement {\n                return <Image file={enumerable.imageFile}/>\n            }\n\n            //endregion -------------------- Card list interpreter --------------------\n\n        }()\n    }\n\n    //endregion -------------------- Create methods --------------------\n\n}\n","import type {AppWithInterpreterProperties} from 'app/AppProperties.types'\nimport type {AppStates}                    from 'app/AppStates.types'\nimport type {ValueByApp}                   from 'app/interpreter/AppInterpreter'\nimport type {AppInterpreterWithCardList}   from 'app/interpreter/AppInterpreterWithCardList'\nimport type {ViewAndRouteName}             from 'app/withInterpreter/DisplayButtonGroup.properties'\nimport type {PossibleRouteName}            from 'route/EveryRoutes.types'\n\nimport {AbstractSimpleListApp} from 'app/withInterpreter/AbstractSimpleListApp'\nimport {ListDimensionCreator}  from 'app/withInterpreter/ListDimension.creator'\nimport {ViewDisplays}          from 'app/withInterpreter/ViewDisplays'\nimport NameComponent           from 'lang/name/component/Name.component'\n\nexport abstract class AbstractCardListApp<APP extends AppInterpreterWithCardList,\n    T extends AppWithInterpreterProperties = AppWithInterpreterProperties, S extends AppStates = AppStates, >\n    extends AbstractSimpleListApp<APP, T, S> {\n\n    //region -------------------- Fields --------------------\n\n    #routeName?: PossibleRouteName\n\n    //endregion -------------------- Fields --------------------\n    //region -------------------- Getter & create methods --------------------\n\n    protected override _createPossibleViewDisplay(): readonly ViewAndRouteName[] {\n        return [\n            ...super._createPossibleViewDisplay(),\n            [ViewDisplays.CARD_LIST, this.__cardRouteName,],\n        ]\n    }\n\n    private get __cardRouteName(): PossibleRouteName {\n        return this.#routeName ??= this._createCardListRouteName()\n    }\n\n    protected abstract _createCardListRouteName(): PossibleRouteName\n\n    protected _createUniqueNameOnCardList(enumerable: ValueByApp<APP>,): string {\n        return enumerable.englishName\n    }\n\n    //endregion -------------------- Getter & create methods --------------------\n    //region -------------------- Render methods --------------------\n\n    /**\n     * Create a list of elements in a card manner.\n     * It can be similar to the {@link createList} but has more information displayed.\n     */\n    public createCardList(): ReactElement {\n        const optionInterpreter = this._appOptionInterpreter\n        const key = this._key\n        const cardListDimension = optionInterpreter.createCardListDimension()\n        const dimensions = new ListDimensionCreator(cardListDimension === 'list' ? optionInterpreter.createListDimension() : cardListDimension,).createDimensions()\n        const content = optionInterpreter.content\n\n        const size = content.length\n        const contentToDisplay = new Array<ReactElement>(size,)\n        let index = size\n        while (index-- > 0) {\n            const enumerable = content[index]\n            const uniqueEnglishName = this._createUniqueNameOnCardList(enumerable,)\n\n            //TODO change the popover to be on the id instead of the name directly\n            contentToDisplay[index] =\n                <div key={`${uniqueEnglishName} - main card list container`} id={`${key}-${enumerable.englishNameInHtml}-container`} className={`${key}-container listElement-container ${dimensions}`}>\n                    <div key={`${uniqueEnglishName} - main card list sub-container`} className=\"cardListElement-container rounded-pill\">\n                        <NameComponent key={`${uniqueEnglishName} - text container`} id=\"name\" name={enumerable.reference.nameContainer} popoverOrientation=\"left\"/>\n                        <div className=\"cardListName-content-container\">{optionInterpreter.createCardListContent(enumerable)}</div>\n                    </div>\n                </div>\n        }\n        return <>{contentToDisplay}</>\n    }\n\n    //endregion -------------------- Render methods --------------------\n\n}\n"],"names":["_imageName","_classPrivateFieldLooseKey","_maximumAmountAllowedToUploadALevel","_amountOfStarReceivedToUnlockIt","MedalContainer","_ref","_inherits","_super","_createSuper","associatedReference","imageName","maximumAmountAllowedToUploadALevel","amountOfStarReceivedToUnlockIt","_this","_classCallCheck","call","Object","defineProperty","_assertThisInitialized","writable","value","_classPrivateFieldLooseBase","_createClass","key","get","this","ClassContainingAName","_instance","_map","MedalLoader","references","Map","index","file","length","content","set","image","createReference","isInProduction","console","info","_classPrivateFieldLoo","_classPrivateFieldLoo2","Medals","CompanionEnum","getValueByName","reference","amountOfAllowedLevelToUpload","amountOfStarReceived","_REFERENCE_MAP","_reference","_associatedReference","_englishName","_imageFile","englishName","imageNumber","StringContainer","concat","REFERENCE_MAP","getInHtml","_classPrivateFieldLoo3","_classPrivateFieldLoo4","name","commonName","SimpleImageFile","_classPrivateFieldLoo5","_classPrivateFieldLoo6","load","Enum","GOOMBA","Entities","KOOPA_TROOPA","GREEN_KOOPA_TROOPA","PIRANHA_PLANT","SPINY","CHEEP_CHEEP","BLOOPER","LAKITU","BOWSER","TOAD","CharacterNames","PRINCESS_PEACH","_class","_CompanionEnumByEngli","CompanionEnum_Medals","_super2","_classPrivateFieldLoo7","_classPrivateFieldLoo8","CompanionEnumByEnglishNameOnly","MedalApp","_AbstractCardListApp","apply","arguments","gameContentTranslation","MedalAppInterpreter","values","toArray","default","small","medium","large","extraExtraLarge","enumerable","_jsx","Image","imageFile","AbstractCardListApp","_routeName","_AbstractSimpleListAp","_len","args","Array","_key","_toConsumableArray","_get","_getPrototypeOf","prototype","ViewDisplays","CARD_LIST","__cardRouteName","_createCardListRouteName","optionInterpreter","_appOptionInterpreter","cardListDimension","createCardListDimension","dimensions","ListDimensionCreator","createListDimension","createDimensions","size","contentToDisplay","uniqueEnglishName","_createUniqueNameOnCardList","id","englishNameInHtml","className","children","_jsxs","NameComponent","nameContainer","popoverOrientation","createCardListContent","_Fragment","AbstractSimpleListApp"],"sourceRoot":""}