{"version":3,"file":"static/js/845.2ab2b758.chunk.js","mappings":"kQAYqBA,EAAsB,SAAAC,IAAAC,EAAAA,EAAAA,GAAAF,EAAAC,GAAA,IAAAE,GAAAC,EAAAA,EAAAA,GAAAJ,GAAA,SAAAA,IAAA,OAAAK,EAAAA,EAAAA,GAAA,KAAAL,GAAAG,EAAAG,MAAA,KAAAC,UAAA,CAwDvC,OAxDuCC,EAAAA,EAAAA,GAAAR,EAAA,EAAAS,IAAA,aAAAC,MAKvC,WACI,MAAO,qBACX,GAAC,CAAAD,IAAA,6BAAAC,MAGD,WACI,MAAO,yBACX,GAAC,CAAAD,IAAA,2BAAAC,MAED,WACI,MAAO,yBACX,GAAC,CAAAD,IAAA,sBAAAC,MAGD,WACI,OAAOC,EAAAA,EAAAA,IAAuB,4BAClC,GAAC,CAAAF,IAAA,8BAAAC,MAED,WACI,OAAO,wBAAAE,KAAAP,EAAAA,EAAAA,GAAA,KAAAO,EAAA,CA2BH,OA3BGJ,EAAAA,EAAAA,GAAAI,EAAA,EAAAH,IAAA,WAAAI,IAEH,WACI,OAAOC,EAAAA,EAAsBC,OAAOC,WACxC,GAEA,CAAAP,IAAA,sBAAAC,MAEA,WACI,MAAO,CACHO,MAAO,EACPC,OAAQ,KACRC,MAAO,KAEf,GAGA,CAAAV,IAAA,0BAAAC,MAEA,WACI,MAAO,MACX,GAAC,CAAAD,IAAA,wBAAAC,MAED,SAA6BU,GACzB,OAAOC,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CAACC,KAAMH,EAAWI,WACnC,KAEAZ,CAAA,CA3BG,GA8BX,KAEAZ,CAAA,CAxDuC,CAC/ByB,EAAAA,E,yNCELC,EAAcC,EAAAA,EAAdD,UAEPE,GAAAC,EAAAA,EAAAA,GAAA,aAEsBJ,EAAmB,SAAAK,IAAA5B,EAAAA,EAAAA,GAAAuB,EAAAK,GAAA,IAAA3B,GAAAC,EAAAA,EAAAA,GAAAqB,GAAA,SAAAA,IAAA,IAAAM,GAAA1B,EAAAA,EAAAA,GAAA,KAAAoB,GAAA,QAAAO,EAAAzB,UAAA0B,OAAAC,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAA7B,UAAA6B,GAIrC,OAJqCL,EAAA5B,EAAAkC,KAAA/B,MAAAH,EAAA,OAAAmC,OAAAJ,IAIrCK,OAAAC,gBAAAC,EAAAA,EAAAA,GAAAV,GAAAH,EAAA,CAAAc,UAAA,EAAAhC,WAAA,IAAAqB,CAAA,CAwDA,OAxDAvB,EAAAA,EAAAA,GAAAiB,EAAA,EAAAhB,IAAA,6BAAAC,MAOA,WACI,MAAM,GAAN4B,QAAAK,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,GAAApB,EAAAqB,WAAA,mCAAAT,KAAA,QAEI,CAACX,EAAWqB,KAAKC,kBAEzB,GAAC,CAAAvC,IAAA,kBAAAI,IAED,WAAwD,IAADoC,EAAAC,EACnD,OAAW,QAAXA,GAAAD,GAAAE,EAAAA,EAAAA,GAAOJ,KAAInB,IAAAA,UAAA,IAAAsB,EAAAA,EAAAD,EAAArB,GAAgBmB,KAAKK,0BACpC,GAAC,CAAA3C,IAAA,8BAAAC,MAID,SAAsCU,GAClC,OAAOA,EAAWiC,WACtB,GAKA,CAAA5C,IAAA,iBAAAC,MAIA,WACI,IAMmD4C,EAN7CC,EAAoBR,KAAKS,sBAC3B/C,EAAMsC,KAAKX,KACXqB,EAAoBF,EAAkBG,0BACtCC,EAAa,IAAIC,EAAAA,EAA2C,SAAtBH,EAA+BF,EAAkBM,sBAAwBJ,GAAmBK,mBAEhIC,EAAU,GAAoBC,GAAAC,EAAAA,EAAAA,GACXV,EAAkBW,UAAQ,IAAnD,IAAAF,EAAAG,MAAAb,EAAAU,EAAAI,KAAAC,MAAqD,CAAC,IAA3CjD,EAAUkC,EAAA5C,MACX4D,EAAoBvB,KAAKwB,4BAA4BnD,GACrDoD,EAAOpD,EAAWqD,UAAUC,cAC5BC,EAAE,GAAArC,OAAM7B,EAAG,KAAA6B,OAAIlB,EAAWwD,kBAAiB,cAGjDb,EAAQc,MACJxD,EAAAA,EAAAA,KAAA,OAA6DsD,GAAIA,EAAIG,UAAS,GAAAxC,OAAK7B,EAAG,qCAAA6B,OAAoCqB,GAAaoB,UACnIC,EAAAA,EAAAA,MAAA,OAAiEF,UAAU,yCAAwCC,SAAA,EAC/G1D,EAAAA,EAAAA,KAAC4D,EAAAA,EAAa,CAA+CN,GAAG,OAAOH,KAAMA,EAAMU,mBAAmB,QAAM,GAAA5C,OAArFgC,EAAiB,uBACxCjD,EAAAA,EAAAA,KAAA,OAAKyD,UAAU,iCAAgCC,SAAExB,EAAkB4B,sBAAsB/D,OAAkB,GAAAkB,OAFlGgC,EAAiB,qCAGxB,GAAAhC,OAJGgC,EAAiB,gCAOtC,CAAC,OAAAc,GAAApB,EAAAqB,EAAAD,EAAA,SAAApB,EAAAsB,GAAA,CACD,OAAOjE,EAAAA,EAAAA,KAAAkE,EAAAA,SAAA,CAAAR,SAAGhB,GACd,KAEAtC,CAAA,CA5DqC,CAE7B+D,EAAAA,E","sources":["app/SoundEffectCategoryApp.tsx","app/withInterpreter/AbstractCardListApp.tsx"],"sourcesContent":["import './SoundEffectCategoryApp.scss'\n\nimport type {AppInterpreterWithCardList}                           from 'app/interpreter/AppInterpreterWithCardList'\nimport type {PossibleDimensionOnCardList, PossibleDimensionOnList} from 'app/interpreter/DimensionOnList'\nimport type {EveryPossibleRouteNames}                              from 'route/everyRoutes.types'\nimport type {ReactElementOrString}                                 from 'util/react/ReactProperties'\n\nimport Image                    from 'app/tools/images/Image'\nimport {AbstractCardListApp}    from 'app/withInterpreter/AbstractCardListApp'\nimport {SoundEffectCategories}  from 'core/soundEffectCategory/SoundEffectCategories'\nimport {gameContentTranslation} from 'lang/components/translationMethods'\n\nexport default class SoundEffectCategoryApp\n    extends AbstractCardListApp<AppInterpreterWithCardList<SoundEffectCategories>> {\n\n    //region -------------------- Create methods --------------------\n\n    protected override _createKey() {\n        return 'soundEffectCategory'\n    }\n\n\n    protected override _createSimpleListRouteName(): EveryPossibleRouteNames {\n        return 'everySoundEffect (list)'\n    }\n\n    protected override _createCardListRouteName(): EveryPossibleRouteNames {\n        return 'everySoundEffect (card)'\n    }\n\n\n    protected override _createTitleContent(): ReactElementOrString {\n        return gameContentTranslation('sound effect category.all')\n    }\n\n    protected override _createAppOptionInterpreter(): AppInterpreterWithCardList<SoundEffectCategories> {\n        return new class implements AppInterpreterWithCardList<SoundEffectCategories> {\n\n            public get iterable() {\n                return SoundEffectCategories[Symbol.iterator]()\n            }\n\n            //region -------------------- List interpreter --------------------\n\n            public createListDimension(): PossibleDimensionOnList {\n                return {\n                    small: 6,\n                    medium: null,\n                    large: null,\n                }\n            }\n\n            //endregion -------------------- List interpreter --------------------\n            //region -------------------- Card list interpreter --------------------\n\n            public createCardListDimension(): PossibleDimensionOnCardList {\n                return 'list'\n            }\n\n            public createCardListContent(enumerable: SoundEffectCategories,) {\n                return <Image file={enumerable.imageFile}/>\n            }\n\n            //endregion -------------------- Card list interpreter --------------------\n\n        }()\n    }\n\n    //endregion -------------------- Create methods --------------------\n\n}\n","import type {AppWithInterpreterProperties} from 'app/AppProperties.types'\nimport type {AppStates}                    from 'app/AppStates.types'\nimport type {ValueByApp}                   from 'app/interpreter/AppInterpreter'\nimport type {AppInterpreterWithCardList}   from 'app/interpreter/AppInterpreterWithCardList'\nimport type {ViewAndRouteName}             from 'app/withInterpreter/DisplayButtonGroup.properties'\nimport type {EveryPossibleRouteNames}      from 'route/everyRoutes.types'\nimport type {ReactElement}                 from 'util/react/ReactProperties'\n\nimport {AbstractSimpleListApp} from 'app/withInterpreter/AbstractSimpleListApp'\nimport {ListDimensionCreator}  from 'app/withInterpreter/ListDimension.creator'\nimport {ViewDisplays}          from 'app/withInterpreter/ViewDisplays'\nimport NameComponent           from 'lang/name/component/Name.component'\n\n//region -------------------- Import from deconstruction --------------------\n\nconst {CARD_LIST,} = ViewDisplays\n\n//endregion -------------------- Import from deconstruction --------------------\n\nexport abstract class AbstractCardListApp<APP extends AppInterpreterWithCardList,\n    T extends AppWithInterpreterProperties = AppWithInterpreterProperties, S extends AppStates = AppStates, >\n    extends AbstractSimpleListApp<APP, T, S> {\n\n    //region -------------------- Fields --------------------\n\n    #routeName?: EveryPossibleRouteNames\n\n    //endregion -------------------- Fields --------------------\n    //region -------------------- Getter & create methods --------------------\n\n    protected override _createPossibleViewDisplay(): readonly ViewAndRouteName[] {\n        return [\n            ...super._createPossibleViewDisplay(),\n            [CARD_LIST, this.__cardRouteName,],\n        ]\n    }\n\n    private get __cardRouteName(): EveryPossibleRouteNames {\n        return this.#routeName ??= this._createCardListRouteName()\n    }\n\n    protected abstract _createCardListRouteName(): EveryPossibleRouteNames\n\n    protected _createUniqueNameOnCardList(enumerable: ValueByApp<APP>,): string {\n        return enumerable.englishName\n    }\n\n    //endregion -------------------- Getter & create methods --------------------\n    //region -------------------- Render methods --------------------\n\n    /**\n     * Create a list of elements in a card manner.\n     * It can be similar to the {@link createList} but has more information displayed.\n     */\n    public createCardList(): ReactElement {\n        const optionInterpreter = this._appOptionInterpreter,\n            key = this._key,\n            cardListDimension = optionInterpreter.createCardListDimension(),\n            dimensions = new ListDimensionCreator(cardListDimension === 'list' ? optionInterpreter.createListDimension() : cardListDimension).createDimensions()\n\n        const content = [] as ReactElement[]\n        for (const enumerable of optionInterpreter.iterable) {\n            const uniqueEnglishName = this._createUniqueNameOnCardList(enumerable)\n            const name = enumerable.reference.nameContainer\n            const id = `${key}-${enumerable.englishNameInHtml}-container`\n\n            //TODO change the popover to be on the id instead of the name directly\n            content.push(\n                <div key={`${uniqueEnglishName} - main card list container`} id={id} className={`${key}-container listElement-container ${dimensions}`}>\n                    <div key={`${uniqueEnglishName} - main card list sub-container`} className=\"cardListElement-container rounded-pill\">\n                        <NameComponent key={`${uniqueEnglishName} - text container`} id=\"name\" name={name} popoverOrientation=\"left\"/>\n                        <div className=\"cardListName-content-container\">{optionInterpreter.createCardListContent(enumerable)}</div>\n                    </div>\n                </div>\n            )\n        }\n        return <>{content}</>\n    }\n\n    //endregion -------------------- Render methods --------------------\n\n}\n"],"names":["SoundEffectCategoryApp","_AbstractCardListApp","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","gameContentTranslation","_class","get","SoundEffectCategories","Symbol","iterator","small","medium","large","enumerable","_jsx","Image","file","imageFile","AbstractCardListApp","CARD_LIST","ViewDisplays","_routeName","_classPrivateFieldLooseKey","_AbstractSimpleListAp","_this","_len","length","args","Array","_key","call","concat","Object","defineProperty","_assertThisInitialized","writable","_toConsumableArray","_get","_getPrototypeOf","prototype","this","__cardRouteName","_classPrivateFieldLoo","_classPrivateFieldLoo2","_classPrivateFieldLooseBase","_createCardListRouteName","englishName","_step","optionInterpreter","_appOptionInterpreter","cardListDimension","createCardListDimension","dimensions","ListDimensionCreator","createListDimension","createDimensions","content","_iterator","_createForOfIteratorHelper","iterable","s","n","done","uniqueEnglishName","_createUniqueNameOnCardList","name","reference","nameContainer","id","englishNameInHtml","push","className","children","_jsxs","NameComponent","popoverOrientation","createCardListContent","err","e","f","_Fragment","AbstractSimpleListApp"],"sourceRoot":""}