{"version":3,"file":"static/js/963.b1e25959.chunk.js","mappings":"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","sources":["app/options/MysteryMushroomAppOption.tsx","app/MysteryMushroomApp.tsx"],"sourcesContent":["import type {CompanionEnumSingleton} from '@joookiwi/enumerable'\nimport {CompanionEnum, Enum}         from '@joookiwi/enumerable'\nimport {Fragment}                    from 'react'\n\nimport type {AppOption}                                    from 'app/options/AppOption'\nimport type {Names, Ordinals, PossibleMysteryMushroomType} from 'app/options/MysteryMushroomAppOption.types'\nimport type {SingleHeaderContent}                          from 'app/tools/table/SimpleHeader'\nimport type {MysteryMushroom}                              from 'core/mysteryMushroom/MysteryMushroom'\nimport type {MysteryMushroomImageFile as ImageFile}        from 'core/mysteryMushroom/file/MysteryMushroomImageFile'\nimport type {MysteryMushroomSoundFile as SoundFile}        from 'core/mysteryMushroom/file/MysteryMushroomSoundFile'\n\nimport {CommonOptions}                  from 'app/options/CommonOptions'\nimport Image                            from 'app/tools/images/Image'\nimport TextComponent                    from 'app/tools/text/TextComponent'\nimport UnfinishedText, {unfinishedText} from 'app/tools/text/UnfinishedText'\nimport {MysteryMushrooms}               from 'core/mysteryMushroom/MysteryMushrooms'\nimport {ProjectLanguages}               from 'lang/ProjectLanguages'\nimport NameComponent                    from 'lang/name/component/Name.component'\nimport SimpleSoundComponent             from 'util/file/sound/component/SimpleSound.component'\n\nexport abstract class MysteryMushroomAppOption\n    extends Enum<Ordinals, Names>\n    implements AppOption<MysteryMushrooms> {\n\n    //region -------------------- Enum instances --------------------\n\n    public static readonly CONDITION_TO_UNLOCK_IT = new class MysteryMushroomAppOption_ConditionToUnlockIt extends MysteryMushroomAppOption {\n\n        protected override _createContentOption({reference,}: MysteryMushrooms,) {\n            return <UnfinishedText>{reference.conditionToUnlockIt}</UnfinishedText>\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {key: 'conditionToUnlockIt', element: unfinishedText('Condition to unlock it'),}//TODO add condition to unlock it\n        }\n\n    }(null,)\n    public static readonly GAME = new class MysteryMushroomAppOption_Game extends MysteryMushroomAppOption {\n\n        protected override _createContentOption(enumeration: MysteryMushrooms,) {\n            const {uniqueEnglishName, englishNameInHtml, reference,} = enumeration\n\n            return <div key={`games - ${uniqueEnglishName}`} id={`games-${englishNameInHtml}`}>{\n                reference.games.map((game, index, games,) => <Fragment key={`game (${index + 1}) - ${uniqueEnglishName}`}>\n                    <NameComponent id={`game_${index + 1}_${englishNameInHtml}`} name={game.reference} popoverOrientation=\"right\"/>\n                    {index === games.length - 1 ? null : <>{ProjectLanguages.current.comma}<br/></>}\n                </Fragment>)\n            }</div>\n        }\n\n        protected override _createTableHeaderOption() {\n            return CommonOptions.get.gameHeader\n        }\n\n    }(null,)\n    public static readonly NAME = new class MysteryMushroomAppOption_Name extends MysteryMushroomAppOption {\n\n        protected override _createContentOption(enumeration: MysteryMushrooms,) {\n            return CommonOptions.get.getNameContent(enumeration)/*<YesOrNoResultTextComponent boolean={reference.canBeUnlockedByAnAmiibo}/>*/\n        }\n\n        protected override _createTableHeaderOption() {\n            return CommonOptions.get.nameHeader\n        }\n\n    }(null,)\n\n\n    public static readonly POWER_UP_COLLECTED = new class MysteryMushroomAppOption_PowerUpCollectedSound extends MysteryMushroomAppOption {\n\n        protected override _createContentOption(enumeration: MysteryMushrooms, ) {\n            return this._renderSoundContent(enumeration,)\n        }\n\n        protected override _createSoundContent(enumeration: MysteryMushrooms, renderDiv: boolean,) {\n            return this._createSound(enumeration, enumeration.powerUpCollectedSound, it => it.haveASoundEffectWhenCollected, renderDiv,)\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {key: 'powerUpCollectedSound', element: unfinishedText('Power-up collected (sound)'),}//TODO add power-up collected & sound\n        }\n\n    }('power-up collected',)\n    public static readonly WAITING = new class MysteryMushroomAppOption_WaitingImages extends MysteryMushroomAppOption {\n\n        protected override _createContentOption(enumeration: MysteryMushrooms, ) {\n            return this._renderImageContent(enumeration,)\n        }\n\n        protected override _createImageContent(enumeration: MysteryMushrooms, renderDiv: boolean,) {\n            return this._createImage(enumeration, enumeration.waitingImage, renderDiv,)\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {key: 'waitingImage', element: unfinishedText('Waiting (image)'),}//TODO add waiting & image\n        }\n\n    }('waiting',)\n    public static readonly TAUNT = new class MysteryMushroomAppOption_Taunt extends MysteryMushroomAppOption {\n\n        protected override _createContentOption(enumeration: MysteryMushrooms, ) {\n            return this._createSingleImageAndSoundContainer(enumeration, <>\n                {this._renderImageContent(enumeration, false,)}\n                {this._renderSoundContent(enumeration, false,)}\n            </>)\n        }\n\n        protected override _createImageContent(enumeration: MysteryMushrooms, renderDiv: boolean,) {\n            return this._createImage(enumeration, enumeration.tauntImage, renderDiv,)\n        }\n\n        protected override _createSoundContent(enumeration: MysteryMushrooms, renderDiv: boolean,) {\n            return this._createSound(enumeration, enumeration.tauntSound, it => it.haveASoundEffectOnTaunt, renderDiv,)\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {key: 'tauntImageAndSound', element: unfinishedText('Taunt (image & sound)'),}//TODO add taunt, image & sound\n        }\n\n    }('taunt',)\n    public static readonly PRESSING_DOWN = new class MysteryMushroomAppOption_PressingDown extends MysteryMushroomAppOption {\n\n        protected override _createContentOption(enumeration: MysteryMushrooms, ) {\n            return this._renderImageContent(enumeration,)\n        }\n\n        protected override _createImageContent(enumeration: MysteryMushrooms, renderDiv: boolean,) {\n            return this._createImage(enumeration, enumeration.pressingDownImage, renderDiv,)\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {key: 'pressingDownImage', element: unfinishedText('Pressing ↓ (image)'),}//TODO add pressing down & image\n        }\n\n    }('pressing ↓',)\n    public static readonly WALK = new class MysteryMushroomAppOption_Walk extends MysteryMushroomAppOption {\n\n        protected override _createContentOption(enumeration: MysteryMushrooms, ) {\n            return this._renderImageContent(enumeration,)\n        }\n\n        protected override _createImageContent(enumeration: MysteryMushrooms, renderDiv: boolean,) {\n            return this._createAnimatedImages(enumeration, enumeration.walkImages, renderDiv,)\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {key: 'walkImages', element: unfinishedText('Walk (image)'),}//TODO add walk & image\n        }\n\n    }('walk',)\n    public static readonly RUNNING = new class MysteryMushroomAppOption_Running extends MysteryMushroomAppOption {\n\n        protected override _createContentOption(enumeration: MysteryMushrooms, ) {\n            return this._renderImageContent(enumeration,)\n        }\n\n        protected override _createImageContent(enumeration: MysteryMushrooms, renderDiv: boolean,) {\n            return this._createAnimatedImages(enumeration, enumeration.runningImages, renderDiv,)\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {key: 'runningImages', element: unfinishedText('Running (images)'),}//TODO add running & image\n        }\n\n    }('running',)\n    public static readonly SWIMMING = new class MysteryMushroomAppOption_Swimming extends MysteryMushroomAppOption {\n\n        protected override _createContentOption(enumeration: MysteryMushrooms, ) {\n            return this._renderImageContent(enumeration,)\n        }\n\n        protected override _createImageContent(enumeration: MysteryMushrooms, renderDiv: boolean,) {\n            return this._createAnimatedImages(enumeration, enumeration.swimmingImages, renderDiv,)\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {key: 'swimmingImages', element: unfinishedText('Swimming (images)'),}//TODO add swimming & image\n        }\n\n    }('swimming',)\n    public static readonly JUMP = new class MysteryMushroomAppOption_Jump extends MysteryMushroomAppOption {\n\n        protected override _createContentOption(enumeration: MysteryMushrooms, ) {\n            return this._createSingleImageAndSoundContainer(enumeration, <>\n                {this._renderImageContent(enumeration, false,)}\n                {this._renderSoundContent(enumeration, false,)}\n            </>)\n        }\n\n        protected override _createImageContent(enumeration: MysteryMushrooms, renderDiv: boolean,) {\n            return (enumeration.jumpImages[0]?.length ?? 0) > 1\n                ? this._createAnimatedImages(enumeration, enumeration.jumpImages, renderDiv,)\n                : this._createImage(enumeration, enumeration.jumpImages.map(images => images[0]!), renderDiv,)\n        }\n\n        protected override _createSoundContent(enumeration: MysteryMushrooms, renderDiv: boolean,) {\n            return this._createSounds(enumeration, enumeration.jumpSounds, it => it.haveASoundEffectOnJump, renderDiv,)\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {key: 'jumpingImagesAndSounds', element: unfinishedText('Jumping (images & sounds)'),}//TODO add jumping, image & sound\n        }\n\n    }('jump',)\n    public static readonly FALLING_AFTER_A_JUMP = new class MysteryMushroomAppOption_FallingAfterAJump extends MysteryMushroomAppOption {\n\n        protected override _createContentOption(enumeration: MysteryMushrooms, ) {\n            return this._renderImageContent(enumeration,)\n        }\n\n        protected override _createImageContent(enumeration: MysteryMushrooms, renderDiv: boolean,) {\n            return this._createImage(enumeration, enumeration.fallingAfterAJumpImage, renderDiv,)\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {key: 'fallingAfterJumpImage', element: unfinishedText('Falling after jump (images)'),}//TODO add falling after jump & image\n        }\n\n    }('falling after a jump',)\n    public static readonly ON_GROUND_AFTER_A_JUMP = new class MysteryMushroomAppOption_OnGroundAfterAJump extends MysteryMushroomAppOption {\n\n        protected override _createContentOption(enumeration: MysteryMushrooms, ) {\n            return this._renderSoundContent(enumeration,)\n        }\n\n        protected override _createSoundContent(enumeration: MysteryMushrooms, renderDiv: boolean,) {\n            return this._createSound(enumeration, enumeration.onGroundAfterJumpASound, it => it.haveASoundEffectOnGroundAfterJump, renderDiv,)\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {key: 'groundAfterJumpImage', element: unfinishedText('Ground after jump (sound)'),}//TODO add ground after jump & sound\n        }\n\n    }('ground after a jump',)\n    public static readonly TURNING = new class MysteryMushroomAppOption_Turning extends MysteryMushroomAppOption {\n\n        protected override _createContentOption(enumeration: MysteryMushrooms, ) {\n            return this._createSingleImageAndSoundContainer(enumeration, <>\n                {this._renderImageContent(enumeration, false,)}\n                {this._renderSoundContent(enumeration, false,)}\n            </>)\n        }\n\n        protected override _createImageContent(enumeration: MysteryMushrooms, renderDiv: boolean,) {\n            return this._createImage(enumeration, enumeration.turningImage, renderDiv,)\n        }\n\n        protected override _createSoundContent(enumeration: MysteryMushrooms, renderDiv: boolean,) {\n            return this._createSound(enumeration, enumeration.turningSound, it => it.haveASoundEffectOnTurnAfterRun, renderDiv,)\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {key: 'turningImageAndSound', element: unfinishedText('Turning (image & sound)'),}//TODO add turning, image & sound\n        }\n\n    }('turning',)\n    public static readonly CLIMBING = new class MysteryMushroomAppOption_Climbing extends MysteryMushroomAppOption {\n\n        protected override _createContentOption(enumeration: MysteryMushrooms, ) {\n            return this._renderImageContent(enumeration, )\n        }\n\n        protected override _createImageContent(enumeration: MysteryMushrooms, renderDiv: boolean,) {\n            return this._createAnimatedImages(enumeration, enumeration.climbingImages, renderDiv,)\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {key: 'climbingImages', element: unfinishedText('Climbing (images)'),}//TODO add climbing & image\n        }\n\n    }('climbing',)\n    public static readonly GOAL_POLE = new class MysteryMushroomAppOption_GoalPole extends MysteryMushroomAppOption {\n\n        protected override _createContentOption(enumeration: MysteryMushrooms, ) {\n            return this._createSingleImageAndSoundContainer(enumeration, <>\n                {this._renderImageContent(enumeration, false,)}\n                {this._renderSoundContent(enumeration, false,)}\n            </>,)\n        }\n\n        protected override _createImageContent(enumeration: MysteryMushrooms, renderDiv: boolean,) {\n            return this._createAnimatedImages(enumeration, enumeration.goalPoleImages, renderDiv,)\n        }\n\n        protected override _createSoundContent(enumeration: MysteryMushrooms, renderDiv: boolean,) {\n            return this._createSound(enumeration, enumeration.goalPoleSound, it => it.haveASoundEffectOnGoalPole, renderDiv,)\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {key: 'goalPoleImagesAndSound', element: unfinishedText('Goal pole (images & sound)'),}\n        }\n\n    }('goal pole',)\n    public static readonly LOST_A_LIFE = new class MysteryMushroomAppOption_LostALife extends MysteryMushroomAppOption {\n\n        protected override _createContentOption(enumeration: MysteryMushrooms, ) {\n            return this._renderImageContent(enumeration,)\n        }\n\n        protected override _createImageContent(enumeration: MysteryMushrooms, renderDiv: boolean,) {\n            return this._createSound(enumeration, enumeration.lostALifeSound, it => it.haveASoundEffectOnDeath, renderDiv,)\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {key: 'lostALifeSound', element: unfinishedText('Lost a life (sound)'),}//TODO add lost a life & sound\n        }\n\n    }('lost a life',)\n\n    //endregion -------------------- Enum instances --------------------\n    //region -------------------- Companion enum --------------------\n\n    public static readonly CompanionEnum: CompanionEnumSingleton<MysteryMushroomAppOption, typeof MysteryMushroomAppOption> = class CompanionEnum_MysteryMushroomAppOption\n        extends CompanionEnum<MysteryMushroomAppOption, typeof MysteryMushroomAppOption> {\n\n        //region -------------------- Singleton usage --------------------\n\n        static #instance?: CompanionEnum_MysteryMushroomAppOption\n\n        private constructor() {\n            super(MysteryMushroomAppOption,)\n        }\n\n        public static get get() {\n            return this.#instance ??= new CompanionEnum_MysteryMushroomAppOption()\n        }\n\n        //endregion -------------------- Singleton usage --------------------\n\n    }\n\n    //endregion -------------------- Companion enum --------------------\n    //region -------------------- Fields --------------------\n\n    static #imagesAndSounds?: readonly MysteryMushroomAppOption[]\n\n    static readonly #NOT_APPLICABLE_COMPONENT = <TextComponent content=\"N/A\"/>\n\n    readonly #type\n\n    //endregion -------------------- Fields --------------------\n    //region -------------------- Constructor --------------------\n\n    private constructor(type: PossibleMysteryMushroomType,) {\n        super()\n        this.#type = type\n    }\n\n    //endregion -------------------- Constructor --------------------\n    //region -------------------- Getter methods --------------------\n\n    protected get _mysteryMushroomType(): PossibleMysteryMushroomType {\n        return this.#type\n    }\n\n    //endregion -------------------- Getter methods --------------------\n    //region -------------------- Methods --------------------\n\n    //region -------------------- App option - content --------------------\n\n    #createSingleImageAndSoundContainer(enumeration: MysteryMushrooms, renderDiv: boolean, element: ReactElement,) {\n        return enumeration === MysteryMushrooms.MYSTERY_MUSHROOM\n            ? MysteryMushroomAppOption.#NOT_APPLICABLE_COMPONENT\n            : renderDiv\n                ? <div key={`${enumeration.uniqueEnglishName} - ${this._mysteryMushroomType}`}>{element}</div>\n                : element\n    }\n\n    protected _createSingleImageAndSoundContainer(enumeration: MysteryMushrooms, element: ReactElement, renderDiv: boolean = true,): ReactElement {\n        return this.#createSingleImageAndSoundContainer(enumeration, renderDiv, element,)\n    }\n\n    protected _createSound(enumeration: MysteryMushrooms, soundFile: Nullable<SoundFile>, callbackToRender: ReferenceCallback, renderDiv: boolean,): ReactElement {\n        if (soundFile == null)\n            return this.#createSingleImageAndSoundContainer(enumeration, renderDiv, null,)\n\n        const englishName = enumeration.englishName\n        const type = this._mysteryMushroomType\n\n        return this.#createSingleImageAndSoundContainer(enumeration, renderDiv, <SimpleSoundComponent file={soundFile} title={`${englishName} - ${type}`}/>,)\n    }\n\n    protected _createSounds(enumeration: MysteryMushrooms, soundFiles: readonly SoundFile[], callbackToRender: ReferenceCallback, renderDiv: boolean,): ReactElement {\n        const englishName = enumeration.englishName\n        const type = this._mysteryMushroomType\n\n        return this.#createSingleImageAndSoundContainer(enumeration, renderDiv, <>{soundFiles.map((value, index,) =>\n            <SimpleSoundComponent file={value} title={`${englishName} - ${type} #${index + 1}`}/>\n        )}</>,)\n    }\n\n    protected _createImage(enumeration: MysteryMushrooms, imageFiles: readonly ImageFile[], renderDiv: boolean,): ReactElement {\n        const uniqueEnglishName = enumeration.uniqueEnglishName\n\n        return this.#createSingleImageAndSoundContainer(enumeration, renderDiv, <>{imageFiles.map((value, index,) =>\n            <Image key={`${uniqueEnglishName} #${index + 1}`} file={value}/>\n        )}</>,)\n    }\n\n    protected _createAnimatedImages(enumeration: MysteryMushrooms, imageFiles: readonly (readonly ImageFile[])[], renderDiv: boolean,): ReactElement {\n        const uniqueEnglishName = enumeration.uniqueEnglishName\n        const englishNameInHtml = enumeration.englishNameInHtml\n\n        return this.#createSingleImageAndSoundContainer(enumeration, renderDiv, <>{imageFiles.map((value, index,) =>\n            <Image key={`${uniqueEnglishName} #${index + 1}`} partialId={`${englishNameInHtml}-${index + 1}`} images={value.map(it => ({file: it,}))}/>\n        )}</>,)\n    }\n\n    protected abstract _createContentOption(enumeration: MysteryMushrooms,): ReactElement\n\n    public renderContent(enumeration: MysteryMushrooms,): readonly [ReactElement,] {\n        return [this._createContentOption(enumeration,),]\n    }\n\n\n    protected _createImageContent(enumeration: MysteryMushrooms, renderDiv: boolean,): ReactElement {\n        return null\n    }\n\n    public renderImageContent(enumeration: MysteryMushrooms, renderDiv: boolean = false,): ReactElement {\n        return this._createImageContent(enumeration, renderDiv,)\n    }\n\n    protected _renderImageContent(enumeration: MysteryMushrooms, renderDiv: boolean = true,): ReactElement {\n        return this._createImageContent(enumeration, renderDiv,)\n    }\n\n    protected _createSoundContent(enumeration: MysteryMushrooms, renderDiv: boolean,): ReactElement {\n        return null\n    }\n\n    public renderSoundContent(enumeration: MysteryMushrooms,): ReactElement {\n        return this._createSoundContent(enumeration, false,)\n    }\n\n    protected _renderSoundContent(enumeration: MysteryMushrooms, renderDiv: boolean = true,): ReactElement {\n        return this._createSoundContent(enumeration, renderDiv,)\n    }\n\n    //endregion -------------------- App option - content --------------------\n    //region -------------------- App option - table --------------------\n\n    protected abstract _createTableHeaderOption(): SingleHeaderContent\n\n    public renderTableHeader(): SingleHeaderContent {\n        return this._createTableHeaderOption()\n    }\n\n    //endregion -------------------- App option - table --------------------\n\n    //endregion -------------------- Methods --------------------\n\n}\n\ntype ReferenceCallback = (reference: MysteryMushroom,) => | boolean | NotApplicable\n","import './MysteryMushroomApp.scss'\n\nimport type {AppInterpreterWithTable} from 'app/interpreter/AppInterpreterWithTable'\nimport type {DimensionOnList}         from 'app/interpreter/DimensionOnList'\nimport type {PossibleRouteName}       from 'route/EveryRoutes.types'\n\nimport {MysteryMushroomAppOption} from 'app/options/MysteryMushroomAppOption'\nimport {unfinishedText}           from 'app/tools/text/UnfinishedText'\nimport {AbstractTableApp}         from 'app/withInterpreter/AbstractTableApp'\nimport {MysteryMushrooms}         from 'core/mysteryMushroom/MysteryMushrooms'\nimport {OtherWordInTheGames}      from 'core/otherWordInTheGame/OtherWordInTheGames'\nimport {gameContentTranslation}   from 'lang/components/translationMethods'\n\n//region -------------------- Import from deconstruction --------------------\n\nconst {MYSTERY_MUSHROOM,} = OtherWordInTheGames\n\n//endregion -------------------- Import from deconstruction --------------------\nexport default class MysteryMushroomApp\n    extends AbstractTableApp<MysteryMushrooms, AppInterpreterWithTable<MysteryMushrooms, MysteryMushroomAppOption>> {\n\n    //region -------------------- Create methods --------------------\n\n    protected override _createKey() {\n        return 'mysteryMushroom'\n    }\n\n\n    protected override _createSimpleListRouteName(): PossibleRouteName {\n        return 'everyMysteryMushroom (list)'\n    }\n\n    protected override _createCardListRouteName(): PossibleRouteName {\n        return 'everyMysteryMushroom (card)'\n    }\n\n    protected override _createTableRouteName(): PossibleRouteName {\n        return 'everyMysteryMushroom (table)'\n    }\n\n\n    protected override _createTitleContent(): ReactElementOrString {\n        return gameContentTranslation('mystery mushroom.all', {\n            singularName: MYSTERY_MUSHROOM.singularLowerCaseNameOnReferenceOrNull ?? unfinishedText(MYSTERY_MUSHROOM.singularEnglishName).toLowerCase(),\n            pluralName: MYSTERY_MUSHROOM.pluralLowerCaseNameOnReferenceOrNull ?? unfinishedText(MYSTERY_MUSHROOM.pluralEnglishName).toLowerCase(),\n        },)\n    }\n\n    protected override _createUniqueNameOnSimpleList(enumerable: MysteryMushrooms,): string {\n        return enumerable.uniqueEnglishName\n    }\n\n    protected override _createUniqueNameOnCardList(enumerable: MysteryMushrooms,): string {\n        return enumerable.uniqueEnglishName\n    }\n\n    protected override _createAppOptionInterpreter() {\n        return new class MysteryMushroomAppInterpreter implements AppInterpreterWithTable<MysteryMushrooms, MysteryMushroomAppOption> {\n\n            public get content() {\n                return MysteryMushrooms.CompanionEnum.get.values.toArray()\n            }\n\n            //region -------------------- List interpreter --------------------\n\n            public createListDimension(): DimensionOnList {\n                return {\n                    default: 1,\n                    small: 2,\n                    medium: 3,\n                    large: 4,\n                    extraLarge: 6,\n                }\n            }\n\n            //endregion -------------------- List interpreter --------------------\n            //region -------------------- Card list interpreter --------------------\n\n            public createCardListDimension(): DimensionOnList {\n                return {\n                    default: 1,\n                    small: 2,\n                    large: 3,\n                    extraLarge: 4,\n                    extraExtraLarge: 6,\n                }\n            }\n\n            public createCardListContent(enumerable: MysteryMushrooms,) {\n                const amountOfImages = enumerable.imageFileNames.length\n                const contains2Images = amountOfImages === 2\n\n                return amountOfImages === 0\n                    ? null\n                    : <div className={`image-content-container ${contains2Images ? 'dual' : 'single'}-image-content-container`}>\n                        {[\n                            MysteryMushroomAppOption.WAITING,\n                            MysteryMushroomAppOption.TAUNT,\n                            MysteryMushroomAppOption.PRESSING_DOWN,\n                            MysteryMushroomAppOption.WALK,\n                            MysteryMushroomAppOption.RUNNING,\n                            MysteryMushroomAppOption.SWIMMING,\n                            MysteryMushroomAppOption.JUMP,\n                            MysteryMushroomAppOption.FALLING_AFTER_A_JUMP,\n                            MysteryMushroomAppOption.TURNING,\n                            MysteryMushroomAppOption.CLIMBING,\n                            MysteryMushroomAppOption.GOAL_POLE,\n                        ].map(appOption => appOption.renderImageContent(enumerable, contains2Images,))}\n                    </div>\n            }\n\n            //endregion -------------------- Card list interpreter --------------------\n            //region -------------------- Table interpreter --------------------\n\n            public readonly tableHeadersColor = 'info' satisfies BootstrapThemeColor\n            public readonly tableColor = 'primary' satisfies BootstrapThemeColor\n            public readonly tableCaption = gameContentTranslation('mystery mushroom.all', {\n                singularName: MYSTERY_MUSHROOM.singularLowerCaseNameOnReferenceOrNull ?? unfinishedText(MYSTERY_MUSHROOM.singularEnglishName).toLowerCase(),\n                pluralName: MYSTERY_MUSHROOM.pluralLowerCaseNameOnReferenceOrNull ?? unfinishedText(MYSTERY_MUSHROOM.pluralEnglishName).toLowerCase(),\n            },) satisfies ReactElementOrString\n\n            public get tableOptions(): readonly MysteryMushroomAppOption[] {\n                return [\n                    MysteryMushroomAppOption.CONDITION_TO_UNLOCK_IT,\n                    MysteryMushroomAppOption.GAME,\n                    MysteryMushroomAppOption.NAME,\n\n                    MysteryMushroomAppOption.POWER_UP_COLLECTED,\n                    MysteryMushroomAppOption.WAITING,\n                    MysteryMushroomAppOption.TAUNT,\n                    MysteryMushroomAppOption.PRESSING_DOWN,\n                    MysteryMushroomAppOption.WALK,\n                    MysteryMushroomAppOption.RUNNING,\n                    MysteryMushroomAppOption.SWIMMING,\n                    MysteryMushroomAppOption.JUMP,\n                    MysteryMushroomAppOption.FALLING_AFTER_A_JUMP,\n                    MysteryMushroomAppOption.ON_GROUND_AFTER_A_JUMP,\n                    MysteryMushroomAppOption.TURNING,\n                    MysteryMushroomAppOption.CLIMBING,\n                    MysteryMushroomAppOption.GOAL_POLE,\n                    MysteryMushroomAppOption.LOST_A_LIFE,\n                ]\n            }\n\n\n            public createTableContent(content: MysteryMushrooms, option: MysteryMushroomAppOption,) {\n                return option.renderContent(content,)\n            }\n\n            public createTableHeader(option: MysteryMushroomAppOption) {\n                return option.renderTableHeader()\n            }\n\n            //endregion -------------------- Table interpreter --------------------\n\n        }()\n    }\n\n    //endregion -------------------- Create methods --------------------\n\n}\n"],"names":["_imagesAndSounds","_classPrivateFieldLooseKey","_NOT_APPLICABLE_COMPONENT","_type","_createSingleImageAndSoundContainer","MysteryMushroomAppOption","Enum","constructor","type","super","Object","defineProperty","value","_createSingleImageAndSoundContainer2","writable","_classPrivateFieldLooseBase","this","_mysteryMushroomType","enumeration","element","renderDiv","arguments","length","undefined","_createSound","soundFile","callbackToRender","englishName","_jsx","SimpleSoundComponent","file","title","concat","_createSounds","soundFiles","_Fragment","children","map","index","_createImage","imageFiles","uniqueEnglishName","Image","_createAnimatedImages","englishNameInHtml","partialId","images","it","renderContent","_createContentOption","_createImageContent","renderImageContent","_renderImageContent","_createSoundContent","renderSoundContent","_renderSoundContent","renderTableHeader","_createTableHeaderOption","MysteryMushrooms","MYSTERY_MUSHROOM","CONDITION_TO_UNLOCK_IT","_ref","reference","UnfinishedText","conditionToUnlockIt","key","unfinishedText","GAME","id","games","game","_jsxs","Fragment","NameComponent","name","popoverOrientation","ProjectLanguages","current","comma","CommonOptions","get","gameHeader","NAME","getNameContent","nameHeader","POWER_UP_COLLECTED","powerUpCollectedSound","haveASoundEffectWhenCollected","WAITING","waitingImage","TAUNT","tauntImage","tauntSound","haveASoundEffectOnTaunt","PRESSING_DOWN","pressingDownImage","WALK","walkImages","RUNNING","runningImages","SWIMMING","swimmingImages","JUMP","_enumeration$jumpImag","_enumeration$jumpImag2","jumpImages","jumpSounds","haveASoundEffectOnJump","FALLING_AFTER_A_JUMP","fallingAfterAJumpImage","ON_GROUND_AFTER_A_JUMP","onGroundAfterJumpASound","haveASoundEffectOnGroundAfterJump","TURNING","turningImage","turningSound","haveASoundEffectOnTurnAfterRun","CLIMBING","climbingImages","GOAL_POLE","goalPoleImages","goalPoleSound","haveASoundEffectOnGoalPole","LOST_A_LIFE","lostALifeSound","haveASoundEffectOnDeath","CompanionEnum","_instance","_class","CompanionEnum_MysteryMushroomAppOption","_classPrivateFieldLoo","_classPrivateFieldLoo2","TextComponent","content","OtherWordInTheGames","MysteryMushroomApp","AbstractTableApp","_createKey","_createSimpleListRouteName","_createCardListRouteName","_createTableRouteName","_createTitleContent","_MYSTERY_MUSHROOM$sin","_MYSTERY_MUSHROOM$plu","gameContentTranslation","singularName","singularLowerCaseNameOnReferenceOrNull","singularEnglishName","toLowerCase","pluralName","pluralLowerCaseNameOnReferenceOrNull","pluralEnglishName","_createUniqueNameOnSimpleList","enumerable","_createUniqueNameOnCardList","_createAppOptionInterpreter","_MYSTERY_MUSHROOM$sin2","_MYSTERY_MUSHROOM$plu2","tableHeadersColor","tableColor","tableCaption","values","toArray","createListDimension","default","small","medium","large","extraLarge","createCardListDimension","extraExtraLarge","createCardListContent","amountOfImages","imageFileNames","contains2Images","className","appOption","tableOptions","createTableContent","option","createTableHeader"],"sourceRoot":""}