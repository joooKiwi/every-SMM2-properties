{"version":3,"file":"static/js/875.dba3e47e.chunk.js","mappings":"qTAcAA,EAyImBC,OAAOC,SArInB,IAAeC,EAAmB,SAAAC,IAAAC,EAAAA,EAAAA,GAAAF,EAAAC,GAAA,IAAAE,GAAAC,EAAAA,EAAAA,GAAAJ,GAuFrC,SAAAA,IAAsB,OAAAK,EAAAA,EAAAA,GAAA,KAAAL,GAAAG,EAAAG,KAAA,KAEtB,CAgDA,OAzCAC,EAAAA,EAAAA,GAAAP,EAAA,EAAAQ,IAAA,uBAAAC,MAEA,SAA+BC,GAC3B,MAAM,IAAIC,eAAe,2BAADC,OAA4BC,KAAKC,KAAI,mCACjE,GAAC,CAAAN,IAAA,gBAAAC,MAED,SAAqBC,GACjB,MAAO,CAACG,KAAKE,qBAAqBL,GACtC,GAGA,CAAAF,IAAA,2BAAAC,MAEA,WACI,MAAM,IAAIE,eAAe,2BAADC,OAA4BC,KAAKC,KAAI,wCACjE,GAAC,CAAAN,IAAA,oBAAAC,MAED,WACI,IAAMO,EAAUH,KAAKI,2BACrB,OAAc,MAAXD,EACQ,KACJA,CACX,IAKA,EAAAR,IAAA,WAAAC,MAEA,SAAuBA,GACnB,OAAOT,EAAoBkB,cAAcC,IAAIC,SAASX,EAC1D,GAAC,CAAAD,IAAA,SAAAW,IAED,WACI,OAAOnB,EAAoBkB,cAAcC,IAAIE,MACjD,GAAC,CAAAb,IAAAX,EAAAY,MAED,WACI,OAAOT,EAAoBkB,cAAcC,IAAIrB,OAAOC,WACxD,KAEAC,CAAA,CAzIqC,CAC7BsB,EAAAA,MADUtB,EAMKuB,MAAwB,aAAAC,IAAAtB,EAAAA,EAAAA,GAAAuB,EAAAD,GAAA,IAAAE,GAAAtB,EAAAA,EAAAA,GAAAqB,GAAA,SAAAA,IAAA,OAAApB,EAAAA,EAAAA,GAAA,KAAAoB,GAAAC,EAAAC,MAAA,KAAAC,UAAA,CAQ1C,OAR0CrB,EAAAA,EAAAA,GAAAkB,EAAA,EAAAjB,IAAA,uBAAAC,MAE3C,SAAwCC,GACpC,OAAOmB,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CAACC,KAAMrB,EAAYsB,WACpC,GAAC,CAAAxB,IAAA,2BAAAC,MAED,WACI,MAAO,CAACD,IAAK,QAASyB,SAASC,EAAAA,EAAAA,IAAmB,SACtD,KAACT,CAAA,CAR6C,CAAyCzB,IANzEA,EAiBKmC,KAAwB,aAAAC,IAAAlC,EAAAA,EAAAA,GAAAmC,EAAAD,GAAA,IAAAE,GAAAlC,EAAAA,EAAAA,GAAAiC,GAAA,SAAAA,IAAA,OAAAhC,EAAAA,EAAAA,GAAA,KAAAgC,GAAAC,EAAAX,MAAA,KAAAC,UAAA,CAQ1C,OAR0CrB,EAAAA,EAAAA,GAAA8B,EAAA,EAAA7B,IAAA,uBAAAC,MAE3C,SAAwCC,GACpC,OAAO6B,EAAAA,EAAcpB,IAAIqB,eAAe9B,EAC5C,GAAC,CAAAF,IAAA,2BAAAC,MAED,WACI,OAAO8B,EAAAA,EAAcpB,IAAIsB,UAC7B,KAACJ,CAAA,CAR6C,CAAwCrC,IAjBxEA,EA4BK0C,sBAAwB,aAAAC,IAAAzC,EAAAA,EAAAA,GAAA0C,EAAAD,GAAA,IAAAE,GAAAzC,EAAAA,EAAAA,GAAAwC,GAAA,SAAAA,IAAA,OAAAvC,EAAAA,EAAAA,GAAA,KAAAuC,GAAAC,EAAAlB,MAAA,KAAAC,UAAA,CAU1C,OAV0CrB,EAAAA,EAAAA,GAAAqC,EAAA,EAAApC,IAAA,uBAAAC,MAE3C,SAAwCC,GAA4B,IAADoC,EACzDC,EAAarC,EAAYsC,UAC/B,OAAsC,QAAtCF,EAAOC,EAAWE,4BAAoB,IAAAH,OAAA,EAA/BA,EAAiCI,iCAAiCH,EAAWI,QAASJ,EAAWK,2BAC5G,GAAC,CAAA5C,IAAA,2BAAAC,MAED,WAEI,MAAO,CAACD,IAAK,uBAAwByB,QAAS,4BAClD,KAACW,CAAA,CAV6C,CAAuD5C,IA5BvFA,EA0CKqD,SAAwB,aAAAC,IAAApD,EAAAA,EAAAA,GAAAqD,EAAAD,GAAA,IAAAE,GAAApD,EAAAA,EAAAA,GAAAmD,GAAA,SAAAA,IAAA,OAAAlD,EAAAA,EAAAA,GAAA,KAAAkD,GAAAC,EAAA7B,MAAA,KAAAC,UAAA,CAS1C,OAT0CrB,EAAAA,EAAAA,GAAAgD,EAAA,EAAA/C,IAAA,uBAAAC,MAE3C,SAAwCC,GACpC,IAAM+C,EAAe/C,EAAYsC,UAAUU,kBAAkBC,cAC7D,OAAOpB,EAAAA,EAAcpB,IAAIyC,mBAAmBlD,GAAa,kBAAMmD,EAAAA,EAAqBC,eAAeL,EAAaN,SAASnB,SAAS,GACtI,GAAC,CAAAxB,IAAA,2BAAAC,MAED,WACI,OAAO8B,EAAAA,EAAcpB,IAAI4C,cAC7B,KAACR,CAAA,CAT6C,CAA4CvD,IA1C5EA,EA0DKgE,iBAAwB,aAAAC,IAAA/D,EAAAA,EAAAA,GAAAgE,EAAAD,GAAA,IAAAE,GAAA/D,EAAAA,EAAAA,GAAA8D,GAAA,SAAAA,IAAA,OAAA7D,EAAAA,EAAAA,GAAA,KAAA6D,GAAAC,EAAAxC,MAAA,KAAAC,UAAA,QAAArB,EAAAA,EAAAA,GAAA2D,EAAA,CAAG,CAAkDlE,IA1DlFA,EA+DKkB,eAAakD,GAAAC,EAAAA,EAAAA,GAAA,YAAAC,EAAA,SAAAC,IAAArE,EAAAA,EAAAA,GAAAsE,EAAAD,GAAA,IAAAE,GAAArE,EAAAA,EAAAA,GAAAoE,GAOhC,SAAAA,IAAsB,OAAAnE,EAAAA,EAAAA,GAAA,KAAAmE,GAAAC,EAAAnE,KAAA,KACZN,EACV,CAMA,OANCO,EAAAA,EAAAA,GAAAiE,EAAA,OAAAhE,IAAA,MAAAW,IAED,WAAyB,IAADuD,EAAAC,EACpB,OAAW,QAAXA,GAAAD,GAAAE,EAAAA,EAAAA,GAAO/D,KAAIuD,IAAAA,UAAA,IAAAO,EAAAA,EAAAD,EAAAN,GAAe,IAAII,CAClC,KAEAA,CAAA,CAfgC,CACxBtD,EAAAA,eAAa2D,OAAAC,eAAAR,EAAAF,EAAA,CAAAW,UAAA,EAAAtE,WAAA,IAAA6D,G,+CCjEtBU,E,SAAgBC,EAAhBD,YAIcE,EAAa,SAAAC,IAAAjF,EAAAA,EAAAA,GAAAgF,EAAAC,GAAA,IAAAhF,GAAAC,EAAAA,EAAAA,GAAA8E,GAAA,SAAAA,IAAA,OAAA7E,EAAAA,EAAAA,GAAA,KAAA6E,GAAA/E,EAAAwB,MAAA,KAAAC,UAAA,CA+F9B,OA/F8BrB,EAAAA,EAAAA,GAAA2E,EAAA,EAAA1E,IAAA,aAAAC,MAK9B,WACI,MAAO,YACX,GAAC,CAAAD,IAAA,6BAAAC,MAGD,WACI,MAAO,wBACX,GAAC,CAAAD,IAAA,2BAAAC,MAED,WACI,MAAO,wBACX,GAAC,CAAAD,IAAA,wBAAAC,MAED,WACI,MAAO,yBACX,GAAC,CAAAD,IAAA,sBAAAC,MAGD,WAAgE,IAAD2E,EAAAC,EAC3D,OAAOC,EAAAA,EAAAA,IAAuB,kBAAmB,CAC7CC,aAAgE,QAApDH,EAAEJ,EAAYQ,8CAAsC,IAAAJ,EAAAA,GAAIK,EAAAA,EAAAA,GAAeT,EAAYU,qBAC/FC,WAA4D,QAAlDN,EAAEL,EAAYY,4CAAoC,IAAAP,EAAAA,GAAII,EAAAA,EAAAA,GAAeT,EAAYa,oBAEnG,GAAC,CAAArF,IAAA,8BAAAC,MAED,WACI,OAAO,wBAAAqF,IAAA,IAAAC,EAAAC,GAAA3F,EAAAA,EAAAA,GAAA,KAAAyF,GAgCH,KAEgBG,kBAAoB,OAAM,KAC1BC,WAAa,UAAS,KACtBC,cAAeb,EAAAA,EAAAA,IAAuB,kBAAmB,CACrEC,cAAc1D,EAAAA,EAAAA,KAACuE,EAAAA,EAAa,CAA+BpF,QAA2D,QAApD+E,EAAEf,EAAYQ,8CAAsC,IAAAO,EAAAA,GAAIN,EAAAA,EAAAA,GAAeT,EAAYU,qBAAsBW,UAAU,6BAApJ,2BACjCV,YAAY9D,EAAAA,EAAAA,KAACuE,EAAAA,EAAa,CAA6BpF,QAAyD,QAAlDgF,EAAEhB,EAAYY,4CAAoC,IAAAI,EAAAA,GAAIP,EAAAA,EAAAA,GAAeT,EAAYa,mBAAoBQ,UAAU,6BAA9I,0BAChC,CAoBH,OApBG9F,EAAAA,EAAAA,GAAAuF,EAAA,EAAAtF,IAAA,UAAAW,IArCH,WACI,OAAOmF,EAAAA,EAAYjF,OAAOkF,SAC9B,GAEA,CAAA/F,IAAA,sBAAAC,MAEA,WACI,MAAO,CACH+F,MAAO,EACPC,OAAQ,EACRC,MAAO,EACPC,gBAAiB,EAEzB,GAGA,CAAAnG,IAAA,0BAAAC,MAEA,WACI,MAAO,MACX,GAAC,CAAAD,IAAA,wBAAAC,MAED,SAAAR,GAAqE,IAAvC+C,EAAS/C,EAAT+C,UAAWhB,EAAS/B,EAAT+B,UAC/B4E,EAAyC,KAA9B5D,EAAU6D,gBAAyB,GAAE,kBAAAjG,OAAqBoC,EAAU6D,iBACrF,OAAOhF,EAAAA,EAAAA,KAAA,OAAKwE,UAAS,GAAAzF,OAAKgG,GAAWE,UACjCjF,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CAACC,KAAMC,KAErB,GAAC,CAAAxB,IAAA,eAAAW,IAYD,WACI,MAAO,CACHnB,EAAoBuB,MACpBvB,EAAoBmC,KACpBnC,EAAoB0C,sBACpB1C,EAAoBqD,SAE5B,GAAC,CAAA7C,IAAA,wBAAAC,MAGD,SAA6BO,EAAsB+F,GAC/C,OAAOA,EAAOC,cAAchG,EAChC,GAAC,CAAAR,IAAA,oBAAAC,MAED,SAAyBsG,GACrB,OAAOA,EAAOE,mBAClB,KAEAnB,CAAA,CA3DG,GA8DX,KAEAZ,CAAA,CA/F8B,CACtBgC,EAAAA,E","sources":["app/options/MiiCostumeAppOption.tsx","app/MiiCostumeApp.tsx"],"sourcesContent":["import type {CollectionHolder, CollectionIterator}              from '@joookiwi/collection'\nimport type {CompanionEnumSingleton, PossibleEnumerableValueBy} from '@joookiwi/enumerable'\nimport {CompanionEnum, Enum}                                    from '@joookiwi/enumerable'\n\nimport type {AppOption}           from 'app/options/AppOption'\nimport type {Names, Ordinals}     from 'app/options/MiiCostumeAppOption.types'\nimport type {SingleHeaderContent} from 'app/tools/table/SimpleHeader'\nimport type {MiiCostumes}         from 'core/miiCostume/MiiCostumes'\n\nimport {CommonOptions}        from 'app/options/CommonOptions'\nimport Image                  from 'app/tools/images/Image'\nimport {MiiCostumeCategories} from 'core/miiCostumeCategory/MiiCostumeCategories'\nimport {contentTranslation}   from 'lang/components/translationMethods'\n\n/**\n * @todo convert the \"_createTableHeaderOption\" to have the enumerable as an argument and to be non-null\n * @todo Change CATEGORY to use {IMAGE, TEXT or NONE} instead of 2 different options.\n */\nexport abstract class MiiCostumeAppOption\n    extends Enum<Ordinals, Names>\n    implements AppOption<MiiCostumes> {\n\n    //region -------------------- Enum instances --------------------\n\n    public static readonly IMAGE =                 new class MiiCostumeAppOption_Image extends MiiCostumeAppOption {\n\n        protected override _createContentOption(enumeration: MiiCostumes,) {\n            return <Image file={enumeration.imageFile}/>\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {key: 'image', element: contentTranslation('Image'),}\n        }\n\n    }()\n    public static readonly NAME =                  new class MiiCostumeAppOption_Name extends MiiCostumeAppOption {\n\n        protected override _createContentOption(enumeration: MiiCostumes,) {\n            return CommonOptions.get.getNameContent(enumeration,)\n        }\n\n        protected override _createTableHeaderOption() {\n            return CommonOptions.get.nameHeader\n        }\n\n    }()\n    public static readonly OFFICIAL_NOTIFICATION = new class MiiCostumeAppOption_ConditionToUnlockIt extends MiiCostumeAppOption {\n\n        protected override _createContentOption(enumeration: MiiCostumes,) {\n            const miiCostume = enumeration.reference\n            return miiCostume.officialNotification?.createSimpleTranslationComponent(miiCostume.english, miiCostume.officialNotificationAmount,)\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            //TODO add new translation to the header value.\n            return {key: 'officialNotification', element: '--Official notification--',}\n        }\n\n    }()\n\n    public static readonly CATEGORY =              new class MiiCostumeAppOption_Category extends MiiCostumeAppOption {\n\n        protected override _createContentOption(enumeration: MiiCostumes,) {\n            const categoryName = enumeration.reference.categoryContainer.nameContainer\n            return CommonOptions.get.getCategoryContent(enumeration, () => MiiCostumeCategories.getValueByName(categoryName.english).imageFile,)\n        }\n\n        protected override _createTableHeaderOption() {\n            return CommonOptions.get.categoryHeader\n        }\n\n    }()\n    /**\n     * Tell whenever a {@link MiiCostumeAppOption.CATEGORY category} is displayed\n     * as a text (<i>true</i>) or an image (<i>false</i>).\n     */\n    public static readonly CATEGORY_AS_TEXT =      new class MiiCostumeAppOption_CategoryAsText extends MiiCostumeAppOption {}()\n\n    //endregion -------------------- Enum instances --------------------\n    //region -------------------- Companion enum --------------------\n\n    public static readonly CompanionEnum: CompanionEnumSingleton<MiiCostumeAppOption, typeof MiiCostumeAppOption> = class CompanionEnum_MiiCostumeAppOption\n        extends CompanionEnum<MiiCostumeAppOption, typeof MiiCostumeAppOption> {\n\n        //region -------------------- Singleton usage --------------------\n\n        static #instance?: CompanionEnum_MiiCostumeAppOption\n\n        private constructor() {\n            super(MiiCostumeAppOption,)\n        }\n\n        public static get get() {\n            return this.#instance ??= new CompanionEnum_MiiCostumeAppOption()\n        }\n\n        //endregion -------------------- Singleton usage --------------------\n\n    }\n\n    //endregion -------------------- Companion enum --------------------\n    //region -------------------- Fields --------------------\n    //endregion -------------------- Fields --------------------\n    //region -------------------- Constructor --------------------\n\n    private constructor() {\n        super()\n    }\n\n    //endregion -------------------- Constructor --------------------\n    //region -------------------- Getter methods --------------------\n    //endregion -------------------- Getter methods --------------------\n    //region -------------------- Methods --------------------\n\n    //region -------------------- App option - content --------------------\n\n    protected _createContentOption(enumeration: MiiCostumes,): ReactElement {\n        throw new ReferenceError(`The MiiCostumeAppOption.${this.name} cannot create a content option`,)\n    }\n\n    public renderContent(enumeration: MiiCostumes,): readonly [ReactElement,] {\n        return [this._createContentOption(enumeration,),]\n    }\n\n    //endregion -------------------- App option - content --------------------\n    //region -------------------- App option - table --------------------\n\n    protected _createTableHeaderOption(): NullOr<SingleHeaderContent> {\n        throw new ReferenceError(`The MiiCostumeAppOption.${this.name} cannot create a table header option`,)\n    }\n\n    public renderTableHeader(): NullOr<SingleHeaderContent> {\n        const content = this._createTableHeaderOption()\n        if(content == null)\n            return null\n        return content\n    }\n\n    //endregion -------------------- App option - table --------------------\n\n    //endregion -------------------- Methods --------------------\n    //region -------------------- Enum methods --------------------\n\n    public static getValue(value: PossibleEnumerableValueBy<MiiCostumeAppOption>,): MiiCostumeAppOption {\n        return MiiCostumeAppOption.CompanionEnum.get.getValue(value,)\n    }\n\n    public static get values(): CollectionHolder<MiiCostumeAppOption> {\n        return MiiCostumeAppOption.CompanionEnum.get.values\n    }\n\n    public static [Symbol.iterator](): CollectionIterator<MiiCostumeAppOption> {\n        return MiiCostumeAppOption.CompanionEnum.get[Symbol.iterator]()\n    }\n\n    //endregion -------------------- Enum methods --------------------\n\n}\n","import './MiiCostumeApp.scss'\n\nimport type {AppInterpreterWithTable}                              from 'app/interpreter/AppInterpreterWithTable'\nimport type {PossibleDimensionOnCardList, PossibleDimensionOnList} from 'app/interpreter/DimensionOnList'\nimport type {EveryPossibleRouteNames}                              from 'route/everyRoutes.types'\n\nimport {MiiCostumeAppOption}    from 'app/options/MiiCostumeAppOption'\nimport Image                    from 'app/tools/images/Image'\nimport TextComponent            from 'app/tools/text/TextComponent'\nimport {unfinishedText}         from 'app/tools/text/UnfinishedText'\nimport {AbstractTableApp}       from 'app/withInterpreter/AbstractTableApp'\nimport {MiiCostumes}            from 'core/miiCostume/MiiCostumes'\nimport {OtherWordInTheGames}    from 'core/otherWordInTheGame/OtherWordInTheGames'\nimport {gameContentTranslation} from 'lang/components/translationMethods'\n\n//region -------------------- Import from deconstruction --------------------\n\nconst {MII_COSTUME,} = OtherWordInTheGames\n\n//endregion -------------------- Import from deconstruction --------------------\n\nexport default class MiiCostumeApp\n    extends AbstractTableApp<AppInterpreterWithTable<MiiCostumes, MiiCostumeAppOption>> {\n\n    //region -------------------- Create methods --------------------\n\n    protected override _createKey() {\n        return 'miiCostume'\n    }\n\n\n    protected override _createSimpleListRouteName(): EveryPossibleRouteNames {\n        return 'everyMiiCostume (list)'\n    }\n\n    protected override _createCardListRouteName(): EveryPossibleRouteNames {\n        return 'everyMiiCostume (card)'\n    }\n\n    protected override _createTableRouteName(): EveryPossibleRouteNames {\n        return 'everyMiiCostume (table)'\n    }\n\n\n    protected override _createTitleContent(): ReactElementOrString {\n        return gameContentTranslation('mii costume.all', {\n            singularName: MII_COSTUME.singularLowerCaseNameOnReferenceOrNull ?? unfinishedText(MII_COSTUME.singularEnglishName),\n            pluralName: MII_COSTUME.pluralLowerCaseNameOnReferenceOrNull ?? unfinishedText(MII_COSTUME.pluralEnglishName),\n        },)\n    }\n\n    protected override _createAppOptionInterpreter() {\n        return new class MiiCostumeAppInterpreter implements AppInterpreterWithTable<MiiCostumes, MiiCostumeAppOption> {\n\n            public get content() {\n                return MiiCostumes.values.toArray()\n            }\n\n            //region -------------------- List interpreter --------------------\n\n            public createListDimension(): PossibleDimensionOnList {\n                return {\n                    small: 6,\n                    medium: 4,\n                    large: 3,\n                    extraExtraLarge: 2,\n                }\n            }\n\n            //endregion -------------------- List interpreter --------------------\n            //region -------------------- Card list interpreter --------------------\n\n            public createCardListDimension(): PossibleDimensionOnCardList {\n                return 'list'\n            }\n\n            public createCardListContent({reference, imageFile,}: MiiCostumes,) {\n                const category = reference.categoryEnglish === '' ? '' : `entityCategory-${reference.categoryEnglish}`//TODO move to the parent container className.\n                return <div className={`${category}`}>\n                    <Image file={imageFile}/>\n                </div>\n            }\n\n            //endregion -------------------- Card list interpreter --------------------\n            //region -------------------- Table interpreter --------------------\n\n            public readonly tableHeadersColor = 'info' satisfies BootstrapThemeColor\n            public readonly tableColor = 'primary' satisfies BootstrapThemeColor\n            public readonly tableCaption = gameContentTranslation('mii costume.all', {\n                singularName: <TextComponent key=\"miiCostume-singularName\" content={MII_COSTUME.singularLowerCaseNameOnReferenceOrNull ?? unfinishedText(MII_COSTUME.singularEnglishName)} className=\"text-decoration-underline\"/>,\n                pluralName: <TextComponent key=\"miiCostume-pluralName\" content={MII_COSTUME.pluralLowerCaseNameOnReferenceOrNull ?? unfinishedText(MII_COSTUME.pluralEnglishName)} className=\"text-decoration-underline\"/>,\n            },) satisfies ReactElementOrString\n\n            public get tableOptions(): readonly MiiCostumeAppOption[] {\n                return [\n                    MiiCostumeAppOption.IMAGE,\n                    MiiCostumeAppOption.NAME,\n                    MiiCostumeAppOption.OFFICIAL_NOTIFICATION,\n                    MiiCostumeAppOption.CATEGORY,\n                ]\n            }\n\n\n            public createNewTableContent(content: MiiCostumes, option: MiiCostumeAppOption,) {\n                return option.renderContent(content,)\n            }\n\n            public createTableHeader(option: MiiCostumeAppOption,) {\n                return option.renderTableHeader()\n            }\n\n            //endregion -------------------- Table interpreter --------------------\n\n        }()\n    }\n\n    //endregion -------------------- Create methods --------------------\n\n}\n"],"names":["_Symbol$iterator","Symbol","iterator","MiiCostumeAppOption","_ref","_inherits","_super","_createSuper","_classCallCheck","call","_createClass","key","value","enumeration","ReferenceError","concat","this","name","_createContentOption","content","_createTableHeaderOption","CompanionEnum","get","getValue","values","Enum","IMAGE","_MiiCostumeAppOption","MiiCostumeAppOption_Image","_super2","apply","arguments","_jsx","Image","file","imageFile","element","contentTranslation","NAME","_MiiCostumeAppOption2","MiiCostumeAppOption_Name","_super3","CommonOptions","getNameContent","nameHeader","OFFICIAL_NOTIFICATION","_MiiCostumeAppOption3","MiiCostumeAppOption_ConditionToUnlockIt","_super4","_miiCostume$officialN","miiCostume","reference","officialNotification","createSimpleTranslationComponent","english","officialNotificationAmount","CATEGORY","_MiiCostumeAppOption4","MiiCostumeAppOption_Category","_super5","categoryName","categoryContainer","nameContainer","getCategoryContent","MiiCostumeCategories","getValueByName","categoryHeader","CATEGORY_AS_TEXT","_MiiCostumeAppOption5","MiiCostumeAppOption_CategoryAsText","_super6","_instance","_classPrivateFieldLooseKey","_class","_CompanionEnum","CompanionEnum_MiiCostumeAppOption","_super7","_classPrivateFieldLoo","_classPrivateFieldLoo2","_classPrivateFieldLooseBase","Object","defineProperty","writable","MII_COSTUME","OtherWordInTheGames","MiiCostumeApp","_AbstractTableApp","_MII_COSTUME$singular","_MII_COSTUME$pluralLo","gameContentTranslation","singularName","singularLowerCaseNameOnReferenceOrNull","unfinishedText","singularEnglishName","pluralName","pluralLowerCaseNameOnReferenceOrNull","pluralEnglishName","MiiCostumeAppInterpreter","_MII_COSTUME$singular2","_MII_COSTUME$pluralLo2","tableHeadersColor","tableColor","tableCaption","TextComponent","className","MiiCostumes","toArray","small","medium","large","extraExtraLarge","category","categoryEnglish","children","option","renderContent","renderTableHeader","AbstractTableApp"],"sourceRoot":""}