{"version":3,"file":"static/js/735.fb5ba56c.chunk.js","mappings":"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","sources":["app/options/SampleCourseAppOption.tsx","core/sampleCourse/SampleCourse.container.ts","core/sampleCourse/SampleCourse.loader.ts","core/sampleCourse/SampleCourses.ts","app/SampleCourseApp.tsx","core/_component/LevelGameStyleAndTheme.tsx"],"sourcesContent":["import type {CompanionEnumSingleton} from '@joookiwi/enumerable'\nimport {CompanionEnum, Enum}         from '@joookiwi/enumerable'\n\nimport type {AppOption}           from 'app/options/AppOption'\nimport type {Names, Ordinals}     from 'app/options/SampleCourseAppOption.types'\nimport type {SingleHeaderContent} from 'app/tools/table/SimpleHeader'\nimport type {SampleCourses}       from 'core/sampleCourse/SampleCourses'\n\nimport {CommonOptions}                  from 'app/options/CommonOptions'\nimport UnfinishedText, {unfinishedText} from 'app/tools/text/UnfinishedText'\nimport LevelGameStyleAndTheme           from 'core/_component/LevelGameStyleAndTheme'\nimport {ProjectLanguages}               from 'lang/ProjectLanguages'\nimport {gameContentTranslation}         from 'lang/components/translationMethods'\n\nimport LanguageCompanion = ProjectLanguages.Companion\n\nexport abstract class SampleCourseAppOption\n    extends Enum<Ordinals, Names>\n    implements AppOption<SampleCourses> {\n\n    //region -------------------- Enum instances --------------------\n\n    public static readonly LEVEL_NUMBER = new class SampleCourseAppOption_Number extends SampleCourseAppOption {\n\n        protected override _createContentOption({reference: {worldNumber, firstNumberInFirst10MarioChallenges,}}: SampleCourses,): NonNullReactElement {\n            if (firstNumberInFirst10MarioChallenges == null)\n                return <span className=\"number-container\">{worldNumber}</span>\n            return <span className=\"number-container\">{worldNumber}<sub className=\"opacity-75\">({firstNumberInFirst10MarioChallenges})</sub></span>\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {\n                key: 'levelNumber', element: <span><UnfinishedText>Level number</UnfinishedText><br/><sub className=\"opacity-75\">{LanguageCompanion.current.textInParentheses(unfinishedText('with 1st-time in 10 Mario Challenges',),)}</sub></span>,\n            }\n        }\n\n\n    }('levelNumber',)\n    public static readonly NAME = new class SampleCourseAppOption_Name extends SampleCourseAppOption {\n\n        protected override _createContentOption(enumeration: SampleCourses,): ReactElement {\n            return CommonOptions.get.getNameContent(enumeration,)\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return CommonOptions.get.nameHeader\n        }\n\n\n    }('name',)\n    public static readonly GAME_STYLE_AND_AREAS = new class SampleCourseAppOption_GameStyleAndAreas extends SampleCourseAppOption {\n\n        protected override _createContentOption({reference,}: SampleCourses,): NonNullReactElement {\n            return <LevelGameStyleAndTheme gameStyle={reference.gameStyle} mainArea={reference.themeInMainArea} subArea={reference.themeInSubArea} in2Line/>\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {key: 'gameStyleAndAreas', element: unfinishedText(gameContentTranslation('game style.singular',) + unfinishedText(' & areas'),),} satisfies SingleHeaderContent\n        }\n\n\n    }('gameStyleAndAreas')\n    public static readonly TIME = new class SampleCourseAppOption_Time extends SampleCourseAppOption {\n\n        protected override _createContentOption({reference,}: SampleCourses,): NonNullReactElement {\n            return <span>{reference.amountOfTime} <UnfinishedText>seconds</UnfinishedText></span>\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {key: 'time', element: gameContentTranslation('time.singular',),}\n        }\n\n\n    }('time',)\n\n    //endregion -------------------- Enum instances --------------------\n    //region -------------------- Companion enum --------------------\n\n    public static CompanionEnum: CompanionEnumSingleton<SampleCourseAppOption, typeof SampleCourseAppOption> = class CompanionEnum_SampleCourseAppOption\n        extends CompanionEnum<SampleCourseAppOption, typeof SampleCourseAppOption> {\n\n        //region -------------------- Singleton usage --------------------\n\n        static #instance?: CompanionEnum_SampleCourseAppOption\n\n        private constructor() {\n            super(SampleCourseAppOption,)\n        }\n\n        public static get get() {\n            return this.#instance ??= new this()\n        }\n\n        //endregion -------------------- Singleton usage --------------------\n\n    }\n\n    //endregion -------------------- Companion enum --------------------\n    //region -------------------- Fields --------------------\n\n    readonly #associatedClass\n    readonly #additionalClasses\n\n    //endregion -------------------- Fields --------------------\n    //region -------------------- Constructor --------------------\n\n    private constructor(associatedClass: string,) {\n        super()\n        this.#additionalClasses = [this.#associatedClass = associatedClass,] as const\n    }\n\n    //endregion -------------------- Constructor --------------------\n    //region -------------------- Getter methods --------------------\n\n    public get associatedClass(): string {\n        return this.#associatedClass\n    }\n\n    public get additionalClasses(): readonly [string,] {\n        return this.#additionalClasses\n    }\n\n    //endregion -------------------- Getter methods --------------------\n    //region -------------------- Methods --------------------\n\n    //region -------------------- App option - content --------------------\n\n    protected abstract _createContentOption(enumeration: SampleCourses,): ReactElement\n\n    public renderContent(enumeration: SampleCourses,): readonly [ReactElement,] {\n        return [this._createContentOption(enumeration,),]\n    }\n\n    //endregion -------------------- App option - content --------------------\n    //region -------------------- App option - table --------------------\n\n    protected abstract _createTableHeaderOption(): SingleHeaderContent\n\n    public renderTableHeader(): SingleHeaderContent {\n        return this._createTableHeaderOption()\n    }\n\n    //endregion -------------------- App option - table --------------------\n\n    //endregion -------------------- Methods --------------------\n\n}\n","import type {NullOr} from '@joookiwi/type'\n\nimport type {GameStyles}                                                                             from 'core/gameStyle/GameStyles'\nimport type {SampleCourse}                                                                           from 'core/sampleCourse/SampleCourse'\nimport type {PossibleAmountOfTime, PossibleFirstNumberInFirst10MarioChallenges, PossibleWorldNumber} from 'core/sampleCourse/loader.types'\nimport type {Themes}                                                                                 from 'core/theme/Themes'\nimport type {Name}                                                                                   from 'lang/name/Name'\n\nimport {ClassContainingAName} from 'lang/name/ClassContainingAName'\n\nexport class SampleCourseContainer\n    extends ClassContainingAName<string>\n    implements SampleCourse {\n\n    //region -------------------- Fields --------------------\n\n    readonly #worldNumber\n    readonly #firstNumberInFirst10MarioChallenges\n    readonly #gameStyle\n    readonly #themeInMainArea\n    readonly #themeInSubArea\n    readonly #amountOfTime\n\n    //endregion -------------------- Fields --------------------\n    //region -------------------- Constructor --------------------\n\n    public constructor(name: Name<string>,\n                       worldNumber: PossibleWorldNumber,\n                       firstNumberInFirst10MarioChallenges: PossibleFirstNumberInFirst10MarioChallenges,\n                       gameStyle: GameStyles,\n                       themeInMainArea: Themes,\n                       themeInSubArea: NullOr<Themes>,\n                       amountOfTime: PossibleAmountOfTime,) {\n        super(name,)\n        this.#worldNumber = worldNumber\n        this.#firstNumberInFirst10MarioChallenges = firstNumberInFirst10MarioChallenges\n        this.#gameStyle = gameStyle\n        this.#themeInMainArea = themeInMainArea\n        this.#themeInSubArea = themeInSubArea\n        this.#amountOfTime = amountOfTime\n    }\n\n    //endregion -------------------- Constructor --------------------\n    //region -------------------- Getter methods --------------------\n\n    public get worldNumber() {\n        return this.#worldNumber\n    }\n\n    public get firstNumberInFirst10MarioChallenges() {\n        return this.#firstNumberInFirst10MarioChallenges\n    }\n\n    public get gameStyle() {\n        return this.#gameStyle\n    }\n\n    public get themeInMainArea() {\n        return this.#themeInMainArea\n    }\n\n    public get themeInSubArea() {\n        return this.#themeInSubArea\n    }\n\n    public get amountOfTime() {\n        return this.#amountOfTime\n    }\n\n    //endregion -------------------- Getter methods --------------------\n\n}\n","import file from 'resources/compiled/Sample course (SMM).json'\n\nimport type {Array, NullOr} from '@joookiwi/type'\nimport {forEachByArray}     from '@joookiwi/collection'\n\nimport type {LanguageContent}                                                                        from 'core/_template/LanguageContent'\nimport type {PossibleAcronym_GameStyle_SMM1}                                                         from 'core/gameReference/GameReferences.types'\nimport type {PossibleEnglishName_CourseTheme_SMM1}                                                   from 'core/theme/Themes.types'\nimport type {SampleCourse}                                                                           from 'core/sampleCourse/SampleCourse'\nimport type {PossibleAmountOfTime, PossibleFirstNumberInFirst10MarioChallenges, PossibleWorldNumber} from 'core/sampleCourse/loader.types'\nimport type {PossibleEnglishName}                                                                    from 'core/sampleCourse/SampleCourses.types'\nimport type {Loader}                                                                                 from 'util/loader/Loader'\n\nimport {isInProduction}        from 'variables'\nimport {GameStyles}            from 'core/gameStyle/GameStyles'\nimport {SampleCourseContainer} from 'core/sampleCourse/SampleCourse.container'\nimport {Themes}                from 'core/theme/Themes'\nimport {createNameFromContent} from 'lang/name/createNameFromContent'\n\nimport GameStyleCompanion = GameStyles.Companion\nimport ThemeCompanion =     Themes.Companion\n\n/**\n * @dependsOn<{@link GameStyles}>\n * @dependsOn<{@link Themes}>\n * @singleton\n */\nexport class SampleCourseLoader\n    implements Loader<ReadonlyMap<PossibleEnglishName, SampleCourse>> {\n\n    //region -------------------- Singleton usage --------------------\n\n    static #instance?: SampleCourseLoader\n\n    private constructor() {}\n\n    public static get get() {\n        return this.#instance ??= new this()\n    }\n\n    //endregion -------------------- Singleton usage --------------------\n\n    #map?: ReadonlyMap<PossibleEnglishName, SampleCourse>\n\n    public load(): ReadonlyMap<PossibleEnglishName, SampleCourse> {\n        if (this.#map != null)\n            return this.#map\n\n        const references = new Map<PossibleEnglishName, SampleCourse>()\n        forEachByArray(file as Array<Content>, content =>\n            references.set(`Level ${content.worldNumber}`, createReference(content,),),)\n\n        if (!isInProduction)\n            console.info(\n                '-------------------- \"sample course\" has been loaded --------------------\\n',\n                references,\n                '\\n-------------------- \"sample course\" has been loaded --------------------',\n            )\n\n        return this.#map = references\n    }\n}\n\ninterface Content\n    extends LanguageContent {\n\n    readonly worldNumber: PossibleWorldNumber\n    readonly courseNumberInFirst10MarioChallenge: PossibleFirstNumberInFirst10MarioChallenges\n\n    readonly gameStyle: PossibleAcronym_GameStyle_SMM1\n    readonly courseTheme_mainArea: PossibleEnglishName_CourseTheme_SMM1\n    readonly courseTheme_subArea: NullOr<PossibleEnglishName_CourseTheme_SMM1>\n\n    readonly amountOfTime: PossibleAmountOfTime\n\n}\n\nfunction createReference(content: Content,): SampleCourse {\n    const subArea = content.courseTheme_subArea\n\n    return new SampleCourseContainer(\n        createNameFromContent(content, 1, true,),\n        content.worldNumber,\n        content.courseNumberInFirst10MarioChallenge,\n        GameStyleCompanion.getValueByAcronym(content.gameStyle,),\n        ThemeCompanion.getValueByName(content.courseTheme_mainArea,),\n        subArea == null ? null : ThemeCompanion.getValueByName(subArea,),\n        content.amountOfTime,\n    )\n}\n","import type {CompanionEnumSingleton} from '@joookiwi/enumerable'\nimport {CompanionEnum, Enum}         from '@joookiwi/enumerable'\n\nimport type {ClassWithEnglishName}                 from 'core/ClassWithEnglishName'\nimport type {ClassWithReference}                   from 'core/ClassWithReference'\nimport type {SampleCourse}                         from 'core/sampleCourse/SampleCourse'\nimport type {Names, Ordinals, PossibleEnglishName} from 'core/sampleCourse/SampleCourses.types'\n\nimport {SampleCourseLoader} from 'core/sampleCourse/SampleCourse.loader'\nimport {StringContainer}    from 'util/StringContainer'\n\nexport class SampleCourses\n    extends Enum<Ordinals, Names>\n    implements ClassWithEnglishName<PossibleEnglishName>, ClassWithReference<SampleCourse> {\n\n    //region -------------------- Enum instances --------------------\n\n    public static readonly '1-1'  = new SampleCourses('Level 1-1',)\n    public static readonly '1-2'  = new SampleCourses('Level 1-2',)\n    public static readonly '1-3'  = new SampleCourses('Level 1-3',)\n    public static readonly '1-4'  = new SampleCourses('Level 1-4',)\n    public static readonly '2-1'  = new SampleCourses('Level 2-1',)\n    public static readonly '2-2'  = new SampleCourses('Level 2-2',)\n    public static readonly '2-3'  = new SampleCourses('Level 2-3',)\n    public static readonly '2-4'  = new SampleCourses('Level 2-4',)\n    public static readonly '3-1'  = new SampleCourses('Level 3-1',)\n    public static readonly '3-2'  = new SampleCourses('Level 3-2',)\n    public static readonly '3-3'  = new SampleCourses('Level 3-3',)\n    public static readonly '3-4'  = new SampleCourses('Level 3-4',)\n    public static readonly '4-1'  = new SampleCourses('Level 4-1',)\n    public static readonly '4-2'  = new SampleCourses('Level 4-2',)\n    public static readonly '4-3'  = new SampleCourses('Level 4-3',)\n    public static readonly '4-4'  = new SampleCourses('Level 4-4',)\n    public static readonly '5-1'  = new SampleCourses('Level 5-1',)\n    public static readonly '5-2'  = new SampleCourses('Level 5-2',)\n    public static readonly '5-3'  = new SampleCourses('Level 5-3',)\n    public static readonly '5-4'  = new SampleCourses('Level 5-4',)\n    public static readonly '6-1'  = new SampleCourses('Level 6-1',)\n    public static readonly '6-2'  = new SampleCourses('Level 6-2',)\n    public static readonly '6-3'  = new SampleCourses('Level 6-3',)\n    public static readonly '6-4'  = new SampleCourses('Level 6-4',)\n    public static readonly '7-1'  = new SampleCourses('Level 7-1',)\n    public static readonly '7-2'  = new SampleCourses('Level 7-2',)\n    public static readonly '7-3'  = new SampleCourses('Level 7-3',)\n    public static readonly '7-4'  = new SampleCourses('Level 7-4',)\n    public static readonly '8-1'  = new SampleCourses('Level 8-1',)\n    public static readonly '8-2'  = new SampleCourses('Level 8-2',)\n    public static readonly '8-3'  = new SampleCourses('Level 8-3',)\n    public static readonly '8-4'  = new SampleCourses('Level 8-4',)\n    public static readonly '9-1'  = new SampleCourses('Level 9-1',)\n    public static readonly '9-2'  = new SampleCourses('Level 9-2',)\n    public static readonly '9-3'  = new SampleCourses('Level 9-3',)\n    public static readonly '9-4'  = new SampleCourses('Level 9-4',)\n    public static readonly '10-1' = new SampleCourses('Level 10-1',)\n    public static readonly '10-2' = new SampleCourses('Level 10-2',)\n    public static readonly '10-3' = new SampleCourses('Level 10-3',)\n    public static readonly '10-4' = new SampleCourses('Level 10-4',)\n    public static readonly '11-1' = new SampleCourses('Level 11-1',)\n    public static readonly '11-2' = new SampleCourses('Level 11-2',)\n    public static readonly '11-3' = new SampleCourses('Level 11-3',)\n    public static readonly '11-4' = new SampleCourses('Level 11-4',)\n    public static readonly '12-1' = new SampleCourses('Level 12-1',)\n    public static readonly '12-2' = new SampleCourses('Level 12-2',)\n    public static readonly '12-3' = new SampleCourses('Level 12-3',)\n    public static readonly '12-4' = new SampleCourses('Level 12-4',)\n    public static readonly '13-1' = new SampleCourses('Level 13-1',)\n    public static readonly '13-2' = new SampleCourses('Level 13-2',)\n    public static readonly '13-3' = new SampleCourses('Level 13-3',)\n    public static readonly '13-4' = new SampleCourses('Level 13-4',)\n    public static readonly '14-1' = new SampleCourses('Level 14-1',)\n    public static readonly '14-2' = new SampleCourses('Level 14-2',)\n    public static readonly '14-3' = new SampleCourses('Level 14-3',)\n    public static readonly '14-4' = new SampleCourses('Level 14-4',)\n    public static readonly '15-1' = new SampleCourses('Level 15-1',)\n    public static readonly '15-2' = new SampleCourses('Level 15-2',)\n    public static readonly '15-3' = new SampleCourses('Level 15-3',)\n    public static readonly '15-4' = new SampleCourses('Level 15-4',)\n    public static readonly '16-1' = new SampleCourses('Level 16-1',)\n    public static readonly '16-2' = new SampleCourses('Level 16-2',)\n    public static readonly '16-3' = new SampleCourses('Level 16-3',)\n    public static readonly '16-4' = new SampleCourses('Level 16-4',)\n    public static readonly '17-1' = new SampleCourses('Level 17-1',)\n    public static readonly '17-2' = new SampleCourses('Level 17-2',)\n    public static readonly '17-3' = new SampleCourses('Level 17-3',)\n    public static readonly '17-4' = new SampleCourses('Level 17-4',)\n\n    //endregion -------------------- Enum instances --------------------\n    //region -------------------- Companion enum --------------------\n\n    public static readonly CompanionEnum: CompanionEnumSingleton<SampleCourses, typeof SampleCourses> = class CompanionEnum_SampleCourses\n        extends CompanionEnum<SampleCourses, typeof SampleCourses> {\n\n        //region -------------------- Singleton usage --------------------\n\n        static #instance?: CompanionEnum_SampleCourses\n\n        private constructor() {\n            super(SampleCourses,)\n        }\n\n        public static get get() {\n            return this.#instance ??= new CompanionEnum_SampleCourses()\n        }\n\n        //endregion -------------------- Singleton usage --------------------\n\n    }\n\n    //endregion -------------------- Companion enum --------------------\n    //region -------------------- Fields --------------------\n\n    static #REFERENCE_MAP?: ReadonlyMap<PossibleEnglishName, SampleCourse>\n\n    #reference?: SampleCourse\n\n    readonly #englishName\n\n    //endregion -------------------- Fields --------------------\n    //region -------------------- Constructor --------------------\n\n    public constructor(englishName: PossibleEnglishName,) {\n        super()\n        this.#englishName = new StringContainer(englishName,)\n    }\n\n    //endregion -------------------- Constructor --------------------\n    //region -------------------- Getter methods --------------------\n\n    public static get REFERENCE_MAP(): ReadonlyMap<PossibleEnglishName, SampleCourse> {\n        return this.#REFERENCE_MAP ??= SampleCourseLoader.get.load()\n    }\n\n    public get reference(): SampleCourse {\n        return this.#reference ??= SampleCourses.REFERENCE_MAP.get(this.englishName,)!\n    }\n\n\n    public get englishName(): PossibleEnglishName {\n        return this.#englishName.get\n    }\n\n    public get englishNameInHtml(): string {\n        return this.#englishName.getInHtml\n    }\n\n    //endregion -------------------- Getter methods --------------------\n    //region -------------------- Methods --------------------\n    //endregion -------------------- Methods --------------------\n\n}\n\nexport namespace SampleCourses {\n\n    /** The companion instance of a {@link SampleCourses} */\n    export const Companion = SampleCourses.CompanionEnum.get\n\n    export const ALL = Companion.values.toArray()\n\n}\n\n// @ts-ignore: TODO remove this test variable when the application will be complete\n(window.test ??= {}).SampleCourses = SampleCourses\n","import './SampleCourseApp.scss'\n\nimport type {Array}              from '@joookiwi/type'\nimport type {CollectionHolder}   from '@joookiwi/collection'\nimport {GenericCollectionHolder} from '@joookiwi/collection'\n\nimport type {AppWithInterpreterProperties} from 'app/AppProperties.types'\nimport type {AppInterpreterWithTable}      from 'app/interpreter/AppInterpreterWithTable'\nimport type {DimensionOnList}              from 'app/interpreter/DimensionOnList'\nimport type {ViewAndRouteName}             from 'app/withInterpreter/DisplayButtonGroup.properties'\nimport type {ReactProperties}              from 'util/react/ReactProperties'\n\nimport SubMainContainer         from 'app/_SubMainContainer'\nimport {SampleCourseAppOption}  from 'app/options/SampleCourseAppOption'\nimport Table                    from 'app/tools/table/Table'\nimport {unfinishedText}         from 'app/tools/text/UnfinishedText'\nimport List                     from 'app/util/List'\nimport CardList                 from 'app/withInterpreter/CardList'\nimport {ViewDisplays}           from 'app/withInterpreter/ViewDisplays'\nimport LevelGameStyleAndTheme   from 'core/_component/LevelGameStyleAndTheme'\nimport {OtherWordInTheGames}    from 'core/otherWordInTheGame/OtherWordInTheGames'\nimport {SampleCourses}          from 'core/sampleCourse/SampleCourses'\nimport {gameContentTranslation} from 'lang/components/translationMethods'\nimport NameComponent            from 'lang/name/component/Name.component'\n\nimport ALL = SampleCourses.ALL\n\nclass SampleCourseInterpreter\n    implements AppInterpreterWithTable<SampleCourses, SampleCourseAppOption> {\n\n    public get content() {\n        return new GenericCollectionHolder(ALL,)\n    }\n\n    //region -------------------- Card list interpreter --------------------\n\n    public createCardListDimension() {\n        return {\n            default: 1,\n            small: 2,\n            medium: 4,\n        } as const satisfies DimensionOnList\n    }\n\n    public createCardListContent({reference,}: SampleCourses,) {\n        return <LevelGameStyleAndTheme gameStyle={reference.gameStyle} mainArea={reference.themeInMainArea} subArea={reference.themeInSubArea}/>\n    }\n\n    //endregion -------------------- Card list interpreter --------------------\n    //region -------------------- Table interpreter --------------------\n\n    public readonly tableHeadersColor = 'info' satisfies BootstrapThemeColor\n\n    public get tableCaption() {\n        const course = OtherWordInTheGames.COURSE.singularNameOnReferenceOrNull ?? unfinishedText(OtherWordInTheGames.COURSE.singularEnglishName,)\n        const courseAsLowerCase = OtherWordInTheGames.COURSE.singularLowerCaseNameOnReferenceOrNull ?? course.toLowerCase()\n        return gameContentTranslation('sample course.all', {SingularName: course, singularName: courseAsLowerCase,},) satisfies ReactElementOrString\n    }\n\n    public get tableOptions(): Array<SampleCourseAppOption> {\n        return [\n            SampleCourseAppOption.LEVEL_NUMBER,\n            SampleCourseAppOption.NAME,\n            SampleCourseAppOption.GAME_STYLE_AND_AREAS,\n            SampleCourseAppOption.TIME,\n        ]\n    }\n\n    public getAdditionalClass(option: SampleCourseAppOption,) {\n        return option.additionalClasses\n    }\n\n    public createTableContent(content: SampleCourses, option: SampleCourseAppOption,) {\n        return option.renderContent(content,)\n    }\n\n    public createTableHeader(option: SampleCourseAppOption,) {\n        return option.renderTableHeader()\n    }\n\n    //endregion -------------------- Table interpreter --------------------\n\n}\n\nconst viewDisplayAndRouteName = [\n    [ViewDisplays.SIMPLE_LIST, 'everySampleCourse (list)',],\n    [ViewDisplays.CARD_LIST, 'everySampleCourse (card)',],\n    [ViewDisplays.TABLE, 'everySampleCourse (table)',],\n] as const satisfies Array<ViewAndRouteName>\nconst appInterpreter = new SampleCourseInterpreter()\n\n/** @reactComponent */\nexport default function SampleCourseApp({viewDisplay,}: AppWithInterpreterProperties,) {\n    const course = OtherWordInTheGames.COURSE.singularNameOnReferenceOrNull ?? unfinishedText(OtherWordInTheGames.COURSE.singularEnglishName,)\n    const courseAsLowerCase = OtherWordInTheGames.COURSE.singularLowerCaseNameOnReferenceOrNull ?? course.toLowerCase()\n\n    return <SubMainContainer reactKey=\"sampleCourse\" viewDisplayAndRouteName={viewDisplayAndRouteName} viewDisplay={viewDisplay}\n                             titleContent={gameContentTranslation('sample course.all', {SingularName: course, singularName: courseAsLowerCase,},)}>\n        <SubContent viewDisplay={viewDisplay}/>\n    </SubMainContainer>\n}\n\n/** @reactComponent */\nfunction SubContent({viewDisplay,}: AppWithInterpreterProperties,) {\n    if (viewDisplay === ViewDisplays.SIMPLE_LIST)\n        return <SampleCourseList items={appInterpreter.content}/>\n    if (viewDisplay === ViewDisplays.CARD_LIST)\n        return <CardList reactKey=\"sampleCourse\" interpreter={appInterpreter}/>\n    return <Table id=\"sampleCourse-table\" interpreter={appInterpreter}/>\n}\n\n//region -------------------- List --------------------\n\ninterface SampleCourse_ListProperties\n    extends ReactProperties {\n\n    readonly items: CollectionHolder<SampleCourses>\n\n}\n\n/** @reactComponent */\nfunction SampleCourseList({items,}: SampleCourse_ListProperties,) {\n    return <List partialId=\"sampleCourse\" items={items} withSeparator>{it => {\n        const reference = it.reference\n        return <div className=\"d-flex justify-content-between\">\n            <NameComponent id=\"sampleCourse-name\" name={it.reference} popoverOrientation=\"right\"/>\n            <LevelGameStyleAndTheme gameStyle={reference.gameStyle} mainArea={reference.themeInMainArea} subArea={reference.themeInSubArea}/>\n        </div>\n    }}</List>\n}\n\n//endregion -------------------- List --------------------\n","import './LevelGameStyleAndTheme.scss'\n\nimport type {Nullable}     from '@joookiwi/type'\n\nimport type {GameStyles}   from 'core/gameStyle/GameStyles'\nimport type {Themes}       from 'core/theme/Themes'\n\nimport ThemeImage     from 'core/theme/component/ThemeImage'\nimport GameStyleImage from 'core/gameStyle/component/GameStyleImage'\n\ninterface LevelGameStyleAndThemeProperties {\n\n    readonly gameStyle: GameStyles\n\n    readonly mainArea: Themes\n\n    readonly subArea: Nullable<Themes>\n\n    /** The visual will be represented in 1 (<b>false</b>) or 2 lines (<b>true</b>) */\n    readonly in2Line?: boolean\n\n}\n\n/** @reactComponent */\nexport default function LevelGameStyleAndTheme({gameStyle, mainArea, subArea, in2Line,}:LevelGameStyleAndThemeProperties,) {\n    if (!in2Line)\n        return <div className=\"levelGameAndGameStyle-container levelGameAndGameStyle-in1Line-container d-flex justify-content-between text-end\">\n            <ThemeImage reference={mainArea} isSmallPath className=\"me-1\"/>\n            <ThemeImage reference={subArea} isSmallPath className=\"me-1\"/>\n            <GameStyleImage reference={gameStyle}/>\n        </div>\n    if (subArea == null)\n        return <div className=\"levelGameAndGameStyle-container levelGameAndGameStyle-in2Line-container d-flex flex-column align-items-start\">\n            <GameStyleImage reference={gameStyle} className=\"mb-1\"/>\n            <ThemeImage reference={mainArea} isSmallPath/>\n        </div>\n    return <div className=\"levelGameAndGameStyle-container levelGameAndGameStyle-in2Line-container d-flex flex-column align-items-center\">\n        <GameStyleImage reference={gameStyle} className=\"mb-1\"/>\n        <div className=\"d-flex\">\n            <ThemeImage reference={mainArea} isSmallPath className=\"me-1\"/>\n            <ThemeImage reference={subArea} isSmallPath/>\n        </div>\n    </div>\n}\n"],"names":["LanguageCompanion","ProjectLanguages","Companion","_associatedClass","_classPrivateFieldLooseKey","_additionalClasses","SampleCourseAppOption","Enum","constructor","associatedClass","super","Object","defineProperty","writable","value","_classPrivateFieldLooseBase","this","additionalClasses","renderContent","enumeration","_createContentOption","renderTableHeader","_createTableHeaderOption","_SampleCourseAppOption","LEVEL_NUMBER","_ref","reference","worldNumber","firstNumberInFirst10MarioChallenges","_jsx","className","children","_jsxs","key","element","UnfinishedText","current","textInParentheses","unfinishedText","NAME","CommonOptions","get","getNameContent","nameHeader","GAME_STYLE_AND_AREAS","_ref2","LevelGameStyleAndTheme","gameStyle","mainArea","themeInMainArea","subArea","themeInSubArea","in2Line","gameContentTranslation","TIME","_ref3","amountOfTime","CompanionEnum","_instance","_CompanionEnum_SampleCourseAppOption","_classPrivateFieldLoo","_classPrivateFieldLoo2","_worldNumber","_firstNumberInFirst10MarioChallenges","_gameStyle","_themeInMainArea","_themeInSubArea","_amountOfTime","SampleCourseContainer","ClassContainingAName","name","GameStyleCompanion","GameStyles","ThemeCompanion","Themes","_map","SampleCourseLoader","load","references","Map","forEachByArray","file","content","set","concat","courseTheme_subArea","createNameFromContent","courseNumberInFirst10MarioChallenge","getValueByAcronym","getValueByName","courseTheme_mainArea","createReference","isInProduction","console","info","_REFERENCE_MAP","_reference","_englishName","SampleCourses","englishName","StringContainer","REFERENCE_MAP","_classPrivateFieldLoo3","_classPrivateFieldLoo4","englishNameInHtml","getInHtml","_SampleCourses","_CompanionEnum_SampleCourses","CompanionEnum_SampleCourses","_classPrivateFieldLoo5","_classPrivateFieldLoo6","_SampleCourses2","ALL","values","toArray","_window$test","_window","window","test","viewDisplayAndRouteName","ViewDisplays","SIMPLE_LIST","CARD_LIST","TABLE","appInterpreter","tableHeadersColor","GenericCollectionHolder","createCardListDimension","default","small","medium","createCardListContent","tableCaption","_OtherWordInTheGames$","_OtherWordInTheGames$2","course","OtherWordInTheGames","COURSE","singularNameOnReferenceOrNull","singularEnglishName","courseAsLowerCase","singularLowerCaseNameOnReferenceOrNull","toLowerCase","SingularName","singularName","tableOptions","getAdditionalClass","option","createTableContent","createTableHeader","SampleCourseApp","_OtherWordInTheGames$3","_OtherWordInTheGames$4","viewDisplay","SubMainContainer","reactKey","titleContent","SubContent","SampleCourseList","items","CardList","interpreter","Table","id","_ref4","List","partialId","withSeparator","it","NameComponent","popoverOrientation","GameStyleImage","ThemeImage","isSmallPath"],"sourceRoot":""}