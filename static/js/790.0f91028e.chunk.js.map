{"version":3,"file":"static/js/790.0f91028e.chunk.js","mappings":"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","sources":["app/options/LimitAppOption.tsx","app/LimitApp.tsx","app/tools/button/LinkButton.tsx"],"sourcesContent":["import './LimitAppOption.scss'\n\nimport type {CompanionEnumSingleton} from '@joookiwi/enumerable'\nimport {CompanionEnum, Enum}         from '@joookiwi/enumerable'\n\nimport type {AppOption}           from 'app/options/AppOption'\nimport type {Names, Ordinals}     from 'app/options/LimitAppOption.types'\nimport type {SingleHeaderContent} from 'app/tools/table/SimpleHeader'\nimport type {Limit}               from 'core/limit/Limit'\nimport type {Limits}              from 'core/limit/Limits'\n\nimport {CommonOptions}           from 'app/options/CommonOptions'\nimport {COURSE_THEME_IMAGE_FILE} from 'app/options/file/themeImageFiles'\nimport TextComponent             from 'app/tools/text/TextComponent'\nimport Image                     from 'app/tools/images/Image'\nimport {EmptyLimit}              from 'core/limit/EmptyLimit'\nimport {ProjectLanguages}        from 'lang/ProjectLanguages'\nimport {contentTranslation}      from 'lang/components/translationMethods'\nimport NameComponent             from 'lang/name/component/Name.component'\n\nexport abstract class LimitAppOption\n    extends Enum<Ordinals, Names>\n    implements AppOption<Limits> {\n\n    //region -------------------- Enum instances --------------------\n\n    public static readonly ACRONYM = new class LimitAppOption_Acronym extends LimitAppOption {\n\n        protected override _createContentOption({reference: {acronym, alternativeAcronym,},}: Limits,) {\n            return alternativeAcronym == null\n                ? acronym == null\n                    ? null\n                    : <TextComponent content={acronym}/>\n                : <div className=\"acronyms-container d-flex flex-column flex-md-row\">\n                    <TextComponent content={acronym}/>\n                    <div className=\"vertical-separator vr mx-2 d-none d-md-inline-block\"/>\n                    <hr className=\"horizontal-separator my-1 d-block d-md-none\"/>\n                    <TextComponent content={alternativeAcronym}/>\n                </div>\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {key: 'acronym', element: contentTranslation('Acronym(s)'),}\n        }\n\n    }()\n    public static readonly NAME = new class LimitAppOption_Name extends LimitAppOption {\n\n        protected override _createContentOption({reference, isEditorLimit,}: Limits,) {\n            const {alternativeContainer} = reference\n            return alternativeContainer instanceof EmptyLimit\n                ? this.#createNameComponent(reference, isEditorLimit,)\n                : <div className=\"names-container d-flex flex-column flex-md-row\">\n                    {this.#createNameComponent(reference, isEditorLimit,)}\n                    <div className=\"vertical-separator vr mx-3 d-none d-md-inline-block\"/>\n                    <hr className=\"horizontal-separator my-1 d-block d-md-none\"/>\n                    <NameComponent id=\"alternativeName\" name={alternativeContainer} popoverOrientation=\"bottom\"/>\n                </div>\n        }\n\n        #createNameComponent(reference: Limit, isEditorLimit: boolean,): ReactElement {\n            return isEditorLimit\n                ? <div className=\"nameWithImage-container d-flex position-relative\">\n                    <Image file={COURSE_THEME_IMAGE_FILE} className=\"course-theme-image badge bg-transparent position-absolute top-0 start-0\"/>\n                    <NameComponent id=\"name\" name={reference} popoverOrientation=\"bottom\"/>\n                </div>\n                : <NameComponent id=\"name\" name={reference} popoverOrientation=\"bottom\"/>\n        }\n\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return CommonOptions.get.nameHeader\n        }\n\n    }()\n    public static readonly AMOUNT_IN_ALL_GAMES = new class LimitAppOption_Amount extends LimitAppOption {\n\n        protected override _createContentOption(enumeration: Limits,) {\n            const {reference: {limitAmountInSMM1AndSMM3DS, limitAmountInSMM2, isUnknownLimitInSMM2,}, englishName,} = enumeration\n            if (limitAmountInSMM1AndSMM3DS === limitAmountInSMM2)\n                return <TextComponent key={`${englishName} - text component`} content={limitAmountInSMM2} isUnknown={isUnknownLimitInSMM2}/>\n\n            return <span key={`Amount in all games (${englishName})`} className=\"space-pre\">\n                {LimitAppOption.AMOUNT_IN_SMM1_AND_SMM3DS.renderContent(enumeration,)}\n                {ProjectLanguages.current.space}{ProjectLanguages.current.slash}{ProjectLanguages.current.space}\n                {LimitAppOption.AMOUNT_IN_SMM2.renderContent(enumeration,)}\n            </span>\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return CommonOptions.get.limitHeader\n        }\n    }()\n    public static readonly AMOUNT_IN_SMM1_AND_SMM3DS = new class LimitAppOption_AmountInSMM1AndSMM3DS extends LimitAppOption {\n\n        protected override _createContentOption({reference, englishName,}: Limits,) {\n            return <TextComponent key={`${englishName} - text component (amount SMM1&3DS)`} content={reference.limitAmountInSMM1AndSMM3DS} isUnknown={reference.isUnknownLimitInSMM1AndSMM3DS}/>\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return CommonOptions.get.limitHeader\n        }\n\n    }()\n    public static readonly AMOUNT_IN_SMM2 = new class LimitAppOption_AmountInSMM2 extends LimitAppOption {\n\n        protected override _createContentOption({reference, englishName,}: Limits,) {\n            return <TextComponent key={`${englishName} - text component (amount SMM2)`} content={reference.limitAmountInSMM2} isUnknown={reference.isUnknownLimitInSMM2}/>\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return CommonOptions.get.limitHeader\n        }\n\n    }()\n\n    //endregion -------------------- Enum instances --------------------\n    //region -------------------- Companion enum --------------------\n\n    public static readonly CompanionEnum: CompanionEnumSingleton<LimitAppOption, typeof LimitAppOption> = class CompanionEnum_LimitAppOption\n        extends CompanionEnum<LimitAppOption, typeof LimitAppOption> {\n\n        //region -------------------- Singleton usage --------------------\n\n        static #instance?: CompanionEnum_LimitAppOption\n\n        private constructor() {\n            super(LimitAppOption,)\n        }\n\n        public static get get() {\n            return this.#instance ??= new CompanionEnum_LimitAppOption()\n        }\n\n        //endregion -------------------- Singleton usage --------------------\n\n    }\n\n    //endregion -------------------- Companion enum --------------------\n    //region -------------------- Fields --------------------\n    //endregion -------------------- Fields --------------------\n    //region -------------------- Constructor --------------------\n\n    private constructor() {\n        super()\n    }\n\n    //endregion -------------------- Constructor --------------------\n    //region -------------------- Getter methods --------------------\n    //endregion -------------------- Getter methods --------------------\n    //region -------------------- Methods --------------------\n\n    //region -------------------- App option - content --------------------\n\n    protected abstract _createContentOption(enumeration: Limits,): ReactElement\n\n    public renderContent(enumeration: Limits,): readonly [ReactElement,] {\n        return [this._createContentOption(enumeration,),]\n    }\n\n    //endregion -------------------- App option - content --------------------\n    //region -------------------- App option - table --------------------\n\n    protected abstract _createTableHeaderOption(): SingleHeaderContent\n\n    public renderTableHeader(): SingleHeaderContent {\n        return this._createTableHeaderOption()\n    }\n\n    //endregion -------------------- App option - table --------------------\n\n    //endregion -------------------- Methods --------------------\n\n}\n","import './LimitApp.scss'\n\nimport type {LimitAppProperties}      from 'app/AppProperties.types'\nimport type {AppInterpreterWithTable} from 'app/interpreter/AppInterpreterWithTable'\nimport type {DimensionOnList}         from 'app/interpreter/DimensionOnList'\nimport type {LimitTypes}              from 'app/property/LimitTypes'\nimport type {ViewAndRouteName}        from 'app/withInterpreter/DisplayButtonGroup.properties'\nimport type {ClassWithType}           from 'core/ClassWithType'\nimport type {Limits}                  from 'core/limit/Limits'\nimport type {GameCollection}          from 'util/collection/GameCollection'\nimport type {ReactProperties}         from 'util/react/ReactProperties'\n\nimport SubMainContainer                             from 'app/_SubMainContainer'\nimport {LimitAppOption}                             from 'app/options/LimitAppOption'\nimport {COURSE_THEME_IMAGE_FILE}                    from 'app/options/file/themeImageFiles'\nimport LinkButton                                   from 'app/tools/button/LinkButton'\nimport Image                                        from 'app/tools/images/Image'\nimport Table                                        from 'app/tools/table/Table'\nimport CardList                                     from 'app/withInterpreter/CardList'\nimport SimpleList                                   from 'app/withInterpreter/SimpleList'\nimport {ViewDisplays}                               from 'app/withInterpreter/ViewDisplays'\nimport {contentTranslation, gameContentTranslation} from 'lang/components/translationMethods'\nimport {filterGame}                                 from 'util/utilitiesMethods'\n\nclass LimitAppInterpreter\n    implements AppInterpreterWithTable<Limits, LimitAppOption>,\n        ClassWithType<LimitTypes> {\n\n    //region -------------------- Fields --------------------\n\n    readonly #type\n    readonly #games\n\n    //endregion -------------------- Fields --------------------\n    //region -------------------- Constructor --------------------\n\n    public constructor(type: LimitTypes, games: GameCollection,) {\n        this.#type = type\n        this.#games = games\n    }\n\n    //endregion -------------------- Constructor --------------------\n\n    public get type(): LimitTypes {\n        return this.#type\n    }\n\n    public get content() {\n        return filterGame(this.type.content, this.#games,)\n    }\n\n    //region -------------------- List interpreter --------------------\n\n    public createListDimension(): DimensionOnList {\n        return {\n            default: 1,\n            small: 2,\n            medium: 4,\n            large: 5,\n            extraLarge: 6,\n        }\n    }\n\n    //endregion -------------------- List interpreter --------------------\n    //region -------------------- Card list interpreter --------------------\n\n    public createCardListDimension() {\n        return this.createListDimension()\n    }\n\n    public createCardListContent(enumeration: Limits,) {\n        if (enumeration.isEditorLimit)\n            return <div className=\"card-bodyWithEditor-container\">\n                <Image file={COURSE_THEME_IMAGE_FILE} className=\"course-theme-image position-absolute start-0 bottom-0\"/>\n                <div className=\"card-body\" id={`limit-${enumeration.englishNameInHtml}`}>\n                    {LimitAppOption.AMOUNT_IN_ALL_GAMES.renderContent(enumeration,)}\n                </div>\n            </div>\n        return <div className=\"card-body\" id={`limit-${enumeration.englishNameInHtml}`}>\n            {LimitAppOption.AMOUNT_IN_ALL_GAMES.renderContent(enumeration,)}\n        </div>\n    }\n\n    //endregion -------------------- Card list interpreter --------------------\n    //region -------------------- Table interpreter --------------------\n\n    public readonly tableHeadersColor = 'info' satisfies BootstrapThemeColor\n    public readonly tableColor = 'primary' satisfies BootstrapThemeColor\n\n    public get tableCaption() {\n        return gameContentTranslation(`limit.${this.type.type}.all`,) satisfies ReactElementOrString\n    }\n\n    public get tableOptions(): readonly LimitAppOption[] {\n        const games = this.#games\n        const hasSMM1Or3DSGames = games.hasSMM1Or3DS\n        const hasSMM2Games = games.hasSMM2\n\n        const options: LimitAppOption[] = [\n            LimitAppOption.ACRONYM,\n            LimitAppOption.NAME,\n        ]\n        if (hasSMM1Or3DSGames && hasSMM2Games)\n            options.push(LimitAppOption.AMOUNT_IN_ALL_GAMES,)\n        else {\n            if (hasSMM1Or3DSGames)\n                options.push(LimitAppOption.AMOUNT_IN_SMM1_AND_SMM3DS,)\n            if (hasSMM2Games)\n                options.push(LimitAppOption.AMOUNT_IN_SMM2,)\n        }\n        return options\n    }\n\n\n    public createTableContent(content: Limits, option: LimitAppOption,) {\n        return option.renderContent(content,)\n    }\n\n    public createTableHeader(option: LimitAppOption,) {\n        return option.renderTableHeader()\n    }\n\n    //endregion -------------------- Table interpreter --------------------\n\n}\n\n/** @reactComponent */\nexport default function LimitApp({viewDisplay, type, games,}: LimitAppProperties,) {\n    const routeName = type.routeName\n    const viewDisplayAndRouteName = [\n        [ViewDisplays.SIMPLE_LIST, `${routeName} (list)`,],\n        [ViewDisplays.CARD_LIST, `${routeName} (card)`,],\n        [ViewDisplays.TABLE, `${routeName} (table)`,],\n    ] as const satisfies readonly ViewAndRouteName[]\n    const titleContent = gameContentTranslation(`limit.${type.type}.all`,)\n    const appInterpreter = new LimitAppInterpreter(type, games,)\n\n    if (viewDisplay === ViewDisplays.SIMPLE_LIST)\n        return <SubMainContainer reactKey=\"limit\" viewDisplayAndRouteName={viewDisplayAndRouteName} viewDisplay={viewDisplay} titleContent={titleContent}\n                                 asideContent={<LimitAsideContent viewDisplay={viewDisplay} type={type}/>}>\n            <SimpleList reactKey=\"limit\" interpreter={appInterpreter}/>\n        </SubMainContainer>\n    if (viewDisplay === ViewDisplays.CARD_LIST)\n        return <SubMainContainer reactKey=\"limit\" viewDisplayAndRouteName={viewDisplayAndRouteName} viewDisplay={viewDisplay} titleContent={titleContent}\n                                 asideContent={<LimitAsideContent viewDisplay={viewDisplay} type={type}/>}>\n            <CardList reactKey=\"limit\" interpreter={appInterpreter}/>\n        </SubMainContainer>\n    return <SubMainContainer reactKey=\"limit\" viewDisplayAndRouteName={viewDisplayAndRouteName} viewDisplay={viewDisplay} titleContent={titleContent}\n                             asideContent={<LimitAsideContent viewDisplay={viewDisplay} type={type}/>}>\n        <Table id=\"limit-table\" interpreter={appInterpreter}/>\n    </SubMainContainer>\n}\n\n\ninterface LimitAsideContentProperties\n    extends ReactProperties {\n\n    readonly viewDisplay: ViewDisplays\n\n    readonly type: LimitTypes\n\n}\n\n/** @reactComponent */\nfunction LimitAsideContent({viewDisplay, type,}: LimitAsideContentProperties,) {\n    return <div id=\"limit-linkButton-container\" className=\"btn-group btn-group-vertical btn-group-sm\">\n        <LinkButton partialId=\"allLimit\" routeName={viewDisplay.getRoutePath(type.allRouteName)} color={type.allColor}>{contentTranslation('All',)}</LinkButton>\n        <div id=\"limit-linkButton-playAndEditor-container\" className=\"btn-group btn-group-sm\">\n            <LinkButton partialId=\"playLimit\" routeName={viewDisplay.getRoutePath(type.playRouteName)} color={type.playColor}>{gameContentTranslation('limit.play.simple',)}</LinkButton>\n            <LinkButton partialId=\"editorLimit\" routeName={viewDisplay.getRoutePath(type.editorRouteName)} color={type.editorColor}>{gameContentTranslation('limit.editor.simple',)}</LinkButton>\n        </div>\n    </div>\n}\n","import {Link} from 'react-router-dom'\n\nimport type {PossibleRouteName}                            from 'route/EveryRoutes.types'\nimport type {ReactProperties, ReactPropertiesWithChildren} from 'util/react/ReactProperties'\n\nimport {routeFromName} from 'route/route'\n\ninterface LinkButtonsProperties\n    extends ReactProperties {\n\n    readonly partialId: string\n\n    readonly routeName: Nullable<PossibleRouteName>\n\n    readonly color: BootstrapColor\n\n}\n\n/**\n * Create a {@link Link} button or a simple disabled button (if the {@link LinkButtonsProperties.routeName route name} is <b>null</b>)\n *\n * @reactComponent\n */\nexport default function LinkButton({partialId, routeName, color, children,}: ReactPropertiesWithChildren<LinkButtonsProperties, ReactElementOrString>,) {\n    const id = `${partialId}-button`\n    const className = `btn btn-${color} link-button`\n\n    if (routeName == null)\n        return <button type=\"button\" id={id} className={className} disabled>{children}</button>\n    return <Link type=\"button\" id={id} className={className} to={routeFromName(routeName,)}>{children}</Link>\n}\n"],"names":["LimitAppOption","Enum","constructor","super","renderContent","enumeration","this","_createContentOption","renderTableHeader","_createTableHeaderOption","_createNameComponent2","reference","isEditorLimit","_jsxs","className","children","_jsx","Image","file","COURSE_THEME_IMAGE_FILE","NameComponent","id","name","popoverOrientation","_LimitAppOption","ACRONYM","_ref","acronym","alternativeAcronym","TextComponent","content","key","element","contentTranslation","NAME","_createNameComponent","_classPrivateFieldLooseKey","arguments","Object","defineProperty","value","_ref2","alternativeContainer","EmptyLimit","_classPrivateFieldLooseBase","CommonOptions","get","nameHeader","AMOUNT_IN_ALL_GAMES","limitAmountInSMM1AndSMM3DS","limitAmountInSMM2","isUnknownLimitInSMM2","englishName","isUnknown","concat","AMOUNT_IN_SMM1_AND_SMM3DS","ProjectLanguages","current","space","slash","AMOUNT_IN_SMM2","limitHeader","_ref3","isUnknownLimitInSMM1AndSMM3DS","_ref4","CompanionEnum","_instance","_CompanionEnum_LimitAppOption","CompanionEnum_LimitAppOption","_classPrivateFieldLoo","_classPrivateFieldLoo2","writable","_type","_games","LimitAppInterpreter","type","games","tableHeadersColor","tableColor","filterGame","createListDimension","default","small","medium","large","extraLarge","createCardListDimension","createCardListContent","englishNameInHtml","tableCaption","gameContentTranslation","tableOptions","hasSMM1Or3DSGames","hasSMM1Or3DS","hasSMM2Games","hasSMM2","options","push","createTableContent","option","createTableHeader","LimitApp","viewDisplay","routeName","viewDisplayAndRouteName","ViewDisplays","SIMPLE_LIST","CARD_LIST","TABLE","titleContent","appInterpreter","SubMainContainer","reactKey","asideContent","LimitAsideContent","SimpleList","interpreter","CardList","Table","LinkButton","partialId","getRoutePath","allRouteName","color","allColor","playRouteName","playColor","editorRouteName","editorColor","disabled","Link","to","routeFromName"],"sourceRoot":""}