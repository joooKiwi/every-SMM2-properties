{"version":3,"file":"static/js/875.124133f9.chunk.js","mappings":"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","sources":["app/options/MiiCostumeAppOption.tsx","app/MiiCostumeApp.tsx"],"sourcesContent":["import type {CompanionEnumSingleton} from '@joookiwi/enumerable'\nimport {CompanionEnum, Enum}         from '@joookiwi/enumerable'\n\nimport type {AppOption}           from 'app/options/AppOption'\nimport type {Names, Ordinals}     from 'app/options/MiiCostumeAppOption.types'\nimport type {SingleHeaderContent} from 'app/tools/table/SimpleHeader'\nimport type {MiiCostumes}         from 'core/miiCostume/MiiCostumes'\n\nimport {CommonOptions}        from 'app/options/CommonOptions'\nimport Image                  from 'app/tools/images/Image'\nimport {MiiCostumeCategories} from 'core/miiCostumeCategory/MiiCostumeCategories'\nimport {contentTranslation}   from 'lang/components/translationMethods'\n\n/**\n * @todo convert the \"_createTableHeaderOption\" to have the enumerable as an argument and to be non-null\n * @todo Change CATEGORY to use {IMAGE, TEXT or NONE} instead of 2 different options.\n */\nexport abstract class MiiCostumeAppOption\n    extends Enum<Ordinals, Names>\n    implements AppOption<MiiCostumes> {\n\n    //region -------------------- Enum instances --------------------\n\n    public static readonly IMAGE =                 new class MiiCostumeAppOption_Image extends MiiCostumeAppOption {\n\n        protected override _createContentOption(enumeration: MiiCostumes,) {\n            return <Image file={enumeration.imageFile}/>\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {key: 'image', element: contentTranslation('Image'),}\n        }\n\n    }()\n    public static readonly NAME =                  new class MiiCostumeAppOption_Name extends MiiCostumeAppOption {\n\n        protected override _createContentOption(enumeration: MiiCostumes,) {\n            return CommonOptions.get.getNameContent(enumeration,)\n        }\n\n        protected override _createTableHeaderOption() {\n            return CommonOptions.get.nameHeader\n        }\n\n    }()\n    public static readonly OFFICIAL_NOTIFICATION = new class MiiCostumeAppOption_ConditionToUnlockIt extends MiiCostumeAppOption {\n\n        protected override _createContentOption(enumeration: MiiCostumes,) {\n            const miiCostume = enumeration.reference\n            return miiCostume.officialNotification?.createSimpleTranslationComponent(miiCostume.english, miiCostume.officialNotificationAmount,)\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            //TODO add new translation to the header value.\n            return {key: 'officialNotification', element: '--Official notification--',}\n        }\n\n    }()\n\n    public static readonly CATEGORY =              new class MiiCostumeAppOption_Category extends MiiCostumeAppOption {\n\n        protected override _createContentOption(enumeration: MiiCostumes,) {\n            const categoryName = enumeration.reference.categoryContainer.nameContainer\n            return CommonOptions.get.getCategoryContent(enumeration, () => MiiCostumeCategories.CompanionEnum.get.getValueByName(categoryName.english,).imageFile,)\n        }\n\n        protected override _createTableHeaderOption() {\n            return CommonOptions.get.categoryHeader\n        }\n\n    }()\n    /**\n     * Tell whenever a {@link MiiCostumeAppOption.CATEGORY category} is displayed\n     * as a text (<i>true</i>) or an image (<i>false</i>).\n     */\n    public static readonly CATEGORY_AS_TEXT =      new class MiiCostumeAppOption_CategoryAsText extends MiiCostumeAppOption {}()\n\n    //endregion -------------------- Enum instances --------------------\n    //region -------------------- Companion enum --------------------\n\n    public static readonly CompanionEnum: CompanionEnumSingleton<MiiCostumeAppOption, typeof MiiCostumeAppOption> = class CompanionEnum_MiiCostumeAppOption\n        extends CompanionEnum<MiiCostumeAppOption, typeof MiiCostumeAppOption> {\n\n        //region -------------------- Singleton usage --------------------\n\n        static #instance?: CompanionEnum_MiiCostumeAppOption\n\n        private constructor() {\n            super(MiiCostumeAppOption,)\n        }\n\n        public static get get() {\n            return this.#instance ??= new CompanionEnum_MiiCostumeAppOption()\n        }\n\n        //endregion -------------------- Singleton usage --------------------\n\n    }\n\n    //endregion -------------------- Companion enum --------------------\n    //region -------------------- Fields --------------------\n    //endregion -------------------- Fields --------------------\n    //region -------------------- Constructor --------------------\n\n    private constructor() {\n        super()\n    }\n\n    //endregion -------------------- Constructor --------------------\n    //region -------------------- Getter methods --------------------\n    //endregion -------------------- Getter methods --------------------\n    //region -------------------- Methods --------------------\n\n    //region -------------------- App option - content --------------------\n\n    protected _createContentOption(enumeration: MiiCostumes,): ReactElement {\n        throw new ReferenceError(`The MiiCostumeAppOption.${this.name} cannot create a content option`,)\n    }\n\n    public renderContent(enumeration: MiiCostumes,): readonly [ReactElement,] {\n        return [this._createContentOption(enumeration,),]\n    }\n\n    //endregion -------------------- App option - content --------------------\n    //region -------------------- App option - table --------------------\n\n    protected _createTableHeaderOption(): NullOr<SingleHeaderContent> {\n        throw new ReferenceError(`The MiiCostumeAppOption.${this.name} cannot create a table header option`,)\n    }\n\n    public renderTableHeader(): NullOr<SingleHeaderContent> {\n        const content = this._createTableHeaderOption()\n        if (content == null)\n            return null\n        return content\n    }\n\n    //endregion -------------------- App option - table --------------------\n\n    //endregion -------------------- Methods --------------------\n\n}\n","import './MiiCostumeApp.scss'\n\nimport type {AppInterpreterWithTable}                              from 'app/interpreter/AppInterpreterWithTable'\nimport type {PossibleDimensionOnCardList, PossibleDimensionOnList} from 'app/interpreter/DimensionOnList'\nimport type {PossibleRouteName}                                    from 'route/EveryRoutes.types'\n\nimport {MiiCostumeAppOption}    from 'app/options/MiiCostumeAppOption'\nimport Image                    from 'app/tools/images/Image'\nimport TextComponent            from 'app/tools/text/TextComponent'\nimport {unfinishedText}         from 'app/tools/text/UnfinishedText'\nimport {AbstractTableApp}       from 'app/withInterpreter/AbstractTableApp'\nimport {MiiCostumes}            from 'core/miiCostume/MiiCostumes'\nimport {OtherWordInTheGames}    from 'core/otherWordInTheGame/OtherWordInTheGames'\nimport {gameContentTranslation} from 'lang/components/translationMethods'\n\n//region -------------------- Import from deconstruction --------------------\n\nconst {MII_COSTUME,} = OtherWordInTheGames\n\n//endregion -------------------- Import from deconstruction --------------------\n\nexport default class MiiCostumeApp\n    extends AbstractTableApp<AppInterpreterWithTable<MiiCostumes, MiiCostumeAppOption>> {\n\n    //region -------------------- Create methods --------------------\n\n    protected override _createKey() {\n        return 'miiCostume'\n    }\n\n\n    protected override _createSimpleListRouteName(): PossibleRouteName {\n        return 'everyMiiCostume (list)'\n    }\n\n    protected override _createCardListRouteName(): PossibleRouteName {\n        return 'everyMiiCostume (card)'\n    }\n\n    protected override _createTableRouteName(): PossibleRouteName {\n        return 'everyMiiCostume (table)'\n    }\n\n\n    protected override _createTitleContent(): ReactElementOrString {\n        return gameContentTranslation('mii costume.all', {\n            singularName: MII_COSTUME.singularLowerCaseNameOnReferenceOrNull ?? unfinishedText(MII_COSTUME.singularEnglishName),\n            pluralName: MII_COSTUME.pluralLowerCaseNameOnReferenceOrNull ?? unfinishedText(MII_COSTUME.pluralEnglishName),\n        },)\n    }\n\n    protected override _createAppOptionInterpreter() {\n        return new class MiiCostumeAppInterpreter implements AppInterpreterWithTable<MiiCostumes, MiiCostumeAppOption> {\n\n            public get content() {\n                return MiiCostumes.CompanionEnum.get.values.toArray()\n            }\n\n            //region -------------------- List interpreter --------------------\n\n            public createListDimension(): PossibleDimensionOnList {\n                return {\n                    small: 6,\n                    medium: 4,\n                    large: 3,\n                    extraExtraLarge: 2,\n                }\n            }\n\n            //endregion -------------------- List interpreter --------------------\n            //region -------------------- Card list interpreter --------------------\n\n            public createCardListDimension(): PossibleDimensionOnCardList {\n                return 'list'\n            }\n\n            public createCardListContent({reference, imageFile,}: MiiCostumes,) {\n                const category = reference.categoryEnglish === '' ? '' : `entityCategory-${reference.categoryEnglish}`//TODO move to the parent container className.\n                return <div className={`${category}`}>\n                    <Image file={imageFile}/>\n                </div>\n            }\n\n            //endregion -------------------- Card list interpreter --------------------\n            //region -------------------- Table interpreter --------------------\n\n            public readonly tableHeadersColor = 'info' satisfies BootstrapThemeColor\n            public readonly tableColor = 'primary' satisfies BootstrapThemeColor\n            public readonly tableCaption = gameContentTranslation('mii costume.all', {\n                singularName: <TextComponent key=\"miiCostume-singularName\" content={MII_COSTUME.singularLowerCaseNameOnReferenceOrNull ?? unfinishedText(MII_COSTUME.singularEnglishName)} className=\"text-decoration-underline\"/>,\n                pluralName: <TextComponent key=\"miiCostume-pluralName\" content={MII_COSTUME.pluralLowerCaseNameOnReferenceOrNull ?? unfinishedText(MII_COSTUME.pluralEnglishName)} className=\"text-decoration-underline\"/>,\n            },) satisfies ReactElementOrString\n\n            public get tableOptions(): readonly MiiCostumeAppOption[] {\n                return [\n                    MiiCostumeAppOption.IMAGE,\n                    MiiCostumeAppOption.NAME,\n                    MiiCostumeAppOption.OFFICIAL_NOTIFICATION,\n                    MiiCostumeAppOption.CATEGORY,\n                ]\n            }\n\n\n            public createNewTableContent(content: MiiCostumes, option: MiiCostumeAppOption,) {\n                return option.renderContent(content,)\n            }\n\n            public createTableHeader(option: MiiCostumeAppOption,) {\n                return option.renderTableHeader()\n            }\n\n            //endregion -------------------- Table interpreter --------------------\n\n        }()\n    }\n\n    //endregion -------------------- Create methods --------------------\n\n}\n"],"names":["MiiCostumeAppOption","_ref","_inherits","_super","_createSuper","_classCallCheck","call","_createClass","key","value","enumeration","ReferenceError","concat","this","name","_createContentOption","content","_createTableHeaderOption","Enum","IMAGE","_MiiCostumeAppOption","MiiCostumeAppOption_Image","_super2","apply","arguments","_jsx","Image","file","imageFile","element","contentTranslation","NAME","_MiiCostumeAppOption2","MiiCostumeAppOption_Name","_super3","CommonOptions","get","getNameContent","nameHeader","OFFICIAL_NOTIFICATION","_MiiCostumeAppOption3","MiiCostumeAppOption_ConditionToUnlockIt","_super4","_miiCostume$officialN","miiCostume","reference","officialNotification","createSimpleTranslationComponent","english","officialNotificationAmount","CATEGORY","_MiiCostumeAppOption4","MiiCostumeAppOption_Category","_super5","categoryName","categoryContainer","nameContainer","getCategoryContent","MiiCostumeCategories","CompanionEnum","getValueByName","categoryHeader","CATEGORY_AS_TEXT","_MiiCostumeAppOption5","MiiCostumeAppOption_CategoryAsText","_super6","_instance","_classPrivateFieldLooseKey","_class","_CompanionEnum","CompanionEnum_MiiCostumeAppOption","_super7","_classPrivateFieldLoo","_classPrivateFieldLoo2","_classPrivateFieldLooseBase","Object","defineProperty","writable","MII_COSTUME","OtherWordInTheGames","MiiCostumeApp","_AbstractTableApp","_MII_COSTUME$singular","_MII_COSTUME$pluralLo","gameContentTranslation","singularName","singularLowerCaseNameOnReferenceOrNull","unfinishedText","singularEnglishName","pluralName","pluralLowerCaseNameOnReferenceOrNull","pluralEnglishName","MiiCostumeAppInterpreter","_MII_COSTUME$singular2","_MII_COSTUME$pluralLo2","tableHeadersColor","tableColor","tableCaption","TextComponent","className","MiiCostumes","values","toArray","small","medium","large","extraExtraLarge","category","categoryEnglish","children","option","renderContent","renderTableHeader","AbstractTableApp"],"sourceRoot":""}