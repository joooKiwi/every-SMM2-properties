{"version":3,"file":"static/js/531.265b77b9.chunk.js","mappings":"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","sources":["app/options/GameStyleAppOption.tsx","app/GameStyleApp.tsx","core/nightEffect/NightEffect.component.tsx"],"sourcesContent":["import type {CompanionEnumSingleton} from '@joookiwi/enumerable'\nimport {CompanionEnum, Enum}         from '@joookiwi/enumerable'\n\nimport type {AppOption}           from 'app/options/AppOption'\nimport type {Names, Ordinals}     from 'app/options/GameStyleAppOption.types'\nimport type {SingleHeaderContent} from 'app/tools/table/SimpleHeader'\nimport type {GameStyles}          from 'core/gameStyle/GameStyles'\n\nimport {CommonOptions}          from 'app/options/CommonOptions'\nimport {unfinishedText}         from 'app/tools/text/UnfinishedText'\nimport NightEffectComponent     from 'core/nightEffect/NightEffect.component'\nimport {Themes}                 from 'core/theme/Themes'\nimport {Times}                  from 'core/time/Times'\nimport {ProjectLanguages}       from 'lang/ProjectLanguages'\nimport {gameContentTranslation} from 'lang/components/translationMethods'\n\nexport abstract class GameStyleAppOption\n    extends Enum<Ordinals, Names>\n    implements AppOption<GameStyles> {\n\n    //region -------------------- Enum instances --------------------\n\n    public static readonly ICON =             new class GameStyleAppOption_Images extends GameStyleAppOption {\n\n        protected override _createContentOption(enumeration: GameStyles,) {\n            return enumeration.renderSingleComponent\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {key: 'icon', element: unfinishedText('Icon'),}\n        }\n\n    }()\n    public static readonly NAME =              new class GameStyleAppOption_Name extends GameStyleAppOption {\n\n        protected override _createContentOption(enumeration: GameStyles,) {\n            return CommonOptions.get.getNameContent(enumeration)\n        }\n\n        protected override _createTableHeaderOption() {\n            return CommonOptions.get.nameHeader\n        }\n\n    }()\n    public static readonly NIGHT_DESERT_WIND = new class GameStyleAppOption_NightDesertWind extends GameStyleAppOption {\n\n        protected override _createContentOption({reference,}: GameStyles,) {\n            return <NightEffectComponent gameStyle={reference}/>\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {\n                key: 'nightDesertWind',\n                element: <div className=\"night-desert-wind-effect-container\">{Themes.DESERT.renderSingleComponent(false)}{Times.NIGHT.renderSingleComponent}</div>,\n                tooltip: gameContentTranslation('Wind effect (night desert)', {\n                    night: unfinishedText('night'),//TODO add night reference\n                    desert: ProjectLanguages.current.get(Themes.DESERT.reference)!.toLowerCase(),\n                },),\n            }\n        }\n\n    }()\n\n    //endregion -------------------- Enum instances --------------------\n    //region -------------------- Companion enum --------------------\n\n    public static readonly CompanionEnum: CompanionEnumSingleton<GameStyleAppOption, typeof GameStyleAppOption> = class CompanionEnum_GameStyleAppOption\n        extends CompanionEnum<GameStyleAppOption, typeof GameStyleAppOption> {\n\n        //region -------------------- Singleton usage --------------------\n\n        static #instance?: CompanionEnum_GameStyleAppOption\n\n        private constructor() {\n            super(GameStyleAppOption,)\n        }\n\n        public static get get() {\n            return this.#instance ??= new CompanionEnum_GameStyleAppOption()\n        }\n\n        //endregion -------------------- Singleton usage --------------------\n\n    }\n\n    //endregion -------------------- Companion enum --------------------\n    //region -------------------- Fields --------------------\n    //endregion -------------------- Fields --------------------\n    //region -------------------- Constructor --------------------\n\n    private constructor() {\n        super()\n    }\n\n    //endregion -------------------- Constructor --------------------\n    //region -------------------- Getter methods --------------------\n    //endregion -------------------- Getter methods --------------------\n    //region -------------------- Methods --------------------\n\n    //region -------------------- App option - content --------------------\n\n    protected abstract _createContentOption(enumeration: GameStyles,): ReactElement\n\n    public renderContent(enumeration: GameStyles,): readonly [ReactElement,] {\n        return [this._createContentOption(enumeration,),]\n    }\n\n    //endregion -------------------- App option - content --------------------\n    //region -------------------- App option - table --------------------\n\n    protected abstract _createTableHeaderOption(): SingleHeaderContent\n\n    public renderTableHeader(): SingleHeaderContent {\n        return this._createTableHeaderOption()\n    }\n\n    //endregion -------------------- App option - table --------------------\n\n    //endregion -------------------- Methods --------------------\n\n}\n","import './GameStyleApp.scss'\n\nimport type {GameStyleProperties}     from 'app/AppProperties.types'\nimport type {AppInterpreterWithTable} from 'app/interpreter/AppInterpreterWithTable'\nimport type {DimensionOnList}         from 'app/interpreter/DimensionOnList'\nimport type {PossibleRouteName}       from 'route/EveryRoutes.types'\n\nimport {GameStyleAppOption}     from 'app/options/GameStyleAppOption'\nimport {AbstractTableApp}       from 'app/withInterpreter/AbstractTableApp'\nimport {GameStyles}             from 'core/gameStyle/GameStyles'\nimport {gameContentTranslation} from 'lang/components/translationMethods'\nimport {filterGame}             from 'util/utilitiesMethods'\n\nexport default class GameStyleApp\n    extends AbstractTableApp<GameStyles, AppInterpreterWithTable<GameStyles, GameStyleAppOption>, GameStyleProperties> {\n\n    //region -------------------- Create methods --------------------\n\n    protected override _createKey(): string {\n        return 'gameStyle'\n    }\n\n\n    protected override _createSimpleListRouteName(): PossibleRouteName {\n        return 'everyGameStyle (list)'\n    }\n\n    protected override _createCardListRouteName(): PossibleRouteName {\n        return 'everyGameStyle (card)'\n    }\n\n    protected override _createTableRouteName(): PossibleRouteName {\n        return 'everyGameStyle (table)'\n    }\n\n\n    protected override _createTitleContent(): ReactElementOrString {\n        return gameContentTranslation('game style.all')\n    }\n\n    protected override _createAppOptionInterpreter() {\n        const $this = this\n\n        return new class GameStyleAppInterpreter implements AppInterpreterWithTable<GameStyles, GameStyleAppOption> {\n\n            public get content() {\n                return filterGame(GameStyles.CompanionEnum.get.values, $this.props.games,)\n            }\n\n            //region -------------------- List interpreter --------------------\n\n            public createListDimension(): DimensionOnList {\n                return {\n                    default: 1,\n                    small: 2,\n                    medium: 3,\n                    extraLarge: 5,\n                }\n            }\n\n            //endregion -------------------- List interpreter --------------------\n            //region -------------------- Card list interpreter --------------------\n\n            public createCardListDimension() {\n                return this.createListDimension()\n            }\n\n            public createCardListContent(enumerable: GameStyles,) {\n                return <div className=\"card-body\" id={`gameStyle-${enumerable.englishNameInHtml}`}>\n                    {enumerable.renderSingleComponent}\n                </div>\n            }\n\n            //endregion -------------------- Card list interpreter --------------------\n            //region -------------------- Table interpreter --------------------\n\n            public readonly tableHeadersColor = 'info' satisfies BootstrapThemeColor\n            public readonly tableColor = 'primary' satisfies BootstrapThemeColor\n            public readonly tableCaption = gameContentTranslation('game style.all') satisfies ReactElementOrString\n\n            public get tableOptions(): readonly GameStyleAppOption[] {\n                return [\n                    GameStyleAppOption.ICON,\n                    GameStyleAppOption.NAME,\n                    GameStyleAppOption.NIGHT_DESERT_WIND,\n                ]\n            }\n\n            public createTableContent(content: GameStyles, option: GameStyleAppOption,) {\n                return option.renderContent(content,)\n            }\n\n            public createTableHeader(option: GameStyleAppOption,) {\n                return option.renderTableHeader()\n            }\n\n            //endregion -------------------- Table interpreter --------------------\n\n        }()\n    }\n\n    //endregion -------------------- Create methods --------------------\n\n}\n","import type {GameStyle}       from 'core/gameStyle/GameStyle'\nimport type {CourseTheme}     from 'core/theme/CourseTheme'\nimport type {ReactProperties} from 'util/react/ReactProperties'\n\nimport {gameContentTranslation} from 'lang/components/translationMethods'\n\ninterface NightEffectComponentProperties_GameStyle\n    extends ReactProperties {\n\n    gameStyle: GameStyle\n\n}\n\ninterface NightEffectComponentProperties_Theme\n    extends ReactProperties {\n\n    theme: CourseTheme\n\n}\n\n/**\n * @param properties\n * @reactComponent\n */\nexport default function NightEffectComponent(properties: | NightEffectComponentProperties_GameStyle | NightEffectComponentProperties_Theme,) {\n    return 'gameStyle' in properties\n        ? <NightEffectByGameStyle {...properties}/>\n        : <NightEffectByTheme {...properties}/>\n}\n\nfunction NightEffectByGameStyle({gameStyle: {nightDesertWindTranslationKey: translationKey,},}: NightEffectComponentProperties_GameStyle,) {\n    return translationKey == null ? null : <>{gameContentTranslation(`nightEffect.nightDesertWindEffect.${translationKey}`)}</>\n}\n\nfunction NightEffectByTheme({theme: {effect,},}: NightEffectComponentProperties_Theme,) {\n    return effect?.createNewComponent ?? null\n}\n"],"names":["GameStyleAppOption","Enum","constructor","super","renderContent","enumeration","this","_createContentOption","renderTableHeader","_createTableHeaderOption","ICON","renderSingleComponent","key","element","unfinishedText","NAME","CommonOptions","get","getNameContent","nameHeader","NIGHT_DESERT_WIND","_ref","reference","_jsx","NightEffectComponent","gameStyle","_jsxs","className","children","Themes","DESERT","Times","NIGHT","tooltip","gameContentTranslation","night","desert","ProjectLanguages","current","toLowerCase","CompanionEnum","_instance","_classPrivateFieldLooseKey","_class","CompanionEnum_GameStyleAppOption","_classPrivateFieldLoo","_classPrivateFieldLoo2","_classPrivateFieldLooseBase","Object","defineProperty","writable","value","GameStyleApp","AbstractTableApp","_createKey","_createSimpleListRouteName","_createCardListRouteName","_createTableRouteName","_createTitleContent","_createAppOptionInterpreter","$this","tableHeadersColor","tableColor","tableCaption","content","filterGame","GameStyles","values","props","games","createListDimension","default","small","medium","extraLarge","createCardListDimension","createCardListContent","enumerable","id","concat","englishNameInHtml","tableOptions","createTableContent","option","createTableHeader","properties","NightEffectByGameStyle","NightEffectByTheme","nightDesertWindTranslationKey","translationKey","_Fragment","_ref2","_effect$createNewComp","theme","effect","createNewComponent"],"sourceRoot":""}