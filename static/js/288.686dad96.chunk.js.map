{"version":3,"file":"static/js/288.686dad96.chunk.js","mappings":"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","sources":["app/options/GameStyleAppOption.tsx","app/GameStyleApp.tsx","core/nightEffect/NightEffect.component.tsx"],"sourcesContent":["import type {BasicCompanionEnumDeclaration, CollectionHolder, PossibleEnumerableValueBy, Singleton} from '@joookiwi/enumerable/dist/types'\nimport {BasicCompanionEnum, Enum}                                                                   from '@joookiwi/enumerable'\n\nimport type {Names, Ordinals}                                  from 'app/options/GameStyleAppOption.types'\nimport type {AppOptionWithContent, PossibleRenderReactElement} from 'app/options/component/AppOptionWithContent'\nimport type {AppOptionWithTable}                               from 'app/options/component/AppOptionWithTable'\nimport type {SingleHeaderContent}                              from 'app/tools/table/SimpleHeader'\nimport type {GameStyles}                                       from 'core/gameStyle/GameStyles'\nimport type {ReactElement}                                     from 'util/react/ReactProperties'\nimport type {NullOr}                                           from 'util/types/nullable'\n\nimport {CommonOptions}                              from 'app/options/CommonOptions'\nimport {AppOptionWithContentComponent}              from 'app/options/component/AppOptionWithContent.component'\nimport {AppOptionWithTableComponent}                from 'app/options/component/AppOptionWithTable.component'\nimport {unfinishedText}                             from 'app/tools/text/UnfinishedText'\nimport NightEffectComponent                         from 'core/nightEffect/NightEffect.component'\nimport {Themes}                                     from 'core/theme/Themes'\nimport {Times}                                      from 'core/time/Times'\nimport {ProjectLanguages}                           from 'lang/ProjectLanguages'\nimport {contentTranslation, gameContentTranslation} from 'lang/components/translationMethods'\n\nexport abstract class GameStyleAppOption\n    extends Enum<Ordinals, Names>\n    implements AppOptionWithContent, AppOptionWithTable {\n\n    //region -------------------- Enum instances --------------------\n\n    public static readonly IMAGE =             new class GameStyleAppOption_Images extends GameStyleAppOption {\n\n        protected override _createContentOption(enumeration: GameStyles,) {\n            return enumeration.renderSingleComponent\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {key: 'image', element: contentTranslation('Image'),}\n        }\n\n    }()\n    public static readonly NAME =              new class GameStyleAppOption_Name extends GameStyleAppOption {\n\n        protected override _createContentOption(enumeration: GameStyles,) {\n            return CommonOptions.get.getNameContent(enumeration)\n        }\n\n        protected override _createTableHeaderOption() {\n            return CommonOptions.get.nameHeader\n        }\n\n    }()\n    public static readonly NIGHT_DESERT_WIND = new class GameStyleAppOption_NightDesertWind extends GameStyleAppOption {\n\n        protected override _createContentOption({reference,}: GameStyles,) {\n            return <NightEffectComponent gameStyle={reference}/>\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {\n                key: 'nightDesertWind',\n                element: <div className=\"night-desert-wind-effect-container\">{Themes.DESERT.renderSingleComponent(false)}{Times.NIGHT.renderSingleComponent}</div>,\n                tooltip: gameContentTranslation('Wind effect (night desert)', {\n                    night: unfinishedText('night'),//TODO add night reference\n                    desert: ProjectLanguages.current.get(Themes.DESERT.reference)!.toLowerCase(),\n                },),\n            }\n        }\n\n    }()\n\n    //endregion -------------------- Enum instances --------------------\n    //region -------------------- Companion enum --------------------\n\n    public static readonly CompanionEnum: Singleton<BasicCompanionEnumDeclaration<GameStyleAppOption, typeof GameStyleAppOption>> = class CompanionEnum_GameStyleAppOption\n        extends BasicCompanionEnum<GameStyleAppOption, typeof GameStyleAppOption> {\n\n        //region -------------------- Singleton usage --------------------\n\n        static #instance?: CompanionEnum_GameStyleAppOption\n\n        private constructor() {\n            super(GameStyleAppOption,)\n        }\n\n        public static get get() {\n            return this.#instance ??= new CompanionEnum_GameStyleAppOption()\n        }\n\n        //endregion -------------------- Singleton usage --------------------\n\n    }\n\n    //endregion -------------------- Companion enum --------------------\n    //region -------------------- Fields --------------------\n\n    /**\n     * The callback to get the enumeration based for each option.\n     *\n     * @note It should only be set by {@link GameStyleAppOption} and get by {@link EntityAppOption}.\n     */\n    public static CALLBACK_TO_GET_ENUMERATION: () => GameStyles\n\n    #appOptionWithContent?: AppOptionWithContent\n    #appOptionWithTable?: AppOptionWithTable\n\n    //endregion -------------------- Fields --------------------\n    //region -------------------- Constructor --------------------\n\n    private constructor() {\n        super()\n    }\n\n    //endregion -------------------- Constructor --------------------\n    //region -------------------- Getter methods --------------------\n    //endregion -------------------- Getter methods --------------------\n    //region -------------------- Methods --------------------\n\n    //region -------------------- App option - content --------------------\n\n    protected abstract _createContentOption(enumeration: GameStyles,): PossibleRenderReactElement\n\n    private get __appOptionWithContent(): AppOptionWithContent {\n        return this.#appOptionWithContent ??= new AppOptionWithContentComponent(() => this._createContentOption(GameStyleAppOption.CALLBACK_TO_GET_ENUMERATION()),)\n    }\n\n    public get renderContent(): readonly ReactElement[] {\n        return this.__appOptionWithContent.renderContent\n    }\n\n    //endregion -------------------- App option - content --------------------\n    //region -------------------- App option - table --------------------\n\n    protected abstract _createTableHeaderOption(): SingleHeaderContent\n\n    private get __appOptionWithTable(): AppOptionWithTable {\n        return this.#appOptionWithTable ??= new AppOptionWithTableComponent(() => this._createTableHeaderOption(),)\n    }\n\n    public get renderTableHeader(): NullOr<SingleHeaderContent> {\n        return this.__appOptionWithTable.renderTableHeader\n    }\n\n    //endregion -------------------- App option - table --------------------\n\n    //endregion -------------------- Methods --------------------\n    //region -------------------- Enum methods --------------------\n\n    public static getValue(value: PossibleEnumerableValueBy<GameStyleAppOption>,): GameStyleAppOption {\n        return GameStyleAppOption.CompanionEnum.get.getValue(value,)\n    }\n\n    public static get values(): CollectionHolder<GameStyleAppOption> {\n        return GameStyleAppOption.CompanionEnum.get.values\n    }\n\n    public static* [Symbol.iterator](): IterableIterator<GameStyleAppOption> {\n        yield* GameStyleAppOption.CompanionEnum.get\n    }\n\n    //endregion -------------------- Enum methods --------------------\n\n}\n","import './GameStyleApp.scss'\n\nimport type {GameStyleProperties}                                  from 'app/AppProperties.types'\nimport type {AppInterpreterWithTable, SimplifiedTableProperties}   from 'app/interpreter/AppInterpreterWithTable'\nimport type {PossibleDimensionOnCardList, PossibleDimensionOnList} from 'app/interpreter/DimensionOnList'\nimport type {EveryPossibleRouteNames}                              from 'route/everyRoutes.types'\nimport type {ReactElementOrString}                                 from 'util/react/ReactProperties'\n\nimport {GameStyleAppOption}     from 'app/options/GameStyleAppOption'\nimport {AbstractTableApp}       from 'app/withInterpreter/AbstractTableApp'\nimport {GameStyles}             from 'core/gameStyle/GameStyles'\nimport {gameContentTranslation} from 'lang/components/translationMethods'\nimport {newIterableIterator}    from 'util/utilitiesMethods'\n\nexport default class GameStyleApp\n    extends AbstractTableApp<AppInterpreterWithTable<GameStyles, GameStyleAppOption>, GameStyleProperties> {\n\n    //region -------------------- Create methods --------------------\n\n    protected override _createKey(): string {\n        return 'gameStyle'\n    }\n\n\n    protected override _createSimpleListRouteName(): EveryPossibleRouteNames {\n        return 'everyGameStyle (list)'\n    }\n\n    protected override _createCardListRouteName(): EveryPossibleRouteNames {\n        return 'everyGameStyle (card)'\n    }\n\n    protected override _createTableRouteName(): EveryPossibleRouteNames {\n        return 'everyGameStyle (table)'\n    }\n\n\n    protected override _createTitleContent(): ReactElementOrString {\n        return gameContentTranslation('game style.all')\n    }\n\n    protected override _createAppOptionInterpreter(): AppInterpreterWithTable<GameStyles, GameStyleAppOption> {\n        const $this = this\n\n        return new class implements AppInterpreterWithTable<GameStyles, GameStyleAppOption> {\n\n            public get iterable() {\n                return newIterableIterator($this.props.games, GameStyles[Symbol.iterator](),)\n            }\n\n            //region -------------------- List interpreter --------------------\n\n            public createListDimension(): PossibleDimensionOnList {\n                return {\n                    small: 6,\n                    medium: 4,\n                    large: null,\n                }\n            }\n\n            //endregion -------------------- List interpreter --------------------\n            //region -------------------- Card list interpreter --------------------\n\n            public createCardListDimension(): PossibleDimensionOnCardList {\n                return 'list'\n            }\n\n            public createCardListContent(enumerable: GameStyles,) {\n                return <div className=\"card-body\" id={`gameStyle-${enumerable.englishNameInHtml}`}>\n                    {enumerable.renderSingleComponent}\n                </div>\n            }\n\n            //endregion -------------------- Card list interpreter --------------------\n\n            public set callbackToGetEnumerable(value: () => GameStyles,) {\n                GameStyleAppOption.CALLBACK_TO_GET_ENUMERATION = value\n            }\n\n            public get tableOptions(): readonly GameStyleAppOption[] {\n                return [\n                    GameStyleAppOption.IMAGE,\n                    GameStyleAppOption.NAME,\n                    GameStyleAppOption.NIGHT_DESERT_WIND,\n                ]\n            }\n\n            public get tableProperties(): SimplifiedTableProperties {\n                return {\n                    caption: gameContentTranslation('game style.all'),\n                }\n            }\n\n\n            public createTableContent(option: GameStyleAppOption,) {\n                return option.renderContent\n            }\n\n            public createTableHeader(option: GameStyleAppOption,) {\n                return option.renderTableHeader\n            }\n\n        }()\n    }\n\n    //endregion -------------------- Create methods --------------------\n\n}\n","import type {GameStyle}       from 'core/gameStyle/GameStyle'\nimport type {CourseTheme}     from 'core/theme/CourseTheme'\nimport type {ReactProperties} from 'util/react/ReactProperties'\n\nimport {gameContentTranslation} from 'lang/components/translationMethods'\n\ninterface NightEffectComponentProperties_GameStyle\n    extends ReactProperties {\n\n    gameStyle: GameStyle\n\n}\n\ninterface NightEffectComponentProperties_Theme\n    extends ReactProperties {\n\n    theme: CourseTheme\n\n}\n\n/**\n * @param properties\n * @reactComponent\n */\nexport default function NightEffectComponent(properties: | NightEffectComponentProperties_GameStyle | NightEffectComponentProperties_Theme,) {\n    return 'gameStyle' in properties\n        ? <NightEffectByGameStyle {...properties}/>\n        : <NightEffectByTheme {...properties}/>\n}\n\nfunction NightEffectByGameStyle({gameStyle: {nightDesertWindTranslationKey: translationKey,},}: NightEffectComponentProperties_GameStyle,) {\n    return translationKey == null ? null : <>{gameContentTranslation(`nightEffect.nightDesertWindEffect.${translationKey}`)}</>\n}\n\nfunction NightEffectByTheme({theme: {effect,},}: NightEffectComponentProperties_Theme,) {\n    return effect?.createNewComponent ?? null\n}\n"],"names":["_appOptionWithContent","_classPrivateFieldLooseKey","_appOptionWithTable","_Symbol$iterator","Symbol","iterator","GameStyleAppOption","_ref","_inherits","_super","_createSuper","_this","_classCallCheck","call","Object","defineProperty","_assertThisInitialized","writable","value","_createClass","key","get","_classPrivateFieldLoo","_classPrivateFieldLoo2","_this2","_classPrivateFieldLooseBase","this","AppOptionWithContentComponent","_createContentOption","CALLBACK_TO_GET_ENUMERATION","__appOptionWithContent","renderContent","_classPrivateFieldLoo3","_classPrivateFieldLoo4","_this3","AppOptionWithTableComponent","_createTableHeaderOption","__appOptionWithTable","renderTableHeader","CompanionEnum","getValue","values","_regeneratorRuntime","mark","wrap","_context","prev","next","delegateYield","stop","Enum","IMAGE","_GameStyleAppOption","GameStyleAppOption_Images","_super2","apply","arguments","enumeration","renderSingleComponent","element","contentTranslation","NAME","_GameStyleAppOption2","GameStyleAppOption_Name","_super3","CommonOptions","getNameContent","nameHeader","NIGHT_DESERT_WIND","_GameStyleAppOption3","GameStyleAppOption_NightDesertWind","_super4","_ref2","reference","_jsx","NightEffectComponent","gameStyle","_jsxs","className","children","Themes","DESERT","Times","NIGHT","tooltip","gameContentTranslation","night","unfinishedText","desert","ProjectLanguages","current","toLowerCase","_instance","_class","_BasicCompanionEnum","CompanionEnum_GameStyleAppOption","_super5","_classPrivateFieldLoo5","_classPrivateFieldLoo6","BasicCompanionEnum","GameStyleApp","_AbstractTableApp","$this","newIterableIterator","props","games","GameStyles","small","medium","large","enumerable","id","concat","englishNameInHtml","set","caption","option","AbstractTableApp","properties","NightEffectByGameStyle","_objectSpread","NightEffectByTheme","translationKey","nightDesertWindTranslationKey","_Fragment","_effect$createNewComp","effect","theme","createNewComponent"],"sourceRoot":""}