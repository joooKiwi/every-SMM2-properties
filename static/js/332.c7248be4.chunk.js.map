{"version":3,"file":"static/js/332.c7248be4.chunk.js","mappings":"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","sources":["app/options/OfficialCourseAppOption.tsx","lang/name/ClassContainingANameWithADescription.ts","core/officialCourse/OfficialCourse.container.ts","core/officialCourse/OfficialCourse.loader.ts","core/officialCourse/OfficialCourses.ts","app/OfficialCourseApp.tsx"],"sourcesContent":["import type {CompanionEnumSingleton} from '@joookiwi/enumerable'\nimport {CompanionEnum, Enum}         from '@joookiwi/enumerable'\nimport {Fragment}                    from 'react'\n\nimport type {AppOption}           from 'app/options/AppOption'\nimport type {Names, Ordinals}     from 'app/options/OfficialCourseAppOption.types'\nimport type {SingleHeaderContent} from 'app/tools/table/SimpleHeader'\nimport type {OfficialCourses}     from 'core/officialCourse/OfficialCourses'\n\nimport {CommonOptions}                  from 'app/options/CommonOptions'\nimport Image                            from 'app/tools/images/Image'\nimport TextComponent                    from 'app/tools/text/TextComponent'\nimport UnfinishedText, {unfinishedText} from 'app/tools/text/UnfinishedText'\nimport GameStyleImage                   from 'core/gameStyle/GameStyleImage'\nimport ThemeImage                       from 'core/theme/ThemeImage'\nimport {gameContentTranslation}         from 'lang/components/translationMethods'\nimport SimpleDate                       from 'lang/date/SimpleDate'\nimport {UNKNOWN_REFERENCE}              from 'util/commonVariables'\n\nexport abstract class OfficialCourseAppOption\n    extends Enum<Ordinals, Names>\n    implements AppOption<OfficialCourses> {\n\n    //region -------------------- Enum instances --------------------\n\n    public static readonly REWARD = new class OfficialCourseAppOption_Reward extends OfficialCourseAppOption {\n\n        protected override _createContentOption(enumeration: OfficialCourses,): ReactElement {\n            const englishName = enumeration.englishName\n\n            return <Fragment key={`Reward (${englishName})`}>{enumeration.reference.reward.map(it =>\n                <Image key={`Reward (${englishName} - ${it.englishName})`} file={it.waitingImage[0]}/>,)}</Fragment>\n        }\n\n        protected override _createTableHeaderOption() {\n            return {key: 'time', element: unfinishedText('Reward',),} satisfies SingleHeaderContent\n        }\n\n    }('reward',)\n    public static readonly NAME = new class OfficialCourseAppOption_Name extends OfficialCourseAppOption {\n\n        protected override _createContentOption(enumeration: OfficialCourses,) {\n            return CommonOptions.get.getNameContent(enumeration,)\n        }\n\n        protected override _createTableHeaderOption() {\n            return CommonOptions.get.nameHeader\n        }\n\n    }('name',)\n    public static readonly DESCRIPTION = new class OfficialCourseAppOption_Description extends OfficialCourseAppOption {\n\n        protected override _createContentOption(enumeration: OfficialCourses,): ReactElement {\n            const reference = enumeration.reference\n            const value = reference.descriptionLanguageValue\n\n            if (value === UNKNOWN_REFERENCE)\n                return <TextComponent content={reference.descriptionEnglish} isUnknown/>\n            return <TextComponent content={value}/>\n        }\n\n        protected override _createTableHeaderOption() {\n            return {key: 'time', element: unfinishedText('Description',),} satisfies SingleHeaderContent\n        }\n\n    }('description',)\n    public static readonly GAME_STYLE_AND_THEMES = new class OfficialCourseAppOption_GameStyleAndThemes extends OfficialCourseAppOption {\n\n        protected override _createContentOption(enumeration: OfficialCourses,): ReactElement {\n            const reference = enumeration.reference\n            const courseThemeInSubArea = reference.courseThemeInTheSubArea\n\n            if (courseThemeInSubArea == null)\n                return <div className=\"d-flex flex-column align-items-center\">\n                    <GameStyleImage reference={reference.gameStyle}/>\n                    <div className=\"w-100 my-1\"/>\n                    <ThemeImage reference={reference.courseThemeInTheMainArea} isSmallPath/>\n                </div>\n\n            return <div className=\"d-flex flex-column align-items-center\">\n                <GameStyleImage reference={reference.gameStyle}/>\n                <div className=\"w-100 my-1\"/>\n                <div className=\"d-flex\">\n                    <ThemeImage reference={reference.courseThemeInTheMainArea} isSmallPath/>\n                    <div className=\"me-1\"/>\n                    <ThemeImage reference={courseThemeInSubArea} isSmallPath/>\n                </div>\n            </div>\n        }\n\n        protected override _createTableHeaderOption() {\n            return {key: 'gameStyleAndThemes', element: unfinishedText(gameContentTranslation('game style.singular',) + ' & ' + gameContentTranslation('theme.plural',),),} satisfies SingleHeaderContent\n        }\n\n    }('gameStyleAndThemes',)\n    public static readonly TIME = new class OfficialCourseAppOption_Time extends OfficialCourseAppOption {\n\n        protected override _createContentOption(enumeration: OfficialCourses,): ReactElement {\n            return <span>{enumeration.reference.amountOfTime} <UnfinishedText>seconds</UnfinishedText></span>\n        }\n\n        protected override _createTableHeaderOption() {\n            return {key: 'time', element: gameContentTranslation('time.singular',),} satisfies SingleHeaderContent\n        }\n\n    }('time',)\n    public static readonly AVAILABILITY = new class OfficialCourseAppOption_Availability extends OfficialCourseAppOption {\n\n        protected override _createContentOption(enumeration: OfficialCourses,): ReactElement {\n            const reference = enumeration.reference\n            const releaseDate = reference.releaseDate\n            const removalDate = reference.removalDate\n\n            if (removalDate == null)\n                return <div key={`Availability (${enumeration.englishName} release to end-life)`}>\n                    <SimpleDate date={releaseDate}/>\n                    {unfinishedText(' to the game end-life',)}\n                </div>\n            if (removalDate === UNKNOWN_REFERENCE)\n                return <div key={`Availability (${enumeration.englishName} release to unknown)`}>\n                    <SimpleDate date={releaseDate}/>\n                    {unfinishedText(' to an unknown date',)}\n                </div>\n            return <div key={`Availability (${enumeration.englishName} release to removal)`}>\n                <SimpleDate date={releaseDate}/>\n                {unfinishedText(' to ',)}\n                <SimpleDate date={removalDate}/>\n            </div>\n        }\n\n        protected override _createTableHeaderOption() {\n            return {key: 'availability', element: unfinishedText('Availability',),} satisfies SingleHeaderContent\n        }\n\n    }('availability',)\n\n    //endregion -------------------- Enum instances --------------------\n    //region -------------------- Companion enum --------------------\n\n    public static readonly CompanionEnum: CompanionEnumSingleton<OfficialCourseAppOption, typeof OfficialCourseAppOption> = class CompanionEnum_OfficialCourseAppOption\n        extends CompanionEnum<OfficialCourseAppOption, typeof OfficialCourseAppOption> {\n\n        //region -------------------- Singleton usage --------------------\n\n        static #instance?: CompanionEnum_OfficialCourseAppOption\n\n        private constructor() {\n            super(OfficialCourseAppOption,)\n        }\n\n        public static get get() {\n            return this.#instance ??= new CompanionEnum_OfficialCourseAppOption()\n        }\n\n        //endregion -------------------- Singleton usage --------------------\n\n    }\n\n    //endregion -------------------- Companion enum --------------------\n    //region -------------------- Fields --------------------\n\n    readonly #associatedClass\n    readonly #additionalClasses\n\n    //endregion -------------------- Fields --------------------\n    //region -------------------- Constructor --------------------\n\n    private constructor(associatedClass: string,) {\n        super()\n        this.#additionalClasses = [this.#associatedClass = associatedClass,] as const\n    }\n\n    //endregion -------------------- Constructor --------------------\n    //region -------------------- Getter methods --------------------\n\n    public get associatedClass(): string {\n        return this.#associatedClass\n    }\n\n    public get additionalClasses(): readonly [string,] {\n        return this.#additionalClasses\n    }\n\n    //endregion -------------------- Getter methods --------------------\n    //region -------------------- Methods --------------------\n\n    //region -------------------- App option - content --------------------\n\n    protected abstract _createContentOption(enumeration: OfficialCourses,): ReactElement\n\n    public renderContent(enumeration: OfficialCourses,): readonly [ReactElement,] {\n        return [this._createContentOption(enumeration,),]\n    }\n\n    //endregion -------------------- App option - content --------------------\n    //region -------------------- App option - table --------------------\n\n    protected abstract _createTableHeaderOption(): SingleHeaderContent\n\n    public renderTableHeader(): SingleHeaderContent {\n        return this._createTableHeaderOption()\n    }\n\n    //endregion -------------------- App option - table --------------------\n\n    //endregion -------------------- Methods --------------------\n\n}\n","import type {EveryLanguages}            from 'lang/EveryLanguages'\nimport type {Name}                      from 'lang/name/Name'\nimport type {NameTraitWithADescription} from 'lang/name/NameTraitWithADescription'\n\nimport {ClassContainingAName} from 'lang/name/ClassContainingAName'\n\nexport class ClassContainingANameWithADescription<const out T, const out U, const out DESCRIPTION extends Name<U>, >\n    extends ClassContainingAName<T>\n    implements NameTraitWithADescription<T, U, DESCRIPTION> {\n\n    //region -------------------- Fields --------------------\n\n    readonly #descriptionContainer\n\n    //endregion -------------------- Fields --------------------\n    //region -------------------- Constructor --------------------\n\n    public constructor(name: Name<T>, description: DESCRIPTION,) {\n        super(name,)\n        this.#descriptionContainer = description\n    }\n\n    //endregion -------------------- Constructor --------------------\n    //region -------------------- Getter methods --------------------\n\n    public get descriptionContainer(): DESCRIPTION {\n        return this.#descriptionContainer\n    }\n\n    public get descriptionLanguageValue(): this['descriptionContainer']['languageValue'] {\n        return this.descriptionContainer.languageValue\n    }\n\n    //region -------------------- English properties --------------------\n\n    public get descriptionOriginalEnglish(): this['descriptionContainer']['originalEnglish'] {\n        return this.descriptionContainer.originalEnglish\n    }\n\n    public get descriptionEnglish(): this['descriptionContainer']['english'] {\n        return this.descriptionContainer.english\n    }\n\n    public get descriptionAmericanEnglish(): this['descriptionContainer']['americanEnglish'] {\n        return this.descriptionContainer.americanEnglish\n    }\n\n    public get descriptionEuropeanEnglish(): this['descriptionContainer']['europeanEnglish'] {\n        return this.descriptionContainer.europeanEnglish\n    }\n\n    //endregion -------------------- English properties --------------------\n    //region -------------------- French properties --------------------\n\n    public get descriptionOriginalFrench(): this['descriptionContainer']['originalFrench'] {\n        return this.descriptionContainer.originalFrench\n    }\n\n    public get descriptionFrench(): this['descriptionContainer']['french'] {\n        return this.descriptionContainer.french\n    }\n\n    public get descriptionCanadianFrench(): this['descriptionContainer']['canadianFrench'] {\n        return this.descriptionContainer.canadianFrench\n    }\n\n    public get descriptionEuropeanFrench(): this['descriptionContainer']['europeanFrench'] {\n        return this.descriptionContainer.europeanFrench\n    }\n\n    //endregion -------------------- French properties --------------------\n    //region -------------------- German properties --------------------\n\n    public get descriptionGerman(): this['descriptionContainer']['german'] {\n        return this.descriptionContainer.german\n    }\n\n    //endregion -------------------- German properties --------------------\n    //region -------------------- Spanish properties --------------------\n\n    public get descriptionOriginalSpanish(): this['descriptionContainer']['originalSpanish'] {\n        return this.descriptionContainer.originalSpanish\n    }\n\n    public get descriptionSpanish(): this['descriptionContainer']['spanish'] {\n        return this.descriptionContainer.spanish\n    }\n\n    public get descriptionAmericanSpanish(): this['descriptionContainer']['americanSpanish'] {\n        return this.descriptionContainer.americanSpanish\n    }\n\n    public get descriptionEuropeanSpanish(): this['descriptionContainer']['europeanSpanish'] {\n        return this.descriptionContainer.europeanSpanish\n    }\n\n    //endregion -------------------- Spanish properties --------------------\n    //region -------------------- Italian properties --------------------\n\n    public get descriptionItalian(): this['descriptionContainer']['italian'] {\n        return this.descriptionContainer.italian\n    }\n\n    //endregion -------------------- Italian properties --------------------\n    //region -------------------- Dutch properties --------------------\n\n    public get descriptionDutch(): this['descriptionContainer']['dutch'] {\n        return this.descriptionContainer.dutch\n    }\n\n    //endregion -------------------- Dutch properties --------------------\n    //region -------------------- Portuguese properties --------------------\n\n    public get descriptionOriginalPortuguese(): this['descriptionContainer']['originalPortuguese'] {\n        return this.descriptionContainer.originalPortuguese\n    }\n\n    public get descriptionPortuguese(): this['descriptionContainer']['portuguese'] {\n        return this.descriptionContainer.portuguese\n    }\n\n    public get descriptionAmericanPortuguese(): this['descriptionContainer']['americanPortuguese'] {\n        return this.descriptionContainer.americanPortuguese\n    }\n\n    public get descriptionEuropeanPortuguese(): this['descriptionContainer']['europeanPortuguese'] {\n        return this.descriptionContainer.europeanPortuguese\n    }\n\n    //endregion -------------------- Portuguese properties --------------------\n    //region -------------------- Russian properties --------------------\n\n    public get descriptionRussian(): this['descriptionContainer']['russian'] {\n        return this.descriptionContainer.russian\n    }\n\n    //endregion -------------------- Russian properties --------------------\n    //region -------------------- Japanese properties --------------------\n\n    public get descriptionJapanese(): this['descriptionContainer']['japanese'] {\n        return this.descriptionContainer.japanese\n    }\n\n    //endregion -------------------- Japanese properties --------------------\n    //region -------------------- Chinese properties --------------------\n\n    public get descriptionOriginalChinese(): this['descriptionContainer']['originalChinese'] {\n        return this.descriptionContainer.originalChinese\n    }\n\n    public get descriptionChinese(): this['descriptionContainer']['chinese'] {\n        return this.descriptionContainer.chinese\n    }\n\n    public get descriptionTraditionalChinese(): this['descriptionContainer']['traditionalChinese'] {\n        return this.descriptionContainer.traditionalChinese\n    }\n\n    public get descriptionSimplifiedChinese(): this['descriptionContainer']['simplifiedChinese'] {\n        return this.descriptionContainer.simplifiedChinese\n    }\n\n    //endregion -------------------- Chinese properties --------------------\n    //region -------------------- Korean properties --------------------\n\n    public get descriptionKorean(): this['descriptionContainer']['korean'] {\n        return this.descriptionContainer.korean\n    }\n\n    //endregion -------------------- Korean properties --------------------\n    //region -------------------- Hebrew properties --------------------\n\n    public get descriptionIsHebrewUsed(): this['descriptionContainer']['isHebrewUsed'] {\n        return this.descriptionContainer.isHebrewUsed\n    }\n\n    public get descriptionHebrew(): this['descriptionContainer']['hebrew'] {\n        return this.descriptionContainer.hebrew\n    }\n\n    //endregion -------------------- Hebrew properties --------------------\n    //region -------------------- Polish properties --------------------\n\n    public get descriptionIsPolishUsed(): this['descriptionContainer']['isPolishUsed'] {\n        return this.descriptionContainer.isPolishUsed\n    }\n\n    public get descriptionPolish(): this['descriptionContainer']['polish'] {\n        return this.descriptionContainer.polish\n    }\n\n    //endregion -------------------- Polish properties --------------------\n    //region -------------------- Ukrainian properties --------------------\n\n    public get descriptionIsUkrainianUsed(): this['descriptionContainer']['isUkrainianUsed'] {\n        return this.descriptionContainer.isUkrainianUsed\n    }\n\n    public get descriptionUkrainian(): this['descriptionContainer']['ukrainian'] {\n        return this.descriptionContainer.ukrainian\n    }\n\n    //endregion -------------------- Ukrainian properties --------------------\n    //region -------------------- Greek properties --------------------\n\n    public get descriptionIsGreekUsed(): this['descriptionContainer']['isGreekUsed'] {\n        return this.descriptionContainer.isGreekUsed\n    }\n\n    public get descriptionGreek(): this['descriptionContainer']['greek'] {\n        return this.descriptionContainer.greek\n    }\n\n    //endregion -------------------- Greek properties --------------------\n\n    public get descriptionOriginalLanguages(): this['descriptionContainer']['originalLanguages'] {\n        return this.descriptionContainer.originalLanguages\n    }\n\n    //endregion -------------------- Getter methods --------------------\n    //endregion -------------------- Convertor methods --------------------\n\n    public toDescriptionNameMap(): ReadonlyMap<EveryLanguages, U> {\n        return this.descriptionContainer.toNameMap()\n    }\n\n    //region -------------------- Convertor methods --------------------\n\n\n}\n","import type {GameStyles}           from 'core/gameStyle/GameStyles'\nimport type {MysteryMushrooms}     from 'core/mysteryMushroom/MysteryMushrooms'\nimport type {PossibleAmountOfTime} from 'core/officialCourse/loader.types'\nimport type {OfficialCourse}       from 'core/officialCourse/OfficialCourse'\nimport type {Themes}               from 'core/theme/Themes'\nimport type {Name}                 from 'lang/name/Name'\n\nimport {ClassContainingANameWithADescription} from 'lang/name/ClassContainingANameWithADescription'\n\nexport class OfficialCourseContainer\n    extends ClassContainingANameWithADescription<string, string, Name<string>>\n    implements OfficialCourse {\n\n    //region -------------------- Fields --------------------\n\n    readonly #reward\n    readonly #releaseDate\n    readonly #removalDate\n    readonly #gameStyle\n    readonly #courseThemeInTheMainArea\n    readonly #courseThemeInTheSubArea\n    readonly #amountOfTime\n\n    //endregion -------------------- Fields --------------------\n    //region -------------------- Constructor --------------------\n\n    public constructor(\n        name: Name<string>, description: Name<string>,\n        reward: readonly MysteryMushrooms[],\n        releaseDate: Date, removalDate: NullOr<| Date | UnknownReference>,\n        gameStyle: GameStyles,\n        courseThemeInMainArea: Themes, courseThemeInSubArea: NullOr<Themes>,\n        amountOfTime: PossibleAmountOfTime,) {\n        super(name, description,)\n        this.#reward = reward\n        this.#releaseDate = releaseDate\n        this.#removalDate = removalDate\n        this.#gameStyle = gameStyle\n        this.#courseThemeInTheMainArea = courseThemeInMainArea\n        this.#courseThemeInTheSubArea = courseThemeInSubArea\n        this.#amountOfTime = amountOfTime\n    }\n\n    //endregion -------------------- Constructor --------------------\n    //region -------------------- Getter methods --------------------\n\n    public get reward() { return this.#reward }\n\n    public get releaseDate() { return this.#releaseDate }\n    public get removalDate() { return this.#removalDate }\n\n    public get gameStyle() { return this.#gameStyle }\n\n    public get courseThemeInTheMainArea() { return this.#courseThemeInTheMainArea }\n    public get courseThemeInTheSubArea() {  return this.#courseThemeInTheSubArea }\n\n    public get amountOfTime() { return this.#amountOfTime }\n\n    //endregion -------------------- Getter methods --------------------\n\n}\n","import file from 'resources/compiled/Official course (SMM).json'\n\nimport type {LanguageContent}                                                                from 'core/_template/LanguageContent'\nimport type {DescriptionLanguageContent}                                                     from 'core/_template/DescriptionLanguageContent'\nimport type {PossibleAcronym_GameStyle_SMM1}                                                 from 'core/gameReference/GameReferences.types'\nimport type {CompanionEnumDeclaration_GameStyles}                                            from 'core/gameStyle/GameStyles.companionEnumDeclaration'\nimport type {PossibleAmountOfTime, PossibleReleaseDate, PossibleRemovalDate, PossibleReward} from 'core/officialCourse/loader.types'\nimport type {OfficialCourse}                                                                 from 'core/officialCourse/OfficialCourse'\nimport type {PossibleEnglishName}                                                            from 'core/officialCourse/OfficialCourses.types'\nimport type {PossibleEnglishName_CourseTheme_SMM1}                                           from 'core/theme/Themes.types'\nimport type {CompanionEnumByName}                                                            from 'util/enumerable/companion/CompanionEnumByName'\nimport type {Loader}                                                                         from 'util/loader/Loader'\n\nimport {isInProduction}                                          from 'variables'\nimport {GameStyles}                                              from 'core/gameStyle/GameStyles'\nimport {MysteryMushrooms}                                        from 'core/mysteryMushroom/MysteryMushrooms'\nimport {OfficialCourseContainer}                                 from 'core/officialCourse/OfficialCourse.container'\nimport {Themes}                                                  from 'core/theme/Themes'\nimport {createNameFromContent, createNameFromContentDescription} from 'lang/name/createNameFromContent'\nimport {UNKNOWN_REFERENCE}                                       from 'util/commonVariables'\nimport {EMPTY_ARRAY}                                             from 'util/emptyVariables'\n\n/**\n * @singleton\n */\nexport class OfficialCourseLoader\n    implements Loader<ReadonlyMap<PossibleEnglishName, OfficialCourse>> {\n\n    //region -------------------- Singleton usage --------------------\n\n    static #instance?: OfficialCourseLoader\n\n    private constructor() {}\n\n    public static get get() {\n        return this.#instance ??= new this()\n    }\n\n    //endregion -------------------- Singleton usage --------------------\n\n    #map?: Map<PossibleEnglishName, OfficialCourse>\n\n    public load(): ReadonlyMap<PossibleEnglishName, OfficialCourse> {\n        if (this.#map != null)\n            return this.#map\n\n        const GameStyleCompanion = GameStyles.CompanionEnum.get\n        const ThemeCompanion = Themes.CompanionEnum.get\n        const MysteryMushroomCompanion = MysteryMushrooms.CompanionEnum.get\n        const references = new Map<PossibleEnglishName, OfficialCourse>()\n        let index = file.length\n        while (index-- > 0) {\n            const content = file[index] as Content\n            references.set(content.english, createReference(content, GameStyleCompanion, ThemeCompanion, MysteryMushroomCompanion,),)\n        }\n\n        if (!isInProduction)\n            console.info(\n                '-------------------- \"official course\" has been loaded --------------------\\n',\n                references,\n                '\\n-------------------- \"official course\" has been loaded --------------------',\n            )\n\n        return this.#map = references\n    }\n\n}\n\ninterface Content\n    extends LanguageContent, DescriptionLanguageContent {\n\n    readonly reward: PossibleReward\n\n    readonly releaseDate: PossibleReleaseDate\n    readonly removalDate: PossibleRemovalDate\n\n    readonly gameStyle: PossibleAcronym_GameStyle_SMM1\n    readonly courseTheme_mainArea: PossibleEnglishName_CourseTheme_SMM1\n    readonly courseTheme_subArea: NullOr<PossibleEnglishName_CourseTheme_SMM1>\n\n    readonly amountOfTime: PossibleAmountOfTime\n\n\n    readonly english: PossibleEnglishName\n    readonly americanEnglish: null\n    readonly europeanEnglish: null\n    readonly german: string\n    readonly italian: string\n    readonly dutch: UnknownReference\n    readonly portuguese: UnknownReference\n    readonly americanPortuguese: null\n    readonly europeanPortuguese: null\n    readonly russian: string\n    readonly japanese: string\n    readonly chinese: null\n    readonly traditionalChinese: null\n    readonly simplifiedChinese: null\n    readonly korean: null\n\n    readonly americanEnglish_description: null\n    readonly europeanEnglish_description: null\n    readonly german_description: UnknownReference\n    readonly italian_description: UnknownReference\n    readonly dutch_description: UnknownReference\n    readonly portuguese_description: UnknownReference\n    readonly americanPortuguese_description: null\n    readonly europeanPortuguese_description: null\n    readonly russian_description: UnknownReference\n    readonly japanese_description: UnknownReference\n    readonly chinese_description: null\n    readonly traditionalChinese_description: null\n    readonly simplifiedChinese_description: null\n    readonly korean_description: null\n\n}\n\n/** A type-alias definition of the {@link GameStyles.CompanionEnum} */\ntype GameStyleCompanionType = CompanionEnumDeclaration_GameStyles\n/** A type-alias definition of the {@link Themes.CompanionEnum} */\ntype ThemeCompanionType = CompanionEnumByName<Themes, typeof Themes>\n/** A type-alias definition of the {@link MysteryMushrooms.CompanionEnum} */\ntype MysteryMushroomCompanionType = CompanionEnumByName<MysteryMushrooms, typeof MysteryMushrooms>\n\nfunction createReference(content: Content, GameStyleCompanion: GameStyleCompanionType, ThemeCompanion: ThemeCompanionType, MysteryMushroomCompanion: MysteryMushroomCompanionType,): OfficialCourse {\n    const subArea = content.courseTheme_subArea\n\n    return new OfficialCourseContainer(\n        createNameFromContent(content, 1, true,),\n        createNameFromContentDescription(content, 1, true,),\n        retrieveReward(content.reward, MysteryMushroomCompanion,),\n        createReleaseDate(content.releaseDate,),\n        createRemovalDate(content.removalDate,),\n        GameStyleCompanion.getValueByAcronym(content.gameStyle,),\n        ThemeCompanion.getValueByName(content.courseTheme_mainArea,),\n        subArea == null ? null : ThemeCompanion.getValueByName(subArea,),\n        content.amountOfTime,\n    )\n}\n\n\nfunction retrieveReward(value: PossibleReward, MysteryMushroomCompanion: MysteryMushroomCompanionType,): readonly MysteryMushrooms[] {\n    if (value == null)\n        return EMPTY_ARRAY\n    if (value === 'Bulbasaur / Charmander / Squirtle')\n        return [MysteryMushrooms.BULBASAUR, MysteryMushrooms.CHARMANDER, MysteryMushrooms.SQUIRTLE,]\n    if (value === 'Kitty White / Melody')\n        return [MysteryMushrooms.KITTY_WHITE, MysteryMushrooms.MELODY,]\n    if (value === 'Callie / Marie')\n        return [MysteryMushrooms.CALLIE, MysteryMushrooms.MARIE,]\n    return [MysteryMushroomCompanion.getValueByName(value,),]\n}\n\nfunction createReleaseDate(value: PossibleReleaseDate,): Date {\n    return new Date(Number(value.substring(0, 4,),), Number(value.substring(5, 6,),) - 1, Number(value.substring(8, 9,),), 0, 0, 0, 0,)\n}\n\nfunction createRemovalDate(value: PossibleRemovalDate,): NullOr<Date | UnknownReference> {\n    if (value == null)\n        return null\n    if (value === '???')\n        return UNKNOWN_REFERENCE\n\n    return new Date(Number(value.substring(0, 4,),), Number(value.substring(5, 6,),) - 1, Number(value.substring(8, 9,),), 0, 0, 0, 0,)\n}\n","import {Enum} from '@joookiwi/enumerable'\n\nimport type {ClassWithEnglishName}                 from 'core/ClassWithEnglishName'\nimport type {ClassWithReference}                   from 'core/ClassWithReference'\nimport type {OfficialCourse}                       from 'core/officialCourse/OfficialCourse'\nimport type {Names, Ordinals, PossibleEnglishName} from 'core/officialCourse/OfficialCourses.types'\nimport type {CompanionEnumByNameSingleton}         from 'util/enumerable/Singleton.types'\n\nimport {OfficialCourseLoader}           from 'core/officialCourse/OfficialCourse.loader'\nimport {StringContainer}                from 'util/StringContainer'\nimport {CompanionEnumByEnglishNameOnly} from 'util/enumerable/companion/CompanionEnumByEnglishNameOnly'\n\n/**\n * @todo Add references for the items retrieved\n */\nexport class OfficialCourses\n    extends Enum<Ordinals, Names>\n    implements ClassWithReference<OfficialCourse>,\n        ClassWithEnglishName<PossibleEnglishName> {\n\n    //region -------------------- Enum instances --------------------\n\n    public static readonly NWC_2017 =                         new OfficialCourses('NWC-2017',)\n    public static readonly DR_KAWASHIMA_ATHLETIC_TRAINING =   new OfficialCourses('Dr Kawashima\\'s Athletic Training',)\n    public static readonly WALKIN_WITH_UNDODOG =              new OfficialCourses('Walkin\\' with Undodog',)\n    public static readonly SQUID_SISTER_VS_BLOOPERS =         new OfficialCourses('Squid Sisters vs. Bloopers',)\n    public static readonly SHAUN_MOSSY_MOLE_MISCHIEF =        new OfficialCourses('Shaun\\'s Mossy Mole Mischief',)\n    public static readonly HELLO_KITTY_AND_MY_MELODY =        new OfficialCourses('Hello Kitty & My Melody',)\n    public static readonly POPO_AND_NANA_CLIMBING_CHALLENGE = new OfficialCourses('Popo & Nana\\'s Climbing Challenge',)\n    public static readonly METAL_RESISTANCE =                 new OfficialCourses('METAL RESISTANCE',)\n    public static readonly STARFY_PRINCE_OF_PUFFTOP =         new OfficialCourses('Starfy: Prince of Pufftop',)\n    public static readonly YU_AYASAKI_BIG_ADVENTURE =         new OfficialCourses('♪Yu Ayasaki\\'s Big Adventure!♪',)\n    public static readonly TOADETTE_TREASURE_TRACKER =        new OfficialCourses('Toadette: Treasure Tracker',)\n    public static readonly TWILIGHT_PRINCESS_HD =             new OfficialCourses('Twilight Princess HD',)\n    public static readonly MARY_O_LUNCH_BREAK =               new OfficialCourses('Mary O.\\'s Lunch Break',)\n    public static readonly SECRETS_OF_STATUE_MARIO =          new OfficialCourses('Secrets of Statue Mario',)\n    public static readonly BARBARA_IN_TOMATOLAND =            new OfficialCourses('Barbara in Tomatoland',)\n    public static readonly NISEKOI_CHITOGE_AND_KOSAKIO =      new OfficialCourses('Nisekoi: Chitoge & Kosaki',)\n    public static readonly NISEKOI_TSGUMI_AND_MARIKA =        new OfficialCourses('Nisekoi: Tsugumi & Marika',)\n    public static readonly I_CHOOSE_YOU =                     new OfficialCourses('I Choose You!',)\n    public static readonly TOKAIGI_2016_CONTEST_COURSE_1 =    new OfficialCourses('Tokaigi 2016 Contest Course 1',)\n    public static readonly TOKAIGI_2016_CONTEST_COURSE_2 =    new OfficialCourses('Tokaigi 2016 Contest Course 2',)\n    public static readonly TOKAIGI_2016_CONTEST_COURSE_3 =    new OfficialCourses('Tokaigi 2016 Contest Course 3',)\n    public static readonly TOKAIGI_2016_CONTEST_COURSE_4 =    new OfficialCourses('Tokaigi 2016 Contest Course 4',)\n    public static readonly PARANORMAL_RESEARCH =              new OfficialCourses('Paranormal Research',)\n    public static readonly ADVENTURE_IN_SARASALAND =          new OfficialCourses('Adventure in Sarasaland',)\n    public static readonly COOOOOO_FEAT_YAMAMURA =            new OfficialCourses('Cooooo! (Feat. Yamamura)',)\n    public static readonly SOUDWEST_AIR_ADVENTURE =           new OfficialCourses('Soudwest Air Adventure',)\n    public static readonly NES_REMIX_EXCITE_BIKE =            new OfficialCourses('NES REMIX (Excitebike)',)\n    public static readonly NES_REMIX_SUPER_MARIO_BROS_2 =     new OfficialCourses('NES REMIX (Super Mario Bros. 2)',)\n    public static readonly CAPTAIN_TOAD_TREASURE_TRACKER =    new OfficialCourses('Captain Toad: Treasure Tracker',)\n    public static readonly WELCOME_TO_SATURN_VALLEY =         new OfficialCourses('Welcome to Saturn Valley',)\n    public static readonly BELCH_BASE =                       new OfficialCourses('Belch Base',)\n    public static readonly NINTENDO_BADGE_ARCADE =            new OfficialCourses('Nintendo Badge Arcade',)\n    public static readonly MA_RIO_HILLS =                     new OfficialCourses('Ma Rio Hills',)\n    public static readonly MERCEDES_BENZ_JUMP_N_DRIVE =       new OfficialCourses('Mercedes-Benz Jump\\'n\\'Drive',)\n    public static readonly MARIO_AND_LUIGI_PAPER_JAM =        new OfficialCourses('Mario & Luigi: Paper Jam',)\n    public static readonly NES_REMIX =                        new OfficialCourses('NES REMIX',)\n    public static readonly PAX_WEST_2015_OMEGATHON_FINAL_RD = new OfficialCourses('PAX West 2015 Omegathon Final Rd',)\n    public static readonly YOSHI_IS_AWESOME =                 new OfficialCourses('Yoshi Is Awesome',)\n    public static readonly CAT_MARIO_COURSE =                 new OfficialCourses('Cat Mario\\'s Course',)\n    public static readonly CAT_PEACH_COURSE =                 new OfficialCourses('Cat Peach\\'s Course',)\n    public static readonly SUPER_MARIO_KUN_25TH_ANNIVERSARY = new OfficialCourses('SUPER MARIO KUN 25th Anniversary',)\n    public static readonly TRI_FORCE_HEROES =                 new OfficialCourses('Tri Force Heroes',)\n    public static readonly ARINO_MAKER =                      new OfficialCourses('Arino Maker',)\n    public static readonly ARINO_MAKER_RETURNS =              new OfficialCourses('Arino Maker Returns',)\n    public static readonly NEW_ARINO_MAKER =                  new OfficialCourses('New! Arino Maker',)\n    public static readonly SUPER_BAKARHYTHM_LAND =            new OfficialCourses('Super Bakarhythm Land',)\n    public static readonly SHIP_LOVE =                        new OfficialCourses('Ship Love',)\n\n    //endregion -------------------- Enum instances --------------------\n    //region -------------------- Companion enum --------------------\n\n    public static readonly CompanionEnum: CompanionEnumByNameSingleton<OfficialCourses, typeof OfficialCourses> = class CompanionEnum_OfficialCourses\n        extends CompanionEnumByEnglishNameOnly<OfficialCourses, typeof OfficialCourses> {\n\n        //region -------------------- Singleton usage --------------------\n\n        static #instance?: CompanionEnum_OfficialCourses\n\n        private constructor() {\n            super(OfficialCourses,)\n        }\n\n        public static get get() {\n            return this.#instance ??= new CompanionEnum_OfficialCourses()\n        }\n\n        //endregion -------------------- Singleton usage --------------------\n\n    }\n\n    //endregion -------------------- Companion enum --------------------\n    //region -------------------- Fields --------------------\n\n    static #REFERENCE_MAP?: ReadonlyMap<PossibleEnglishName, OfficialCourse>\n\n    #reference?: OfficialCourse\n    readonly #englishName\n\n    //endregion -------------------- Fields --------------------\n    //region -------------------- Constructor --------------------\n\n    constructor(englishName: PossibleEnglishName,) {\n        super()\n        this.#englishName = new StringContainer(englishName,)\n    }\n\n    //endregion -------------------- Constructor --------------------\n    //region -------------------- Getter methods --------------------\n\n    public static get REFERENCE_MAP(): ReadonlyMap<PossibleEnglishName, OfficialCourse> {\n        return this.#REFERENCE_MAP ??= OfficialCourseLoader.get.load()\n    }\n\n    public get reference(): OfficialCourse {\n        return this.#reference ??= OfficialCourses.REFERENCE_MAP.get(this.englishName,)!\n    }\n\n    public get englishName(): PossibleEnglishName {\n        return this.#englishName.get\n    }\n\n    public get englishNameInHtml(): string {\n        return this.#englishName.getInHtml\n    }\n\n    //endregion -------------------- Getter methods --------------------\n    //region -------------------- Methods --------------------\n    //endregion -------------------- Methods --------------------\n\n}\n","import './OfficialCourseApp.scss'\n\nimport type {AppWithInterpreterProperties} from 'app/AppProperties.types'\nimport type {AppInterpreterWithTable}      from 'app/interpreter/AppInterpreterWithTable'\nimport type {DimensionOnList}              from 'app/interpreter/DimensionOnList'\nimport type {ViewAndRouteName}             from 'app/withInterpreter/DisplayButtonGroup.properties'\n\nimport SubMainContainer          from 'app/_SubMainContainer'\nimport {OfficialCourseAppOption} from 'app/options/OfficialCourseAppOption'\nimport Table                     from 'app/tools/table/Table'\nimport {unfinishedText}          from 'app/tools/text/UnfinishedText'\nimport CardList                  from 'app/withInterpreter/CardList'\nimport SimpleList                from 'app/withInterpreter/SimpleList'\nimport {ViewDisplays}            from 'app/withInterpreter/ViewDisplays'\nimport {OfficialCourses}         from 'core/officialCourse/OfficialCourses'\nimport {OtherWordInTheGames}     from 'core/otherWordInTheGame/OtherWordInTheGames'\nimport {gameContentTranslation}  from 'lang/components/translationMethods'\n\nclass EventCourseAppInterpreter\n    implements AppInterpreterWithTable<OfficialCourses, OfficialCourseAppOption> {\n\n    public get content() {\n        return OfficialCourses.CompanionEnum.get.values.toArray()\n    }\n\n    //region -------------------- List interpreter --------------------\n\n    public createListDimension(): DimensionOnList {\n        return {\n            default: 1,\n            small: 2,\n            medium: 3,\n            large: 4,\n            extraLarge: 5,\n            extraExtraLarge: 6,\n        }\n    }\n\n    //endregion -------------------- List interpreter --------------------\n    //region -------------------- Card list interpreter --------------------\n\n    public createCardListDimension(): DimensionOnList {\n        return {\n            default: 1,\n            small: 2,\n            large: 3,\n            extraLarge: 4,\n        }\n    }\n\n    public createCardListContent(enumerable: OfficialCourses,) {\n        return <div className=\"text-center\">\n            {OfficialCourseAppOption.REWARD.renderContent(enumerable,)}\n            <div className=\"w-100\"/>\n            <small className=\"text-body-secondary fst-italic\">{OfficialCourseAppOption.AVAILABILITY.renderContent(enumerable,)}</small>\n        </div>\n    }\n\n    //endregion -------------------- Card list interpreter --------------------\n    //region -------------------- Table interpreter --------------------\n\n    public readonly tableHeadersColor = 'info' satisfies BootstrapThemeColor\n    public readonly tableCaption = gameContentTranslation('official course.all', {\n        singularName: OtherWordInTheGames.COURSE.singularLowerCaseNameOnReferenceOrNull ?? unfinishedText(OtherWordInTheGames.COURSE.singularEnglishName,).toLowerCase(),\n        pluralName: OtherWordInTheGames.COURSE.pluralLowerCaseNameOnReferenceOrNull ?? unfinishedText(OtherWordInTheGames.COURSE.pluralEnglishName,).toLowerCase(),\n    },) satisfies ReactElementOrString\n\n    public get tableOptions(): readonly OfficialCourseAppOption[] {\n        return [\n            OfficialCourseAppOption.REWARD,\n            OfficialCourseAppOption.NAME,\n            OfficialCourseAppOption.DESCRIPTION,\n            OfficialCourseAppOption.GAME_STYLE_AND_THEMES,\n            OfficialCourseAppOption.TIME,\n            OfficialCourseAppOption.AVAILABILITY,\n        ]\n    }\n\n    public getAdditionalClass(option: OfficialCourseAppOption,) {\n        return option.additionalClasses\n    }\n\n    public createTableContent(content: OfficialCourses, option: OfficialCourseAppOption,) {\n        return option.renderContent(content,)\n    }\n\n    public createTableHeader(option: OfficialCourseAppOption,) {\n        return option.renderTableHeader()\n    }\n\n\n    //endregion -------------------- Table interpreter --------------------\n\n}\n\nconst viewDisplayAndRouteName = [\n    [ViewDisplays.SIMPLE_LIST, 'everyOfficialCourse (list)',],\n    [ViewDisplays.CARD_LIST, 'everyOfficialCourse (card)',],\n    [ViewDisplays.TABLE, 'everyOfficialCourse (table)',],\n] as const satisfies readonly ViewAndRouteName[]\nconst appInterpreter = new EventCourseAppInterpreter()\n\n/** @reactComponent */\nexport default function OfficialCourseApp({viewDisplay,}: AppWithInterpreterProperties,) {\n    const course = OtherWordInTheGames.COURSE.singularLowerCaseNameOnReferenceOrNull ?? unfinishedText(OtherWordInTheGames.COURSE.singularEnglishName.toLowerCase(),)\n    const courses = OtherWordInTheGames.COURSE.pluralLowerCaseNameOnReferenceOrNull ?? unfinishedText(OtherWordInTheGames.COURSE.pluralEnglishName.toLowerCase(),)\n\n    const titleContent = gameContentTranslation('official course.all', {singularName: course, pluralName: courses,},)\n\n    if (viewDisplay === ViewDisplays.SIMPLE_LIST)\n        return <SubMainContainer reactKey=\"officialCourse\" viewDisplayAndRouteName={viewDisplayAndRouteName} viewDisplay={viewDisplay} titleContent={titleContent}>\n            <SimpleList reactKey=\"officialCourse\" interpreter={appInterpreter}/>\n        </SubMainContainer>\n    if (viewDisplay === ViewDisplays.CARD_LIST)\n        return <SubMainContainer reactKey=\"officialCourse\" viewDisplayAndRouteName={viewDisplayAndRouteName} viewDisplay={viewDisplay} titleContent={titleContent}>\n            <CardList reactKey=\"officialCourse\" interpreter={appInterpreter}/>\n        </SubMainContainer>\n    return <SubMainContainer reactKey=\"officialCourse\" viewDisplayAndRouteName={viewDisplayAndRouteName} viewDisplay={viewDisplay} titleContent={titleContent}>\n        <Table id=\"officialCourse-table\" interpreter={appInterpreter}/>\n    </SubMainContainer>\n}\n"],"names":["_associatedClass","_classPrivateFieldLooseKey","_additionalClasses","OfficialCourseAppOption","Enum","constructor","associatedClass","super","Object","defineProperty","writable","value","_classPrivateFieldLooseBase","this","additionalClasses","renderContent","enumeration","_createContentOption","renderTableHeader","_createTableHeaderOption","_OfficialCourseAppOption","REWARD","englishName","_jsx","Fragment","children","reference","reward","map","it","Image","file","waitingImage","concat","key","element","unfinishedText","NAME","CommonOptions","get","getNameContent","nameHeader","DESCRIPTION","descriptionLanguageValue","UNKNOWN_REFERENCE","TextComponent","content","descriptionEnglish","isUnknown","GAME_STYLE_AND_THEMES","courseThemeInSubArea","courseThemeInTheSubArea","_jsxs","className","GameStyleImage","gameStyle","ThemeImage","courseThemeInTheMainArea","isSmallPath","gameContentTranslation","TIME","amountOfTime","UnfinishedText","AVAILABILITY","releaseDate","removalDate","SimpleDate","date","CompanionEnum","_instance","_CompanionEnum_OfficialCourseAppOption","CompanionEnum_OfficialCourseAppOption","_classPrivateFieldLoo","_classPrivateFieldLoo2","_descriptionContainer","ClassContainingANameWithADescription","ClassContainingAName","name","description","descriptionContainer","languageValue","descriptionOriginalEnglish","originalEnglish","english","descriptionAmericanEnglish","americanEnglish","descriptionEuropeanEnglish","europeanEnglish","descriptionOriginalFrench","originalFrench","descriptionFrench","french","descriptionCanadianFrench","canadianFrench","descriptionEuropeanFrench","europeanFrench","descriptionGerman","german","descriptionOriginalSpanish","originalSpanish","descriptionSpanish","spanish","descriptionAmericanSpanish","americanSpanish","descriptionEuropeanSpanish","europeanSpanish","descriptionItalian","italian","descriptionDutch","dutch","descriptionOriginalPortuguese","originalPortuguese","descriptionPortuguese","portuguese","descriptionAmericanPortuguese","americanPortuguese","descriptionEuropeanPortuguese","europeanPortuguese","descriptionRussian","russian","descriptionJapanese","japanese","descriptionOriginalChinese","originalChinese","descriptionChinese","chinese","descriptionTraditionalChinese","traditionalChinese","descriptionSimplifiedChinese","simplifiedChinese","descriptionKorean","korean","descriptionIsHebrewUsed","isHebrewUsed","descriptionHebrew","hebrew","descriptionIsPolishUsed","isPolishUsed","descriptionPolish","polish","descriptionIsUkrainianUsed","isUkrainianUsed","descriptionUkrainian","ukrainian","descriptionIsGreekUsed","isGreekUsed","descriptionGreek","greek","descriptionOriginalLanguages","originalLanguages","toDescriptionNameMap","toNameMap","_reward","_releaseDate","_removalDate","_gameStyle","_courseThemeInTheMainArea","_courseThemeInTheSubArea","_amountOfTime","OfficialCourseContainer","courseThemeInMainArea","_map","OfficialCourseLoader","load","GameStyleCompanion","GameStyles","ThemeCompanion","Themes","MysteryMushroomCompanion","MysteryMushrooms","references","Map","index","length","set","createReference","isInProduction","console","info","subArea","courseTheme_subArea","createNameFromContent","createNameFromContentDescription","EMPTY_ARRAY","BULBASAUR","CHARMANDER","SQUIRTLE","KITTY_WHITE","MELODY","CALLIE","MARIE","getValueByName","retrieveReward","Date","Number","substring","createRemovalDate","getValueByAcronym","courseTheme_mainArea","_REFERENCE_MAP","_reference","_englishName","OfficialCourses","StringContainer","REFERENCE_MAP","_classPrivateFieldLoo3","_classPrivateFieldLoo4","englishNameInHtml","getInHtml","_OfficialCourses","NWC_2017","DR_KAWASHIMA_ATHLETIC_TRAINING","WALKIN_WITH_UNDODOG","SQUID_SISTER_VS_BLOOPERS","SHAUN_MOSSY_MOLE_MISCHIEF","HELLO_KITTY_AND_MY_MELODY","POPO_AND_NANA_CLIMBING_CHALLENGE","METAL_RESISTANCE","STARFY_PRINCE_OF_PUFFTOP","YU_AYASAKI_BIG_ADVENTURE","TOADETTE_TREASURE_TRACKER","TWILIGHT_PRINCESS_HD","MARY_O_LUNCH_BREAK","SECRETS_OF_STATUE_MARIO","BARBARA_IN_TOMATOLAND","NISEKOI_CHITOGE_AND_KOSAKIO","NISEKOI_TSGUMI_AND_MARIKA","I_CHOOSE_YOU","TOKAIGI_2016_CONTEST_COURSE_1","TOKAIGI_2016_CONTEST_COURSE_2","TOKAIGI_2016_CONTEST_COURSE_3","TOKAIGI_2016_CONTEST_COURSE_4","PARANORMAL_RESEARCH","ADVENTURE_IN_SARASALAND","COOOOOO_FEAT_YAMAMURA","SOUDWEST_AIR_ADVENTURE","NES_REMIX_EXCITE_BIKE","NES_REMIX_SUPER_MARIO_BROS_2","CAPTAIN_TOAD_TREASURE_TRACKER","WELCOME_TO_SATURN_VALLEY","BELCH_BASE","NINTENDO_BADGE_ARCADE","MA_RIO_HILLS","MERCEDES_BENZ_JUMP_N_DRIVE","MARIO_AND_LUIGI_PAPER_JAM","NES_REMIX","PAX_WEST_2015_OMEGATHON_FINAL_RD","YOSHI_IS_AWESOME","CAT_MARIO_COURSE","CAT_PEACH_COURSE","SUPER_MARIO_KUN_25TH_ANNIVERSARY","TRI_FORCE_HEROES","ARINO_MAKER","ARINO_MAKER_RETURNS","NEW_ARINO_MAKER","SUPER_BAKARHYTHM_LAND","SHIP_LOVE","_CompanionEnum_OfficialCourses","CompanionEnum_OfficialCourses","CompanionEnumByEnglishNameOnly","_classPrivateFieldLoo5","_classPrivateFieldLoo6","viewDisplayAndRouteName","ViewDisplays","SIMPLE_LIST","CARD_LIST","TABLE","appInterpreter","_OtherWordInTheGames$","_OtherWordInTheGames$2","tableHeadersColor","tableCaption","singularName","OtherWordInTheGames","COURSE","singularLowerCaseNameOnReferenceOrNull","singularEnglishName","toLowerCase","pluralName","pluralLowerCaseNameOnReferenceOrNull","pluralEnglishName","values","toArray","createListDimension","default","small","medium","large","extraLarge","extraExtraLarge","createCardListDimension","createCardListContent","enumerable","tableOptions","getAdditionalClass","option","createTableContent","createTableHeader","OfficialCourseApp","_ref","_OtherWordInTheGames$3","_OtherWordInTheGames$4","viewDisplay","course","courses","titleContent","SubMainContainer","reactKey","SimpleList","interpreter","CardList","Table","id"],"sourceRoot":""}