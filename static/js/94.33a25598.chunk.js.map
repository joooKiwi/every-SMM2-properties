{"version":3,"file":"static/js/94.33a25598.chunk.js","mappings":"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","sources":["app/options/SampleCourseAppOption.tsx","core/sampleCourse/SampleCourse.container.ts","core/sampleCourse/SampleCourse.loader.ts","core/sampleCourse/SampleCourses.ts","app/SampleCourseApp.tsx"],"sourcesContent":["import type {CompanionEnumSingleton} from '@joookiwi/enumerable'\nimport {CompanionEnum, Enum}         from '@joookiwi/enumerable'\n\nimport type {AppOption}           from 'app/options/AppOption'\nimport type {Names, Ordinals}     from 'app/options/SampleCourseAppOption.types'\nimport type {SingleHeaderContent} from 'app/tools/table/SimpleHeader'\nimport type {SampleCourses}       from 'core/sampleCourse/SampleCourses'\n\nimport {CommonOptions}                  from 'app/options/CommonOptions'\nimport UnfinishedText, {unfinishedText} from 'app/tools/text/UnfinishedText'\nimport {ProjectLanguages}               from 'lang/ProjectLanguages'\nimport {gameContentTranslation}         from 'lang/components/translationMethods'\n\nexport abstract class SampleCourseAppOption\n    extends Enum<Ordinals, Names>\n    implements AppOption<SampleCourses> {\n\n    //region -------------------- Enum instances --------------------\n\n    public static readonly NUMBER = new class SampleCourseAppOption_Number extends SampleCourseAppOption {\n\n        protected override _createContentOption({reference: {worldNumber, firstNumberInFirst10MarioChallenges,}}: SampleCourses,): ReactElement {\n            if (firstNumberInFirst10MarioChallenges == null)\n                return <span className=\"number-container\">{worldNumber}</span>\n            return <span className=\"number-container\">{worldNumber}<sub className=\"opacity-75\">({firstNumberInFirst10MarioChallenges})</sub></span>\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {\n                key: 'number', element: <span><UnfinishedText>Level number</UnfinishedText><br/><sub className=\"opacity-75\">{ProjectLanguages.current.textInParentheses(unfinishedText('with 1st-time in 10 Mario Challenges',),)}</sub></span>,\n            }\n        }\n\n\n    }()\n    public static readonly NAME = new class SampleCourseAppOption_Name extends SampleCourseAppOption {\n\n        protected override _createContentOption(enumeration: SampleCourses,): ReactElement {\n            return CommonOptions.get.getNameContent(enumeration,)\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return CommonOptions.get.nameHeader\n        }\n\n\n    }()\n    public static readonly GAME_STYLE_AND_AREAS = new class SampleCourseAppOption_GameStyleAndAreas extends SampleCourseAppOption {\n\n        protected override _createContentOption({reference,}: SampleCourses,): ReactElement {\n            const themeInSubArea = reference.themeInSubArea\n            if (themeInSubArea == null)\n                return <div className=\"gameStyleAndAreas-container d-flex\">\n                    {reference.gameStyle.renderSingleComponent}\n                    <div className=\"ps-2\">\n                        {reference.themeInMainArea.renderSingleComponent(true,)}\n                    </div>\n                </div>\n            return <div className=\"gameStyleAndAreas-container d-flex\">\n                {reference.gameStyle.renderSingleComponent}\n                <div className=\"ps-2\">\n                    {reference.themeInMainArea.renderSingleComponent(true,)}\n                </div>\n                <div className=\"ps-1\">\n                    {themeInSubArea.renderSingleComponent(true,)}\n                </div>\n            </div>\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {key: 'gameStyleAndAreas', element: unfinishedText('Game style & areas',),}\n        }\n\n\n    }()\n    public static readonly TIME = new class SampleCourseAppOption_Time extends SampleCourseAppOption {\n\n        protected override _createContentOption({reference,}: SampleCourses,): ReactElement {\n            return <span>{reference.amountOfTime} <UnfinishedText>seconds</UnfinishedText></span>\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {key: 'time', element: gameContentTranslation('time.singular',),}\n        }\n\n\n    }()\n\n    //endregion -------------------- Enum instances --------------------\n    //region -------------------- Companion enum --------------------\n\n    public static CompanionEnum: CompanionEnumSingleton<SampleCourseAppOption, typeof SampleCourseAppOption> = class CompanionEnum_SampleCourseAppOption\n        extends CompanionEnum<SampleCourseAppOption, typeof SampleCourseAppOption> {\n\n        //region -------------------- Singleton usage --------------------\n\n        static #instance?: CompanionEnum_SampleCourseAppOption\n\n        private constructor() {\n            super(SampleCourseAppOption,)\n        }\n\n        public static get get() {\n            return this.#instance ??= new this()\n        }\n\n        //endregion -------------------- Singleton usage --------------------\n\n    }\n\n    //endregion -------------------- Companion enum --------------------\n    //region -------------------- Fields --------------------\n    //endregion -------------------- Fields --------------------\n    //region -------------------- Constructor --------------------\n\n    private constructor() {\n        super()\n    }\n\n    //endregion -------------------- Constructor --------------------\n    //region -------------------- Getter methods --------------------\n    //endregion -------------------- Getter methods --------------------\n    //region -------------------- Methods --------------------\n\n    //region -------------------- App option - content --------------------\n\n    protected abstract _createContentOption(enumeration: SampleCourses,): ReactElement\n\n    public renderContent(enumeration: SampleCourses,): readonly [ReactElement,] {\n        return [this._createContentOption(enumeration,),]\n    }\n\n    //endregion -------------------- App option - content --------------------\n    //region -------------------- App option - table --------------------\n\n    protected abstract _createTableHeaderOption(): SingleHeaderContent\n\n    public renderTableHeader(): SingleHeaderContent {\n        return this._createTableHeaderOption()\n    }\n\n    //endregion -------------------- App option - table --------------------\n\n    //endregion -------------------- Methods --------------------\n\n}","import type {GameStyles}                                                                             from 'core/gameStyle/GameStyles'\nimport type {SampleCourse}                                                                           from 'core/sampleCourse/SampleCourse'\nimport type {PossibleAmountOfTime, PossibleFirstNumberInFirst10MarioChallenges, PossibleWorldNumber} from 'core/sampleCourse/loader.types'\nimport type {Themes}                                                                                 from 'core/theme/Themes'\nimport type {Name}                                                                                   from 'lang/name/Name'\n\nimport {ClassContainingAName} from 'lang/name/ClassContainingAName'\n\nexport class SampleCourseContainer\n    extends ClassContainingAName<string>\n    implements SampleCourse {\n\n    //region -------------------- Fields --------------------\n\n    readonly #worldNumber\n    readonly #firstNumberInFirst10MarioChallenges\n    readonly #gameStyle\n    readonly #themeInMainArea\n    readonly #themeInSubArea\n    readonly #amountOfTime\n\n    //endregion -------------------- Fields --------------------\n    //region -------------------- Constructor --------------------\n\n    public constructor(name: Name<string>,\n                       worldNumber: PossibleWorldNumber,\n                       firstNumberInFirst10MarioChallenges: PossibleFirstNumberInFirst10MarioChallenges,\n                       gameStyle: GameStyles,\n                       themeInMainArea: Themes,\n                       themeInSubArea: NullOr<Themes>,\n                       amountOfTime: PossibleAmountOfTime,) {\n        super(name,)\n        this.#worldNumber = worldNumber\n        this.#firstNumberInFirst10MarioChallenges = firstNumberInFirst10MarioChallenges\n        this.#gameStyle = gameStyle\n        this.#themeInMainArea = themeInMainArea\n        this.#themeInSubArea = themeInSubArea\n        this.#amountOfTime = amountOfTime\n    }\n\n    //endregion -------------------- Constructor --------------------\n    //region -------------------- Getter methods --------------------\n\n    public get worldNumber(): PossibleWorldNumber {\n        return this.#worldNumber\n    }\n\n    public get firstNumberInFirst10MarioChallenges(): PossibleFirstNumberInFirst10MarioChallenges {\n        return this.#firstNumberInFirst10MarioChallenges\n    }\n\n    public get gameStyle(): GameStyles {\n        return this.#gameStyle\n    }\n\n    public get themeInMainArea(): Themes {\n        return this.#themeInMainArea\n    }\n\n    public get themeInSubArea(): NullOr<Themes> {\n        return this.#themeInSubArea\n    }\n\n    public get amountOfTime(): PossibleAmountOfTime {\n        return this.#amountOfTime\n    }\n\n    //endregion -------------------- Getter methods --------------------\n\n}","import file from 'resources/compiled/Sample course (SMM).json'\n\nimport type {LanguageContent}                                                                        from 'core/_template/LanguageContent'\nimport type {PossibleAcronym_GameStyle_SMM1}                                                         from 'core/gameReference/GameReferences.types'\nimport type {PossibleEnglishName_CourseTheme_SMM1}                                                   from 'core/theme/Themes.types'\nimport type {SampleCourse}                                                                           from 'core/sampleCourse/SampleCourse'\nimport type {PossibleAmountOfTime, PossibleFirstNumberInFirst10MarioChallenges, PossibleWorldNumber} from 'core/sampleCourse/loader.types'\nimport type {PossibleEnglishName}                                                                    from 'core/sampleCourse/SampleCourses.types'\nimport type {Loader}                                                                                 from 'util/loader/Loader'\n\nimport {isInProduction}        from 'variables'\nimport {GameStyles}            from 'core/gameStyle/GameStyles'\nimport {SampleCourseContainer} from 'core/sampleCourse/SampleCourse.container'\nimport {Themes}                from 'core/theme/Themes'\nimport {createNameFromContent} from 'lang/name/createNameFromContent'\n\n/**\n * @dependsOn<{@link GameStyles}>\n * @dependsOn<{@link Themes}>\n * @singleton\n */\nexport class SampleCourseLoader\n    implements Loader<ReadonlyMap<PossibleEnglishName, SampleCourse>> {\n\n    //region -------------------- Singleton usage --------------------\n\n    static #instance?: SampleCourseLoader\n\n    private constructor() {}\n\n    public static get get() {\n        return this.#instance ??= new this()\n    }\n\n    //endregion -------------------- Singleton usage --------------------\n\n    #map?: Map<PossibleEnglishName, SampleCourse>\n\n    public load(): ReadonlyMap<PossibleEnglishName, SampleCourse> {\n        if (this.#map != null)\n            return this.#map\n\n        const references = new Map<PossibleEnglishName, SampleCourse>()\n        let index = file.length\n        while (index-- > 0) {\n            const content = file[index] as Content\n            references.set(`Level ${content.worldNumber}`, createReference(content,),)\n        }\n\n        if (!isInProduction)\n            console.info(\n                '-------------------- \"sample course\" has been loaded --------------------\\n',\n                references,\n                '\\n-------------------- \"sample course\" has been loaded --------------------',\n            )\n\n        return this.#map = references\n    }\n}\n\ninterface Content\n    extends LanguageContent {\n\n    readonly worldNumber: PossibleWorldNumber\n    readonly courseNumberInFirst10MarioChallenge: PossibleFirstNumberInFirst10MarioChallenges\n\n    readonly gameStyle: PossibleAcronym_GameStyle_SMM1\n    readonly courseTheme_mainArea: PossibleEnglishName_CourseTheme_SMM1\n    readonly courseTheme_subArea: NullOr<PossibleEnglishName_CourseTheme_SMM1>\n\n    readonly amountOfTime: PossibleAmountOfTime\n\n}\n\nfunction createReference(content: Content,): SampleCourse {\n    const subArea = content.courseTheme_subArea\n\n    return new SampleCourseContainer(\n        createNameFromContent(content, 1, true,),\n        content.worldNumber,\n        content.courseNumberInFirst10MarioChallenge,\n        GameStyles.CompanionEnum.get.getValueByAcronym(content.gameStyle,),\n        Themes.CompanionEnum.get.getValueByName(content.courseTheme_mainArea,),\n        subArea == null ? null : Themes.CompanionEnum.get.getValueByName(subArea,),\n        content.amountOfTime,\n    )\n}\n","import type {CompanionEnumSingleton} from '@joookiwi/enumerable'\nimport {CompanionEnum, Enum}         from '@joookiwi/enumerable'\n\nimport type {ClassWithEnglishName}                 from 'core/ClassWithEnglishName'\nimport type {ClassWithReference}                   from 'core/ClassWithReference'\nimport type {SampleCourse}                         from 'core/sampleCourse/SampleCourse'\nimport type {Names, Ordinals, PossibleEnglishName} from 'core/sampleCourse/SampleCourses.types'\n\nimport {SampleCourseLoader} from 'core/sampleCourse/SampleCourse.loader'\nimport {StringContainer}    from 'util/StringContainer'\n\nexport class SampleCourses\n    extends Enum<Ordinals, Names>\n    implements ClassWithEnglishName<PossibleEnglishName>, ClassWithReference<SampleCourse> {\n\n    //region -------------------- Enum instances --------------------\n\n    public static readonly '1-1' = new SampleCourses('Level 1-1',)\n    public static readonly '1-2' = new SampleCourses('Level 1-2',)\n    public static readonly '1-3' = new SampleCourses('Level 1-3',)\n    public static readonly '1-4' = new SampleCourses('Level 1-4',)\n    public static readonly '2-1' = new SampleCourses('Level 2-1',)\n    public static readonly '2-2' = new SampleCourses('Level 2-2',)\n    public static readonly '2-3' = new SampleCourses('Level 2-3',)\n    public static readonly '2-4' = new SampleCourses('Level 2-4',)\n    public static readonly '3-1' = new SampleCourses('Level 3-1',)\n    public static readonly '3-2' = new SampleCourses('Level 3-2',)\n    public static readonly '3-3' = new SampleCourses('Level 3-3',)\n    public static readonly '3-4' = new SampleCourses('Level 3-4',)\n    public static readonly '4-1' = new SampleCourses('Level 4-1',)\n    public static readonly '4-2' = new SampleCourses('Level 4-2',)\n    public static readonly '4-3' = new SampleCourses('Level 4-3',)\n    public static readonly '4-4' = new SampleCourses('Level 4-4',)\n    public static readonly '5-1' = new SampleCourses('Level 5-1',)\n    public static readonly '5-2' = new SampleCourses('Level 5-2',)\n    public static readonly '5-3' = new SampleCourses('Level 5-3',)\n    public static readonly '5-4' = new SampleCourses('Level 5-4',)\n    public static readonly '6-1' = new SampleCourses('Level 6-1',)\n    public static readonly '6-2' = new SampleCourses('Level 6-2',)\n    public static readonly '6-3' = new SampleCourses('Level 6-3',)\n    public static readonly '6-4' = new SampleCourses('Level 6-4',)\n    public static readonly '7-1' = new SampleCourses('Level 7-1',)\n    public static readonly '7-2' = new SampleCourses('Level 7-2',)\n    public static readonly '7-3' = new SampleCourses('Level 7-3',)\n    public static readonly '7-4' = new SampleCourses('Level 7-4',)\n    public static readonly '8-1' = new SampleCourses('Level 8-1',)\n    public static readonly '8-2' = new SampleCourses('Level 8-2',)\n    public static readonly '8-3' = new SampleCourses('Level 8-3',)\n    public static readonly '8-4' = new SampleCourses('Level 8-4',)\n    public static readonly '9-1' = new SampleCourses('Level 9-1',)\n    public static readonly '9-2' = new SampleCourses('Level 9-2',)\n    public static readonly '9-3' = new SampleCourses('Level 9-3',)\n    public static readonly '9-4' = new SampleCourses('Level 9-4',)\n    public static readonly '10-1' = new SampleCourses('Level 10-1',)\n    public static readonly '10-2' = new SampleCourses('Level 10-2',)\n    public static readonly '10-3' = new SampleCourses('Level 10-3',)\n    public static readonly '10-4' = new SampleCourses('Level 10-4',)\n    public static readonly '11-1' = new SampleCourses('Level 11-1',)\n    public static readonly '11-2' = new SampleCourses('Level 11-2',)\n    public static readonly '11-3' = new SampleCourses('Level 11-3',)\n    public static readonly '11-4' = new SampleCourses('Level 11-4',)\n    public static readonly '12-1' = new SampleCourses('Level 12-1',)\n    public static readonly '12-2' = new SampleCourses('Level 12-2',)\n    public static readonly '12-3' = new SampleCourses('Level 12-3',)\n    public static readonly '12-4' = new SampleCourses('Level 12-4',)\n    public static readonly '13-1' = new SampleCourses('Level 13-1',)\n    public static readonly '13-2' = new SampleCourses('Level 13-2',)\n    public static readonly '13-3' = new SampleCourses('Level 13-3',)\n    public static readonly '13-4' = new SampleCourses('Level 13-4',)\n    public static readonly '14-1' = new SampleCourses('Level 14-1',)\n    public static readonly '14-2' = new SampleCourses('Level 14-2',)\n    public static readonly '14-3' = new SampleCourses('Level 14-3',)\n    public static readonly '14-4' = new SampleCourses('Level 14-4',)\n    public static readonly '15-1' = new SampleCourses('Level 15-1',)\n    public static readonly '15-2' = new SampleCourses('Level 15-2',)\n    public static readonly '15-3' = new SampleCourses('Level 15-3',)\n    public static readonly '15-4' = new SampleCourses('Level 15-4',)\n    public static readonly '16-1' = new SampleCourses('Level 16-1',)\n    public static readonly '16-2' = new SampleCourses('Level 16-2',)\n    public static readonly '16-3' = new SampleCourses('Level 16-3',)\n    public static readonly '16-4' = new SampleCourses('Level 16-4',)\n    public static readonly '17-1' = new SampleCourses('Level 17-1',)\n    public static readonly '17-2' = new SampleCourses('Level 17-2',)\n    public static readonly '17-3' = new SampleCourses('Level 17-3',)\n    public static readonly '17-4' = new SampleCourses('Level 17-4',)\n\n    //endregion -------------------- Enum instances --------------------\n    //region -------------------- Companion enum --------------------\n\n    public static readonly CompanionEnum: CompanionEnumSingleton<SampleCourses, typeof SampleCourses> = class CompanionEnum_SampleCourses\n        extends CompanionEnum<SampleCourses, typeof SampleCourses> {\n\n        //region -------------------- Singleton usage --------------------\n\n        static #instance?: CompanionEnum_SampleCourses\n\n        private constructor() {\n            super(SampleCourses,)\n        }\n\n        public static get get() {\n            return this.#instance ??= new CompanionEnum_SampleCourses()\n        }\n\n        //endregion -------------------- Singleton usage --------------------\n\n    }\n\n    //endregion -------------------- Companion enum --------------------\n    //region -------------------- Fields --------------------\n\n    static #REFERENCE_MAP?: ReadonlyMap<PossibleEnglishName, SampleCourse>\n\n    #reference?: SampleCourse\n\n    readonly #englishName\n\n    //endregion -------------------- Fields --------------------\n    //region -------------------- Constructor --------------------\n\n    public constructor(englishName: PossibleEnglishName,) {\n        super()\n        this.#englishName = new StringContainer(englishName,)\n    }\n\n    //endregion -------------------- Constructor --------------------\n    //region -------------------- Getter methods --------------------\n\n    public static get REFERENCE_MAP(): ReadonlyMap<PossibleEnglishName, SampleCourse> {\n        return this.#REFERENCE_MAP ??= SampleCourseLoader.get.load()\n    }\n\n    public get reference(): SampleCourse {\n        return this.#reference ??= SampleCourses.REFERENCE_MAP.get(this.englishName,)!\n    }\n\n\n    public get englishName(): PossibleEnglishName {\n        return this.#englishName.get\n    }\n\n    public get englishNameInHtml(): string {\n        return this.#englishName.getInHtml\n    }\n\n    //endregion -------------------- Getter methods --------------------\n    //region -------------------- Methods --------------------\n    //endregion -------------------- Methods --------------------\n\n}","import type {AppInterpreterWithTable}                              from 'app/interpreter/AppInterpreterWithTable'\nimport type {PossibleDimensionOnCardList, PossibleDimensionOnList} from 'app/interpreter/DimensionOnList'\nimport type {PossibleRouteName}                                    from 'route/EveryRoutes.types'\n\nimport {SampleCourseAppOption}  from 'app/options/SampleCourseAppOption'\nimport {unfinishedText}         from 'app/tools/text/UnfinishedText'\nimport {AbstractTableApp}       from 'app/withInterpreter/AbstractTableApp'\nimport {OtherWordInTheGames}    from 'core/otherWordInTheGame/OtherWordInTheGames'\nimport {SampleCourses}          from 'core/sampleCourse/SampleCourses'\nimport {gameContentTranslation} from 'lang/components/translationMethods'\n\n//region -------------------- Deconstruction imports --------------------\n\nconst {COURSE,} = OtherWordInTheGames\n\n//endregion -------------------- Deconstruction imports --------------------\n\nexport default class SampleCourseApp\n    extends AbstractTableApp<AppInterpreterWithTable<SampleCourses>> {\n\n    //region -------------------- Create methods --------------------\n\n    protected override _createKey(): string {\n        return 'sampleCourse'\n    }\n\n\n    protected override _createSimpleListRouteName(): PossibleRouteName {\n        return 'everySampleCourse (list)'\n    }\n\n    protected override _createCardListRouteName(): PossibleRouteName {\n        return 'everySampleCourse (card)'\n    }\n\n    protected override _createTableRouteName(): PossibleRouteName {\n        return 'everySampleCourse (table)'\n    }\n\n\n    protected override _createTitleContent(): ReactElementOrString {\n        const singularCourseName = COURSE.singularNameOnReferenceOrNull ?? unfinishedText(COURSE.singularEnglishName), singularCourseLowerCaseName = COURSE.singularLowerCaseNameOnReferenceOrNull ?? singularCourseName.toLowerCase()\n        return gameContentTranslation('sample course.all', {SingularName: singularCourseName, singularName: singularCourseLowerCaseName,},)\n    }\n\n\n    protected override _createAppOptionInterpreter() {\n        return new class SampleCourseInterpreter implements AppInterpreterWithTable<SampleCourses, SampleCourseAppOption> {\n\n            public get content() {\n                return SampleCourses.CompanionEnum.get.values.toArray()\n            }\n\n            //region -------------------- List interpreter --------------------\n\n            public createListDimension(): PossibleDimensionOnList {\n                return {\n                    medium: 3,\n                    large: null,\n                    extraLarge: null,\n                }\n            }\n\n            //endregion -------------------- List interpreter --------------------\n            //region -------------------- Card list interpreter --------------------\n\n            public createCardListDimension(): PossibleDimensionOnCardList {\n                return 'list'\n            }\n\n            public createCardListContent(enumerable: SampleCourses,) {\n                return <></>//TODO add card list content\n            }\n\n            //endregion -------------------- Card list interpreter --------------------\n            //region -------------------- Table interpreter --------------------\n\n            public readonly tableHeadersColor = 'info' satisfies BootstrapThemeColor\n            public readonly tableColor = 'primary' satisfies BootstrapThemeColor\n\n            public get tableCaption() {\n                const singularCourseName = COURSE.singularNameOnReferenceOrNull ?? unfinishedText(COURSE.singularEnglishName), singularCourseLowerCaseName = COURSE.singularLowerCaseNameOnReferenceOrNull ?? singularCourseName.toLowerCase()\n                return gameContentTranslation('sample course.all', {SingularName: singularCourseName, singularName: singularCourseLowerCaseName,},) satisfies ReactElementOrString\n            }\n\n            public get tableOptions(): readonly SampleCourseAppOption[] {\n                return [\n                    SampleCourseAppOption.NUMBER,\n                    SampleCourseAppOption.NAME,\n                    SampleCourseAppOption.GAME_STYLE_AND_AREAS,\n                    SampleCourseAppOption.TIME,\n                ]\n            }\n\n            public createNewTableContent(content: SampleCourses, option: SampleCourseAppOption,) {\n                return option.renderContent(content,)\n            }\n\n            public createTableHeader(option: SampleCourseAppOption,) {\n                return option.renderTableHeader()\n            }\n\n            //endregion -------------------- Table interpreter --------------------\n\n        }()\n    }\n\n    //endregion -------------------- Create methods --------------------\n\n}\n"],"names":["SampleCourseAppOption","_ref","_inherits","_super","_createSuper","_classCallCheck","call","_createClass","key","value","enumeration","this","_createContentOption","_createTableHeaderOption","Enum","NUMBER","_SampleCourseAppOptio","SampleCourseAppOption_Number","_super2","apply","arguments","_ref2","_ref2$reference","reference","worldNumber","firstNumberInFirst10MarioChallenges","_jsx","className","children","_jsxs","element","UnfinishedText","ProjectLanguages","current","textInParentheses","unfinishedText","NAME","_SampleCourseAppOptio2","SampleCourseAppOption_Name","_super3","CommonOptions","get","getNameContent","nameHeader","GAME_STYLE_AND_AREAS","_SampleCourseAppOptio3","SampleCourseAppOption_GameStyleAndAreas","_super4","_ref3","themeInSubArea","gameStyle","renderSingleComponent","themeInMainArea","TIME","_SampleCourseAppOptio4","SampleCourseAppOption_Time","_super5","_ref4","amountOfTime","gameContentTranslation","CompanionEnum","_instance","_classPrivateFieldLooseKey","_class","_CompanionEnum","CompanionEnum_SampleCourseAppOption","_super6","_classPrivateFieldLoo","_classPrivateFieldLoo2","_classPrivateFieldLooseBase","Object","defineProperty","writable","_worldNumber","_firstNumberInFirst10MarioChallenges","_gameStyle","_themeInMainArea","_themeInSubArea","_amountOfTime","SampleCourseContainer","name","_this","_assertThisInitialized","ClassContainingAName","_map","SampleCourseLoader","references","Map","index","file","length","content","set","concat","createReference","isInProduction","console","info","subArea","courseTheme_subArea","createNameFromContent","courseNumberInFirst10MarioChallenge","GameStyles","getValueByAcronym","Themes","getValueByName","courseTheme_mainArea","_REFERENCE_MAP","_reference","_englishName","SampleCourses","englishName","StringContainer","REFERENCE_MAP","getInHtml","_classPrivateFieldLoo3","_classPrivateFieldLoo4","load","CompanionEnum_SampleCourses","_classPrivateFieldLoo5","_classPrivateFieldLoo6","COURSE","OtherWordInTheGames","SampleCourseApp","_AbstractTableApp","_COURSE$singularNameO","_COURSE$singularLower","singularCourseName","singularNameOnReferenceOrNull","singularEnglishName","singularCourseLowerCaseName","singularLowerCaseNameOnReferenceOrNull","toLowerCase","SingularName","singularName","SampleCourseInterpreter","tableHeadersColor","tableColor","values","toArray","medium","large","extraLarge","enumerable","_Fragment","_COURSE$singularNameO2","_COURSE$singularLower2","option","renderContent","renderTableHeader","AbstractTableApp"],"sourceRoot":""}