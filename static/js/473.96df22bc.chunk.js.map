{"version":3,"file":"static/js/473.96df22bc.chunk.js","mappings":"2VAmBOA,EAAoBC,EAAAA,EAAiBC,UAErC,MAAeC,UACVC,EAAAA,KA4EAC,WAAAA,GACJC,OACJ,CAWOC,aAAAA,CAAcC,GACjB,MAAO,CAACC,KAAKC,qBAAqBF,GACtC,CAOOG,iBAAAA,GACH,OAAOF,KAAKG,0BAChB,EAMHC,EA3GqBV,EAAAA,EAMKW,KAAmB,IAAI,cAAwCX,EAE/DO,oBAAAA,CAAqBF,GACpC,OAAOO,EAAAA,EAAAA,KAACC,EAAAA,EAAc,CAACC,UAAWT,GACtC,CAEmBI,wBAAAA,GACf,OAAOM,EAAAA,EAAcC,IAAIC,UAC7B,GAdcjB,EAiBKkB,KAAoB,IAAI,cAAsClB,EAE9DO,oBAAAA,CAAqBF,GACpC,OAAOU,EAAAA,EAAcC,IAAIG,eAAed,EAC5C,CAEmBI,wBAAAA,GACf,OAAOM,EAAAA,EAAcC,IAAII,UAC7B,GAzBcpB,EA4BKqB,kBAAoB,IAAI,cAAiDrB,EAEzEO,oBAAAA,CAAoBe,GAA6B,IAA5B,UAACR,GAAuBQ,EAC5D,OAAOV,EAAAA,EAAAA,KAACW,EAAAA,EAAoB,CAACC,UAAWV,GAC5C,CAEmBL,wBAAAA,GACf,MAAO,CACHgB,IAAK,kBACLC,SAASC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qCAAoCC,SAAA,EACxDjB,EAAAA,EAAAA,KAACkB,EAAAA,EAAU,CAAChB,UAAWiB,EAAAA,EAAOC,UAC9BpB,EAAAA,EAAAA,KAACqB,EAAAA,EAAS,CAACnB,UAAWoB,EAAAA,EAAMC,WAEhCC,SAASC,EAAAA,EAAAA,IAAuB,6BAA8B,CAC1DC,OAAOC,EAAAA,EAAAA,GAAe,SACtBC,OAAQ3C,EAAkB4C,QAAQzB,IAAIe,EAAAA,EAAOC,OAAOlB,WAAY4B,gBAG5E,GA9Cc1C,EAqDK2C,eAAaC,GAAAC,EAAAA,EAAAA,GAAA,YAAAC,EAA0E,MAAMC,UACxGJ,EAAAA,cAMAzC,WAAAA,GACJC,MAAMH,EACV,CAEA,cAAkBgB,GAAO,IAADgC,EAAAC,EACpB,OAAW,QAAXA,GAAAD,GAAAE,EAAAA,EAAAA,GAAO5C,KAAIsC,IAAAA,UAAA,IAAAK,EAAAA,EAAAD,EAAAJ,GAAe,IAAIG,CAClC,GAIHI,OAAAC,eAAAN,EAAAF,EAAA,CAAAS,UAAA,EAAAC,WAAA,IAAAR,GCrFE,MAAMS,UACDtD,EAAAA,KAkDDC,WAAAA,GACHC,OACJ,CAKA,kBAAWqD,GACP,MAAO,SACX,CAEA,aAAWC,GACP,MAAO,SACX,CAKA,sBAAWC,GACP,MAAM,6BACV,CAEA,iBAAWC,GACP,MAAM,yBACV,EAIHC,EA/EYL,EAAAA,EAKcM,wDAA0D,IAAI,cAA4EN,EAE7J,aAAoBE,GAChB,MAAO,SACX,CAEA,sBAAoBC,GAChB,OAAO,IACX,GAbKH,EAgBcO,oBAAsB,IAAI,cAA8CP,EAE3F,iBAAoBI,GAChB,OAAO,IACX,GApBKJ,EA2BcZ,eAAaC,GAAAC,EAAAA,EAAAA,GAAA,YAAAkB,EAAkE,MAAMC,UAChGrB,EAAAA,cAMAzC,WAAAA,GACJC,MAAMoD,EACV,CAEA,cAAkBvC,GAAO,IAADgC,EAAAC,EACpB,OAAW,QAAXA,GAAAD,GAAAE,EAAAA,EAAAA,GAAO5C,KAAIsC,IAAAA,UAAA,IAAAK,EAAAA,EAAAD,EAAAJ,GAAe,IAAIoB,CAClC,GAIHb,OAAAC,eAAAW,EAAAnB,EAAA,CAAAS,UAAA,EAAAC,WAAA,IAAAS,G,wIChBEE,EAASC,EAAAA,EAAWD,IACpBE,EAASC,EAAAA,EAAMD,KACfE,EAASD,EAAAA,EAAMC,KACfC,EAASF,EAAAA,EAAME,OACfC,EAASL,EAAAA,EAAWK,MACpBC,EAASN,EAAAA,EAAWM,IACpBC,EAASP,EAAAA,EAAWO,KACpBC,EAASR,EAAAA,EAAWQ,IACpBC,EAAST,EAAAA,EAAWS,MAAKC,GAAA/B,EAAAA,EAAAA,GAAA,SAEhC,MAAMgC,EAUK3E,WAAAA,CAAY4E,GAPnB3B,OAAAC,eAAA,KAAAwB,EAAA,CAAAvB,UAAA,EAAAC,WAAA,IAqCA,KAEgByB,kBAAoB,OAAM,KAC1BC,cAAe3C,EAAAA,EAAAA,IAAuB,mBAhClDa,EAAAA,EAAAA,GAAA5C,KAAIsE,GAAAA,GAAUE,CAClB,CAIA,WAAWG,GACP,MAAMH,GAAK5B,EAAAA,EAAAA,GAAG5C,KAAIsE,GAAAA,GAClB,OAAOM,EAAAA,EAAAA,eAAcjB,GAAK3C,IAAA,IAAC,UAACR,GAAWQ,EAAA,OACnCwD,EAAMK,SAASrE,EAAW,GAClC,CAIOsE,uBAAAA,GACH,MAAO,CACHC,QAAS,EACTC,MAAO,EACPC,OAAQ,EACRC,WAAY,EAEpB,CAEOC,qBAAAA,CAAsBC,GACzB,OAAO9E,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,YAAY+D,GAAE,aAAAC,OAAeF,EAAWG,mBAAoBhE,UAC9EjB,EAAAA,EAAAA,KAACC,EAAAA,EAAc,CAACC,UAAW4E,KAEnC,CAQA,gBAAWI,GACP,MAAO,CACH9F,EAAmBW,KACnBX,EAAmBkB,KACnBlB,EAAmBqB,kBAE3B,CAEO0E,kBAAAA,CAAmBd,EAAqBe,GAC3C,OAAOA,EAAO5F,cAAc6E,EAChC,CAEOgB,iBAAAA,CAAkBD,GACrB,OAAOA,EAAOxF,mBAClB,EAMJ,MAAM0F,EAA0B,CAC5B,CAACC,EAAAA,EAAaC,YAAa,yBAC3B,CAACD,EAAAA,EAAaE,UAAW,yBACzB,CAACF,EAAAA,EAAaG,MAAO,2BAIV,SAASC,EAAYC,GAA+C,IAA9C,YAACC,EAAW,MAAE3B,GAA4B0B,EAC3E,MAAME,EAAO5B,EAAM6B,QACbpD,EAAeO,oBACfP,EAAeM,wDAErB,OAAOjD,EAAAA,EAAAA,KAACgG,EAAAA,EAAgB,CAACC,SAAS,YAAYX,wBAAyBA,EAAyBO,YAAaA,EACpFK,cAAczE,EAAAA,EAAAA,IAAuB,kBACrC0E,aAAanG,EAAAA,EAAAA,KAACoG,GAAoB,CAACP,YAAaA,EAAaC,KAAMA,IACnEO,cAAcrG,EAAAA,EAAAA,KAACsG,GAAqB,CAACR,KAAMA,IAAQ7E,UACxEjB,EAAAA,EAAAA,KAACuG,EAAU,CAACV,YAAaA,EAAa3B,MAAOA,KAErD,CAGA,SAASqC,EAAUC,GAA+E,IAA9E,YAACX,EAAW,MAAE3B,GAA4DsC,EAC1F,MAAMC,EAAiB,IAAIxC,EAAwBC,GAEnD,OAAI2B,IAAgBN,EAAAA,EAAaC,aACtBxF,EAAAA,EAAAA,KAAC0G,GAAa,CAACC,MAAOF,EAAepC,UAC5CwB,IAAgBN,EAAAA,EAAaE,WACtBzF,EAAAA,EAAAA,KAAC4G,EAAAA,EAAQ,CAACX,SAAS,YAAYY,YAAaJ,KAChDzG,EAAAA,EAAAA,KAAC8G,EAAAA,EAAK,CAAC/B,GAAG,kBAAkB8B,YAAaJ,GACpD,CAYA,SAASC,GAAaK,GAAsC,IAArC,MAACJ,GAAgCI,EACpD,OAAO/G,EAAAA,EAAAA,KAACgH,EAAAA,EAAI,CAACC,UAAU,YAAYN,MAAOA,EAAOO,eAAa,EAAAjG,SAAEkG,IAC5DpG,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iCAAgCC,SAAA,EAC3CjB,EAAAA,EAAAA,KAACoH,EAAAA,EAAa,CAACrC,GAAG,iBAAiBsC,KAAMF,EAAGjH,UAAWoH,mBAAmB,SAC1EtH,EAAAA,EAAAA,KAACC,EAAAA,EAAc,CAACC,UAAWiH,QAGvC,CAeA,SAASf,GAAoBmB,GAAyD,IAADC,EAAAC,EAAA,IAAvD,YAAC5B,EAAW,KAAEC,GAAsCyB,EAC9E,MAAMG,EAA0E,QAApEF,EAAGG,EAAAA,EAAoBC,OAAOC,8CAAsC,IAAAL,EAAAA,GAAI7F,EAAAA,EAAAA,GAAegG,EAAAA,EAAoBC,OAAOE,oBAAoBhG,eAC5IiG,EAA0E,QAAlEN,EAAGE,EAAAA,EAAoBC,OAAOI,4CAAoC,IAAAP,EAAAA,GAAI9F,EAAAA,EAAAA,GAAegG,EAAAA,EAAoBC,OAAOK,kBAAkBnG,eAE1IoG,EAAmBpC,EAAKhD,mBACxBqF,EAAWrC,EAAK/C,cAEhBqF,EAAWvC,IAAgBN,EAAAA,EAAaC,YAAc,KAAO,wBAC7D6C,EAAWxC,IAAgBN,EAAAA,EAAaE,UAAY,KAAO,wBAC3D6C,EAAYzC,IAAgBN,EAAAA,EAAaG,MAAQ,KAAO,yBAE9D,OAAO3E,EAAAA,EAAAA,MAAAwH,EAAAA,SAAA,CAAAtH,SAAA,EACHF,EAAAA,EAAAA,MAAA,KAAAE,SAAA,EACKQ,EAAAA,EAAAA,IAAuB,oCAAqC,CACzD+G,YAAYxI,EAAAA,EAAAA,KAAA,MAAAiB,UAAsBQ,EAAAA,EAAAA,IAAuB,qBAAsBK,eAA3D,cACpB2G,UAAUzI,EAAAA,EAAAA,KAAC0I,EAAAA,EAAU,CAAgB3D,GAAG,uBAAuB4D,UAAWT,EAAiBjH,UAACjB,EAAAA,EAAAA,KAAC4I,EAAAA,EAAS,CAAC1I,UAAWqD,KAAxF,YAC1BsF,YAAY7I,EAAAA,EAAAA,KAAC0I,EAAAA,EAAU,CAAkB3D,GAAG,yBAAyB4D,UAAWT,EAAiBjH,UAACjB,EAAAA,EAAAA,KAAC4I,EAAAA,EAAS,CAAC1I,UAAWwD,KAA5F,cAC5ByE,UAAUnI,EAAAA,EAAAA,KAAC0I,EAAAA,EAAU,CAAgB3D,GAAG,uBAAuB4D,UAAWR,EAASlH,UAACjB,EAAAA,EAAAA,KAAC4I,EAAAA,EAAS,CAAC1I,UAAWuD,KAAhF,eAE7BhC,EAAAA,EAAAA,IAAuB,qCAAsC,CAC1DqH,WAAW9I,EAAAA,EAAAA,KAAC+I,EAAAA,EAAQ,CAAiB9B,UAAU,YAAY0B,UAAU,mCAAmCK,MAAM,UAAS/H,UAACjB,EAAAA,EAAAA,KAACC,EAAAA,EAAc,CAACC,UAAW6D,KAA1H,aACzBoE,UAAUnI,EAAAA,EAAAA,KAAC0I,EAAAA,EAAU,CAAgB3D,GAAG,6BAA6B4D,UAAWR,EAASlH,UAACjB,EAAAA,EAAAA,KAAC4I,EAAAA,EAAS,CAAC1I,UAAWuD,KAAtF,eAE7BhC,EAAAA,EAAAA,IAAuB,sCAAuC,CAC3DwH,YAAYjJ,EAAAA,EAAAA,KAAC+I,EAAAA,EAAQ,CAAmB9B,UAAU,aAAa0B,UAAU,cAAcK,MAAM,UAAS/H,SAAEyG,GAA9E,cAC1BwB,cAAclJ,EAAAA,EAAAA,KAAC+I,EAAAA,EAAQ,CAAoB9B,UAAU,aAAa0B,UAAU,cAAcK,MAAM,UAAS/H,SAAE8G,GAA/E,gBAC5BoB,SAASnJ,EAAAA,EAAAA,KAAC+I,EAAAA,EAAQ,CAAe9B,UAAU,UAAU0B,UAAU,iCAAiCK,MAAM,UAAS/H,UAACjB,EAAAA,EAAAA,KAACC,EAAAA,EAAc,CAACC,UAAW0D,KAApH,WACvBwF,UAAUpJ,EAAAA,EAAAA,KAAC+I,EAAAA,EAAQ,CAAgB9B,UAAU,WAAW0B,UAAU,iCAAiCK,MAAM,UAAS/H,UAACjB,EAAAA,EAAAA,KAACC,EAAAA,EAAc,CAACC,UAAW2D,KAAtH,YACxBwF,SAASrJ,EAAAA,EAAAA,KAAC+I,EAAAA,EAAQ,CAAe9B,UAAU,UAAU0B,UAAU,iCAAiCK,MAAM,UAAS/H,UAACjB,EAAAA,EAAAA,KAACC,EAAAA,EAAc,CAACC,UAAW4D,KAApH,WACvBwF,WAAWtJ,EAAAA,EAAAA,KAAC+I,EAAAA,EAAQ,CAAiB9B,UAAU,YAAY0B,UAAU,iCAAiCK,MAAM,UAAS/H,UAACjB,EAAAA,EAAAA,KAACC,EAAAA,EAAc,CAACC,UAAWyD,KAAxH,aACzBmF,WAAW9I,EAAAA,EAAAA,KAAC+I,EAAAA,EAAQ,CAAiB9B,UAAU,YAAY0B,UAAU,mCAAmCK,MAAM,UAAS/H,UAACjB,EAAAA,EAAAA,KAACC,EAAAA,EAAc,CAACC,UAAW6D,KAA1H,mBAGjC/D,EAAAA,EAAAA,KAAA,KAAAiB,UAAIQ,EAAAA,EAAAA,IAAuB,kCAAmC,CAC1D2G,UAAUpI,EAAAA,EAAAA,KAAC+I,EAAAA,EAAQ,CAAgB9B,UAAU,WAAW0B,UAAWP,EAAUY,MAAM,UAAS/H,UAAEsI,EAAAA,EAAAA,IAAmB,2BAA4BzH,eAArH,YACxBuG,UAAUrI,EAAAA,EAAAA,KAAC+I,EAAAA,EAAQ,CAAgB9B,UAAU,WAAW0B,UAAWN,EAAUW,MAAM,UAAS/H,UAAEsI,EAAAA,EAAAA,IAAmB,2BAA4BzH,eAArH,YACxB0H,WAAWxJ,EAAAA,EAAAA,KAAC+I,EAAAA,EAAQ,CAAiB9B,UAAU,YAAY0B,UAAWN,EAAUW,MAAM,UAAS/H,UAAEsI,EAAAA,EAAAA,IAAmB,yBAA0BzH,eAArH,aACzBwG,WAAWtI,EAAAA,EAAAA,KAAC+I,EAAAA,EAAQ,CAAiB9B,UAAU,YAAY0B,UAAWL,EAAWU,MAAM,UAAS/H,UAAEsI,EAAAA,EAAAA,IAAmB,4BAA6BzH,eAAzH,mBAGrC,CAaA,SAASwE,GAAqBmD,GAA6C,IAA5C,KAAC3D,GAAuC2D,EACnE,OAAO1I,EAAAA,EAAAA,MAAA,OAAKgE,GAAG,+CAA+C/D,UAAU,oDAAmDC,SAAA,EACvHF,EAAAA,EAAAA,MAAC2I,EAAAA,EAAU,CAACzC,UAAU,gBAAgB0B,UAAW7C,EAAKhD,mBAAoBkG,MAAOlD,EAAKlD,eAAe3B,SAAA,EACjGjB,EAAAA,EAAAA,KAAC4I,EAAAA,EAAS,CAAC1I,UAAWqD,KACtBvD,EAAAA,EAAAA,KAAC4I,EAAAA,EAAS,CAAC1I,UAAWwD,QAE1B1D,EAAAA,EAAAA,KAAC0J,EAAAA,EAAU,CAACzC,UAAU,WAAW0B,UAAW7C,EAAK/C,cAAeiG,MAAOlD,EAAKjD,UAAU5B,UAClFjB,EAAAA,EAAAA,KAAC4I,EAAAA,EAAS,CAAC1I,UAAWuD,QAGlC,C,sECnNe,SAASiG,EAAUhJ,GAA8H,IAA7H,UAACuG,EAAS,UAAE0B,EAAS,MAAEK,EAAK,SAAE/H,GAA2FP,EACxJ,MAAMqE,EAAE,GAAAC,OAAMiC,EAAS,WACjBjG,EAAS,WAAAgE,OAAcgE,EAAK,gBAElC,OAAiB,MAAbL,GACO3I,EAAAA,EAAAA,KAAA,UAAQ2J,KAAK,SAAS5E,GAAIA,EAAI/D,UAAWA,EAAW4I,UAAQ,EAAA3I,SAAEA,KAClEjB,EAAAA,EAAAA,KAAC6J,EAAAA,GAAI,CAACF,KAAK,SAAS5E,GAAIA,EAAI/D,UAAWA,EAAW8I,IAAIC,EAAAA,EAAAA,GAAcpB,GAAY1H,SAAEA,GAC7F,C,sECPe,SAAS8H,EAAQrI,GAA2H,IAA1H,UAACuG,EAAS,UAAE0B,EAAS,MAAEK,EAAK,SAAE/H,GAAwFP,EACnJ,MAAMqE,EAAE,GAAAC,OAAMiC,EAAS,SAEvB,OAAiB,MAAb0B,GACO3I,EAAAA,EAAAA,KAAA,QAAM+E,GAAIA,EAAI/D,UAAU,4BAA2BC,SAAEA,KACzDjB,EAAAA,EAAAA,KAAC6J,EAAAA,GAAI,CAAC9E,GAAIA,EAAI/D,UAAS,QAAAgE,OAAUgE,GAASc,IAAIC,EAAAA,EAAAA,GAAcpB,GAAY1H,SAAEA,GACrF,C,sECRe,SAASyH,EAAUhI,GAA+G,IAA9G,GAACqE,EAAE,UAAE4D,EAAS,SAAE1H,GAA0FP,EACzI,OAAiB,MAAbiI,GACO3I,EAAAA,EAAAA,KAAA,QAAM+E,GAAIA,EAAG9D,SAAEA,KACnBjB,EAAAA,EAAAA,KAAC6J,EAAAA,GAAI,CAAC9E,GAAIA,EAAI+E,IAAIC,EAAAA,EAAAA,GAAcpB,GAAY1H,SAAEA,GACzD,C,4DCFe,SAASN,EAAqBqJ,GACzC,MAAO,cAAeA,GAChBhK,EAAAA,EAAAA,KAACiK,EAAsB,IAAKD,KAC5BhK,EAAAA,EAAAA,KAACkK,EAAkB,IAAKF,GAClC,CAEA,SAASC,EAAsBvJ,GAA6G,IAA3GE,WAAYuJ,8BAA+BC,IAA4D1J,EACpI,OAAyB,MAAlB0J,EAAyB,MAAOpK,EAAAA,EAAAA,KAAAuI,EAAAA,SAAA,CAAAtH,UAAGQ,EAAAA,EAAAA,IAAuB,qCAADuD,OAAsCoF,KAC1G,CAEA,SAASF,EAAkBtE,GAA8D,IAADyE,EAAA,IAA3DC,OAAO,OAACC,IAAgD3E,EACjF,OAAiC,QAAjCyE,EAAa,OAANE,QAAM,IAANA,OAAM,EAANA,EAAQC,0BAAkB,IAAAH,EAAAA,EAAI,IACzC,C,sEC5BOI,EAAeC,EAAAA,EAAMD,aAYb,SAASpJ,EAASX,GAAiD,IAAhD,UAACR,EAAS,UAAEc,GAAgCN,EAC1E,OAAiB,MAAbR,EACO,MACJF,EAAAA,EAAAA,KAAC2K,EAAAA,EAAK,CAACC,KAAM1K,EAAU2K,UAAW7J,UAAS,cAAAgE,OAAgB9E,EAAU+E,kBAAiB,UAAAD,OAAsB,MAAbhE,EAAoByJ,EAAY,IAAAzF,OAAOhE,KACjJ,C","sources":["app/options/GameStyleAppOption.tsx","app/property/GameStyleGames.ts","app/GameStyleApp.tsx","app/tools/button/LinkButton.tsx","app/tools/text/LinkText.tsx","app/tools/text/TextOrLink.tsx","core/nightEffect/NightEffect.component.tsx","core/time/component/TimeImage.tsx"],"sourcesContent":["import type {CompanionEnumSingleton} from '@joookiwi/enumerable'\nimport {CompanionEnum, Enum}         from '@joookiwi/enumerable'\n\nimport type {AppOption}           from 'app/options/AppOption'\nimport type {Names, Ordinals}     from 'app/options/GameStyleAppOption.types'\nimport type {SingleHeaderContent} from 'app/tools/table/SimpleHeader'\nimport type {GameStyles}          from 'core/gameStyle/GameStyles'\n\nimport {CommonOptions}          from 'app/options/CommonOptions'\nimport {unfinishedText}         from 'app/tools/text/UnfinishedText'\nimport GameStyleImage           from 'core/gameStyle/component/GameStyleImage'\nimport NightEffectComponent     from 'core/nightEffect/NightEffect.component'\nimport {Themes}                 from 'core/theme/Themes'\nimport ThemeImage               from 'core/theme/component/ThemeImage'\nimport {Times}                  from 'core/time/Times'\nimport TimeImage                from 'core/time/component/TimeImage'\nimport {ProjectLanguages}       from 'lang/ProjectLanguages'\nimport {gameContentTranslation} from 'lang/components/translationMethods'\n\nimport LanguageCompanion = ProjectLanguages.Companion\n\nexport abstract class GameStyleAppOption\n    extends Enum<Ordinals, Names>\n    implements AppOption<GameStyles> {\n\n    //region -------------------- Enum instances --------------------\n\n    public static readonly ICON =             new class GameStyleAppOption_Images extends GameStyleAppOption {\n\n        protected override _createContentOption(enumeration: GameStyles,) {\n            return <GameStyleImage reference={enumeration}/>\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return CommonOptions.get.iconHeader\n        }\n\n    }()\n    public static readonly NAME =              new class GameStyleAppOption_Name extends GameStyleAppOption {\n\n        protected override _createContentOption(enumeration: GameStyles,) {\n            return CommonOptions.get.getNameContent(enumeration)\n        }\n\n        protected override _createTableHeaderOption() {\n            return CommonOptions.get.nameHeader\n        }\n\n    }()\n    public static readonly NIGHT_DESERT_WIND = new class GameStyleAppOption_NightDesertWind extends GameStyleAppOption {\n\n        protected override _createContentOption({reference,}: GameStyles,) {\n            return <NightEffectComponent gameStyle={reference}/>\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {\n                key: 'nightDesertWind',\n                element: <div className=\"night-desert-wind-effect-container\">\n                    <ThemeImage reference={Themes.DESERT}/>\n                    <TimeImage reference={Times.NIGHT}/>\n                </div>,\n                tooltip: gameContentTranslation('Wind effect (night desert)', {\n                    night: unfinishedText('night'),//TODO add night reference\n                    desert: LanguageCompanion.current.get(Themes.DESERT.reference)!.toLowerCase(),\n                },),\n            }\n        }\n\n    }()\n\n    //endregion -------------------- Enum instances --------------------\n    //region -------------------- Companion enum --------------------\n\n    public static readonly CompanionEnum: CompanionEnumSingleton<GameStyleAppOption, typeof GameStyleAppOption> = class CompanionEnum_GameStyleAppOption\n        extends CompanionEnum<GameStyleAppOption, typeof GameStyleAppOption> {\n\n        //region -------------------- Singleton usage --------------------\n\n        static #instance?: CompanionEnum_GameStyleAppOption\n\n        private constructor() {\n            super(GameStyleAppOption,)\n        }\n\n        public static get get() {\n            return this.#instance ??= new CompanionEnum_GameStyleAppOption()\n        }\n\n        //endregion -------------------- Singleton usage --------------------\n\n    }\n\n    //endregion -------------------- Companion enum --------------------\n    //region -------------------- Fields --------------------\n    //endregion -------------------- Fields --------------------\n    //region -------------------- Constructor --------------------\n\n    private constructor() {\n        super()\n    }\n\n    //endregion -------------------- Constructor --------------------\n    //region -------------------- Getter methods --------------------\n    //endregion -------------------- Getter methods --------------------\n    //region -------------------- Methods --------------------\n\n    //region -------------------- App option - content --------------------\n\n    protected abstract _createContentOption(enumeration: GameStyles,): ReactElement\n\n    public renderContent(enumeration: GameStyles,): readonly [ReactElement,] {\n        return [this._createContentOption(enumeration,),]\n    }\n\n    //endregion -------------------- App option - content --------------------\n    //region -------------------- App option - table --------------------\n\n    protected abstract _createTableHeaderOption(): SingleHeaderContent\n\n    public renderTableHeader(): SingleHeaderContent {\n        return this._createTableHeaderOption()\n    }\n\n    //endregion -------------------- App option - table --------------------\n\n    //endregion -------------------- Methods --------------------\n\n}\n","import type {CompanionEnumSingleton} from '@joookiwi/enumerable'\nimport type {NullOrString}           from '@joookiwi/type'\nimport {CompanionEnum, Enum}         from '@joookiwi/enumerable'\n\nimport type {Names, Ordinals, PossibleRouteName} from 'app/property/GameStyleGames.types'\n\nexport class GameStyleGames\n    extends Enum<Ordinals, Names> {\n\n    //region -------------------- Enum instances --------------------\n\n    public static readonly SUPER_MARIO_MAKER_OR_SUPER_MARIO_MAKER_FOR_NINTENDO_3DS = new class GameStyleGames_SuperMarioMakerOrSuperMarioMakerForNintendo3DS extends GameStyleGames {\n\n        public override get smm2Color(): PossibleColor {\n            return 'warning'\n        }\n\n        public override get smm1Or3dsRouteName() {\n            return null\n        }\n\n    }()\n    public static readonly SUPER_MARIO_MAKER_2 = new class GameStyleGames_SuperMarioMaker2 extends GameStyleGames {\n\n        public override get smm2RouteName() {\n            return null\n        }\n\n    }()\n\n    //endregion -------------------- Enum instances --------------------\n    //region -------------------- Companion enum --------------------\n\n    public static readonly CompanionEnum: CompanionEnumSingleton<GameStyleGames, typeof GameStyleGames> = class CompanionEnum_GameStyleGames\n        extends CompanionEnum<GameStyleGames, typeof GameStyleGames> {\n\n        //region -------------------- Singleton usage --------------------\n\n        static #instance?: CompanionEnum_GameStyleGames\n\n        private constructor() {\n            super(GameStyleGames,)\n        }\n\n        public static get get() {\n            return this.#instance ??= new CompanionEnum_GameStyleGames()\n        }\n\n        //endregion -------------------- Singleton usage --------------------\n\n    }\n\n    //endregion -------------------- Companion enum --------------------\n    //region -------------------- Fields --------------------\n    //endregion -------------------- Fields --------------------\n    //region -------------------- Constructor --------------------\n\n    public constructor() {\n        super()\n    }\n\n    //endregion -------------------- Constructor --------------------\n    //region -------------------- Getter methods --------------------\n\n    public get smm1Or3dsColor(): PossibleColor {\n        return 'success'\n    }\n\n    public get smm2Color(): PossibleColor {\n        return 'success'\n    }\n\n    //endregion -------------------- Getter methods --------------------\n    //region -------------------- Methods --------------------\n\n    public get smm1Or3dsRouteName(): NullOrString<PossibleRouteName> {\n        return `everyGameStyle (Game=1&3DS)`\n    }\n\n    public get smm2RouteName(): NullOrString<PossibleRouteName> {\n        return `everyGameStyle (Game=2)`\n    }\n\n    //endregion -------------------- Methods --------------------\n\n}\n\ntype PossibleColor = Extract<BootstrapColor, | 'success' | 'warning'>\n","import 'app/_GameAsideContent.scss'\nimport './GameStyleApp.scss'\n\nimport type {Array, NullOrString} from '@joookiwi/type'\nimport type {CollectionHolder}    from '@joookiwi/collection'\nimport {filterByArray}            from '@joookiwi/collection'\n\nimport type {GameStyleProperties}     from 'app/AppProperties.types'\nimport type {AppInterpreterWithTable} from 'app/interpreter/AppInterpreterWithTable'\nimport type {DimensionOnList}         from 'app/interpreter/DimensionOnList'\nimport type {ViewAndRouteName}        from 'app/withInterpreter/DisplayButtonGroup.properties'\nimport type {GameCollection}          from 'util/collection/GameCollection'\nimport type {ReactProperties}         from 'util/react/ReactProperties'\nimport type {PossibleRouteName}       from 'route/EveryRoutes.types'\n\nimport SubMainContainer                             from 'app/_SubMainContainer'\nimport {GameStyleAppOption}                         from 'app/options/GameStyleAppOption'\nimport {GameStyleGames}                             from 'app/property/GameStyleGames'\nimport LinkButton                                   from 'app/tools/button/LinkButton'\nimport Table                                        from 'app/tools/table/Table'\nimport LinkText                                     from 'app/tools/text/LinkText'\nimport TextOrLink                                   from 'app/tools/text/TextOrLink'\nimport {unfinishedText}                             from 'app/tools/text/UnfinishedText'\nimport List                                         from 'app/util/List'\nimport CardList                                     from 'app/withInterpreter/CardList'\nimport {ViewDisplays}                               from 'app/withInterpreter/ViewDisplays'\nimport {Games}                                      from 'core/game/Games'\nimport GameImage                                    from 'core/game/component/GameImage'\nimport {GameStyles}                                 from 'core/gameStyle/GameStyles'\nimport GameStyleImage                               from 'core/gameStyle/component/GameStyleImage'\nimport {OtherWordInTheGames}                        from 'core/otherWordInTheGame/OtherWordInTheGames'\nimport {contentTranslation, gameContentTranslation} from 'lang/components/translationMethods'\nimport NameComponent                                from 'lang/name/component/Name.component'\n\nimport ALL =    GameStyles.ALL\nimport SMM1 =   Games.SMM1\nimport SMM2 =   Games.SMM2\nimport SMM3DS = Games.SMM3DS\nimport NSMBU =  GameStyles.NSMBU\nimport SMB =    GameStyles.SMB\nimport SMB3 =   GameStyles.SMB3\nimport SMW =    GameStyles.SMW\nimport SM3DW =  GameStyles.SM3DW\n\nclass GameStyleAppInterpreter\n    implements AppInterpreterWithTable<GameStyles, GameStyleAppOption> {\n\n    //region -------------------- Fields --------------------\n\n    readonly #games\n\n    //endregion -------------------- Fields --------------------\n    //region -------------------- Constructor --------------------\n\n    public constructor(games: GameCollection,) {\n        this.#games = games\n    }\n\n    //endregion -------------------- Constructor --------------------\n\n    public get content() {\n        const games = this.#games\n        return filterByArray(ALL, ({reference,},) =>\n            games.hasAnyIn(reference,),)\n    }\n\n    //region -------------------- Card --------------------\n\n    public createCardListDimension() {\n        return {\n            default: 1,\n            small: 2,\n            medium: 3,\n            extraLarge: 5,\n        } as const satisfies DimensionOnList\n    }\n\n    public createCardListContent(enumerable: GameStyles,) {\n        return <div className=\"card-body\" id={`gameStyle-${enumerable.englishNameInHtml}`}>\n            <GameStyleImage reference={enumerable}/>\n        </div>\n    }\n\n    //endregion -------------------- Card --------------------\n    //region -------------------- Table --------------------\n\n    public readonly tableHeadersColor = 'info' satisfies BootstrapThemeColor\n    public readonly tableCaption = gameContentTranslation('game style.all',) satisfies ReactElementOrString\n\n    public get tableOptions(): Array<GameStyleAppOption> {\n        return [\n            GameStyleAppOption.ICON,\n            GameStyleAppOption.NAME,\n            GameStyleAppOption.NIGHT_DESERT_WIND,\n        ]\n    }\n\n    public createTableContent(content: GameStyles, option: GameStyleAppOption,) {\n        return option.renderContent(content,)\n    }\n\n    public createTableHeader(option: GameStyleAppOption,) {\n        return option.renderTableHeader()\n    }\n\n    //endregion -------------------- Table --------------------\n\n}\n\nconst viewDisplayAndRouteName = [\n    [ViewDisplays.SIMPLE_LIST, 'everyGameStyle (list)',],\n    [ViewDisplays.CARD_LIST, 'everyGameStyle (card)',],\n    [ViewDisplays.TABLE, 'everyGameStyle (table)',],\n] as const satisfies Array<ViewAndRouteName>\n\n/** @reactComponent */\nexport default function GameStyleApp({viewDisplay, games,}: GameStyleProperties,) {\n    const game = games.hasSmm2\n        ? GameStyleGames.SUPER_MARIO_MAKER_2\n        : GameStyleGames.SUPER_MARIO_MAKER_OR_SUPER_MARIO_MAKER_FOR_NINTENDO_3DS\n\n    return <SubMainContainer reactKey=\"gameStyle\" viewDisplayAndRouteName={viewDisplayAndRouteName} viewDisplay={viewDisplay}\n                             titleContent={gameContentTranslation('game style.all',)}\n                             description={<GameStyleDescription viewDisplay={viewDisplay} game={game}/>}\n                             asideContent={<GameStyleAsideContent game={game}/>}>\n        <SubContent viewDisplay={viewDisplay} games={games}/>\n    </SubMainContainer>\n}\n\n/** @reactComponent */\nfunction SubContent({viewDisplay, games,}: Omit<GameStyleProperties, | 'gameStyles' | 'times'>,) {\n    const appInterpreter = new GameStyleAppInterpreter(games,)\n\n    if (viewDisplay === ViewDisplays.SIMPLE_LIST)\n        return <GameStyleList items={appInterpreter.content}/>\n    if (viewDisplay === ViewDisplays.CARD_LIST)\n        return <CardList reactKey=\"gameStyle\" interpreter={appInterpreter}/>\n    return <Table id=\"gameStyle-table\" interpreter={appInterpreter}/>\n}\n\n//region -------------------- List --------------------\n\ninterface GameStyle_ListProperties\n    extends ReactProperties {\n\n    readonly items: CollectionHolder<GameStyles>\n\n}\n\n/** @reactComponent */\nfunction GameStyleList({items,}:GameStyle_ListProperties,) {\n    return <List partialId=\"gameStyle\" items={items} withSeparator>{it =>\n        <div className=\"d-flex justify-content-between\">\n            <NameComponent id=\"gameStyle-name\" name={it.reference} popoverOrientation=\"top\"/>\n            <GameStyleImage reference={it}/>\n        </div>\n    }</List>\n}\n\n//endregion -------------------- List --------------------\n//region -------------------- Description content --------------------\n\ninterface GameStyleDescriptionProperties\n    extends ReactProperties {\n\n    readonly viewDisplay: ViewDisplays\n\n    readonly game: GameStyleGames\n\n}\n\n/** @reactComponent */\nfunction GameStyleDescription({viewDisplay, game,}: GameStyleDescriptionProperties,) {\n    const entity = OtherWordInTheGames.ENTITY.singularLowerCaseNameOnReferenceOrNull ?? unfinishedText(OtherWordInTheGames.ENTITY.singularEnglishName.toLowerCase(),)\n    const entities = OtherWordInTheGames.ENTITY.pluralLowerCaseNameOnReferenceOrNull ?? unfinishedText(OtherWordInTheGames.ENTITY.pluralEnglishName.toLowerCase(),)\n\n    const smm1OrSmm3dsLink = game.smm1Or3dsRouteName satisfies NullOrString<PossibleRouteName>\n    const smm2Link = game.smm2RouteName satisfies NullOrString<PossibleRouteName>\n\n    const listLink = viewDisplay === ViewDisplays.SIMPLE_LIST ? null : 'everyGameStyle (list)' satisfies PossibleRouteName\n    const cardLink = viewDisplay === ViewDisplays.CARD_LIST ? null : 'everyGameStyle (card)' satisfies PossibleRouteName\n    const tableLink = viewDisplay === ViewDisplays.TABLE ? null : 'everyGameStyle (table)' satisfies PossibleRouteName\n\n    return <>\n        <p>\n            {gameContentTranslation('game style.description.intro page', {\n                gameStyles: <em key=\"gameStyles\">{gameContentTranslation('game style.plural',).toLowerCase()}</em>,\n                smm1Link: <TextOrLink key=\"smm1Link\" id=\"smm1Game-description\" routeName={smm1OrSmm3dsLink}><GameImage reference={SMM1}/></TextOrLink>,\n                smm3dsLink: <TextOrLink key=\"smm3dsLink\" id=\"smm3dsGame-description\" routeName={smm1OrSmm3dsLink}><GameImage reference={SMM3DS}/></TextOrLink>,\n                smm2Link: <TextOrLink key=\"smm2Link\" id=\"smm2Game-description\" routeName={smm2Link}><GameImage reference={SMM2}/></TextOrLink>,\n            },)}\n            {gameContentTranslation('game style.description.intro sm3dw', {\n                sm3dwLink: <LinkText key=\"sm3dwLink\" partialId=\"sm3dwLink\" routeName=\"everyEntity (card GameStyle=3DW)\" color=\"primary\"><GameStyleImage reference={SM3DW}/></LinkText>,\n                smm2Link: <TextOrLink key=\"smm2Link\" id=\"smm2Game-sm3dw-description\" routeName={smm2Link}><GameImage reference={SMM2}/></TextOrLink>,\n            },)}\n            {gameContentTranslation('game style.description.intro entity', {\n                entityLink: <LinkText key=\"entityLink\"  partialId=\"entityLink\" routeName=\"everyEntity\" color=\"primary\">{entity}</LinkText>,\n                entitiesLink: <LinkText key=\"entitiesLink\" partialId=\"entityLink\" routeName=\"everyEntity\" color=\"primary\">{entities}</LinkText>,\n                smbLink: <LinkText key=\"smbLink\" partialId=\"smbLink\" routeName=\"everyEntity (card GameStyle=1)\" color=\"primary\"><GameStyleImage reference={SMB}/></LinkText>,\n                smb3Link: <LinkText key=\"smb3Link\" partialId=\"smb3Link\" routeName=\"everyEntity (card GameStyle=3)\" color=\"primary\"><GameStyleImage reference={SMB3}/></LinkText>,\n                smwLink: <LinkText key=\"smwLink\" partialId=\"smwLink\" routeName=\"everyEntity (card GameStyle=W)\" color=\"primary\"><GameStyleImage reference={SMW}/></LinkText>,\n                nsmbuLink: <LinkText key=\"nsmbuLink\" partialId=\"nsmbuLink\" routeName=\"everyEntity (card GameStyle=U)\" color=\"primary\"><GameStyleImage reference={NSMBU}/></LinkText>,\n                sm3dwLink: <LinkText key=\"sm3dwLink\" partialId=\"sm3dwLink\" routeName=\"everyEntity (card GameStyle=3DW)\" color=\"primary\"><GameStyleImage reference={SM3DW}/></LinkText>,\n            },)}\n        </p>\n        <p>{gameContentTranslation('game style.description.viewable', {\n            listLink: <LinkText key=\"listLink\" partialId=\"listLink\" routeName={listLink} color=\"primary\">{contentTranslation('view type.list.singular',).toLowerCase()}</LinkText>,\n            cardLink: <LinkText key=\"cardLink\" partialId=\"cardLink\" routeName={cardLink} color=\"primary\">{contentTranslation('view type.card.singular',).toLowerCase()}</LinkText>,\n            cardsLink: <LinkText key=\"cardsLink\" partialId=\"cardsLink\" routeName={cardLink} color=\"primary\">{contentTranslation('view type.card.plural',).toLowerCase()}</LinkText>,\n            tableLink: <LinkText key=\"tableLink\" partialId=\"tableLink\" routeName={tableLink} color=\"primary\">{contentTranslation('view type.table.singular',).toLowerCase()}</LinkText>,\n        },)}</p>\n    </>\n}\n\n//endregion -------------------- Description content --------------------\n//region -------------------- Aside content --------------------\n\ninterface GameStyleAsideContentProperties\n    extends ReactProperties {\n\n    readonly game: GameStyleGames\n\n}\n\n/** @reactComponent */\nfunction GameStyleAsideContent({game,}: GameStyleAsideContentProperties,) {\n    return <div id=\"gameStyle-gamesButton-singularGame-container\" className=\"gameAsideContent-container btn-group btn-group-sm\">\n        <LinkButton partialId=\"smm1Or3dsGame\" routeName={game.smm1Or3dsRouteName} color={game.smm1Or3dsColor}>\n            <GameImage reference={SMM1}/>\n            <GameImage reference={SMM3DS}/>\n        </LinkButton>\n        <LinkButton partialId=\"smm2Game\" routeName={game.smm2RouteName} color={game.smm2Color}>\n            <GameImage reference={SMM2}/>\n        </LinkButton>\n    </div>\n}\n\n//endregion -------------------- Aside content --------------------\n","import type {NullableString} from '@joookiwi/type'\nimport {Link}                from 'react-router-dom'\n\nimport type {PossibleRouteName}                            from 'route/EveryRoutes.types'\nimport type {ReactProperties, ReactPropertiesWithChildren} from 'util/react/ReactProperties'\n\nimport {routeFromName} from 'route/method/route.fromName'\n\ninterface LinkButtonsProperties\n    extends ReactProperties {\n\n    readonly partialId: string\n\n    readonly routeName: NullableString<PossibleRouteName>\n\n    readonly color: BootstrapColor\n\n}\n\n/**\n * Create a {@link Link} button or a disabled button (if the {@link LinkButtonsProperties.routeName route name} is <b>null</b>)\n *\n * @reactComponent\n */\nexport default function LinkButton({partialId, routeName, color, children,}: ReactPropertiesWithChildren<LinkButtonsProperties, ReactElementOrStringOrArray>,) {\n    const id = `${partialId}-button`\n    const className = `btn btn-${color} link-button`\n\n    if (routeName == null)\n        return <button type=\"button\" id={id} className={className} disabled>{children}</button>\n    return <Link type=\"button\" id={id} className={className} to={routeFromName(routeName,)}>{children}</Link>\n}\n","import type {NullableString} from '@joookiwi/type'\nimport {Link}                from 'react-router-dom'\n\nimport type {PossibleRouteName}                            from 'route/EveryRoutes.types'\nimport type {ReactProperties, ReactPropertiesWithChildren} from 'util/react/ReactProperties'\n\nimport {routeFromName} from 'route/method/route.fromName'\n\ninterface LinkTextProperties\n    extends ReactProperties {\n\n    readonly partialId: string\n\n    readonly routeName: NullableString<PossibleRouteName>\n\n    readonly color: BootstrapColor\n\n}\n\n/**\n * Create a {@link Link} text or an underlined text if the {@link LinkTextProperties.routeName route name} is <b>null</b>\n *\n * @reactComponent\n */\nexport default function LinkText({partialId, routeName, color, children,}: ReactPropertiesWithChildren<LinkTextProperties, ReactElementOrStringOrArray>,) {\n    const id = `${partialId}-text`\n\n    if (routeName == null)\n        return <span id={id} className=\"text-decoration-underline\">{children}</span>\n    return <Link id={id} className={`link-${color}`} to={routeFromName(routeName,)}>{children}</Link>\n}\n","import type {NullableString} from '@joookiwi/type'\nimport {Link}                from 'react-router-dom'\n\nimport type {PossibleRouteName}                            from 'route/EveryRoutes.types'\nimport type {ReactProperties, ReactPropertiesWithChildren} from 'util/react/ReactProperties'\n\nimport {routeFromName} from 'route/method/route.fromName'\n\ninterface TextOrLinkProperties\n    extends ReactProperties {\n\n    readonly id: string\n\n    readonly routeName: NullableString<PossibleRouteName>\n\n}\n\n/**\n * Create a {@link Link} or a text if the {@link TextOrLinkProperties.routeName route name} is <b>null</b>\n *\n * @reactComponent\n */\nexport default function TextOrLink({id, routeName, children,}: ReactPropertiesWithChildren<TextOrLinkProperties, ReactElementOrStringOrArray>,) {\n    if (routeName == null)\n        return <span id={id}>{children}</span>\n    return <Link id={id} to={routeFromName(routeName,)}>{children}</Link>\n}\n","import type {GameStyle}       from 'core/gameStyle/GameStyle'\nimport type {CourseTheme}     from 'core/theme/CourseTheme'\nimport type {ReactProperties} from 'util/react/ReactProperties'\n\nimport {gameContentTranslation} from 'lang/components/translationMethods'\n\ninterface NightEffectComponentProperties_GameStyle\n    extends ReactProperties {\n\n    readonly gameStyle: GameStyle\n\n}\n\ninterface NightEffectComponentProperties_Theme\n    extends ReactProperties {\n\n    readonly theme: CourseTheme\n\n}\n\n/**\n * @param properties\n * @reactComponent\n */\nexport default function NightEffectComponent(properties: | NightEffectComponentProperties_GameStyle | NightEffectComponentProperties_Theme,) {\n    return 'gameStyle' in properties\n        ? <NightEffectByGameStyle {...properties}/>\n        : <NightEffectByTheme {...properties}/>\n}\n\nfunction NightEffectByGameStyle({gameStyle: {nightDesertWindTranslationKey: translationKey,},}: NightEffectComponentProperties_GameStyle,) {\n    return translationKey == null ? null : <>{gameContentTranslation(`nightEffect.nightDesertWindEffect.${translationKey}`,)}</>\n}\n\nfunction NightEffectByTheme({theme: {effect,},}: NightEffectComponentProperties_Theme,) {\n    return effect?.createNewComponent ?? null\n}\n","import type {Nullable, NullableString} from '@joookiwi/type'\n\nimport type {Times}           from 'core/time/Times'\nimport type {ReactProperties} from 'util/react/ReactProperties'\n\nimport Image   from 'app/tools/images/Image'\nimport {Empty} from 'util/emptyVariables'\n\nimport EMPTY_STRING = Empty.EMPTY_STRING\n\ninterface TimeImageProperties\n    extends ReactProperties {\n\n    readonly reference: Nullable<Times>\n\n    readonly className?: NullableString\n\n}\n\n/** @reactComponent */\nexport default function TimeImage({reference, className,}: TimeImageProperties,) {\n    if (reference == null)\n        return null\n    return <Image file={reference.imageFile} className={`time-image ${reference.englishNameInHtml}-image${className == null ? EMPTY_STRING : ` ${className}`}`}/>\n}\n"],"names":["LanguageCompanion","ProjectLanguages","Companion","GameStyleAppOption","Enum","constructor","super","renderContent","enumeration","this","_createContentOption","renderTableHeader","_createTableHeaderOption","_GameStyleAppOption","ICON","_jsx","GameStyleImage","reference","CommonOptions","get","iconHeader","NAME","getNameContent","nameHeader","NIGHT_DESERT_WIND","_ref","NightEffectComponent","gameStyle","key","element","_jsxs","className","children","ThemeImage","Themes","DESERT","TimeImage","Times","NIGHT","tooltip","gameContentTranslation","night","unfinishedText","desert","current","toLowerCase","CompanionEnum","_instance","_classPrivateFieldLooseKey","_CompanionEnum_GameStyleAppOption","CompanionEnum_GameStyleAppOption","_classPrivateFieldLoo","_classPrivateFieldLoo2","_classPrivateFieldLooseBase","Object","defineProperty","writable","value","GameStyleGames","smm1Or3dsColor","smm2Color","smm1Or3dsRouteName","smm2RouteName","_GameStyleGames","SUPER_MARIO_MAKER_OR_SUPER_MARIO_MAKER_FOR_NINTENDO_3DS","SUPER_MARIO_MAKER_2","_CompanionEnum_GameStyleGames","CompanionEnum_GameStyleGames","ALL","GameStyles","SMM1","Games","SMM2","SMM3DS","NSMBU","SMB","SMB3","SMW","SM3DW","_games","GameStyleAppInterpreter","games","tableHeadersColor","tableCaption","content","filterByArray","hasAnyIn","createCardListDimension","default","small","medium","extraLarge","createCardListContent","enumerable","id","concat","englishNameInHtml","tableOptions","createTableContent","option","createTableHeader","viewDisplayAndRouteName","ViewDisplays","SIMPLE_LIST","CARD_LIST","TABLE","GameStyleApp","_ref2","viewDisplay","game","hasSmm2","SubMainContainer","reactKey","titleContent","description","GameStyleDescription","asideContent","GameStyleAsideContent","SubContent","_ref3","appInterpreter","GameStyleList","items","CardList","interpreter","Table","_ref4","List","partialId","withSeparator","it","NameComponent","name","popoverOrientation","_ref5","_OtherWordInTheGames$","_OtherWordInTheGames$2","entity","OtherWordInTheGames","ENTITY","singularLowerCaseNameOnReferenceOrNull","singularEnglishName","entities","pluralLowerCaseNameOnReferenceOrNull","pluralEnglishName","smm1OrSmm3dsLink","smm2Link","listLink","cardLink","tableLink","_Fragment","gameStyles","smm1Link","TextOrLink","routeName","GameImage","smm3dsLink","sm3dwLink","LinkText","color","entityLink","entitiesLink","smbLink","smb3Link","smwLink","nsmbuLink","contentTranslation","cardsLink","_ref6","LinkButton","type","disabled","Link","to","routeFromName","properties","NightEffectByGameStyle","NightEffectByTheme","nightDesertWindTranslationKey","translationKey","_effect$createNewComp","theme","effect","createNewComponent","EMPTY_STRING","Empty","Image","file","imageFile"],"sourceRoot":""}