{"version":3,"sources":["app/options/CommonOptions.tsx","app/options/SoundEffectAppOption.tsx","app/SoundEffectApp.tsx"],"names":["Image","lazy","NameComponent","CommonOptions","this","key","element","translationKey","enumeration","id","name","reference","popoverOrientation","imagePath_or_nameCallback","categoryNameContainer","EmptyStringName","get","EMPTY_REACT_ELEMENT","imagePath_or_name","englishName","english","startingKey","source","fallbackName","englishNameInHtml","subHeaders","getGameHeader","alt","Games","SUPER_MARIO_MAKER_1","path","imagePath","SUPER_MARIO_MAKER_FOR_NINTENDO_3DS","SUPER_MARIO_MAKER_2","mainGames","isInSMM1","isInSuperMarioMaker1","isInSMM3DS","isInSuperMarioMakerFor3DS","isInSMM2","isInSuperMarioMaker2","className","renderSingleComponent","isInCourseTheme","BASE_PATH","isInWorldTheme","SimpleSound","SoundEffectComponent","Symbol","iterator","SoundEffectAppOption","AppOptionWithContentComponent","_createContentOption","CALLBACK_TO_GET_ENUMERATION","__appOptionWithContent","renderContent","AppOptionWithTableComponent","_createTableHeaderOption","__appOptionWithTable","renderTableHeader","enumerable","game","value","Enum","getValueOn","getValuesOn","values","GAME","renderSMM1And3DSImage","renderSMM2Image","gameHeaderWithMainGames","NAME","getNameContent","nameHeader","CATEGORY","getCategoryContent","SoundEffectCategories","getValue","categoryEnglish","categoryHeader","PLAYER_BEHAVIOUR","playerSoundEffectTriggerContainer","createNewComponent","SOUNDS","sounds_exclusiveSmm1","sounds_standaloneSmm1","sounds_smm2","isSMM1Empty","length","isSMM2Empty","map","sound","title","SoundEffectApp","props","state","typeDisplayed","ViewDisplays","TABLE","GameContentTranslationComponent","SoundEffects","caption","option","AbstractTableApp"],"mappings":"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","file":"static/js/18.87e1cf3f.chunk.js","sourcesContent":["import {lazy} from 'react';\n\nimport type {ClassInAnySuperMarioMakerGame}             from '../../core/game/ClassInAnySuperMarioMakerGame';\nimport type {ClassWithEnglishName}                      from '../../core/ClassWithEnglishName';\nimport type {ClassWithReference}                        from '../../core/ClassWithReference';\nimport type {Enum}                                      from '../../util/enum/Enum';\nimport type {Name}                                      from '../../lang/name/Name';\nimport type {NameTrait}                                 from '../../lang/name/NameTrait';\nimport type {NameTraitFromACategory}                    from '../../lang/name/NameTraitFromACategory';\nimport type {ReactElement}                              from '../../util/react/ReactProperties';\nimport type {SingleHeaderContent, SingleHeadersContent} from '../tools/table/SimpleHeader';\nimport type {Themes}                                    from '../../core/theme/Themes';\n\nimport ContentTranslationComponent     from '../../lang/components/ContentTranslationComponent';\nimport {BASE_PATH}                     from '../../variables';\nimport {EMPTY_REACT_ELEMENT}           from '../../util/emptyReactVariables';\nimport {EmptyStringName}               from '../../lang/name/EmptyStringName';\nimport GameContentTranslationComponent from '../../lang/components/GameContentTranslationComponent';\nimport {Games}                         from '../../core/game/Games';\n\n//region -------------------- dynamic imports --------------------\n\nconst Image =         lazy(() => import('../tools/images/Image'));\nconst NameComponent = lazy(() => import('../../lang/name/component/Name.component'));\n\n//endregion -------------------- dynamic imports --------------------\n\n/**\n * @singleton\n */\nexport class CommonOptions {\n\n    //region -------------------- Singleton usage --------------------\n\n    static #instance?: CommonOptions;\n\n    private constructor() {\n    }\n\n    public static get get() {\n        return this.#instance ??= new this();\n    }\n\n    //endregion -------------------- Singleton usage --------------------\n    //region -------------------- Fields --------------------\n\n    #nameHeader?: SingleHeaderContent;\n    #gameHeader?: SingleHeaderContent;\n    #gameHeaderWithAllGames?: SingleHeaderContent;\n    #gameHeaderWithMainGames?: SingleHeaderContent;\n    #mainGames?: readonly [SingleHeaderContent, SingleHeaderContent,];\n    #categoryHeader?: SingleHeaderContent;\n\n    //endregion -------------------- Fields --------------------\n\n    public get nameHeader(): SingleHeaderContent {\n        return this.#nameHeader ??= {key: 'name', element: <ContentTranslationComponent translationKey=\"Name\"/>,};\n    }\n\n    public getNameContent(enumeration: EnumerationWithReference,): ReactElement {\n        return <NameComponent id=\"name\" name={enumeration.reference} popoverOrientation=\"left\"/>;\n    }\n\n\n    public get categoryHeader(): SingleHeaderContent {\n        return this.#categoryHeader ??= {key: 'category', element: <GameContentTranslationComponent translationKey=\"Category\"/>,};\n    }\n\n    public getCategoryContent(enumeration: EnumerationWithCategoryReference, imagePath_or_nameCallback: () => | string | Name<string>,): ReactElement {\n        const name = enumeration.reference.categoryNameContainer;\n        if (name === EmptyStringName.get)\n            return EMPTY_REACT_ELEMENT;\n\n        const imagePath_or_name = imagePath_or_nameCallback();\n        const englishName = name.english;\n        const startingKey = `category name (${englishName})`;\n        if (typeof imagePath_or_name == 'string')\n            return <Image key={`${startingKey} image`} source={imagePath_or_name} fallbackName={`${name.english} - image`}/>;\n        return <NameComponent key={`${startingKey} name`} id={`category-name-${enumeration.englishNameInHtml}`} name={name} popoverOrientation=\"left\"/>;\n    }\n\n\n    public get gameHeader(): SingleHeaderContent {\n        return this.#gameHeader ??= {key: 'game', element: <GameContentTranslationComponent translationKey=\"Game\"/>,};\n    }\n\n    public getGameHeader(...subHeaders: SingleHeadersContent): SingleHeaderContent {\n        return {\n            key: 'game', element: <GameContentTranslationComponent translationKey=\"Game\"/>,\n            subHeaders: subHeaders,\n        };\n    }\n\n    /**@deprecated Relocate the games in the name content */\n    public get gameHeaderWithAllGames(): SingleHeaderContent {\n        return this.#gameHeaderWithAllGames ??= this.getGameHeader(\n            {key: 'isInSuperMarioMaker1', alt: Games.SUPER_MARIO_MAKER_1.englishName, path: Games.SUPER_MARIO_MAKER_1.imagePath,},\n            {key: 'isInSuperMarioMakerFor3DS', alt: Games.SUPER_MARIO_MAKER_FOR_NINTENDO_3DS.englishName, path: Games.SUPER_MARIO_MAKER_FOR_NINTENDO_3DS.imagePath,},\n            {key: 'isInSuperMarioMaker2', alt: Games.SUPER_MARIO_MAKER_2.englishName, path: Games.SUPER_MARIO_MAKER_2.imagePath,},\n        );\n    }\n\n    public get gameHeaderWithMainGames(): SingleHeaderContent {\n        return this.#gameHeaderWithMainGames ??= this.getGameHeader(...this.mainGames);\n    }\n\n    public get mainGames(): readonly [SingleHeaderContent, SingleHeaderContent,] {\n        return this.#mainGames ??= [\n            {key: 'isInSuperMarioMaker1And3DS', alt: Games.SUPER_MARIO_MAKER_1.englishName, path: Games.SUPER_MARIO_MAKER_1.imagePath,},//TODO create a animated image for both games (SMM1 & SMM3DS)\n            {key: 'isInSuperMarioMaker2', alt: Games.SUPER_MARIO_MAKER_2.englishName, path: Games.SUPER_MARIO_MAKER_2.imagePath,},\n        ];\n    }\n\n    /**\n     * Get a {@link HTMLDivElement} containing each images (if true)\n     * of the {@link Games} contained in the {@link Enumerable} {@link ClassWithReference reference}.\n     *\n     * @param enumeration The enumerable to retrieve the {@link Games} properties & {@link ClassWithEnglishName english name}.\n     */\n    public getGameContent(enumeration: EnumerationWithInSuperMarioMakerGameReference,): ReactElement {\n        const reference = enumeration.reference;\n        const isInSMM1 = reference.isInSuperMarioMaker1;\n        const isInSMM3DS = reference.isInSuperMarioMakerFor3DS;\n        const isInSMM2 = reference.isInSuperMarioMaker2;\n\n        return <div key={`${enumeration.englishName} (game content images)`} id={`${enumeration.englishNameInHtml}-gameContentImages-container`} className=\"gameContentImages-container\">\n            {isInSMM1 ? Games.SUPER_MARIO_MAKER_1.renderSingleComponent : EMPTY_REACT_ELEMENT}\n            {isInSMM3DS ? Games.SUPER_MARIO_MAKER_FOR_NINTENDO_3DS.renderSingleComponent : EMPTY_REACT_ELEMENT}\n            {isInSMM2 ? Games.SUPER_MARIO_MAKER_2.renderSingleComponent : EMPTY_REACT_ELEMENT}\n        </div>;\n    }\n\n\n    public getThemeContent(enumeration: Themes,): ReactElement {\n        const reference = enumeration.reference;\n\n        return <div key={`${enumeration.englishName} (theme content images)`} id={`${enumeration.englishNameInHtml}-themeContentImages-container`} className=\"themeContentImages-container\">\n            {reference.isInCourseTheme ? <Image source={`/${BASE_PATH}/theme/Course theme.tiff`} fallbackName=\"Course theme\"/> : EMPTY_REACT_ELEMENT}\n            {reference.isInWorldTheme ? <Image source={`/${BASE_PATH}/theme/World theme.tiff`} fallbackName=\"World theme\"/> : EMPTY_REACT_ELEMENT}\n        </div>;\n    }\n\n}\n\ntype EnumerationWithReference = Enum<any, any> & ClassWithEnglishName<string> & ClassWithReference<Name<string>>;\ntype EnumerationWithCategoryReference = Enum<any, any> & ClassWithEnglishName<string> & ClassWithReference<NameTraitFromACategory<string, NameTrait<string>>>;\ntype EnumerationWithInSuperMarioMakerGameReference = Enum<any, any> & ClassWithEnglishName<string> & ClassWithReference<ClassInAnySuperMarioMakerGame>;\n","import {lazy} from 'react';\n\nimport type {AppOptionWithContent, PossibleRenderReactElement}                                                                                                                      from './component/AppOptionWithContent';\nimport type {AppOptionWithTable}                                                                                                                                                    from './component/AppOptionWithTable';\nimport type {EnumArray, EnumByName, EnumByNumber, EnumByOrdinal, EnumByPossibleString, EnumByString, Names, Ordinals, PossibleNonNullableValue, PossibleStringValue, PossibleValue} from './SoundEffectAppOption.types';\nimport type {ReactElement}                                                                                                                                                          from '../../util/react/ReactProperties';\nimport type {SingleHeaderContent}                                                                                                                                                   from '../tools/table/SimpleHeader';\nimport type {StaticReference}                                                                                                                                                       from '../../util/enum/Enum.types';\n\nimport {AppOptionWithContentComponent} from './component/AppOptionWithContent.component';\nimport {AppOptionWithTableComponent}   from './component/AppOptionWithTable.component';\nimport {CommonOptions}                 from './CommonOptions';\nimport {EMPTY_REACT_ELEMENT}           from '../../util/emptyReactVariables';\nimport {Enum}                          from '../../util/enum/Enum';\nimport {Games}                         from '../../core/game/Games';\nimport {SoundEffects}                  from '../../core/soundEffect/SoundEffects';\nimport {SoundEffectCategories}         from '../../core/soundEffectCategory/SoundEffectCategories';\n\n//region -------------------- dynamic imports --------------------\n\nconst SimpleSound =          lazy(() => import( '../tools/sounds/SimpleSound'));\nconst SoundEffectComponent = lazy(() => import( '../../core/soundEffect/SoundEffect.component'));\n\n//endregion -------------------- dynamic imports --------------------\n\nexport abstract class SoundEffectAppOption\n    extends Enum<Ordinals, Names>\n    implements AppOptionWithContent, AppOptionWithTable {\n\n    //region -------------------- Enum instances --------------------\n\n    public static readonly GAME =             new class GameStyleAppOption_Game extends SoundEffectAppOption {\n\n        protected override _createContentOption(enumeration: SoundEffects,): PossibleRenderReactElement {\n            return [\n                    SoundEffectAppOption.renderSMM1And3DSImage(enumeration),\n                    SoundEffectAppOption.renderSMM2Image(enumeration),\n                ];\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return CommonOptions.get.gameHeaderWithMainGames;\n        }\n\n    }();\n    public static readonly NAME =             new class GameStyleAppOption_Name extends SoundEffectAppOption {\n\n        protected override _createContentOption(enumeration: SoundEffects,): PossibleRenderReactElement {\n            return CommonOptions.get.getNameContent(enumeration);\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return CommonOptions.get.nameHeader;\n        }\n\n    }();\n    public static readonly CATEGORY =         new class GameStyleAppOption_Category extends SoundEffectAppOption {\n\n        protected override _createContentOption(enumeration: SoundEffects,): PossibleRenderReactElement {\n            const {reference,} = enumeration;\n\n            return CommonOptions.get.getCategoryContent(enumeration, () => SoundEffectCategories.getValue(reference.categoryEnglish)!.imagePath,);\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return CommonOptions.get.categoryHeader;\n        }\n\n    }();\n    public static readonly PLAYER_BEHAVIOUR = new class GameStyleAppOption_PlayerBehaviour extends SoundEffectAppOption {\n\n        protected override _createContentOption(enumeration: SoundEffects,): PossibleRenderReactElement {\n            return enumeration.reference.playerSoundEffectTriggerContainer.createNewComponent(enumeration.englishName,);\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {key: 'player behaviour', element: <>--Player behaviour--</>/*<GameContentTranslationComponent translationKey=\"Player behaviour\"/>*/,};\n        }\n\n    }();\n    public static readonly SOUNDS = new class GameStyleAppOption_PlayerBehaviour extends SoundEffectAppOption {\n\n        protected override _createContentOption({englishName, sounds_exclusiveSmm1, sounds_standaloneSmm1, sounds_smm2,}: SoundEffects,): PossibleRenderReactElement {\n            const isSMM1Empty = sounds_exclusiveSmm1.length === 0;\n            const isSMM2Empty = sounds_smm2.length === 0;\n\n            return isSMM1Empty && isSMM2Empty\n                ? EMPTY_REACT_ELEMENT\n                : <div key={`${englishName} (sound effect sounds)`} className={`soundEffect-sounds-container ${isSMM1Empty || isSMM2Empty ? ` soundEffect-sounds-smm${isSMM1Empty ? 2 : 1}-only-container` : ''}`}>\n                    {isSMM1Empty\n                        ? EMPTY_REACT_ELEMENT\n                        : <div key={`${englishName} (sound effect sounds - SMM1&3DS)`} className=\"soundEffect-sounds-smm1-container\">\n                            {sounds_standaloneSmm1.map(sound => <div key={`${englishName} (sound effect sound - SMM1&3DS - ${sound})`} className=\"soundEffect-sound-container soundEffect-sound-smm1-container col-12 col-lg-6 col-xl-4 col-xxl-3\">\n                                <SimpleSound source={sound} title={`${englishName} (${sound})`}/>\n                            </div>)}\n                        </div>}\n                    {isSMM2Empty\n                        ? EMPTY_REACT_ELEMENT\n                        : <div key={`${englishName} (sound effect sounds (SMM2))`} className=\"soundEffect-sounds-smm2-container\">\n                            {sounds_smm2.map(sound => <div key={`${englishName} (sound effect sound - SMM2 - ${sound})`} className=\"soundEffect-sound-container soundEffect-sound-smm2-container col-12 col-lg-6 col-xl-4 col-xxl-3\">\n                                <SimpleSound source={sound} title={`${englishName} (${sound})`}/>\n                            </div>)}\n                        </div>}\n                </div>;\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {key: 'sounds', element: <>--Sounds--</>,};\n        }\n\n    }();\n\n    //endregion -------------------- Enum instances --------------------\n    //region -------------------- Enum fields --------------------\n\n    static [index: number]: SoundEffectAppOption;\n\n    //endregion -------------------- Enum fields --------------------\n    //region -------------------- Fields --------------------\n\n    /**\n     * The callback to get the enumeration based for each option.\n     *\n     * @note It should only be set by {@link SoundEffectApp} and get by {@link SoundEffectAppOption}.\n     */\n    public static CALLBACK_TO_GET_ENUMERATION: () => SoundEffects;\n\n    #appOptionWithContent?: AppOptionWithContent;\n    #appOptionWithTable?: AppOptionWithTable;\n\n    //endregion -------------------- Fields --------------------\n\n    private constructor() {\n        super();\n    }\n\n    //region -------------------- Getter methods --------------------\n    //endregion -------------------- Getter methods --------------------\n    //region -------------------- Methods --------------------\n\n    //region -------------------- App option - content --------------------\n\n    public static renderSMM1And3DSImage(enumerable: SoundEffects,): ReactElement {\n        const reference = enumerable.reference;\n\n        return reference.isInSuperMarioMaker1 ? <SoundEffectComponent reference={enumerable} name={reference} game={Games.SUPER_MARIO_MAKER_1}/> : EMPTY_REACT_ELEMENT;\n    }\n\n    public static renderSMM2Image(enumerable: SoundEffects,): ReactElement {\n        const reference = enumerable.reference;\n\n        return reference.isInSuperMarioMaker2 ? <SoundEffectComponent reference={enumerable} name={reference} game={Games.SUPER_MARIO_MAKER_2}/> : EMPTY_REACT_ELEMENT;\n    }\n\n    protected abstract _createContentOption(enumeration: SoundEffects,): PossibleRenderReactElement;\n\n    private get __appOptionWithContent(): AppOptionWithContent {\n        return this.#appOptionWithContent ??= new AppOptionWithContentComponent(() => this._createContentOption(SoundEffectAppOption.CALLBACK_TO_GET_ENUMERATION()),);\n    }\n\n    public get renderContent(): readonly ReactElement[] {\n        return this.__appOptionWithContent.renderContent;\n    }\n\n    //endregion -------------------- App option - content --------------------\n    //region -------------------- App option - table --------------------\n\n    protected abstract _createTableHeaderOption(): SingleHeaderContent;\n\n    private get __appOptionWithTable(): AppOptionWithTable {\n        return this.#appOptionWithTable ??= new AppOptionWithTableComponent(() => this._createTableHeaderOption(),);\n    }\n\n    public get renderTableHeader(): | SingleHeaderContent | null {\n        return this.__appOptionWithTable.renderTableHeader;\n    }\n\n    //endregion -------------------- App option - table --------------------\n\n    //endregion -------------------- Methods --------------------\n    //region -------------------- Enum methods --------------------\n\n    protected override get _static(): StaticReference<SoundEffectAppOption> {\n        return SoundEffectAppOption;\n    }\n\n    //region -------------------- Enum value methods --------------------\n\n    public static getValue(nullValue: | null | undefined,): null\n    public static getValue<O extends Ordinals = Ordinals, >(ordinal: O,): EnumByOrdinal<O>\n    public static getValue<O extends number = number, >(ordinal: O,): EnumByNumber<O>\n    public static getValue<N extends Names = Names, >(name: N,): EnumByName<N>\n    public static getValue<S extends PossibleStringValue = PossibleStringValue, >(name: S,): EnumByPossibleString<S>\n    public static getValue<S extends string = string, >(name: S,): EnumByString<S>\n    public static getValue<I extends SoundEffectAppOption = SoundEffectAppOption, >(instance: I,): I\n    public static getValue(value: PossibleNonNullableValue,): SoundEffectAppOption\n    public static getValue(value: PossibleValue,): | SoundEffectAppOption | null\n    public static getValue(value: PossibleValue,) {\n        return Enum.getValueOn(this, value,);\n    }\n\n    public static get values(): EnumArray {\n        return Enum.getValuesOn(this);\n    }\n\n    //endregion -------------------- Enum value methods --------------------\n\n    public static [Symbol.iterator]() {\n        return this.values[Symbol.iterator]();\n    }\n\n    //endregion -------------------- Enum methods --------------------\n\n}\n","import './SoundEffectApp.scss';\n\nimport type {AppInterpreterWithTable, SimplifiedTableProperties}   from './interpreter/AppInterpreterWithTable';\nimport type {AppProperties}                                        from './AppProperties.types';\nimport type {PossibleDimensionOnCardList, PossibleDimensionOnList} from './interpreter/DimensionOnList';\nimport type {ReactElement, ReactElementOrString}                   from '../util/react/ReactProperties';\nimport type {SingleHeaderContent}                                  from './tools/table/SimpleHeader';\nimport type {SoundEffectAppStates}                                 from './AppStates.types';\n\nimport {AbstractTableApp}              from './withInterpreter/AbstractTableApp';\nimport GameContentTranslationComponent from '../lang/components/GameContentTranslationComponent';\nimport {SoundEffects}                  from '../core/soundEffect/SoundEffects';\nimport {SoundEffectAppOption}          from './options/SoundEffectAppOption';\nimport {ViewDisplays}                  from './withInterpreter/ViewDisplays';\n\n/**\n * @reactComponent\n */\nexport default class SoundEffectApp\n    extends AbstractTableApp<AppInterpreterWithTable<SoundEffects, SoundEffectAppOption>, AppProperties, SoundEffectAppStates> {\n\n    public constructor(props: AppProperties,) {\n        super(props,);\n        this.state = {\n            typeDisplayed: ViewDisplays.TABLE,\n        };\n    }\n\n    //region -------------------- Create methods --------------------\n\n    protected override _createKey(): string {\n        return 'soundEffect';\n    }\n\n    protected override _createTitleContent(): ReactElementOrString {\n        return <GameContentTranslationComponent translationKey=\"Every sound effects\"/>;\n    }\n\n    protected override _createAppOptionInterpreter(): AppInterpreterWithTable<SoundEffects, SoundEffectAppOption> {\n        return new class implements AppInterpreterWithTable<SoundEffects, SoundEffectAppOption> {\n\n            public get iterable(): IterableIterator<SoundEffects> {\n                return SoundEffects[Symbol.iterator]();\n            }\n\n            //region -------------------- List interpreter --------------------\n\n            public createListDimension(): PossibleDimensionOnList {\n                return null;\n            }\n\n            //endregion -------------------- List interpreter --------------------\n            //region -------------------- Card list interpreter --------------------\n\n            public createCardListDimension(): PossibleDimensionOnCardList {\n                return 'list';\n            }\n\n            public createCardListContent(enumerable: SoundEffects,): ReactElement {\n                return <div>\n                    <div className=\"soundEffect-images-container\">\n                        {SoundEffectAppOption.renderSMM1And3DSImage(enumerable)}\n                        {SoundEffectAppOption.renderSMM2Image(enumerable)}\n                    </div>\n                </div>;\n            }\n\n            //endregion -------------------- Card list interpreter --------------------\n            //region -------------------- Table interpreter --------------------\n\n            public set callbackToGetEnumerable(value: () => SoundEffects,) {\n                SoundEffectAppOption.CALLBACK_TO_GET_ENUMERATION = value;\n            }\n\n            public get tableOptions(): readonly SoundEffectAppOption[] {\n                return [\n                    SoundEffectAppOption.GAME,\n                    SoundEffectAppOption.NAME,\n                    SoundEffectAppOption.CATEGORY,\n                    SoundEffectAppOption.PLAYER_BEHAVIOUR,\n                    SoundEffectAppOption.SOUNDS,\n                ];\n            }\n\n            public get tableProperties(): SimplifiedTableProperties {\n                return {\n                    caption: <GameContentTranslationComponent translationKey=\"Every sound effects\"/>,\n                };\n            }\n\n            public createTableContent(option: SoundEffectAppOption,): readonly ReactElement[] {\n                return option.renderContent;\n            }\n\n            public createTableHeader(option: SoundEffectAppOption,): | SingleHeaderContent | null {\n                return option.renderTableHeader;\n            }\n\n            //endregion -------------------- Table interpreter --------------------\n\n        }();\n    }\n\n    //endregion -------------------- Create methods --------------------\n\n}\n"],"sourceRoot":""}