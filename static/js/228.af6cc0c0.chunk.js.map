{"version":3,"file":"static/js/228.af6cc0c0.chunk.js","mappings":"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","sources":["app/options/CourseTagAppOption.tsx","core/courseTag/component/FirstAppearance.tsx","external/MakerCentralLinks.ts","app/CourseTagApp.tsx","app/tools/button/LinkButton.tsx","app/tools/text/LinkText.tsx"],"sourcesContent":["import type {CompanionEnumSingleton} from '@joookiwi/enumerable'\nimport {CompanionEnum, Enum}         from '@joookiwi/enumerable'\n\nimport type {AppOption}           from 'app/options/AppOption'\nimport type {Names, Ordinals}     from 'app/options/CourseTagAppOption.types'\nimport type {SingleHeaderContent} from 'app/tools/table/SimpleHeader'\nimport type {CourseTags}          from 'core/courseTag/CourseTags'\n\nimport {CommonOptions}  from 'app/options/CommonOptions'\nimport {unfinishedText} from 'app/tools/text/UnfinishedText'\n\nexport abstract class CourseTagAppOption\n    extends Enum<Ordinals, Names>\n    implements AppOption<CourseTags> {\n\n    //region -------------------- Enum instances --------------------\n\n    public static readonly NAME = new class CourseTagAppOption_Name extends CourseTagAppOption {\n\n        protected override _createContentOption(enumeration: CourseTags,) {\n            return CommonOptions.get.getNameContent(enumeration,)\n        }\n\n        protected override _createTableHeaderOption() {\n            return CommonOptions.get.nameHeader\n        }\n\n    }('name',)\n    public static readonly FIRST_APPEARANCE = new class CourseTagAppOption_Name extends CourseTagAppOption {\n\n        protected override _createContentOption(enumeration: CourseTags,) {\n            const value = enumeration.reference.firstAppearance\n            if (value == null)\n                return null\n            return <small className=\"text-body text-opacity-50\">{value.simpleName}</small>\n        }\n\n        protected override _createTableHeaderOption() {\n            return {key: 'first-appearance', element: unfinishedText('First appearance',),}\n        }\n\n    }('first-appearance',)\n\n    //endregion -------------------- Enum instances --------------------\n    //region -------------------- Companion enum --------------------\n\n    public static readonly CompanionEnum: CompanionEnumSingleton<CourseTagAppOption, typeof CourseTagAppOption> = class CompanionEnum_CourseTagAppOption\n        extends CompanionEnum<CourseTagAppOption, typeof CourseTagAppOption> {\n\n        //region -------------------- Singleton usage --------------------\n\n        static #instance?: CompanionEnum_CourseTagAppOption\n\n        private constructor() {\n            super(CourseTagAppOption,)\n        }\n\n        public static get get() {\n            return this.#instance ??= new this()\n        }\n\n        //endregion -------------------- Singleton usage --------------------\n\n    }\n\n    //endregion -------------------- Companion enum --------------------\n    //region -------------------- Fields --------------------\n\n    readonly #associatedClass\n    readonly #additionalClasses\n\n    //endregion -------------------- Fields --------------------\n    //region -------------------- Constructor --------------------\n\n    private constructor(associatedClass: string,) {\n        super()\n        this.#additionalClasses = [this.#associatedClass = associatedClass,] as const\n    }\n\n    //endregion -------------------- Constructor --------------------\n    //region -------------------- Getter methods --------------------\n\n    public get associatedClass(): string {\n        return this.#associatedClass\n    }\n\n    public get additionalClasses(): readonly [string,] {\n        return this.#additionalClasses\n    }\n\n    //endregion -------------------- Getter methods --------------------\n    //region -------------------- Methods --------------------\n\n    //region -------------------- App option - content --------------------\n\n    protected abstract _createContentOption(enumeration: CourseTags,): ReactElement\n\n    public renderContent(enumeration: CourseTags,): readonly [ReactElement,] {\n        return [this._createContentOption(enumeration,),]\n    }\n\n    //endregion -------------------- App option - content --------------------\n    //region -------------------- App option - table --------------------\n\n    protected abstract _createTableHeaderOption(): SingleHeaderContent\n\n    public renderTableHeader(): SingleHeaderContent {\n        return this._createTableHeaderOption()\n    }\n\n    //endregion -------------------- App option - table --------------------\n\n    //endregion -------------------- Methods --------------------\n\n}\n","import type {CourseTag}       from 'core/courseTag/CourseTag'\nimport type {ReactProperties} from 'util/react/ReactProperties'\n\ninterface FirstAppearanceProperties\n    extends ReactProperties {\n\n    readonly reference: CourseTag\n\n}\n\n/** @reactComponent */\nexport default function FirstAppearance({reference,}: FirstAppearanceProperties,) {\n    const firstAppearance = reference.firstAppearance\n    if (firstAppearance == null)\n        return null\n    return <sub className=\"first-appearance text-body text-opacity-50\">{firstAppearance.simpleName}</sub>\n}\n","export const MAKER_CENTRAL_LEVEL_LINK = 'https://makercentral.io/levels'\nexport const MAKER_CENTRAL_HOME_LINK = 'https://makercentral.io'\n","import './CourseTagApp.scss'\n\nimport type {Array, NullOrString} from '@joookiwi/type'\nimport type {CollectionHolder}    from '@joookiwi/collection'\nimport {GenericCollectionHolder}  from '@joookiwi/collection'\nimport {Link}                     from 'react-router-dom'\n\nimport type {CourseTagAppProperties}  from 'app/AppProperties.types'\nimport type {AppInterpreterWithTable} from 'app/interpreter/AppInterpreterWithTable'\nimport type {DimensionOnList}         from 'app/interpreter/DimensionOnList'\nimport type {ViewAndRouteName}        from 'app/withInterpreter/DisplayButtonGroup.properties'\nimport type {CourseTags}              from 'core/courseTag/CourseTags'\nimport type {PossibleRouteName}       from 'route/EveryRoutes.types'\nimport type {ReactProperties}         from 'util/react/ReactProperties'\n\nimport SubMainContainer                             from 'app/_SubMainContainer'\nimport {CourseTagAppOption}                         from 'app/options/CourseTagAppOption'\nimport {CourseTagTypes}                             from 'app/property/CourseTagTypes'\nimport {unfinishedText}                             from 'app/tools/text/UnfinishedText'\nimport LinkButton                                   from 'app/tools/button/LinkButton'\nimport Table                                        from 'app/tools/table/Table'\nimport LinkText                                     from 'app/tools/text/LinkText'\nimport List                                         from 'app/util/List'\nimport CardList                                     from 'app/withInterpreter/CardList'\nimport {ViewDisplays}                               from 'app/withInterpreter/ViewDisplays'\nimport FirstAppearance                              from 'core/courseTag/component/FirstAppearance'\nimport {Games}                                      from 'core/game/Games'\nimport GameImage                                    from 'core/game/component/GameImage'\nimport {OtherWordInTheGames}                        from 'core/otherWordInTheGame/OtherWordInTheGames'\nimport {MAKER_CENTRAL_LEVEL_LINK}                   from 'external/MakerCentralLinks'\nimport {contentTranslation, gameContentTranslation} from 'lang/components/translationMethods'\nimport NameComponent                                from 'lang/name/component/Name.component'\n\nimport SMM2 = Games.SMM2\n\nclass CourseTagAppInterpreter\n    implements AppInterpreterWithTable<CourseTags> {\n\n    //region -------------------- Fields --------------------\n\n    readonly #type\n\n    //endregion -------------------- Fields --------------------\n    //region -------------------- Constructor --------------------\n\n    constructor(type: CourseTagTypes,) {\n        this.#type = type\n    }\n\n    //endregion -------------------- Constructor --------------------\n\n    public get content() {\n        return new GenericCollectionHolder(this.#type.content,)\n    }\n\n    //region -------------------- Card --------------------\n\n    public createCardListDimension() {\n        return {\n            default: 1,\n            small: 2,\n            medium: 4,\n            large: 6,\n        } as const satisfies DimensionOnList\n    }\n\n    public createCardListContent({reference,}: CourseTags,) {\n        return <FirstAppearance reference={reference}/>\n        //TODO add Maker Central name\n    }\n\n    //endregion -------------------- Card  --------------------\n    //region -------------------- Table --------------------\n\n    public readonly tableHeadersColor = 'info' satisfies BootstrapThemeColor\n\n    public get tableCaption() {\n        const course = OtherWordInTheGames.COURSE.singularLowerCaseNameOnReferenceOrNull ?? unfinishedText(OtherWordInTheGames.COURSE.singularEnglishName,).toLowerCase()\n        const courses = OtherWordInTheGames.COURSE.pluralLowerCaseNameOnReferenceOrNull ?? unfinishedText(OtherWordInTheGames.COURSE.pluralEnglishName,).toLowerCase()\n        const tag = OtherWordInTheGames.TAG.singularLowerCaseNameOnReference\n        const tags = OtherWordInTheGames.TAG.pluralLowerCaseNameOnReference\n\n        return gameContentTranslation('course tag.all', {\n            course: course, courses: courses,\n            tag: tag, tags: tags,\n        },) satisfies ReactElementOrString\n    }\n\n    public get tableOptions(): Array<CourseTagAppOption> {\n        return [CourseTagAppOption.NAME, CourseTagAppOption.FIRST_APPEARANCE,]\n    }\n\n\n    public getAdditionalClass(option: CourseTagAppOption,) {\n        return option.additionalClasses\n    }\n\n    public createTableContent(content: CourseTags, option: CourseTagAppOption,) {\n        return option.renderContent(content,)\n    }\n\n    public createTableHeader(option: CourseTagAppOption,) {\n        return option.renderTableHeader()\n    }\n\n    //endregion -------------------- Table --------------------\n\n}\n\n/** @reactComponent */\nexport default function CourseTagApp({viewDisplay, type,}: CourseTagAppProperties,) {\n    const course = OtherWordInTheGames.COURSE.singularLowerCaseNameOnReferenceOrNull ?? unfinishedText(OtherWordInTheGames.COURSE.singularEnglishName,).toLowerCase()\n    const courses = OtherWordInTheGames.COURSE.pluralLowerCaseNameOnReferenceOrNull ?? unfinishedText(OtherWordInTheGames.COURSE.pluralEnglishName,).toLowerCase()\n    const tag = OtherWordInTheGames.TAG.singularLowerCaseNameOnReference\n    const tags = OtherWordInTheGames.TAG.pluralLowerCaseNameOnReference\n\n    const viewDisplayAndRouteName = [\n        [ViewDisplays.SIMPLE_LIST, `${type.routeName} (list)`,],\n        [ViewDisplays.CARD_LIST, `${type.routeName} (card)`,],\n        [ViewDisplays.TABLE, `${type.routeName} (table)`,],\n    ] as const satisfies Array<ViewAndRouteName>\n\n    return <SubMainContainer reactKey=\"courseTag\" viewDisplayAndRouteName={viewDisplayAndRouteName} viewDisplay={viewDisplay}\n                             titleContent={gameContentTranslation('course tag.all', {\n                                 course: course, courses: courses,\n                                 tag: tag, tags: tags,\n                             },)}\n                             description={<CourseTagDescription type={type} viewDisplay={viewDisplay}/>}\n                             asideContent={<CourseTagAsideContent type={type}/>}>\n        <SubContent viewDisplay={viewDisplay} type={type}/>\n    </SubMainContainer>\n}\n\n/** @reactComponent */\nfunction SubContent({viewDisplay, type,}: CourseTagAppProperties,) {\n    const appInterpreter = new CourseTagAppInterpreter(type,)\n\n    if (viewDisplay === ViewDisplays.SIMPLE_LIST)\n        return <CourseTagList items={appInterpreter.content}/>\n    if (viewDisplay === ViewDisplays.CARD_LIST)\n        return <CardList reactKey=\"courseTag\" interpreter={appInterpreter}/>\n    return <Table id=\"courseTag-table\" interpreter={appInterpreter}/>\n}\n\n//region -------------------- List --------------------\n\ninterface CourseTag_ListProperties\n    extends ReactProperties {\n\n    readonly items: CollectionHolder<CourseTags>\n\n}\n\n/** @reactComponent */\nfunction CourseTagList({items,}: CourseTag_ListProperties,) {\n    return <List partialId=\"courseTag\" items={items}>{({reference,},) =>\n        <div className=\"d-flex\">\n            <NameComponent id=\"courseTag-name\" name={reference} popoverOrientation=\"top\"/>\n            <FirstAppearance reference={reference}/>\n        </div>\n    }</List>\n}\n\n//endregion -------------------- List --------------------\n//region -------------------- Description content --------------------\n\ninterface CourseTagDescriptionProperties\n    extends ReactProperties {\n\n    readonly type: CourseTagTypes\n\n    readonly viewDisplay: ViewDisplays\n\n}\n\n/** @reactComponent */\nfunction CourseTagDescription({viewDisplay, type,}: CourseTagDescriptionProperties,) {\n    const course = OtherWordInTheGames.COURSE.singularLowerCaseNameOnReferenceOrNull ?? unfinishedText(OtherWordInTheGames.COURSE.singularEnglishName,).toLowerCase()\n    const courses = OtherWordInTheGames.COURSE.pluralLowerCaseNameOnReferenceOrNull ?? unfinishedText(OtherWordInTheGames.COURSE.pluralEnglishName,).toLowerCase()\n    const tag = OtherWordInTheGames.TAG.singularLowerCaseNameOnReference\n    const tags = OtherWordInTheGames.TAG.pluralLowerCaseNameOnReference\n\n    const officialLink = type === CourseTagTypes.OFFICIAL ? null : type.officialRouteName satisfies NullOrString<PossibleRouteName>\n    const unofficialLink = type === CourseTagTypes.UNOFFICIAL ? null : type.unofficialRouteName satisfies NullOrString<PossibleRouteName>\n    const makerCentralLink = type === CourseTagTypes.MAKER_CENTRAL ? null : type.makerCentralRouteName satisfies NullOrString<PossibleRouteName>\n\n    const routeName = type.routeName\n    const listLink = viewDisplay === ViewDisplays.SIMPLE_LIST ? null : `${routeName} (list)` satisfies PossibleRouteName\n    const cardLink = viewDisplay === ViewDisplays.CARD_LIST ? null : `${routeName} (card)` satisfies PossibleRouteName\n    const tableLink = viewDisplay === ViewDisplays.TABLE ? null : `${routeName} (table)` satisfies PossibleRouteName\n\n    return <>\n        <p>\n            {gameContentTranslation(`course tag.description.intro page (${type.type})`, {\n                official: <b key=\"official (singular)\">{contentTranslation('Official.singular',).toLowerCase()}</b>,\n                officials: <b key=\"official (plural)\">{contentTranslation('Official.plural',).toLowerCase()}</b>,\n                unofficial: <b key=\"unofficial (singular)\">{contentTranslation('Unofficial.singular',).toLowerCase()}</b>,\n                unofficials: <b key=\"unofficial (plural)\">{contentTranslation('Unofficial.plural',).toLowerCase()}</b>,\n                MakerCentralLink: <Link key=\"Maker Central link\" to={MAKER_CENTRAL_LEVEL_LINK} id=\"makerCentralLink\" className=\"link-primary fw-bold\">Maker Central</Link>,\n                course: course, courses: courses,\n                tag: tag, tags: tags,\n                smm2Image: <GameImage key=\"smm2 image\" reference={SMM2}/>,\n            },)}\n            {gameContentTranslation('course tag.description.intro references', {\n                course: course, courses: courses,\n                officialLink: <LinkText key=\"official link (singular)\" partialId=\"officialLink\" routeName={officialLink} color=\"primary\">{contentTranslation('Official.singular',).toLowerCase()}</LinkText>,\n                officialsLink: <LinkText key=\"official link (plural)\" partialId=\"officialLink\" routeName={officialLink} color=\"primary\">{contentTranslation('Official.plural',).toLowerCase()}</LinkText>,\n                unofficialLink: <LinkText key=\"unofficial link (singular)\" partialId=\"unofficialLink\" routeName={unofficialLink} color=\"primary\">{contentTranslation('Unofficial.singular',).toLowerCase()}</LinkText>,\n                unofficialsLink: <LinkText key=\"unofficial link (plural)\" partialId=\"unofficialLink\" routeName={unofficialLink} color=\"primary\">{contentTranslation('Unofficial.plural',).toLowerCase()}</LinkText>,\n                MakerCentralLink: <LinkText key=\"Maker Central link\" partialId=\"makerCentralLink\" routeName={makerCentralLink} color=\"primary\">Maker Central</LinkText>,\n            },)}\n        </p>\n        <p>{gameContentTranslation('course tag.description.viewable', {\n            listLink: <LinkText key=\"listLink\" partialId=\"listLink\" routeName={listLink} color=\"primary\">{contentTranslation('view type.list.singular',).toLowerCase()}</LinkText>,\n            cardLink: <LinkText key=\"cardLink\" partialId=\"cardLink\" routeName={cardLink} color=\"primary\">{contentTranslation('view type.card.singular',).toLowerCase()}</LinkText>,\n            cardsLink: <LinkText key=\"cardsLink\" partialId=\"cardsLink\" routeName={cardLink} color=\"primary\">{contentTranslation('view type.card.plural',).toLowerCase()}</LinkText>,\n            tableLink: <LinkText key=\"tableLink\" partialId=\"tableLink\" routeName={tableLink} color=\"primary\">{contentTranslation('view type.table.singular',).toLowerCase()}</LinkText>,\n        },)}</p>\n    </>\n}\n\n//endregion -------------------- Description content --------------------\n//region -------------------- Aside content --------------------\n\ninterface CourseTagAsideContentProperties\n    extends ReactProperties {\n\n    readonly type: CourseTagTypes\n\n}\n\n/** @reactComponent */\nfunction CourseTagAsideContent({type,}: CourseTagAsideContentProperties,) {\n    return <div id=\"courseTag-linkButtons-container\" className=\"btn-group-vertical btn-group-sm\">\n        <LinkButton partialId=\"everyCourseTag\" routeName={type.allRouteName} color={type.allColor}>{contentTranslation('All',)}</LinkButton>\n        <div id=\"courseTag-linkButton-officialAndUnofficial-container\" className=\"btn-group btn-group-sm\">\n            <LinkButton partialId=\"officialCourseTag\" routeName={type.officialRouteName} color={type.officialColor}>{contentTranslation('Official.singular',)}</LinkButton>\n            <LinkButton partialId=\"unofficialCourseTag\" routeName={type.unofficialRouteName} color={type.unofficialColor}>{contentTranslation('Unofficial.singular',)}</LinkButton>\n        </div>\n        <LinkButton partialId=\"makerCentralCourseTag\" routeName={type.makerCentralRouteName} color={type.makerCentralColor}>Maker Central</LinkButton>\n    </div>\n}\n\n//endregion -------------------- Aside content --------------------\n","import type {NullableString} from '@joookiwi/type'\nimport {Link}                from 'react-router-dom'\n\nimport type {PossibleRouteName}                            from 'route/EveryRoutes.types'\nimport type {ReactProperties, ReactPropertiesWithChildren} from 'util/react/ReactProperties'\n\nimport {routeFromName} from 'route/method/route.fromName'\n\ninterface LinkButtonsProperties\n    extends ReactProperties {\n\n    readonly partialId: string\n\n    readonly routeName: NullableString<PossibleRouteName>\n\n    readonly color: BootstrapColor\n\n}\n\n/**\n * Create a {@link Link} button or a disabled button (if the {@link LinkButtonsProperties.routeName route name} is <b>null</b>)\n *\n * @reactComponent\n */\nexport default function LinkButton({partialId, routeName, color, children,}: ReactPropertiesWithChildren<LinkButtonsProperties, ReactElementOrStringOrArray>,) {\n    const id = `${partialId}-button`\n    const className = `btn btn-${color} link-button`\n\n    if (routeName == null)\n        return <button type=\"button\" id={id} className={className} disabled>{children}</button>\n    return <Link type=\"button\" id={id} className={className} to={routeFromName(routeName,)}>{children}</Link>\n}\n","import type {NullableString} from '@joookiwi/type'\nimport {Link}                from 'react-router-dom'\n\nimport type {PossibleRouteName}                            from 'route/EveryRoutes.types'\nimport type {ReactProperties, ReactPropertiesWithChildren} from 'util/react/ReactProperties'\n\nimport {routeFromName} from 'route/method/route.fromName'\n\ninterface LinkTextProperties\n    extends ReactProperties {\n\n    readonly partialId: string\n\n    readonly routeName: NullableString<PossibleRouteName>\n\n    readonly color: BootstrapColor\n\n}\n\n/**\n * Create a {@link Link} text or an underlined text if the {@link LinkTextProperties.routeName route name} is <b>null</b>\n *\n * @reactComponent\n */\nexport default function LinkText({partialId, routeName, color, children,}: ReactPropertiesWithChildren<LinkTextProperties, ReactElementOrStringOrArray>,) {\n    const id = `${partialId}-text`\n\n    if (routeName == null)\n        return <span id={id} className=\"text-decoration-underline\">{children}</span>\n    return <Link id={id} className={`link-${color}`} to={routeFromName(routeName,)}>{children}</Link>\n}\n"],"names":["_associatedClass","_classPrivateFieldLooseKey","_additionalClasses","CourseTagAppOption","Enum","constructor","associatedClass","super","Object","defineProperty","writable","value","_classPrivateFieldLooseBase","this","additionalClasses","renderContent","enumeration","_createContentOption","renderTableHeader","_createTableHeaderOption","_CourseTagAppOption","NAME","CommonOptions","get","getNameContent","nameHeader","FIRST_APPEARANCE","reference","firstAppearance","_jsx","className","children","simpleName","key","element","unfinishedText","CompanionEnum","_instance","_CompanionEnum_CourseTagAppOption","_classPrivateFieldLoo","_classPrivateFieldLoo2","FirstAppearance","_ref","MAKER_CENTRAL_LEVEL_LINK","SMM2","Games","_type","CourseTagAppInterpreter","type","tableHeadersColor","content","GenericCollectionHolder","createCardListDimension","default","small","medium","large","createCardListContent","tableCaption","_OtherWordInTheGames$","_OtherWordInTheGames$2","course","OtherWordInTheGames","COURSE","singularLowerCaseNameOnReferenceOrNull","singularEnglishName","toLowerCase","courses","pluralLowerCaseNameOnReferenceOrNull","pluralEnglishName","tag","TAG","singularLowerCaseNameOnReference","tags","pluralLowerCaseNameOnReference","gameContentTranslation","tableOptions","getAdditionalClass","option","createTableContent","createTableHeader","CourseTagApp","_ref2","_OtherWordInTheGames$3","_OtherWordInTheGames$4","viewDisplay","viewDisplayAndRouteName","ViewDisplays","SIMPLE_LIST","concat","routeName","CARD_LIST","TABLE","SubMainContainer","reactKey","titleContent","description","CourseTagDescription","asideContent","CourseTagAsideContent","SubContent","_ref3","appInterpreter","CourseTagList","items","CardList","interpreter","Table","id","_ref4","List","partialId","_ref5","_jsxs","NameComponent","name","popoverOrientation","_ref6","_OtherWordInTheGames$5","_OtherWordInTheGames$6","officialLink","CourseTagTypes","OFFICIAL","officialRouteName","unofficialLink","UNOFFICIAL","unofficialRouteName","makerCentralLink","MAKER_CENTRAL","makerCentralRouteName","listLink","cardLink","tableLink","_Fragment","official","contentTranslation","officials","unofficial","unofficials","MakerCentralLink","Link","to","smm2Image","GameImage","LinkText","color","officialsLink","unofficialsLink","cardsLink","_ref7","LinkButton","allRouteName","allColor","officialColor","unofficialColor","makerCentralColor","disabled","routeFromName"],"sourceRoot":""}