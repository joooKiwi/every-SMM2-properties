{"version":3,"file":"static/js/756.f2168135.chunk.js","mappings":"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","sources":["core/entity/properties/component/CanBeInAParachute.tsx","core/entity/properties/component/CanHaveWings.tsx","core/entity/properties/component/CanMakeASoundOutOfAMusicBlock.tsx","core/entity/properties/component/HasAMushroomVariant.tsx","core/limit/Limit.component.tsx","core/limit/PlayLimit.component.tsx","core/limit/SMM1And3DSEditorLimit.component.tsx","core/limit/SMM2EditorLimit.component.tsx","core/theme/CourseTheme.component.tsx","app/options/EntityAppOption.tsx","app/EntityApp.tsx","core/editorVoice/EditorVoiceSound.component.tsx"],"sourcesContent":["import './CanBeInAParachute.scss'\nimport './PropertyWithComment.scss'\n\nimport type {EntityOnlyProperties} from 'core/entity/properties/EntityOnlyProperties'\n\nimport Tooltip                  from 'bootstrap/tooltip/Tooltip'\nimport {Limits}                 from 'core/limit/Limits'\nimport {gameContentTranslation} from 'lang/components/translationMethods'\n\n/** @reactComponent */\nexport default function CanBeInAParachute({value: entity,}: EntityOnlyProperties,) {\n    const reference = entity.reference\n    const value = reference.canBeInAParachute\n    if (value !== true)\n        return null\n\n    const comment = reference.canBeInAParachuteComment\n    const id = `${entity.englishNameInHtml}-canBeInAParachute-property`\n\n    if (comment == null)\n        return <i id={id} className=\"canBeInAParachute-property parachute-image-property\"/>\n\n    const limit = Limits.LOOSE_COIN_LIMIT\n    return <Tooltip option={{title: gameContentTranslation(`entity.property.${comment}`, {acronym: limit.acronym!, limit: limit.reference.languageValue,},),}} elementId={id}>\n        <i id={id} className=\"canBeInAParachute-property parachute-image-property property-with-comment\"/>\n    </Tooltip>\n}\n","import './CanHaveWings.scss'\nimport './PropertyWithComment.scss'\n\nimport type {EntityOnlyProperties} from 'core/entity/properties/EntityOnlyProperties'\n\nimport Tooltip                  from 'bootstrap/tooltip/Tooltip'\nimport {Limits}                 from 'core/limit/Limits'\nimport {gameContentTranslation} from 'lang/components/translationMethods'\n\n/** @reactComponent */\nexport default function CanHaveWings({value: entity,}: EntityOnlyProperties,) {\n    const reference = entity.reference\n    const value = reference.canHaveWings\n    if (value !== true)\n        return null\n\n    const comment = reference.canHaveWingsComment\n    const id = `${entity.englishNameInHtml}-canHaveWings-property`\n\n    if (comment == null)\n        return <i id={id} className=\"canHaveWings wing-image-property\"/>\n\n    const limit = Limits.LOOSE_COIN_LIMIT\n    return <Tooltip option={{title: gameContentTranslation(`entity.property.${comment}`, {acronym: limit.acronym!, limit: limit.reference.languageValue,},),}} elementId={id}>\n        <i id={id} className=\"canHaveWings wing-image-property property-with-comment\"/>\n    </Tooltip>\n}\n","import './CanMakeASoundOutOfAMusicBlock.scss'\nimport './PropertyWithComment.scss'\n\nimport type {EntityOnlyProperties} from 'core/entity/properties/EntityOnlyProperties'\n\nimport Tooltip                     from 'bootstrap/tooltip/Tooltip'\nimport {gameContentTranslation}    from 'lang/components/translationMethods'\n\nexport default function CanMakeASoundOutOfAMusicBlock({value: entity,}: EntityOnlyProperties,) {\n    const reference = entity.reference\n    const value = reference.canMakeASoundOutOfAMusicBlock\n    if (value !== true)\n        return null\n\n    const comment = reference.canMakeASoundOutOfAMusicBlockComment\n    const id = `${entity.englishNameInHtml}-canMakeASoundOutOfAMusicBlock-property`\n\n    if (comment == null)\n        return <i id={id} className=\"canMakeASoundOutOfAMusicBlock-property music-block-property\"/>\n    return <Tooltip option={{title: gameContentTranslation(`instrument.${comment}`),}} elementId={id}>\n        <i id={id} className=\"canMakeASoundOutOfAMusicBlock-property music-block-property property-with-comment\"/>\n    </Tooltip>\n}\n","import './HasAMushroomVariant.scss'\n\nimport type {EntityOnlyProperties} from 'core/entity/properties/EntityOnlyProperties'\n\n/** @reactComponent */\nexport default function HasAMushroomVariant({value: entity,}: EntityOnlyProperties,) {\n    const reference = entity.reference\n    const value = reference.hasAMushroomVariant\n    if (value !== true)\n        return null\n\n    return <i id={`${entity.englishNameInHtml}-hasAMushroom-property`} className=\"hasAMushroom-property mushroom-image-property\"/>\n}\n","import {Fragment} from 'react'\n\nimport type {ReactProperties} from 'util/react/ReactProperties'\n\nimport {Limits}           from 'core/limit/Limits'\nimport NameComponent      from 'lang/name/component/Name.component'\nimport {ProjectLanguages} from 'lang/ProjectLanguages'\nimport TextComponent      from 'app/tools/text/TextComponent'\nimport Tooltip            from 'bootstrap/tooltip/Tooltip'\nimport {StringContainer}  from 'util/StringContainer'\n\ntype Id = `${| 'editor' | 'play'}-${string}`\n\ninterface EditorLimitProperties\n    extends ReactProperties {\n\n    readonly id: Id\n\n    readonly limits: | Limits | ReadonlyMap<Limits, boolean>\n\n    readonly displayAcronymIfApplicable: boolean\n\n}\n\n/**\n *\n * @param properties\n * @reactComponent\n */\nexport default function LimitComponent({id, limits, displayAcronymIfApplicable,}: EditorLimitProperties,) {\n    if (limits instanceof Limits)\n        return createSingleComponent(id, limits, displayAcronymIfApplicable,)\n\n    const selectedLimits = [...limits].filter(([, hasLimit]) => hasLimit).map(([limit,]) => limit)\n    return selectedLimits.length === 0\n        ? <></>\n        : <>{selectedLimits.map((limit, index,) =>\n            <Fragment key={`${limit.englishName} #${index + 1} → ${id}`}>{createSingleComponent(id, limit, displayAcronymIfApplicable,)}{createReturnOfLine(selectedLimits, index,)}</Fragment>\n        )}</>\n}\n\nfunction createReturnOfLine(selectedLimits: readonly Limits[], index: number,) {\n    return index === selectedLimits.length - 1 ? <></> : <>{ProjectLanguages.current.comma}<br/></>\n}\n\nfunction createSingleComponent(id: Id, limit: Limits, displayAcronymIfApplicable: boolean,) {\n    if (displayAcronymIfApplicable) {\n        const acronym = limit.acronym\n        if (acronym == null)\n            return createSingleNameComponent(id, limit,)\n        const acronymId = `limit-acronym-${id}-${StringContainer.getInHtml(limit.acronym!)}`\n        //TODO Transform the tooltip to a popover to display every names instead\n        return <Tooltip option={{title: limit.reference.nameContainer.languageValue,}} elementId={acronymId}>\n            <TextComponent key={`${limit.englishName} (acronym) → ${id}`} id={acronymId} content={acronym}/>\n        </Tooltip>\n    }\n    return createSingleNameComponent(id, limit,)\n}\n\nfunction createSingleNameComponent(id: Id, limit: Limits,) {\n    return <NameComponent key={`${limit.englishName} (name) → ${id}`} id={`limit-name-${id}`} name={limit.reference}/>\n}","import type {SimpleLimitComponentProperties} from 'core/limit/Limit.component.types'\n\nimport LimitComponent from 'core/limit/Limit.component'\n\nexport default function PlayLimitComponent({reference,}: SimpleLimitComponentProperties,) {\n    return <LimitComponent id={`play-${reference.englishNameInHtml}`} limits={reference.reference.toPlayLimitMap()} displayAcronymIfApplicable/>\n}\n","import type {SimpleLimitComponentProperties} from 'core/limit/Limit.component.types'\n\nimport TextComponent    from 'app/tools/text/TextComponent'\nimport LimitComponent   from 'core/limit/Limit.component'\nimport {NOT_APPLICABLE} from 'util/commonVariables'\n\nexport default function SMM1And3DSEditorLimitComponent({reference,}: SimpleLimitComponentProperties,) {\n    const editorLimit = reference.reference.editorLimit_smm1And3ds\n\n    if (editorLimit == null)\n        return null\n    if (editorLimit === NOT_APPLICABLE)\n        return <TextComponent id={`editor-SuperMarioMaker1And3DS-${reference.englishNameInHtml}`} content={NOT_APPLICABLE}/>\n    return <LimitComponent id={`editor-SuperMarioMaker1And3DS-${reference.englishNameInHtml}`} limits={editorLimit} displayAcronymIfApplicable/>\n}\n","import type {SimpleLimitComponentProperties} from 'core/limit/Limit.component.types'\n\nimport TextComponent    from 'app/tools/text/TextComponent'\nimport LimitComponent   from 'core/limit/Limit.component'\nimport {NOT_APPLICABLE} from 'util/commonVariables'\n\nexport default function SMM2EditorLimitComponent({reference,}: SimpleLimitComponentProperties,) {\n    const entity = reference.reference\n    const editorLimit = entity.editorLimit_smm2\n\n    return editorLimit == null || editorLimit === NOT_APPLICABLE\n        ? <TextComponent id={`editor-SuperMarioMaker2-${reference.englishNameInHtml}`} content={editorLimit} isUnknown={entity.isUnknown_editorLimit_smm2}/>\n        : <LimitComponent id={`editor-SuperMarioMaker2-${reference.englishNameInHtml}`} limits={editorLimit} displayAcronymIfApplicable/>\n}\n","import type {ThemeProperty} from 'core/entity/properties/theme/ThemeProperty'\n\nimport {COURSE_THEME_IMAGE_FILE} from 'app/options/file/themeImageFiles'\nimport Image                     from 'app/tools/images/Image'\nimport TextComponent             from 'app/tools/text/TextComponent'\nimport {ThemeComponent}          from 'core/theme/Theme.component'\nimport {Themes}                  from 'core/theme/Themes'\nimport {gameContentTranslation}  from 'lang/components/translationMethods'\n\n/** @reactComponent */\nexport default class CourseThemeComponent\n    extends ThemeComponent<ThemeProperty> {\n\n\n    protected override get _map() {\n        return this.reference.toCourseThemeMap()\n    }\n\n    protected override get _isInAll() {\n        return this.reference.isInGroundTheme\n            && this.reference.isInUndergroundTheme\n            && this.reference.isInUnderwaterTheme\n            && (this.reference.isInDesertTheme ?? false)\n            && (this.reference.isInSnowTheme ?? false)\n            && (this.reference.isInSkyTheme ?? false)\n            && (this.reference.isInForestTheme ?? false)\n            && this.reference.isInGhostHouseTheme\n            && this.reference.isInAirshipTheme\n            && this.reference.isInCastleTheme\n    }\n\n    protected override _renderSingleComponent(theme: Themes,) {\n        return CourseThemeComponent.renderSingleComponent(theme, true, this.name.english,)\n    }\n\n    protected override _renderComponentForAllAsText() {\n        return <TextComponent content={gameContentTranslation('theme.course.all', {courseThemeImage:<Image file={COURSE_THEME_IMAGE_FILE}/>,},)}/>\n    }\n\n    protected override _renderComponentForAllAsImages() {\n        return <div key={`${this.name.english} (every course themes)`}>{Themes.courseThemes.map(courseTheme => this._renderSingleComponent(courseTheme))}</div>\n    }\n\n}\n","import type {CompanionEnumSingleton} from '@joookiwi/enumerable'\nimport {CompanionEnum, Enum}         from '@joookiwi/enumerable'\nimport {Fragment}                    from 'react'\n\nimport type {AppOption}           from 'app/options/AppOption'\nimport type {Names, Ordinals}     from 'app/options/EntityAppOption.types'\nimport type {SingleHeaderContent} from 'app/tools/table/SimpleHeader'\nimport type {Entities}            from 'core/entity/Entities'\n\nimport {CommonOptions}                from 'app/options/CommonOptions'\nimport Image                          from 'app/tools/images/Image'\nimport {gameContentTranslation}       from 'lang/components/translationMethods'\nimport EditorVoiceSoundComponent      from 'core/editorVoice/EditorVoiceSound.component'\nimport CanBeInAParachute              from 'core/entity/properties/component/CanBeInAParachute'\nimport CanHaveWings                   from 'core/entity/properties/component/CanHaveWings'\nimport CanMakeASoundOutOfAMusicBlock  from 'core/entity/properties/component/CanMakeASoundOutOfAMusicBlock'\nimport HasAMushroomVariant            from 'core/entity/properties/component/HasAMushroomVariant'\nimport {EntityCategories}             from 'core/entityCategory/EntityCategories'\nimport GameComponent                  from 'core/game/Game.component'\nimport {GameStyles}                   from 'core/gameStyle/GameStyles'\nimport GameStyleComponent             from 'core/gameStyle/GameStyle.component'\nimport PlayLimitComponent             from 'core/limit/PlayLimit.component'\nimport SMM1And3DSEditorLimitComponent from 'core/limit/SMM1And3DSEditorLimit.component'\nimport SMM2EditorLimitComponent       from 'core/limit/SMM2EditorLimit.component'\nimport CourseThemeComponent           from 'core/theme/CourseTheme.component'\nimport {Themes}                       from 'core/theme/Themes'\nimport {Times}                        from 'core/time/Times'\nimport TimeComponent                  from 'core/time/Time.component'\n\nexport class EntityAppOption\n    extends Enum<Ordinals, Names>\n    implements AppOption<Entities> {\n\n    //region -------------------- Enum instances --------------------\n\n    public static readonly IMAGE_IN_SMB = new class EntityAppOption_Images extends EntityAppOption {\n\n        protected override _createContentOption({englishName, englishNameInHtml, uniqueImage,}: Entities,) {\n            const imageFiles = uniqueImage.map.get(GameStyles.SUPER_MARIO_BROS,)\n            if (imageFiles == null)\n                return null\n\n            const size = imageFiles.length\n            const images = new Array<ReactJSXElement>(size,)\n            let index = size\n            while (index-- > 0)\n                images[index] = <Image key={`Entity image (${englishName} - SMB - image #${index + 1})`} className={`entity-image ${englishNameInHtml}-image`} file={imageFiles[index]}/>\n            return <Fragment key={`unique image (${englishName})`}>{images}</Fragment>\n        }\n\n        protected override _createTableHeaderOption() {\n            return {key: `image-smb`, element: GameStyles.SUPER_MARIO_BROS.renderSingleComponent,} satisfies SingleHeaderContent\n        }\n\n    }('smb-images',)\n    public static readonly IMAGE_IN_SMB3 = new class EntityAppOption_Images extends EntityAppOption {\n\n        protected override _createContentOption({englishName, englishNameInHtml, uniqueImage,}: Entities,) {\n            const imageFiles = uniqueImage.map.get(GameStyles.SUPER_MARIO_BROS_3,)\n            if (imageFiles == null)\n                return null\n\n            const size = imageFiles.length\n            const images = new Array<ReactJSXElement>(size,)\n            let index = size\n            while (index-- > 0)\n                images[index] = <Image key={`Entity image (${englishName} - SMB3 - image #${index + 1})`} className={`entity-image ${englishNameInHtml}-image`} file={imageFiles[index]}/>\n            return <Fragment key={`unique image (${englishName})`}>{images}</Fragment>\n        }\n\n        protected override _createTableHeaderOption() {\n            return {key: `image-smb3`, element: GameStyles.SUPER_MARIO_BROS_3.renderSingleComponent,} satisfies SingleHeaderContent\n        }\n\n    }('smb3-images',)\n    public static readonly IMAGE_IN_SMW = new class EntityAppOption_Images extends EntityAppOption {\n\n        protected override _createContentOption({englishName, englishNameInHtml, uniqueImage,}: Entities,) {\n            const imageFiles = uniqueImage.map.get(GameStyles.SUPER_MARIO_WORLD,)\n            if (imageFiles == null)\n                return null\n\n            const size = imageFiles.length\n            const images = new Array<ReactJSXElement>(size,)\n            let index = size\n            while (index-- > 0)\n                images[index] = <Image key={`Entity image (${englishName} - SMW - image #${index + 1})`} className={`entity-image ${englishNameInHtml}-image`} file={imageFiles[index]}/>\n            return <Fragment key={`unique image (${englishName})`}>{images}</Fragment>\n        }\n\n        protected override _createTableHeaderOption() {\n            return {key: `image-smw`, element: GameStyles.SUPER_MARIO_WORLD.renderSingleComponent,} satisfies SingleHeaderContent\n        }\n\n    }('smw-images',)\n    public static readonly IMAGE_IN_NSMBU = new class EntityAppOption_Images extends EntityAppOption {\n\n        protected override _createContentOption({englishName, englishNameInHtml, uniqueImage,}: Entities,) {\n            const imageFiles = uniqueImage.map.get(GameStyles.NEW_SUPER_MARIO_BROS_U,)\n            if (imageFiles == null)\n                return null\n\n            const size = imageFiles.length\n            const images = new Array<ReactJSXElement>(size,)\n            let index = size\n            while (index-- > 0)\n                images[index] = <Image key={`Entity image (${englishName} - NSMBU - image #${index + 1})`} className={`entity-image ${englishNameInHtml}-image`} file={imageFiles[index]}/>\n            return <Fragment key={`unique image (${englishName})`}>{images}</Fragment>\n        }\n\n        protected override _createTableHeaderOption() {\n            return {key: `image-nsmbu`, element: GameStyles.NEW_SUPER_MARIO_BROS_U.renderSingleComponent,} satisfies SingleHeaderContent\n        }\n\n    }('nsmbu-images',)\n    public static readonly IMAGE_IN_SM3DW = new class EntityAppOption_Images extends EntityAppOption {\n\n        protected override _createContentOption({englishName, englishNameInHtml, uniqueImage,}: Entities,) {\n            const imageFiles = uniqueImage.map.get(GameStyles.SUPER_MARIO_3D_WORLD,)\n            if (imageFiles == null)\n                return null\n\n            const size = imageFiles.length\n            const images = new Array<ReactJSXElement>(size,)\n            let index = size\n            while (index-- > 0)\n                images[index] = <Image key={`Entity image (${englishName} - SM3DW - image #${index + 1})`} className={`entity-image ${englishNameInHtml}-image`} file={imageFiles[index]}/>\n            return <Fragment key={`unique image (${englishName})`}>{images}</Fragment>\n        }\n\n        protected override _createTableHeaderOption() {\n            return {key: `image-sm3dw`, element: GameStyles.SUPER_MARIO_3D_WORLD.renderSingleComponent,} satisfies SingleHeaderContent\n        }\n\n    }('sm3dw-images',)\n    /**\n     * Display an animation or not.\n     *\n     * If the value is \"separated\", then, it will display every image animation separated.\n     * @see AnimatedImages\n     */\n    public static readonly IMAGES_ON_EDITOR = new EntityAppOption('editor-images',)\n    public static readonly IMAGES_ON_CLEAR_CONDITION = new EntityAppOption('clearCondition-images',)\n    public static readonly IMAGES_ON_WHILE_PLAYING = new EntityAppOption('play-images',)\n    public static readonly IMAGES_ON_UNUSED = new EntityAppOption('unused-images',)\n\n    public static readonly NAME = new class EntityAppOption_Name extends EntityAppOption {\n\n        protected override _createContentOption(enumeration: Entities,) {\n            return <div className=\"nameAndEditorVoiceSound-container container\">\n                <div className=\"nameAndEditorVoiceSound-nameAndProperties-container\">\n                    <div className=\"properties\">\n                        <HasAMushroomVariant value={enumeration}/>\n                        <CanBeInAParachute value={enumeration}/>\n                        <CanHaveWings value={enumeration}/>\n                        <CanMakeASoundOutOfAMusicBlock value={enumeration}/>\n                    </div>\n                    {CommonOptions.get.getNameContent(enumeration)}\n                </div>\n                <EditorVoiceSoundComponent editorVoiceSound={enumeration.editorVoiceSoundFileHolder} name={enumeration.englishName}/>\n            </div>\n        }\n\n        protected override _createTableHeaderOption() {\n            return CommonOptions.get.nameHeader\n        }\n\n    }('name',)\n\n    public static readonly GAME = new class EntityAppOption_Game extends EntityAppOption {\n\n        protected override _createContentOption({reference,}: Entities,) {\n            return <GameComponent reference={reference} name={reference} displayAllAsText/>\n        }\n\n        protected override _createTableHeaderOption() {\n            return CommonOptions.get.gameHeader\n        }\n\n    }('game',)\n    public static readonly WHEN_ALL_SELECTED_GAME = new EntityAppOption('???',)\n\n    public static readonly GAME_STYLE = new class EntityAppOption_GameStyle extends EntityAppOption {\n\n        protected override _createContentOption({reference,}: Entities,) {\n            return <GameStyleComponent reference={reference} name={reference} displayAllAsText/>\n        }\n\n        protected override _createTableHeaderOption() {\n            return {key: 'gameStyle', element: gameContentTranslation('game style.singular'),} satisfies SingleHeaderContent\n        }\n\n    }('gameStyle',)\n    public static readonly WHEN_ALL_SELECTED_GAME_STYLE = new EntityAppOption('???',)\n\n    public static readonly COURSE_THEME = new class EntityAppOption_CourseTheme extends EntityAppOption {\n\n        protected override _createContentOption({reference,}: Entities,) {\n            return <CourseThemeComponent reference={reference} name={reference} displayAllAsText/>\n        }\n\n        protected override _createTableHeaderOption() {\n            return {key: 'courseTheme', element: gameContentTranslation('theme.course.singular'),} satisfies SingleHeaderContent\n        }\n\n    }('courseTheme',)\n    public static readonly WHEN_ALL_SELECTED_COURSE_THEME = new EntityAppOption('???',)\n\n    public static readonly TIME = new class EntityAppOption_Time extends EntityAppOption {\n\n        protected override _createContentOption({reference,}: Entities,) {\n            return <TimeComponent reference={reference} name={reference} displayAllAsText={false}/>\n        }\n\n        protected override _createTableHeaderOption() {\n            return {key: 'time', element: gameContentTranslation('time.singular'),} satisfies SingleHeaderContent\n        }\n\n    }('time',)\n    public static readonly WHEN_ALL_SELECTED_TIME = new EntityAppOption('???',)\n\n    public static readonly CATEGORY = new class EntityAppOption_Category extends EntityAppOption {\n\n        protected override _createContentOption(enumeration: Entities,) {\n            const categoryName = enumeration.reference.categoryNameContainer\n\n            return CommonOptions.get.getCategoryContent(enumeration, () => EntityCategories.CompanionEnum.get.getValueByName(categoryName.english,).imageFile,)\n        }\n\n        protected override _createTableHeaderOption() {\n            return CommonOptions.get.categoryHeader\n        }\n\n    }('category',)\n    /**\n     * Tell whenever a {@link EntityAppOption.CATEGORY category} is displayed\n     * as a text (<i>true</i>) or an image (<i>false</i>).\n     */\n    public static readonly CATEGORY_AS_TEXT = new EntityAppOption('???',)\n\n    public static readonly EDITOR_LIMIT_IN_SMM1_AND_3DS = new class EntityAppOption_LimitInSMM1And3DS extends EntityAppOption {\n\n        protected override _createContentOption(enumeration: Entities,) {\n            return <SMM1And3DSEditorLimitComponent reference={enumeration}/>\n        }\n\n        protected override _createTableHeaderOption() {\n            return CommonOptions.get.completeEditorLimitInSmm1And3dsHeader\n        }\n\n    }('smm1And3ds-editorLimit',)\n    public static readonly EDITOR_LIMIT_IN_SMM1_AND_3DS_ONLY = new class EntityAppOption_LimitInSMM1And3DS extends EntityAppOption {\n\n        protected override _createContentOption(enumeration: Entities,) {\n            return <SMM1And3DSEditorLimitComponent reference={enumeration}/>\n        }\n\n        protected override _createTableHeaderOption() {\n            return CommonOptions.get.completeEditorLimitHeader\n        }\n\n    }('editorLimit',)\n    public static readonly EDITOR_LIMIT_IN_SMM2 = new class EntityAppOption_LimitInSMM2 extends EntityAppOption {\n\n        protected override _createContentOption(enumeration: Entities,) {\n            return <SMM2EditorLimitComponent reference={enumeration}/>\n        }\n\n        protected override _createTableHeaderOption() {\n            return CommonOptions.get.completeEditorLimitInSmm2Header\n        }\n\n    }('smm2-editorLimit',)\n    public static readonly EDITOR_LIMIT_IN_SMM2_ONLY = new class EntityAppOption_LimitInSMM2 extends EntityAppOption {\n\n        protected override _createContentOption(enumeration: Entities,) {\n            return <SMM2EditorLimitComponent reference={enumeration}/>\n        }\n\n        protected override _createTableHeaderOption() {\n            return CommonOptions.get.completeEditorLimitHeader\n        }\n\n    }('editorLimit',)\n    public static readonly PLAY_LIMIT = new class EntityAppOption_PlayLimit extends EntityAppOption {\n\n        protected override _createContentOption(enumeration: Entities,) {\n            return <PlayLimitComponent reference={enumeration}/>\n        }\n\n        protected override _createTableHeaderOption() {\n            return CommonOptions.get.completePlayLimitHeader\n        }\n    }('playLimit',)\n\n    //endregion -------------------- Enum instances --------------------\n    //region -------------------- Companion enum --------------------\n\n    public static readonly CompanionEnum: CompanionEnumSingleton<EntityAppOption, typeof EntityAppOption> = class CompanionEnum_EntityAppOption\n        extends CompanionEnum<EntityAppOption, typeof EntityAppOption> {\n\n        //region -------------------- Singleton usage --------------------\n\n        static #instance?: CompanionEnum_EntityAppOption\n\n        private constructor() {\n            super(EntityAppOption,)\n        }\n\n        public static get get() {\n            return this.#instance ??= new this()\n        }\n\n        //endregion -------------------- Singleton usage --------------------\n\n    }\n\n    //endregion -------------------- Companion enum --------------------\n    //region -------------------- Fields --------------------\n\n    static #gameStyles?: readonly GameStyles[]\n    static #gameStyles_unusedImages?: | readonly [GameStyles,] | EmptyArray\n    static #times?: readonly Times[]\n    static #themes?: readonly Themes[]\n\n    readonly #associatedClass\n    readonly #additionalClasses\n\n    //endregion -------------------- Fields --------------------\n    //region -------------------- Constructor --------------------\n\n    private constructor(associatedClass: string,) {\n        super()\n        this.#additionalClasses = [this.#associatedClass = associatedClass,] as const\n    }\n\n    //endregion -------------------- Constructor --------------------\n    //region -------------------- Getter methods --------------------\n\n    public get associatedClass(): string {\n        return this.#associatedClass\n    }\n\n    public get additionalClasses(): readonly [string,] {\n        return this.#additionalClasses\n    }\n\n\n    protected static get _gameStyles(): readonly GameStyles[] {\n        return this.#gameStyles ??= GameStyles.CompanionEnum.get.values.toArray()\n    }\n\n    protected static get _gameStyles_unusedImages(): | readonly [GameStyles,] | EmptyArray {\n        return this.#gameStyles_unusedImages ??= [GameStyles.SUPER_MARIO_BROS,]\n    }\n\n    protected static get times(): readonly Times[] {\n        return this.#times ??= Times.CompanionEnum.get.values.toArray()\n    }\n\n    protected static get themes(): readonly Themes[] {\n        return this.#themes ??= Themes.courseThemes\n    }\n\n    //endregion -------------------- Getter methods --------------------\n    //region -------------------- Methods --------------------\n\n    //region -------------------- App option - content --------------------\n\n    protected _createContentOption(enumeration: Entities,): ReactElement {\n        throw new ReferenceError(`The EntityAppOption.${this.name} cannot create a content option`,)\n    }\n\n    public renderContent(enumeration: Entities,): readonly [ReactElement,] {\n        return [this._createContentOption(enumeration,),]\n    }\n\n    //endregion -------------------- App option - content --------------------\n    //region -------------------- App option - table --------------------\n\n    protected _createTableHeaderOption(): NullOr<SingleHeaderContent> {\n        throw new ReferenceError(`The EntityAppOption.${this.name} cannot create a table header option`,)\n    }\n\n    public renderTableHeader(): NullOr<SingleHeaderContent> {\n        const content = this._createTableHeaderOption()\n        if (content == null)\n            return null\n        return content\n    }\n\n    //endregion -------------------- App option - table --------------------\n\n    //endregion -------------------- Methods --------------------\n\n}\n","import './EntityApp.scss'\nimport './options/EntityAppOption.scss'\n\nimport type {EntityProperties}        from 'app/AppProperties.types'\nimport type {AppInterpreterWithTable} from 'app/interpreter/AppInterpreterWithTable'\nimport type {DimensionOnList}         from 'app/interpreter/DimensionOnList'\nimport type {ViewAndRouteName}        from 'app/withInterpreter/DisplayButtonGroup.properties'\nimport type {GameCollection}          from 'util/collection/GameCollection'\nimport type {GameStyleCollection}     from 'util/collection/GameStyleCollection'\n\nimport SubMainContainer              from 'app/_SubMainContainer'\nimport {EntityAppOption}             from 'app/options/EntityAppOption'\nimport Table                         from 'app/tools/table/Table'\nimport {unfinishedText}              from 'app/tools/text/UnfinishedText'\nimport CardList                      from 'app/withInterpreter/CardList'\nimport SimpleList                    from 'app/withInterpreter/SimpleList'\nimport {ViewDisplays}                from 'app/withInterpreter/ViewDisplays'\nimport EditorVoiceSoundComponent     from 'core/editorVoice/EditorVoiceSound.component'\nimport {Entities}                    from 'core/entity/Entities'\nimport {OtherWordInTheGames}         from 'core/otherWordInTheGame/OtherWordInTheGames'\nimport {gameContentTranslation}      from 'lang/components/translationMethods'\nimport {filterGame, filterGameStyle} from 'util/utilitiesMethods'\n\nclass EntityAppInterpreter\n    implements AppInterpreterWithTable<Entities, EntityAppOption> {\n\n    //region -------------------- Fields --------------------\n\n    readonly #games\n    readonly #gameStyles\n\n    //endregion -------------------- Fields --------------------\n    //region -------------------- Constructor --------------------\n\n    public constructor(games: GameCollection, gameStyles: GameStyleCollection,) {\n        this.#games = games\n        this.#gameStyles = gameStyles\n    }\n\n    //endregion -------------------- Constructor --------------------\n\n    public get content() {\n        return filterGameStyle(filterGame(Entities.CompanionEnum.get.values, this.#games,), this.#gameStyles,)\n    }\n\n    //region -------------------- List interpreter --------------------\n\n    public createListDimension(): DimensionOnList {\n        return {\n            default: 1,\n            small: 2,\n            medium: 3,\n            large: 4,\n            extraLarge: 6,\n        }\n    }\n\n    //endregion -------------------- List interpreter --------------------\n    //region -------------------- Card list interpreter --------------------\n\n    public createCardListDimension() {\n        return this.createListDimension()\n    }\n\n    public createCardListContent({englishName: name, reference, editorVoiceSoundFileHolder,}: Entities,) {\n        //TODO encapsulate the voiceSound into a sound interpreter.\n        const category = reference.categoryEnglish === '' ? '' : `entityCategory-${reference.categoryEnglish}`//TODO move to the parent container className.\n        return <div className={`${category}`}>\n            <EditorVoiceSoundComponent editorVoiceSound={editorVoiceSoundFileHolder} name={name}/>\n        </div>\n    }\n\n    //endregion -------------------- Card list interpreter --------------------\n    //region -------------------- Table interpreter --------------------\n\n    public readonly tableHeadersColor = 'secondary' satisfies BootstrapThemeColor\n\n    public get tableCaption() {\n        const singularEntityName = OtherWordInTheGames.ENTITY.singularNameOnReferenceOrNull ?? unfinishedText(OtherWordInTheGames.ENTITY.singularEnglishName,)\n        const singularEntityLowerCaseName = OtherWordInTheGames.ENTITY.singularLowerCaseNameOnReferenceOrNull ?? singularEntityName.toLowerCase()\n        return gameContentTranslation('entity.all', {\n            Entity: singularEntityName,\n            entity: singularEntityLowerCaseName,\n        },) satisfies ReactElementOrString\n    }\n\n    public get tableOptions(): readonly EntityAppOption[] {\n        const games = this.#games\n        const gameStyles = this.#gameStyles\n        const hasSMM1Or3DS = games.hasSMM1Or3DS\n        const hasSMM2 = games.hasSMM2\n\n        const options: EntityAppOption[] = []\n        if (gameStyles.hasSMB)\n            options.push(EntityAppOption.IMAGE_IN_SMB,)\n        if (gameStyles.hasSMB3)\n            options.push(EntityAppOption.IMAGE_IN_SMB3,)\n        if (gameStyles.hasSMW)\n            options.push(EntityAppOption.IMAGE_IN_SMW,)\n        if (gameStyles.hasNSMBU)\n            options.push(EntityAppOption.IMAGE_IN_NSMBU,)\n        if (gameStyles.hasSM3DW && hasSMM2) // The SMM2 validation is a fail-safe\n            options.push(EntityAppOption.IMAGE_IN_SM3DW,)\n        options.push(\n            EntityAppOption.NAME,\n            // EntityAppOption.GAME,\n            // EntityAppOption.GAME_STYLE,\n            // EntityAppOption.COURSE_THEME,\n            // EntityAppOption.TIME,\n            EntityAppOption.CATEGORY,\n        )\n        if (hasSMM1Or3DS && hasSMM2)\n            options.push(EntityAppOption.EDITOR_LIMIT_IN_SMM1_AND_3DS, EntityAppOption.EDITOR_LIMIT_IN_SMM2,)\n        else {\n            if (hasSMM1Or3DS)\n                options.push(EntityAppOption.EDITOR_LIMIT_IN_SMM1_AND_3DS_ONLY,)\n            if (hasSMM2)\n                options.push(EntityAppOption.EDITOR_LIMIT_IN_SMM2_ONLY,)\n        }\n        options.push(EntityAppOption.PLAY_LIMIT,)\n        return options\n    }\n\n\n    public getAdditionalClass(option: EntityAppOption,) {\n        return option.additionalClasses\n    }\n\n    public createTableContent(content: Entities, option: EntityAppOption,) {\n        return option.renderContent(content,)\n    }\n\n    public createTableHeader(option: EntityAppOption,) {\n        return option.renderTableHeader()\n    }\n\n    //endregion -------------------- Table interpreter --------------------\n\n}\n\nconst viewDisplayAndRouteName = [\n    [ViewDisplays.SIMPLE_LIST, 'everyEntity (list)',],\n    [ViewDisplays.CARD_LIST, 'everyEntity (card)',],\n    [ViewDisplays.TABLE, 'everyEntity (table)',],\n] as const satisfies readonly ViewAndRouteName[]\nconst titleContent = (() => {\n    const singularEntityName = OtherWordInTheGames.ENTITY.singularNameOnReferenceOrNull ?? unfinishedText(OtherWordInTheGames.ENTITY.singularEnglishName,)\n    const singularEntityLowerCaseName = OtherWordInTheGames.ENTITY.singularLowerCaseNameOnReferenceOrNull ?? singularEntityName.toLowerCase()\n    const pluralEntityName = OtherWordInTheGames.ENTITY.pluralNameOnReferenceOrNull ?? unfinishedText(OtherWordInTheGames.ENTITY.pluralEnglishName,)\n    const pluralEntityLowerCaseName = OtherWordInTheGames.ENTITY.pluralLowerCaseNameOnReferenceOrNull ?? pluralEntityName.toLowerCase()\n\n    return gameContentTranslation('entity.all', {\n        Entity: singularEntityName,\n        Entities: pluralEntityName,\n        entity: singularEntityLowerCaseName,\n        entities: pluralEntityLowerCaseName,\n    },)\n})()\n\n/** @reactComponent */\nexport default function EntityApp({viewDisplay, games, gameStyles,}: EntityProperties,) {\n    const appInterpreter = new EntityAppInterpreter(games, gameStyles,)\n\n    if (viewDisplay === ViewDisplays.SIMPLE_LIST)\n        return <SubMainContainer reactKey=\"entity\" viewDisplayAndRouteName={viewDisplayAndRouteName} viewDisplay={viewDisplay} titleContent={titleContent}>\n            <SimpleList reactKey=\"entity\" interpreter={appInterpreter}/>\n        </SubMainContainer>\n    if (viewDisplay === ViewDisplays.CARD_LIST)\n        return <SubMainContainer reactKey=\"entity\" viewDisplayAndRouteName={viewDisplayAndRouteName} viewDisplay={viewDisplay} titleContent={titleContent}>\n            <CardList reactKey=\"entity\" interpreter={appInterpreter}/>\n        </SubMainContainer>\n    return <SubMainContainer reactKey=\"entity\" viewDisplayAndRouteName={viewDisplayAndRouteName} viewDisplay={viewDisplay} titleContent={titleContent}>\n        <Table id=\"entity-table\" interpreter={appInterpreter}/>\n    </SubMainContainer>\n}\n","import './EditorVoiceSound.component.scss'\n\nimport type {EditorVoiceSound} from 'core/editorVoice/sound/EditorVoiceSound'\nimport type {ReactProperties}  from 'util/react/ReactProperties'\n\nimport SimpleSoundComponent from 'util/file/sound/component/SimpleSound.component'\n\ninterface EditorVoiceSoundComponentProperties\n    extends ReactProperties {\n\n    readonly editorVoiceSound: Nullable<EditorVoiceSound>\n\n    readonly name: string\n\n}\n\n/**\n * @param properties\n * @reactComponent\n */\nexport default function EditorVoiceSoundComponent({editorVoiceSound, name,}: EditorVoiceSoundComponentProperties,) {\n    if (editorVoiceSound == null)\n        return null\n\n    const {regularSound: regularFile, europeanSound: europeanFile,} = editorVoiceSound\n    return regularFile == null\n        ? null\n        : europeanFile == null\n            ? <div key={`Editor voice sound container (single - ${name})`} className=\"single-editorVoiceSound-container\">\n                <SimpleSoundComponent file={regularFile} title={name}/>\n            </div>\n            : <div key={`Editor voice sound container (double - ${name})`} className=\"double-editorVoiceSound-container container\">\n                <div key={`Editor voice sound container (single #1 - ${name}`} className=\"single-editorVoiceSound-container\">\n                    <SimpleSoundComponent file={regularFile} title={name}/>\n                </div>\n                <div key={`Editor voice sound container (single #2 - ${name})`} className=\"single-editorVoiceSound-container\">\n                    <SimpleSoundComponent file={europeanFile} title={name}/>\n                </div>\n            </div>\n\n}\n"],"names":["CanBeInAParachute","_ref","value","entity","reference","canBeInAParachute","comment","canBeInAParachuteComment","id","concat","englishNameInHtml","_jsx","className","limit","Limits","LOOSE_COIN_LIMIT","Tooltip","option","title","gameContentTranslation","acronym","languageValue","elementId","children","CanHaveWings","canHaveWings","canHaveWingsComment","CanMakeASoundOutOfAMusicBlock","canMakeASoundOutOfAMusicBlock","canMakeASoundOutOfAMusicBlockComment","HasAMushroomVariant","hasAMushroomVariant","LimitComponent","limits","displayAcronymIfApplicable","createSingleComponent","selectedLimits","filter","_ref2","hasLimit","map","_ref3","length","_Fragment","index","_jsxs","Fragment","createReturnOfLine","englishName","ProjectLanguages","current","comma","createSingleNameComponent","acronymId","StringContainer","getInHtml","nameContainer","TextComponent","content","NameComponent","name","PlayLimitComponent","toPlayLimitMap","SMM1And3DSEditorLimitComponent","editorLimit","editorLimit_smm1And3ds","NOT_APPLICABLE","SMM2EditorLimitComponent","editorLimit_smm2","isUnknown","isUnknown_editorLimit_smm2","CourseThemeComponent","ThemeComponent","_map","this","toCourseThemeMap","_isInAll","_this$reference$isInD","_this$reference$isInS","_this$reference$isInS2","_this$reference$isInF","isInGroundTheme","isInUndergroundTheme","isInUnderwaterTheme","isInDesertTheme","isInSnowTheme","isInSkyTheme","isInForestTheme","isInGhostHouseTheme","isInAirshipTheme","isInCastleTheme","_renderSingleComponent","theme","renderSingleComponent","english","_renderComponentForAllAsText","courseThemeImage","Image","file","COURSE_THEME_IMAGE_FILE","_renderComponentForAllAsImages","Themes","courseThemes","courseTheme","_gameStyles","_classPrivateFieldLooseKey","_gameStyles_unusedImages","_times","_themes","_associatedClass","_additionalClasses","EntityAppOption","Enum","constructor","associatedClass","super","Object","defineProperty","writable","_classPrivateFieldLooseBase","additionalClasses","_classPrivateFieldLoo","_classPrivateFieldLoo2","GameStyles","CompanionEnum","get","values","toArray","_classPrivateFieldLoo3","_classPrivateFieldLoo4","SUPER_MARIO_BROS","times","_classPrivateFieldLoo5","_classPrivateFieldLoo6","Times","themes","_classPrivateFieldLoo7","_classPrivateFieldLoo8","_createContentOption","enumeration","ReferenceError","renderContent","_createTableHeaderOption","renderTableHeader","_EntityAppOption","IMAGE_IN_SMB","uniqueImage","imageFiles","size","images","Array","key","element","IMAGE_IN_SMB3","SUPER_MARIO_BROS_3","IMAGE_IN_SMW","SUPER_MARIO_WORLD","IMAGE_IN_NSMBU","_ref4","NEW_SUPER_MARIO_BROS_U","IMAGE_IN_SM3DW","_ref5","SUPER_MARIO_3D_WORLD","IMAGES_ON_EDITOR","IMAGES_ON_CLEAR_CONDITION","IMAGES_ON_WHILE_PLAYING","IMAGES_ON_UNUSED","NAME","CommonOptions","getNameContent","EditorVoiceSoundComponent","editorVoiceSound","editorVoiceSoundFileHolder","nameHeader","GAME","_ref6","GameComponent","displayAllAsText","gameHeader","WHEN_ALL_SELECTED_GAME","GAME_STYLE","_ref7","GameStyleComponent","WHEN_ALL_SELECTED_GAME_STYLE","COURSE_THEME","_ref8","WHEN_ALL_SELECTED_COURSE_THEME","TIME","_ref9","TimeComponent","WHEN_ALL_SELECTED_TIME","CATEGORY","categoryName","categoryNameContainer","getCategoryContent","EntityCategories","getValueByName","imageFile","categoryHeader","CATEGORY_AS_TEXT","EDITOR_LIMIT_IN_SMM1_AND_3DS","completeEditorLimitInSmm1And3dsHeader","EDITOR_LIMIT_IN_SMM1_AND_3DS_ONLY","completeEditorLimitHeader","EDITOR_LIMIT_IN_SMM2","completeEditorLimitInSmm2Header","EDITOR_LIMIT_IN_SMM2_ONLY","PLAY_LIMIT","completePlayLimitHeader","_instance","_CompanionEnum_EntityAppOption","_classPrivateFieldLoo9","_classPrivateFieldLoo10","_games","EntityAppInterpreter","games","gameStyles","tableHeadersColor","filterGameStyle","filterGame","Entities","createListDimension","default","small","medium","large","extraLarge","createCardListDimension","createCardListContent","category","categoryEnglish","tableCaption","_OtherWordInTheGames$","_OtherWordInTheGames$2","singularEntityName","OtherWordInTheGames","ENTITY","singularNameOnReferenceOrNull","unfinishedText","singularEnglishName","singularEntityLowerCaseName","singularLowerCaseNameOnReferenceOrNull","toLowerCase","Entity","tableOptions","hasSMM1Or3DS","hasSMM2","options","hasSMB","push","hasSMB3","hasSMW","hasNSMBU","hasSM3DW","getAdditionalClass","createTableContent","createTableHeader","viewDisplayAndRouteName","ViewDisplays","SIMPLE_LIST","CARD_LIST","TABLE","titleContent","_OtherWordInTheGames$3","_OtherWordInTheGames$4","_OtherWordInTheGames$5","_OtherWordInTheGames$6","pluralEntityName","pluralNameOnReferenceOrNull","pluralEnglishName","pluralEntityLowerCaseName","pluralLowerCaseNameOnReferenceOrNull","entities","EntityApp","viewDisplay","appInterpreter","SubMainContainer","reactKey","SimpleList","interpreter","CardList","Table","regularSound","regularFile","europeanSound","europeanFile","SimpleSoundComponent"],"sourceRoot":""}