{"version":3,"file":"static/js/49.6c153d11.chunk.js","mappings":"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","sources":["app/GameReferenceApp.tsx","bootstrap/popover/PopoverInstance.ts","bootstrap/popover/Popover.tsx","bootstrap/popover/TextPopover.tsx","lang/name/component/NamePopover.component.tsx","lang/name/component/NameList.component.tsx","lang/name/component/Name.component.tsx"],"sourcesContent":["import './GameReferenceApp.scss'\n\nimport {Fragment} from 'react'\n\nimport type {PossibleEnglishName_Games} from 'core/soundEffect/SoundEffects.types'\nimport type {GameContentTranslationKey} from 'lang/components/TranslationProperty'\nimport type {ReactElement}              from 'util/react/ReactProperties'\n\nimport AbstractApp              from 'app/AbstractApp'\nimport {Games}                  from 'core/game/Games'\nimport {GameReferences}         from 'core/gameReference/GameReferences'\nimport {GameStyles}             from 'core/gameStyle/GameStyles'\nimport {SoundEffects}           from 'core/soundEffect/SoundEffects'\nimport {gameContentTranslation} from 'lang/components/translationMethods'\nimport NameComponent            from 'lang/name/component/Name.component'\n\n/**\n * @reactComponent\n */\nexport default class GameReferenceApp\n    extends AbstractApp {\n\n    //region -------------------- Fields --------------------\n\n    /**\n     * Every {@link GameReferences} that will do a return of line after its rendering.\n     */\n    public static RETURN_OF_LINES = [GameReferences.MARIO_AND_LUIGI_PAPER_JAM, GameReferences.DONKEY_KONG_COUNTRY, GameReferences.KIRBY_ADVENTURE,\n        GameReferences.KID_ICARIUS_UPRISING, GameReferences.MEGA_MAN, GameReferences.METROID_ZERO_MISSION,\n        GameReferences.NINTENDO_ENTERTAINMENT_SYSTEM_ROB, GameReferences.FIRE_EMBLEM_AWAKENING,\n        GameReferences.POKEMON_Y, GameReferences.PIKMIN_3, GameReferences.THE_LEGEND_OF_ZELDA_TRI_FORCE_HEROES,\n        GameReferences.XENOBLADE_CHRONICLES, GameReferences.MOTHER3, GameReferences.SPLATOON,\n        GameReferences.WII_FIT, GameReferences.CHIBI_ROBO, GameReferences.ANIMAL_CROSSING_HAPPY_HOME_DESIGNER,\n        GameReferences.F_ZERO, GameReferences.GAME_AND_WATCH, GameReferences.SONIC_THE_HEDGEHOG,\n        GameReferences.DUCK_HUNT, GameReferences.PAC_MAN, GameReferences.WRECKING_CREW,\n        GameReferences.PUNCH_OUT, GameReferences.STAR_FOX_ZERO, GameReferences.YAKUMAN_HO_O,\n        GameReferences.BIG_BRAIN_ACADEMY, GameReferences.MONSTER_MANOR, GameReferences.BABYMETAL,\n        GameReferences.MONSTER_HUNTER, GameReferences.EXCITEBIKE, GameReferences.NISEKOI,\n        GameReferences.JAM_WITH_THE_BAND, GameReferences.DAIGASSO_BAND_BROS_P, GameReferences.THE_LEGENDARY_STARFY,\n        GameReferences.BALLOON_FIGHT, GameReferences.SHIN_ONIGASHIMA, GameReferences.FAMICOM_DETECTIVE_CLUB_PART_II,\n        GameReferences.PUSHMO, GameReferences.CLU_CLU_LAND, GameReferences.VOLLEYBALL,\n        GameReferences.ICE_CLIMBER, GameReferences.SHAUN_THE_SHEEP,\n    ] as const\n\n    static #otherGameReferences?: readonly GameReferences[]\n\n    //endregion -------------------- Fields --------------------\n    //region -------------------- Getter & initialisation methods --------------------\n\n    private static get __otherGameReferences(): readonly GameReferences[] {\n        if (this.#otherGameReferences == null) {\n            const alreadyIncludedNames = [\n                ...Games.values.map(game => game.englishName),\n                ...GameStyles.values.map(game => game.englishName),\n                ...SoundEffects.soundEffect_games.map(game => game.englishName) as PossibleEnglishName_Games[],\n            ]\n            this.#otherGameReferences = GameReferences.values.filter(it => !alreadyIncludedNames.includes(it.englishName as never)).toArray()\n        }\n        return this.#otherGameReferences\n    }\n\n    //endregion -------------------- Getter & initialisation methods --------------------\n    //region -------------------- Methods --------------------\n\n    protected _getContainer(groupId: string, title: GameContentTranslationKey, enumReferences: readonly (| Games | GameStyles | SoundEffects)[],): ReactElement\n    protected _getContainer(groupId: string, title: GameContentTranslationKey, enumReferences: readonly GameReferences[], returnOfLine: readonly GameReferences[],): ReactElement\n    protected _getContainer(groupId: string, title: GameContentTranslationKey, enumReferences: readonly PossibleGameReference[], returnOfLine?: readonly GameReferences[],) {\n        return <div key={`names container - ${groupId}`} id={`${groupId}-names-container`} className=\"names-container\">\n            <h2 key={`names title - ${groupId}`} id={`${groupId}-names-title`} className=\"col-12 names-title\">{gameContentTranslation(title)}</h2>\n            <div key={`name (container) - ${groupId}`} id={`${groupId}-name-container`} className=\"container-fluid name-container\">{\n                enumReferences.map(gameReference => [gameReference, GameReferences.getValueByNameOrAcronym(gameReference.englishName),] as const).map(([enumReference, gameReference,]) =>\n                    <Fragment key={`single name container - ${gameReference.englishName}`}>\n                        <div id={`${gameReference.englishNameInHtml}-name-container`} className={`${enumReferences.length > 5 ? 'col-3' : 'col'} single-name-container`}>\n                            <div className=\"single-name-sub-container\">\n                                {enumReference.renderSingleComponent}\n                                <NameComponent id={`${groupId}-name`} name={gameReference.reference}/>\n                            </div>\n                        </div>\n                        {returnOfLine?.includes(gameReference) ? <div className=\"col-12 name-container return-of-line-name-container\"/> : null}\n                    </Fragment>)\n            }</div>\n        </div>\n    }\n\n    //endregion -------------------- Methods --------------------\n\n    protected override _mainContent() {\n        return <div id=\"gameReference-container\" className=\"container-fluid main-container\">\n            <h2 id=\"main-names-title\" className=\"col-12 names-title\">{gameContentTranslation('game reference.plural')}</h2>\n            {this._getContainer('game', 'game.plural', Games.values.toArray(),)}\n            {this._getContainer('gameStyle', 'game style.plural', GameStyles.values.toArray(),)}\n            {this._getContainer('soundEffect', 'sound effect.plural', SoundEffects.soundEffect_games,)}\n            {this._getContainer('otherGameReferences', 'game reference.others', GameReferenceApp.__otherGameReferences, GameReferenceApp.RETURN_OF_LINES,)}\n        </div>\n    }\n\n}\n\ntype PossibleGameReference = (Games | GameStyles | SoundEffects | GameReferences) & { renderSingleComponent?: ReactElement }\n","import {Popover} from 'bootstrap'\n\nimport type {PopoverEventCallbackReceived, PopoverEvents, PopoverEventsReceived} from 'bootstrap/popover/Popover.types'\n\nimport {BootstrapInstance}                from 'bootstrap/BootstapInstance'\nimport {BootstrapWithBasicEventsInstance} from 'bootstrap/BootstrapWithBasicEventsInstance'\n\nexport class PopoverInstance<ELEMENT extends HTMLElement = HTMLElement, ID extends string = string, >\n    extends BootstrapWithBasicEventsInstance<typeof PopoverInstance, Popover, Popover.Options, ELEMENT, ID> {\n\n    public static DEFAULT_OPTIONS: Partial<Popover.Options> = {}\n    /** @see Popover.Events.show */\n    public static readonly SHOW_EVENT = `show${Popover.EVENT_KEY}` as Popover.Events.show\n    /** @see Popover.Events.shown */\n    public static readonly SHOWN_EVENT = `shown${Popover.EVENT_KEY}` as Popover.Events.shown\n    /** @see Popover.Events.hide */\n    public static readonly HIDE_EVENT = `hide${Popover.EVENT_KEY}` as Popover.Events.hide\n    /** @see Popover.Events.hidden */\n    public static readonly HIDDEN_EVENT = `hidden${Popover.EVENT_KEY}` as Popover.Events.hidden\n    /** @see Popover.Events.inserted */\n    public static readonly INSERTED_EVENT = `inserted${Popover.EVENT_KEY}` as Popover.Events.inserted\n\n    public constructor(element: | ID | ELEMENT, options: Partial<Popover.Options> = PopoverInstance.DEFAULT_OPTIONS, callbacks: PopoverEventsReceived = null,) {\n        super(PopoverInstance, element, options,)\n        this.on(callbacks)\n    }\n\n    protected override _createInstance(options: Partial<Popover.Options>,): Popover {\n        return Popover.getOrCreateInstance(this.element, options,)\n    }\n\n\n    #addEventListener(type: string, callback: PopoverEventCallbackReceived<this>,): this {\n        if (callback != null)\n            this.element.addEventListener(type, event => callback(this, event,))\n        return this\n    }\n\n    /**\n     * @param callbacks\n     * @see https://getbootstrap.com/docs/5.1/components/popovers/#events\n     */\n    protected override _on(callbacks: Partial<PopoverEvents<this>>,): this {\n        if (callbacks.inserted != null)\n            this.onInserted(callbacks.inserted)\n        return this\n    }\n\n    /**\n     * @param callback\n     * @see Popover.Events.show\n     */\n    public override onShow(callback: PopoverEventCallbackReceived<this>,): this {\n        return this.#addEventListener(PopoverInstance.SHOW_EVENT, callback,)\n    }\n\n    /**\n     * @param callback\n     * @see Popover.Events.shown\n     */\n    public override onShown(callback: PopoverEventCallbackReceived<this>,): this {\n        return this.#addEventListener(PopoverInstance.SHOWN_EVENT, callback,)\n    }\n\n    /**\n     * @param callback\n     * @see Popover.Events.hide\n     */\n    public override onHide(callback: PopoverEventCallbackReceived<this>,): this {\n        return this.#addEventListener(PopoverInstance.HIDE_EVENT, callback,)\n    }\n\n    /**\n     * @param callback\n     * @see Popover.Events.hidden\n     */\n    public override onHidden(callback: PopoverEventCallbackReceived<this>,): this {\n        return this.#addEventListener(PopoverInstance.HIDDEN_EVENT, callback,)\n    }\n\n    /**\n     * @param callback\n     * @see Popover.Events.inserted\n     */\n    public onInserted(callback: PopoverEventCallbackReceived<this>,): this {\n        return this.#addEventListener(PopoverInstance.INSERTED_EVENT, callback,)\n    }\n\n\n    public static getInstance<ELEMENT extends HTMLElement = HTMLElement, ID extends string = string, >(element: | ELEMENT | ID,): PopoverInstance<ELEMENT, ID> {\n        return BootstrapInstance._getInstance(PopoverInstance, element)\n    }\n\n}\n","import {useEffect} from 'react'\n\nimport type {PopoverConfiguration}                              from 'bootstrap/popover/Popover.types'\nimport type {ReactElement, ReactPropertiesWithOptionalChildren} from 'util/react/ReactProperties'\n\nimport {PopoverInstance} from 'bootstrap/popover/PopoverInstance'\n\n/**\n * Create a new {@link bootstrap.Popover Popover} instance once the element is rendered\n *\n * @param properties the properties received (containing the content, the option & the id)\n * @reactComponent\n * @see https://getbootstrap.com/docs/5.1/components/popovers/\n */\nexport default function Popover<T extends ReactElement = ReactElement, >({children, option, on: triggers, elementId,}: ReactPropertiesWithOptionalChildren<PopoverConfiguration, T>,) {\n    useEffect(() => [elementId].flat().forEach(elementId => new PopoverInstance(elementId, option, triggers,)))\n    return children ?? null\n}\n","import type {SpanPopoverConfiguration}                          from 'bootstrap/popover/Popover.types'\nimport type {ReactElementOrString, ReactPropertiesWithChildren} from 'util/react/ReactProperties'\n\nimport Popover       from 'bootstrap/popover/Popover'\nimport TextComponent from 'app/tools/text/TextComponent'\n\n/**\n *\n * @param properties\n * @reactComponent\n */\nexport default function TextPopover<T extends ReactElementOrString = ReactElementOrString, >({children, elementId, ...otherProperties}: ReactPropertiesWithChildren<SpanPopoverConfiguration, T>,) {\n    return <Popover elementId={elementId} {...otherProperties}>\n        <TextComponent key={elementId} id={elementId} content={children} data-bs-toggle=\"popover\"/>\n    </Popover>\n}\n","import {Popover}                                       from 'bootstrap'\nimport {Component, type Dispatch, type SetStateAction} from 'react'\n\nimport type {PopoverOrientation}                                       from 'bootstrap/popover/Popover.types'\nimport type {Name}                                                     from 'lang/name/Name'\nimport type {NamePopoverProperties, NamePopoverStates, NameProperties} from 'lang/name/component/Name.properties'\nimport type {ReactComponent}                                           from 'util/react/ReactComponent'\nimport type {ReactElement}                                             from 'util/react/ReactProperties'\n\nimport TextComponent        from 'app/tools/text/TextComponent'\nimport TextPopover          from 'bootstrap/popover/TextPopover'\nimport {ProjectLanguages}   from 'lang/ProjectLanguages'\nimport {contentTranslation} from 'lang/components/translationMethods'\n\n/**\n * @reactComponent\n */\nexport default class NamePopoverComponent\n    extends Component<NamePopoverProperties, NamePopoverStates>\n    implements ReactComponent {\n\n    readonly #currentLanguageTextContent\n\n    constructor(props: NamePopoverProperties,) {\n        super(props,)\n        this.#currentLanguageTextContent = ProjectLanguages.current.get<string>(this.otherProperties.name)\n        this.state = {\n            element: <TextComponent key={`${this.id} - temporary`} content={this.#currentLanguageTextContent}/>,\n        }\n    }\n\n    public get id(): string {\n        return this.props.id\n    }\n\n    public get listId(): string {\n        return this.props.listId\n    }\n\n    public get setDoesDisplayPopover(): Dispatch<SetStateAction<boolean>> {\n        return this.props.setDoesDisplayPopover\n    }\n\n    public get otherProperties(): Omit<NameProperties, 'id'> {\n        return this.props.otherProperties\n    }\n\n    public get name(): Name<string> {\n        return this.otherProperties.name\n    }\n\n    public get popoverOrientation(): | PopoverOrientation | undefined {\n        return this.otherProperties.popoverOrientation\n    }\n\n\n    public override componentDidMount(): void {\n        const id = this.id\n        const setDoesDisplayPopover = this.setDoesDisplayPopover\n\n        this.setState({\n            element: <TextPopover key={`${id} - span popover`} elementId={id} option={createOption(this.listId, this.popoverOrientation, contentTranslation('In other languages'),)}\n                                  {...this.otherProperties} on={({show: () => setDoesDisplayPopover(true), hide: () => setDoesDisplayPopover(false),})}>\n                {this.#currentLanguageTextContent}\n            </TextPopover>,\n        })\n    }\n\n    public override render(): NonNullable<ReactElement> {\n        return this.state.element\n    }\n\n}\n\n/**\n * Create the option for the name popover\n *\n * @param elementId the element id\n * @param popoverOrientation the {@link Popover popover} orientation\n * @param title popover title\n */\nfunction createOption(elementId: string, popoverOrientation: | PopoverOrientation | undefined, title: string,): Partial<Popover.Options> {\n    const option: Partial<Popover.Options> = {\n        title: title,\n        content: document.getElementById(elementId)!,\n        html: true,\n        trigger: 'hover focus',\n    }\n    if (popoverOrientation != null)\n        option.placement = popoverOrientation\n\n    return option\n}\n","import './NameList.component.scss'\n\nimport type {NameListProperties} from 'lang/name/component/Name.properties'\n\nimport TextComponent         from 'app/tools/text/TextComponent'\nimport {languageTranslation} from 'lang/components/translationMethods'\nimport {ProjectLanguages}    from 'lang/ProjectLanguages'\n\n/**\n * @reactComponent\n */\nexport default function NameListComponent({id, listId, name, doesDisplayPopover,}: NameListProperties,) {\n    const languagesToDisplay = name.originalLanguages.filter(it => !it.isCurrent)\n\n    return <div key={`${id} - list container`} id={listId} className={`language-list ${doesDisplayPopover ? '' : 'visually-hidden'}`}>{\n        [...name.toNameMap()].filter(([language,]) => languagesToDisplay.includes(language)).map(([language, value,]) =>\n            <div key={`${id} - single language container (${language.englishName}`} className=\"singleLanguage-container\">\n                <TextComponent\n                    content={`${languageTranslation(language.englishName)}${ProjectLanguages.current.space}${ProjectLanguages.current.unionTrait}${ProjectLanguages.current.space}`}\n                    className=\"language-text col small text-primary text-opacity-50 text-end space-pre\"/>\n                <TextComponent content={value} className=\"languageValue-text col text-start\"/>\n            </div>\n        )}</div>\n}\n","import {useState} from 'react'\n\nimport type {NameProperties} from 'lang/name/component/Name.properties'\n\nimport NamePopoverComponent from 'lang/name/component/NamePopover.component'\nimport NameListComponent    from 'lang/name/component/NameList.component'\nimport {StringContainer}    from 'util/StringContainer'\n\n/**\n * A name component used to render the current language in text format\n * and the other languages (excluding the current one) in a simple list format.\n *\n * @param properties\n * @reactComponent\n * @see Name.toNameMap\n * @see ProjectLanguages.current\n * @todo move the name structure into the popover\n */\nexport default function NameComponent({id, ...otherProperties}: NameProperties,) {\n    const [doesDisplayPopover, setDoesDisplayPopover,] = useState(false)\n    const {name,} = otherProperties\n\n    const englishName = name.english\n    const elementId = `${id}-${StringContainer.getInHtml(englishName)}`\n    const listId = `${elementId}-list`\n\n    return <div key={`${englishName} - container (${id})`} id={`${elementId}-container`} className=\"name-container\">\n        <NamePopoverComponent key={`${englishName} - popover (${id})`} id={elementId} listId={listId} setDoesDisplayPopover={setDoesDisplayPopover} otherProperties={otherProperties}/>\n        <NameListComponent key={`${englishName} - list (${id})`} name={name} id={elementId} listId={listId} doesDisplayPopover={doesDisplayPopover}/>\n    </div>\n}\n"],"names":["_otherGameReferences","_classPrivateFieldLooseKey","GameReferenceApp","_AbstractApp","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","groupId","title","enumReferences","returnOfLine","_jsxs","id","concat","className","children","_jsx","gameContentTranslation","map","gameReference","GameReferences","getValueByNameOrAcronym","englishName","_ref","_ref2","_slicedToArray","enumReference","Fragment","englishNameInHtml","length","renderSingleComponent","NameComponent","name","reference","includes","this","_getContainer","Games","values","toArray","GameStyles","SoundEffects","soundEffect_games","__otherGameReferences","RETURN_OF_LINES","get","_classPrivateFieldLooseBase","alreadyIncludedNames","_toConsumableArray","game","filter","it","AbstractApp","MARIO_AND_LUIGI_PAPER_JAM","DONKEY_KONG_COUNTRY","KIRBY_ADVENTURE","KID_ICARIUS_UPRISING","MEGA_MAN","METROID_ZERO_MISSION","NINTENDO_ENTERTAINMENT_SYSTEM_ROB","FIRE_EMBLEM_AWAKENING","POKEMON_Y","PIKMIN_3","THE_LEGEND_OF_ZELDA_TRI_FORCE_HEROES","XENOBLADE_CHRONICLES","MOTHER3","SPLATOON","WII_FIT","CHIBI_ROBO","ANIMAL_CROSSING_HAPPY_HOME_DESIGNER","F_ZERO","GAME_AND_WATCH","SONIC_THE_HEDGEHOG","DUCK_HUNT","PAC_MAN","WRECKING_CREW","PUNCH_OUT","STAR_FOX_ZERO","YAKUMAN_HO_O","BIG_BRAIN_ACADEMY","MONSTER_MANOR","BABYMETAL","MONSTER_HUNTER","EXCITEBIKE","NISEKOI","JAM_WITH_THE_BAND","DAIGASSO_BAND_BROS_P","THE_LEGENDARY_STARFY","BALLOON_FIGHT","SHIN_ONIGASHIMA","FAMICOM_DETECTIVE_CLUB_PART_II","PUSHMO","CLU_CLU_LAND","VOLLEYBALL","ICE_CLIMBER","SHAUN_THE_SHEEP","Object","defineProperty","writable","_addEventListener","PopoverInstance","_BootstrapWithBasicEv","element","_this","options","undefined","DEFAULT_OPTIONS","callbacks","call","_assertThisInitialized","_addEventListener2","on","Popover","getOrCreateInstance","inserted","onInserted","callback","SHOW_EVENT","SHOWN_EVENT","HIDE_EVENT","HIDDEN_EVENT","INSERTED_EVENT","BootstrapInstance","_getInstance","BootstrapWithBasicEventsInstance","type","_this2","addEventListener","event","option","triggers","elementId","useEffect","flat","forEach","EVENT_KEY","TextPopover","otherProperties","_objectWithoutProperties","_excluded","_objectSpread","TextComponent","content","_currentLanguageTextContent","NamePopoverComponent","props","ProjectLanguages","current","state","listId","setDoesDisplayPopover","popoverOrientation","setState","createOption","contentTranslation","show","hide","Component","document","getElementById","html","trigger","placement","NameListComponent","doesDisplayPopover","languagesToDisplay","originalLanguages","isCurrent","toNameMap","language","_ref4","_ref5","languageTranslation","space","unionTrait","_useState","useState","_useState2","english","StringContainer","getInHtml"],"sourceRoot":""}