{"version":3,"file":"static/js/50.54faee50.chunk.js","mappings":"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","sources":["app/options/EntityLimitAppOption.tsx","app/LimitApp.tsx","app/tools/button/LinkButton.tsx"],"sourcesContent":["import './EntityLimitAppOption.scss'\n\nimport type {CollectionHolder, CollectionIterator}              from '@joookiwi/collection'\nimport type {CompanionEnumSingleton, PossibleEnumerableValueBy} from '@joookiwi/enumerable'\nimport {CompanionEnum, Enum}                                    from '@joookiwi/enumerable'\n\nimport type {AppOption}           from 'app/options/AppOption'\nimport type {Names, Ordinals}     from 'app/options/EntityLimitAppOption.types'\nimport type {SingleHeaderContent} from 'app/tools/table/SimpleHeader'\nimport type {EntityLimit}         from 'core/entityLimit/EntityLimit'\nimport type {EntityLimits}        from 'core/entityLimit/EntityLimits'\n\nimport {CommonOptions}           from 'app/options/CommonOptions'\nimport {COURSE_THEME_IMAGE_FILE} from 'app/options/file/themeImageFiles'\nimport TextComponent             from 'app/tools/text/TextComponent'\nimport Image                     from 'app/tools/images/Image'\nimport {EmptyEntityLimit}        from 'core/entityLimit/EmptyEntityLimit'\nimport {ProjectLanguages}        from 'lang/ProjectLanguages'\nimport {contentTranslation}      from 'lang/components/translationMethods'\nimport NameComponent             from 'lang/name/component/Name.component'\n\nexport abstract class EntityLimitAppOption\n    extends Enum<Ordinals, Names>\n    implements AppOption<EntityLimits> {\n\n    //region -------------------- Enum instances --------------------\n\n    public static readonly ACRONYM = new class EntityLimitAppOption_Acronym extends EntityLimitAppOption {\n\n        protected override _createContentOption({reference: {acronym, alternativeAcronym,},}: EntityLimits,) {\n            return alternativeAcronym == null\n                ? acronym == null\n                    ? null\n                    : <TextComponent content={acronym}/>\n                : <div className=\"acronyms-container d-flex flex-column flex-md-row\">\n                    <TextComponent content={acronym}/>\n                    <div className=\"vertical-separator vr mx-2 d-none d-md-inline-block\"/>\n                    <hr className=\"horizontal-separator my-1 d-block d-md-none\"/>\n                    <TextComponent content={alternativeAcronym}/>\n                </div>\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {key: 'acronym', element: contentTranslation('Acronym(s)'),}\n        }\n\n    }()\n    public static readonly NAME = new class EntityLimitAppOption_Name extends EntityLimitAppOption {\n\n        protected override _createContentOption({reference, isEditorLimit,}: EntityLimits,) {\n            const {alternativeContainer} = reference\n            return alternativeContainer instanceof EmptyEntityLimit\n                ? this.#createNameComponent(reference, isEditorLimit,)\n                : <div className=\"names-container d-flex flex-column flex-md-row\">\n                    {this.#createNameComponent(reference, isEditorLimit,)}\n                    <div className=\"vertical-separator vr mx-3 d-none d-md-inline-block\"/>\n                    <hr className=\"horizontal-separator my-1 d-block d-md-none\"/>\n                    <NameComponent id=\"alternativeName\" name={alternativeContainer} popoverOrientation=\"bottom\"/>\n                </div>\n        }\n\n        #createNameComponent(reference: EntityLimit, isEditorLimit: boolean,): ReactElement {\n            return isEditorLimit\n                ? <div className=\"nameWithImage-container d-flex position-relative\">\n                    <Image file={COURSE_THEME_IMAGE_FILE} className=\"course-theme-image badge bg-transparent position-absolute top-0 start-0\"/>\n                    <NameComponent id=\"name\" name={reference} popoverOrientation=\"bottom\"/>\n                </div>\n                : <NameComponent id=\"name\" name={reference} popoverOrientation=\"bottom\"/>\n        }\n\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return CommonOptions.get.nameHeader\n        }\n\n    }()\n    public static readonly AMOUNT_IN_ALL_GAMES = new class EntityLimitAppOption_Amount extends EntityLimitAppOption {\n\n        protected override _createContentOption(enumeration: EntityLimits,) {\n            const {reference: {limitAmountInSMM1AndSMM3DS, limitAmountInSMM2, isUnknownLimitInSMM2,}, englishName,} = enumeration\n            if (limitAmountInSMM1AndSMM3DS === limitAmountInSMM2)\n                return <TextComponent key={`${englishName} - text component`} content={limitAmountInSMM2} isUnknown={isUnknownLimitInSMM2}/>\n\n            return <span className=\"space-pre\">\n                {EntityLimitAppOption.AMOUNT_IN_SMM1_AND_SMM3DS.renderContent(enumeration,)}\n                {ProjectLanguages.current.space}{ProjectLanguages.current.slash}{ProjectLanguages.current.space}\n                {EntityLimitAppOption.AMOUNT_IN_SMM2.renderContent(enumeration,)}\n            </span>\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return CommonOptions.get.limitHeader\n        }\n    }()\n    public static readonly AMOUNT_IN_SMM1_AND_SMM3DS = new class EntityLimitAppOption_AmountInSMM1AndSMM3DS extends EntityLimitAppOption {\n\n        protected override _createContentOption({reference, englishName,}: EntityLimits,) {\n            return <TextComponent key={`${englishName} - text component (amount SMM1&3DS)`} content={reference.limitAmountInSMM1AndSMM3DS} isUnknown={reference.isUnknownLimitInSMM1AndSMM3DS}/>\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return CommonOptions.get.limitHeader\n        }\n\n    }()\n    public static readonly AMOUNT_IN_SMM2 = new class EntityLimitAppOption_AmountInSMM2 extends EntityLimitAppOption {\n\n        protected override _createContentOption({reference, englishName,}: EntityLimits,) {\n            return <TextComponent key={`${englishName} - text component (amount SMM2)`} content={reference.limitAmountInSMM2} isUnknown={reference.isUnknownLimitInSMM2}/>\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return CommonOptions.get.limitHeader\n        }\n\n    }()\n\n    //endregion -------------------- Enum instances --------------------\n    //region -------------------- Companion enum --------------------\n\n    public static readonly CompanionEnum: CompanionEnumSingleton<EntityLimitAppOption, typeof EntityLimitAppOption> = class CompanionEnum_EntityLimitAppOption\n        extends CompanionEnum<EntityLimitAppOption, typeof EntityLimitAppOption> {\n\n        //region -------------------- Singleton usage --------------------\n\n        static #instance?: CompanionEnum_EntityLimitAppOption\n\n        private constructor() {\n            super(EntityLimitAppOption,)\n        }\n\n        public static get get() {\n            return this.#instance ??= new CompanionEnum_EntityLimitAppOption()\n        }\n\n        //endregion -------------------- Singleton usage --------------------\n\n    }\n\n    //endregion -------------------- Companion enum --------------------\n    //region -------------------- Fields --------------------\n    //endregion -------------------- Fields --------------------\n    //region -------------------- Constructor --------------------\n\n    private constructor() {\n        super()\n    }\n\n    //endregion -------------------- Constructor --------------------\n    //region -------------------- Getter methods --------------------\n    //endregion -------------------- Getter methods --------------------\n    //region -------------------- Methods --------------------\n\n    //region -------------------- App option - content --------------------\n\n    protected abstract _createContentOption(enumeration: EntityLimits,): ReactElement\n\n    public renderContent(enumeration: EntityLimits,): readonly [ReactElement,] {\n        return [this._createContentOption(enumeration,),]\n    }\n\n    //endregion -------------------- App option - content --------------------\n    //region -------------------- App option - table --------------------\n\n    protected abstract _createTableHeaderOption(): SingleHeaderContent\n\n    public renderTableHeader(): NullOr<SingleHeaderContent> {\n        return this._createTableHeaderOption()\n    }\n\n    //endregion -------------------- App option - table --------------------\n\n    //endregion -------------------- Methods --------------------\n    //region -------------------- Enum methods --------------------\n\n    public static getValue(value: PossibleEnumerableValueBy<EntityLimitAppOption>,): EntityLimitAppOption {\n        return EntityLimitAppOption.CompanionEnum.get.getValue(value,)\n    }\n\n    public static get values(): CollectionHolder<EntityLimitAppOption> {\n        return EntityLimitAppOption.CompanionEnum.get.values\n    }\n\n    public static [Symbol.iterator](): CollectionIterator<EntityLimitAppOption> {\n        return EntityLimitAppOption.CompanionEnum.get[Symbol.iterator]()\n    }\n\n    //endregion -------------------- Enum methods --------------------\n\n}\n","import './LimitApp.scss'\n\nimport type {LimitAppProperties}                                   from 'app/AppProperties.types'\nimport type {AppInterpreterWithTable}                              from 'app/interpreter/AppInterpreterWithTable'\nimport type {PossibleDimensionOnCardList, PossibleDimensionOnList} from 'app/interpreter/DimensionOnList'\nimport type {LimitTypes}                                           from 'app/property/LimitTypes'\nimport type {ClassWithType}                                        from 'core/ClassWithType'\nimport type {EntityLimits}                                         from 'core/entityLimit/EntityLimits'\nimport type {EveryPossibleRouteNames}                              from 'route/everyRoutes.types'\n\nimport {EntityLimitAppOption}                       from 'app/options/EntityLimitAppOption'\nimport {COURSE_THEME_IMAGE_FILE}                    from 'app/options/file/themeImageFiles'\nimport LinkButton                                   from 'app/tools/button/LinkButton'\nimport Image                                        from 'app/tools/images/Image'\nimport {AbstractTableApp}                           from 'app/withInterpreter/AbstractTableApp'\nimport {contentTranslation, gameContentTranslation} from 'lang/components/translationMethods'\nimport {filterGame}                                 from 'util/utilitiesMethods'\n\nexport default class LimitApp\n    extends AbstractTableApp<AppInterpreterWithTable<EntityLimits, EntityLimitAppOption>, LimitAppProperties>\n    implements ClassWithType<LimitTypes> {\n\n    //region -------------------- Getter methods --------------------\n\n    public get type(): LimitTypes {\n        return this.props.type\n    }\n\n    //endregion -------------------- Getter methods --------------------\n    //region -------------------- Create methods --------------------\n\n    protected override _createKey(): string {\n        return 'limit'\n    }\n\n\n    protected override _createSimpleListRouteName(): EveryPossibleRouteNames {\n        return `${this.type.routeName} (list)`\n    }\n\n    protected override _createCardListRouteName(): EveryPossibleRouteNames {\n        return `${this.type.routeName} (card)`\n    }\n\n    protected override _createTableRouteName(): EveryPossibleRouteNames {\n        return `${this.type.routeName} (table)`\n    }\n\n\n    protected override _createTitleContent(): ReactElementOrString {\n        return gameContentTranslation(`limit.${this.type.type}.all`)\n    }\n\n    protected override _createAsideContent(): ReactElementOrString {\n        const {type, viewDisplay,} = this\n\n        return <div id=\"limit-linkButton-container\" className=\"btn-group btn-group-vertical btn-group-sm\">\n            <LinkButton partialId=\"allLimit\" routeName={viewDisplay.getRoutePath(type.allRouteName)} color={type.allColor}>{contentTranslation('All')}</LinkButton>\n            <div id=\"limit-linkButton-playAndEditor-container\" className=\"btn-group btn-group-sm\">\n                <LinkButton partialId=\"playLimit\" routeName={viewDisplay.getRoutePath(type.playRouteName)} color={type.playColor}>{gameContentTranslation('limit.play.simple')}</LinkButton>\n                <LinkButton partialId=\"editorLimit\" routeName={viewDisplay.getRoutePath(type.editorRouteName)} color={type.editorColor}>{gameContentTranslation('limit.editor.simple')}</LinkButton>\n            </div>\n        </div>\n    }\n\n    protected override _createAppOptionInterpreter() {\n        const $this = this\n\n        return new class LimitAppInterpreter implements AppInterpreterWithTable<EntityLimits, EntityLimitAppOption> {\n\n            public get content() {\n                return filterGame($this.type.content, $this.props.games,)\n            }\n\n            //region -------------------- List interpreter --------------------\n\n            public createListDimension(): PossibleDimensionOnList {\n                return {\n                    small: 6,\n                    large: null,\n                    extraLarge: 2,\n                }\n            }\n\n            //endregion -------------------- List interpreter --------------------\n            //region -------------------- Card list interpreter --------------------\n\n            public createCardListDimension(): PossibleDimensionOnCardList {\n                return 'list'\n            }\n\n            public createCardListContent(enumeration: EntityLimits,) {\n                return enumeration.isEditorLimit\n                    ? <div className=\"card-bodyWithEditor-container\">\n                        <Image file={COURSE_THEME_IMAGE_FILE} className=\"course-theme-image position-absolute start-0 bottom-0\"/>\n                        {this.#createBody(enumeration)}\n                    </div>\n                    : this.#createBody(enumeration)\n            }\n\n            #createBody(enumeration: EntityLimits,) {\n                return <div className=\"card-body\" id={`limit-${enumeration.englishNameInHtml}`}>\n                    {EntityLimitAppOption.AMOUNT_IN_ALL_GAMES.renderContent(enumeration,)}\n                </div>\n            }\n\n            //endregion -------------------- Card list interpreter --------------------\n            //region -------------------- Table interpreter --------------------\n\n            public readonly tableHeadersColor = 'info' satisfies BootstrapThemeColor\n            public readonly tableColor = 'primary' satisfies BootstrapThemeColor\n            public readonly tableCaption = gameContentTranslation(`limit.${$this.type.type}.all`) satisfies ReactElementOrString\n\n            public get tableOptions(): readonly EntityLimitAppOption[] {\n                const games = $this.props.games,\n                    hasSMM1Or3DSGames = games.hasSMM1Or3DS,\n                    hasSMM2Games = games.hasSMM2\n\n                const options: EntityLimitAppOption[] = [\n                    EntityLimitAppOption.ACRONYM,\n                    EntityLimitAppOption.NAME,\n                ]\n                if (hasSMM1Or3DSGames && hasSMM2Games)\n                   options.push(EntityLimitAppOption.AMOUNT_IN_ALL_GAMES,)\n                else {\n                    if (hasSMM1Or3DSGames)\n                        options.push(EntityLimitAppOption.AMOUNT_IN_SMM1_AND_SMM3DS,)\n                    if (hasSMM2Games)\n                        options.push(EntityLimitAppOption.AMOUNT_IN_SMM2,)\n                }\n                return options\n            }\n\n\n            public createNewTableContent(content: EntityLimits, option: EntityLimitAppOption,) {\n                return option.renderContent(content,)\n            }\n\n            public createTableHeader(option: EntityLimitAppOption,) {\n                return option.renderTableHeader()\n            }\n\n            //endregion -------------------- Table interpreter --------------------\n\n        }()\n    }\n\n    //endregion -------------------- Create methods --------------------\n}\n","import {Link} from 'react-router-dom'\n\nimport type {EveryPossibleRouteNames}                      from 'route/everyRoutes.types'\nimport type {ReactProperties, ReactPropertiesWithChildren} from 'util/react/ReactProperties'\n\nimport {routeFromName} from 'route/route'\n\ninterface LinkButtonsProperties\n    extends ReactProperties {\n\n    partialId: string\n\n    routeName: Nullable<EveryPossibleRouteNames>\n\n    color: BootstrapColor\n\n}\n\n/**\n * @reactComponent\n */\nexport default function LinkButton({partialId, routeName, color, children,}: ReactPropertiesWithChildren<LinkButtonsProperties, ReactElementOrString>,) {\n    const id = `${partialId}-button`,\n        className = `btn btn-${color} link-button`\n\n    return routeName == null\n        ? <button type=\"button\" id={id} className={className} disabled>{children}</button>\n        : <Link type=\"button\" id={id} className={className} to={routeFromName(routeName)}>{children}</Link>\n}\n\n/**\n * Create a {@link Link} button or a simple disabled button (if the route name is <b>null</b>)\n *\n * @param partialId The partial ID (with \"-button\") added after-end\n * @param routeName The route name\n * @param color The Bootstrap color\n * @param value The value to display\n */\nexport function createLinkButton(partialId: string, [routeName, color,]: readonly [Nullable<EveryPossibleRouteNames>, BootstrapColor,], value: ReactElementOrString,) {\n    return <LinkButton partialId={partialId} routeName={routeName} color={color}>{value}</LinkButton>\n}\n"],"names":["_Symbol$iterator","Symbol","iterator","EntityLimitAppOption","_ref","_inherits","_super","_createSuper","_classCallCheck","call","_createClass","key","value","enumeration","this","_createContentOption","_createTableHeaderOption","CompanionEnum","get","getValue","values","Enum","_createNameComponent2","reference","isEditorLimit","_jsxs","className","children","_jsx","Image","file","COURSE_THEME_IMAGE_FILE","NameComponent","id","name","popoverOrientation","ACRONYM","_EntityLimitAppOption","EntityLimitAppOption_Acronym","_super2","apply","arguments","_ref2","_ref2$reference","acronym","alternativeAcronym","TextComponent","content","element","contentTranslation","NAME","_createNameComponent","_classPrivateFieldLooseKey","_EntityLimitAppOption2","EntityLimitAppOption_Name","_super3","_this","_len","length","args","Array","_key","concat","Object","defineProperty","_assertThisInitialized","_ref3","alternativeContainer","EmptyEntityLimit","_classPrivateFieldLooseBase","CommonOptions","nameHeader","AMOUNT_IN_ALL_GAMES","_EntityLimitAppOption3","EntityLimitAppOption_Amount","_super4","_enumeration$referenc","limitAmountInSMM1AndSMM3DS","limitAmountInSMM2","isUnknownLimitInSMM2","englishName","isUnknown","AMOUNT_IN_SMM1_AND_SMM3DS","renderContent","ProjectLanguages","current","space","slash","AMOUNT_IN_SMM2","limitHeader","_EntityLimitAppOption4","EntityLimitAppOption_AmountInSMM1AndSMM3DS","_super5","_ref4","isUnknownLimitInSMM1AndSMM3DS","_EntityLimitAppOption5","EntityLimitAppOption_AmountInSMM2","_super6","_ref5","_instance","_class2","_CompanionEnum","CompanionEnum_EntityLimitAppOption","_super7","_classPrivateFieldLoo","_classPrivateFieldLoo2","writable","LimitApp","props","type","routeName","gameContentTranslation","viewDisplay","LinkButton","partialId","getRoutePath","allRouteName","color","allColor","playRouteName","playColor","editorRouteName","editorColor","_createBody","$this","LimitAppInterpreter","_createBody2","tableHeadersColor","tableColor","tableCaption","filterGame","games","small","large","extraLarge","hasSMM1Or3DSGames","hasSMM1Or3DS","hasSMM2Games","hasSMM2","options","push","option","renderTableHeader","englishNameInHtml","AbstractTableApp","disabled","Link","to","routeFromName"],"sourceRoot":""}