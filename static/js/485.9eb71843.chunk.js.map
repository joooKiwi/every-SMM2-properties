{"version":3,"file":"static/js/485.9eb71843.chunk.js","mappings":"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","sources":["app/options/MysteryMushroomAppOption.tsx","app/MysteryMushroomApp.tsx","app/options/CommonOptions.tsx"],"sourcesContent":["import type {CollectionHolder, EnumerableConstructor, PossibleValueByEnumerable} from '@joookiwi/enumerable/dist/types'\nimport {Enum}                                                                    from '@joookiwi/enumerable'\nimport {Fragment, lazy}                                                          from 'react'\n\nimport type {Names, Ordinals, PossibleMysteryMushroomType}           from 'app/options/MysteryMushroomAppOption.types'\nimport type {AppOptionWithContent, PossibleRenderReactElement}       from 'app/options/component/AppOptionWithContent'\nimport type {AppOptionWithTable}                                     from 'app/options/component/AppOptionWithTable'\nimport type {SingleHeaderContent}                                    from 'app/tools/table/SimpleHeader'\nimport type {MysteryMushroom}                                        from 'core/mysteryMushroom/MysteryMushroom'\nimport type {PossibleImageSourceForFile, PossibleSoundSourceForFile} from 'core/mysteryMushroom/MysteryMushrooms.types'\nimport type {MysteryMushroomSoundFile}                               from 'core/mysteryMushroom/file/MysteryMushroomSoundFile'\nimport type {ReactElement}                                           from 'util/react/ReactProperties'\nimport type {NullOr}                                                 from 'util/types/nullable'\nimport type {NotApplicable}                                          from 'util/types/variables'\n\nimport {MysteryMushrooms}              from 'core/mysteryMushroom/MysteryMushrooms'\nimport {CommonOptions}                 from 'app/options/CommonOptions'\nimport {AppOptionWithContentComponent} from 'app/options/component/AppOptionWithContent.component'\nimport {AppOptionWithTableComponent}   from 'app/options/component/AppOptionWithTable.component'\nimport TextComponent                   from 'app/tools/text/TextComponent'\nimport {ProjectLanguages}              from 'lang/ProjectLanguages'\n\n//region -------------------- dynamic imports --------------------\n\nconst NameComponent =        lazy(() => import('lang/name/component/Name.component'))\nconst Image =                lazy(() => import('app/tools/images/Image'))\nconst SimpleSoundComponent = lazy(() => import('util/sound/component/SimpleSound.component'))\n\n//endregion -------------------- dynamic imports --------------------\n\nexport abstract class MysteryMushroomAppOption\n    extends Enum<Ordinals, Names> {\n\n    //region -------------------- Enum instances --------------------\n\n    public static readonly CONDITION_TO_UNLOCK_IT = new class MysteryMushroomAppOption_ConditionToUnlockIt extends MysteryMushroomAppOption {\n\n        protected override _createContentOption({reference,}: MysteryMushrooms,): PossibleRenderReactElement {\n            return <>--{reference.conditionToUnlockIt}--</>\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {key: 'conditionToUnlockIt', element: '--Condition to unlock it--',}//TODO add condition to unlock it\n        }\n\n    }(null,)\n    public static readonly GAME = new class MysteryMushroomAppOption_Game extends MysteryMushroomAppOption {\n\n        protected override _createContentOption(enumeration: MysteryMushrooms,) {\n            const {uniqueEnglishName, englishNameInHtml, reference,} = enumeration\n\n            return <div key={`games - ${uniqueEnglishName}`} id={`games-${englishNameInHtml}`}>{\n                reference.games.map((game, index, games,) => <Fragment key={`game (${index + 1}) - ${uniqueEnglishName}`}>\n                    <NameComponent id={`game_${index + 1}_${englishNameInHtml}`} name={game.reference} popoverOrientation=\"right\"/>\n                    {index === games.length - 1 ? null : <>{ProjectLanguages.currentLanguage.comma}<br/></>}\n                </Fragment>)\n            }</div>\n        }\n\n        protected override _createTableHeaderOption() {\n            return CommonOptions.get.gameHeader\n        }\n\n    }(null,)\n    public static readonly NAME = new class MysteryMushroomAppOption_Name extends MysteryMushroomAppOption {\n\n        protected override _createContentOption(enumeration: MysteryMushrooms,) {\n            return CommonOptions.get.getNameContent(enumeration)/*<YesOrNoResultTextComponent boolean={reference.canBeUnlockedByAnAmiibo}/>*/\n        }\n\n        protected override _createTableHeaderOption() {\n            return CommonOptions.get.nameHeader\n        }\n\n    }(null,)\n\n\n    public static readonly IMAGES_AND_SOUNDS = new class MysteryMushroomAppOption_ImagesAndSounds extends MysteryMushroomAppOption {\n\n        protected override _createContentOption() {\n            return MysteryMushroomAppOption._imagesAndSounds.map(enumerable => enumerable.renderContent).flat()\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {\n                key: 'imagesAndSounds', element: '--Images & sounds--',//TODO add images & sound\n                subHeaders: MysteryMushroomAppOption._imagesAndSounds.map(enumerable => enumerable.renderTableHeader!)\n            }\n        }\n\n    }(null,)\n    public static readonly POWER_UP_COLLECTED = new class MysteryMushroomAppOption_PowerUpCollectedSound extends MysteryMushroomAppOption {\n\n        protected override _createContentOption() {\n            return this._renderSoundContent()\n        }\n\n        public override _createSoundContent(renderDiv: boolean,) {\n            return this._createSound(enumeration => enumeration.powerUpCollectedSound, reference => reference.haveASoundEffectWhenCollected, renderDiv,)\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {key: 'powerUpCollectedSound', element: '--Power-up collected (sound)--',}//TODO add power-up collected & sound\n        }\n\n    }('power-up collected',)\n    public static readonly WAITING = new class MysteryMushroomAppOption_WaitingImages extends MysteryMushroomAppOption {\n\n        protected override _createContentOption() {\n            return this._renderImageContent()\n        }\n\n        public override _createImageContent(renderDiv: boolean,) {\n            return this._createImage(enumeration => enumeration.waitingImage, renderDiv,)\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {key: 'waitingImage', element: '--Waiting (image)--',}//TODO add waiting & image\n        }\n\n    }('waiting',)\n    public static readonly TAUNT = new class MysteryMushroomAppOption_Taunt extends MysteryMushroomAppOption {\n\n        protected override _createContentOption() {\n            return this._createSingleImageAndSoundContainer(() => <>\n                {this._renderImageContent(false,)}\n                {this._renderSoundContent(false,)}\n            </>)\n        }\n\n        protected override _createImageContent(renderDiv: boolean,) {\n            return this._createImage(enumeration => enumeration.tauntImage, renderDiv,)\n        }\n\n        public override _createSoundContent(renderDiv: boolean,) {\n            return this._createSound(enumeration => enumeration.tauntSound, reference => reference.haveASoundEffectOnTaunt, renderDiv,)\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {key: 'tauntImageAndSound', element: '--Taunt (image & sound)--',}//TODO add taunt, image & sound\n        }\n\n    }('taunt',)\n    public static readonly PRESSING_DOWN = new class MysteryMushroomAppOption_PressingDown extends MysteryMushroomAppOption {\n\n        protected override _createContentOption() {\n            return this._renderImageContent()\n        }\n\n        protected override _createImageContent(renderDiv: boolean,) {\n            return this._createImage(enumeration => enumeration.pressingDownImage, renderDiv,)\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {key: 'pressingDownImage', element: <>--Pressing ↓ (image)--</>,}\n        }\n\n    }('pressing ↓',)\n    public static readonly WALK = new class MysteryMushroomAppOption_Walk extends MysteryMushroomAppOption {\n\n        protected override _createContentOption() {\n            return this._renderImageContent()\n        }\n\n        protected override _createImageContent(renderDiv: boolean,) {\n            return this._createAnimatedImages(enumeration => enumeration.walkImages, renderDiv,)\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {key: 'walkImages', element: '--Walk (image)--',}//TODO add walk & image\n        }\n\n    }('walk',)\n    public static readonly RUNNING = new class MysteryMushroomAppOption_Running extends MysteryMushroomAppOption {\n\n        protected override _createContentOption() {\n            return this._renderImageContent()\n        }\n\n        protected override _createImageContent(renderDiv: boolean,) {\n            return this._createAnimatedImages(enumeration => enumeration.runningImages, renderDiv,)\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {key: 'runningImages', element: '--Running (images)--',}//TODO add running & image\n        }\n\n    }('running',)\n    public static readonly SWIMMING = new class MysteryMushroomAppOption_Swimming extends MysteryMushroomAppOption {\n\n        protected override _createContentOption() {\n            return this._renderImageContent()\n        }\n\n        protected override _createImageContent(renderDiv: boolean,) {\n            return this._createAnimatedImages(enumeration => enumeration.swimmingImages, renderDiv,)\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {key: 'swimmingImages', element: '--Swimming (images)--',}//TODO add swimming & image\n        }\n\n    }('swimming',)\n    public static readonly JUMP = new class MysteryMushroomAppOption_Jump extends MysteryMushroomAppOption {\n\n        protected override _createContentOption() {\n            return this._createSingleImageAndSoundContainer(() => <>\n                {this._renderImageContent(false,)}\n                {this._renderSoundContent(false,)}\n            </>)\n        }\n\n        protected override _createImageContent(renderDiv: boolean,) {\n            const enumeration = MysteryMushroomAppOption_Jump.CALLBACK_TO_GET_ENUMERATION()\n            return (enumeration.jumpImages[0]?.length ?? 0) > 1\n                ? this._createAnimatedImages(() => enumeration.jumpImages, renderDiv,)\n                : this._createImage(() => enumeration.jumpImages.map(images => images[0]!) as unknown as PossibleImageSourceForFile<string>, renderDiv,)\n        }\n\n        public override _createSoundContent(renderDiv: boolean,) {\n            return this._createSounds(enumeration => enumeration.jumpSounds, reference => reference.haveASoundEffectOnJump, renderDiv,)\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {key: 'jumpingImagesAndSounds', element: '--Jumping (images & sounds)--',}//TODO add jumping, image & sound\n        }\n\n    }('jump',)\n    public static readonly FALLING_AFTER_JUMP = new class MysteryMushroomAppOption_FallingAfterJump extends MysteryMushroomAppOption {\n\n        protected override _createContentOption() {\n            return this._renderImageContent()\n        }\n\n        protected override _createImageContent(renderDiv: boolean,) {\n            return this._createImage(enumeration => enumeration.fallingAfterJumpImage, renderDiv,)\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {key: 'fallingAfterJumpImage', element: '--Falling after jump (images)--',}//TODO add falling after jump & image\n        }\n\n    }('falling after jump',)\n    public static readonly ON_GROUND_AFTER_JUMP = new class MysteryMushroomAppOption_OnGroundAfterJump extends MysteryMushroomAppOption {\n\n        protected override _createContentOption() {\n            return this._renderSoundContent()\n        }\n\n        public override _createSoundContent(renderDiv: boolean,) {\n            return this._createSound(enumeration => enumeration.onGroundAfterJumpSound, reference => reference.haveASoundEffectOnGroundAfterJump, renderDiv,)\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {key: 'groundAfterJumpImage', element: '--Ground after jump (sound)--',}//TODO add ground after jump & sound\n        }\n\n    }('ground after jump',)\n    public static readonly TURNING = new class MysteryMushroomAppOption_Turning extends MysteryMushroomAppOption {\n\n        protected override _createContentOption() {\n            return this._createSingleImageAndSoundContainer(() => <>\n                {this._renderImageContent(false,)}\n                {this._renderSoundContent(false,)}\n            </>)\n        }\n\n        protected override _createImageContent(renderDiv: boolean,) {\n            return this._createImage(enumeration => enumeration.turningImage, renderDiv,)\n        }\n\n        public override _createSoundContent(renderDiv: boolean,) {\n            return this._createSound(enumeration => enumeration.turningSound, reference => reference.haveASoundEffectOnTurnAfterRun, renderDiv,)\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {key: 'turningImageAndSound', element: '--Turning (image & sound)--',}//TODO add turning, image & sound\n        }\n\n    }('turning',)\n    public static readonly CLIMBING = new class MysteryMushroomAppOption_Climbing extends MysteryMushroomAppOption {\n\n        protected override _createContentOption() {\n            return this._renderImageContent()\n        }\n\n        protected override _createImageContent(renderDiv: boolean,) {\n            return this._createAnimatedImages(enumeration => enumeration.climbingImages, renderDiv,)\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {key: 'climbingImages', element: '--Climbing (images)--',}//TODO add climbing & image\n        }\n\n    }('climbing',)\n    public static readonly GOAL_POLE = new class MysteryMushroomAppOption_GoalPole extends MysteryMushroomAppOption {\n\n        protected override _createContentOption() {\n            return this._createSingleImageAndSoundContainer(() => <>\n                {this._renderImageContent(false,)}\n                {this._renderSoundContent(false,)}\n            </>)\n        }\n\n        protected override _createImageContent(renderDiv: boolean,) {\n            return this._createAnimatedImages(enumeration => enumeration.goalPoleImages, renderDiv,)\n        }\n\n        public override _createSoundContent(renderDiv: boolean,) {\n            return this._createSound(enumeration => enumeration.goalPoleSound, reference => reference.haveASoundEffectOnGoalPole, renderDiv,)\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {key: 'goalPoleImagesAndSound', element: <>--Goal pole (images & sound)--</>,}\n        }\n\n    }('goal pole',)\n    public static readonly LOST_A_LIFE = new class MysteryMushroomAppOption_LostALife extends MysteryMushroomAppOption {\n\n        protected override _createContentOption() {\n            return this._renderImageContent()\n        }\n\n        protected override _createImageContent(renderDiv: boolean,) {\n            return this._createSound(enumeration => enumeration.lostALifeSound, reference => reference.haveASoundEffectOnDeath, renderDiv,)\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {key: 'lostALifeSound', element: '--Lost a life (sound)--',}//TODO add lost a life & sound\n        }\n\n    }('lost a life',)\n\n    //endregion -------------------- Enum instances --------------------\n    //region -------------------- Enum fields --------------------\n\n    static [index: number]: MysteryMushroomAppOption\n\n    //endregion -------------------- Enum fields --------------------\n    //region -------------------- Fields --------------------\n\n    static #imagesAndSounds?: readonly MysteryMushroomAppOption[]\n    public static CALLBACK_TO_GET_ENUMERATION: () => MysteryMushrooms\n\n    static readonly #NOT_APPLICABLE_COMPONENT = <TextComponent content=\"N/A\"/>\n\n    readonly #type\n    #appOptionWithContent?: AppOptionWithContent\n    #appOptionWithTable?: AppOptionWithTable\n\n    //endregion -------------------- Fields --------------------\n\n    private constructor(type: PossibleMysteryMushroomType,) {\n        super()\n        this.#type = type\n    }\n\n    //region -------------------- Getter methods --------------------\n\n    protected get _mysteryMushroomType(): PossibleMysteryMushroomType {\n        return this.#type\n    }\n\n    protected static get _imagesAndSounds(): readonly MysteryMushroomAppOption[] {\n        return this.#imagesAndSounds ??= [\n            MysteryMushroomAppOption.POWER_UP_COLLECTED,\n            MysteryMushroomAppOption.WAITING,\n            MysteryMushroomAppOption.TAUNT,\n            MysteryMushroomAppOption.PRESSING_DOWN,\n            MysteryMushroomAppOption.WALK,\n            MysteryMushroomAppOption.RUNNING,\n            MysteryMushroomAppOption.SWIMMING,\n            MysteryMushroomAppOption.JUMP,\n            MysteryMushroomAppOption.FALLING_AFTER_JUMP,\n            MysteryMushroomAppOption.ON_GROUND_AFTER_JUMP,\n            MysteryMushroomAppOption.TURNING,\n            MysteryMushroomAppOption.CLIMBING,\n            MysteryMushroomAppOption.GOAL_POLE,\n            MysteryMushroomAppOption.LOST_A_LIFE,\n        ]\n    }\n\n    //endregion -------------------- Getter methods --------------------\n    //region -------------------- Methods --------------------\n\n    //region -------------------- App option - content --------------------\n\n    #createSingleImageAndSoundContainer(renderDiv: boolean, callback: (enumeration: MysteryMushrooms,) => ReactElement,) {\n        const enumeration = MysteryMushroomAppOption.CALLBACK_TO_GET_ENUMERATION()\n\n        return enumeration === MysteryMushrooms.MYSTERY_MUSHROOM\n            ? MysteryMushroomAppOption.#NOT_APPLICABLE_COMPONENT\n            : renderDiv\n                ? <div key={`${enumeration.uniqueEnglishName} - ${this._mysteryMushroomType}`}>{callback(enumeration)}</div>\n                : callback(enumeration)\n    }\n\n    protected _createSingleImageAndSoundContainer(callback: (enumeration: MysteryMushrooms,) => ReactElement, renderDiv: boolean = true,): ReactElement {\n        return this.#createSingleImageAndSoundContainer(renderDiv, callback,)\n    }\n\n    protected _createSound(callback: (enumeration: MysteryMushrooms,) => PossibleSoundSourceForFile<MysteryMushroomSoundFile>, callbackToRender: ReferenceCallback, renderDiv: boolean,): ReactElement {\n        return this.#createSingleImageAndSoundContainer(renderDiv, enumeration => {\n            const value = callback(enumeration)\n            if (value == null)\n                return null\n\n            const englishName = enumeration.englishName\n            const type = this._mysteryMushroomType\n            return <SimpleSoundComponent file={value} title={`${englishName} - ${type}`}/>\n        },)\n    }\n\n    protected _createSounds(callback: (enumeration: MysteryMushrooms,) => PossibleSoundSourceForFile<readonly MysteryMushroomSoundFile[]>, callbackToRender: ReferenceCallback, renderDiv: boolean,): ReactElement {\n        return this.#createSingleImageAndSoundContainer(renderDiv, enumeration => {\n            const englishName = enumeration.englishName\n            const type = this._mysteryMushroomType\n\n            return <>{callback(enumeration).map((value, index,) =>\n                <SimpleSoundComponent file={value} title={`${englishName} - ${type} #${index + 1}`}/>\n            )}</>\n        },)\n    }\n\n    protected _createImage(callback: (enumeration: MysteryMushrooms,) => PossibleImageSourceForFile<string>, renderDiv: boolean,): ReactElement {\n        return this.#createSingleImageAndSoundContainer(renderDiv, enumeration => {\n            const uniqueEnglishName = enumeration.uniqueEnglishName\n            const fallbackName = `${enumeration.englishName} (${this._mysteryMushroomType})`\n\n            return <>{callback(enumeration).map((value, index,) =>\n                <Image key={`${uniqueEnglishName} #${index + 1}`} source={value} fallbackName={`${fallbackName} #${index + 1}`}/>\n            )}</>\n        },)\n    }\n\n    protected _createAnimatedImages(callback: (enumeration: MysteryMushrooms,) => PossibleImageSourceForFile<readonly string[]>, renderDiv: boolean,): ReactElement {\n        return this.#createSingleImageAndSoundContainer(renderDiv, enumeration => {\n            const uniqueEnglishName = enumeration.uniqueEnglishName\n            const englishNameInHtml = enumeration.englishNameInHtml\n            const fallbackName = `${enumeration.englishName} (${this._mysteryMushroomType})`\n\n            return <>{callback(enumeration).map((value, index,) =>\n                <Image key={`${uniqueEnglishName} #${index + 1}`} partialId={`${englishNameInHtml}-${index + 1}`}\n                       images={value.map((image, index,) =>\n                           ({source: image, fallbackName: `${fallbackName} #${index + 1}`,}))}/>\n            )}</>\n        },)\n    }\n\n    protected abstract _createContentOption(enumeration: MysteryMushrooms,): PossibleRenderReactElement\n\n    private get __appOptionWithContent(): AppOptionWithContent {\n        return this.#appOptionWithContent ??= new AppOptionWithContentComponent(() => this._createContentOption(MysteryMushroomAppOption.CALLBACK_TO_GET_ENUMERATION()),)\n    }\n\n    public get renderContent(): readonly ReactElement[] {\n        return this.__appOptionWithContent.renderContent\n    }\n\n\n    protected _createImageContent(renderDiv: boolean,): ReactElement {\n        return null\n    }\n\n    public renderImageContent(enumeration: MysteryMushrooms, renderDiv: boolean = false,): ReactElement {\n        MysteryMushroomAppOption.CALLBACK_TO_GET_ENUMERATION = () => enumeration\n        return this._createImageContent(renderDiv,)\n    }\n\n    protected _renderImageContent(renderDiv: boolean = true,): ReactElement {\n        return this._createImageContent(renderDiv,)\n    }\n\n    public _createSoundContent(renderDiv: boolean,): ReactElement {\n        return null\n    }\n\n    public renderSoundContent(enumeration: MysteryMushrooms,): ReactElement {\n        MysteryMushroomAppOption.CALLBACK_TO_GET_ENUMERATION = () => enumeration\n        return this._createSoundContent(false)\n    }\n\n    protected _renderSoundContent(renderDiv: boolean = true,): ReactElement {\n        return this._createSoundContent(renderDiv,)\n    }\n\n    //endregion -------------------- App option - content --------------------\n    //region -------------------- App option - table --------------------\n\n    protected abstract _createTableHeaderOption(): SingleHeaderContent\n\n    private get __appOptionWithTable(): AppOptionWithTable {\n        return this.#appOptionWithTable ??= new AppOptionWithTableComponent(() => this._createTableHeaderOption(),)\n    }\n\n    public get renderTableHeader(): NullOr<SingleHeaderContent> {\n        return this.__appOptionWithTable.renderTableHeader\n    }\n\n    //endregion -------------------- App option - table --------------------\n\n    //endregion -------------------- Methods --------------------\n    //region -------------------- Enum methods --------------------\n\n    protected override get _static(): EnumerableConstructor<Ordinals, Names> {\n        return MysteryMushroomAppOption\n    }\n\n    public static getValue(value: PossibleValueByEnumerable<MysteryMushroomAppOption>,): MysteryMushroomAppOption {\n        return Enum.getValueOn(this, value,)\n    }\n\n    public static get values(): CollectionHolder<MysteryMushroomAppOption> {\n        return Enum.getValuesOn(this)\n    }\n\n    public static [Symbol.iterator]() {\n        return this.values[Symbol.iterator]()\n    }\n\n    //endregion -------------------- Enum methods --------------------\n\n}\n\ntype ReferenceCallback = (reference: MysteryMushroom,) => | boolean | NotApplicable\n","import './MysteryMushroomApp.scss'\n\nimport type {AppProperties}                                        from 'app/AppProperties.types'\nimport type {MysteryMushroomAppStates}                             from 'app/AppStates.types'\nimport type {AppInterpreterWithTable, SimplifiedTableProperties}   from 'app/interpreter/AppInterpreterWithTable'\nimport type {PossibleDimensionOnCardList, PossibleDimensionOnList} from 'app/interpreter/DimensionOnList'\nimport type {ReactElementOrString}                                 from 'util/react/ReactProperties'\n\nimport {MysteryMushroomAppOption} from 'app/options/MysteryMushroomAppOption'\nimport {AbstractTableApp}         from 'app/withInterpreter/AbstractTableApp'\nimport {ViewDisplays}             from 'app/withInterpreter/ViewDisplays'\nimport {MysteryMushrooms}         from 'core/mysteryMushroom/MysteryMushrooms'\nimport {gameContentTranslation}   from 'lang/components/translationMethods'\n\n/**\n * @reactComponent\n */\nexport default class MysteryMushroomApp\n    extends AbstractTableApp<AppInterpreterWithTable<MysteryMushrooms, MysteryMushroomAppOption>, AppProperties, MysteryMushroomAppStates> {\n\n    public constructor(props: AppProperties,) {\n        super(props,)\n        this.state = {\n            typeDisplayed: ViewDisplays.CARD_LIST,\n        }\n    }\n\n    //region -------------------- Create methods --------------------\n\n    protected override _createKey() {\n        return 'mysteryMushroom'\n    }\n\n    protected override _createTitleContent(): ReactElementOrString {\n        return gameContentTranslation('Every Mystery Mushrooms', {pluralName: '--Mystery Mushrooms--'},)//TODO add Mystery Mushroom (plural)\n    }\n\n    protected override _createUniqueNameOnSimpleList(enumerable: MysteryMushrooms,): string {\n        return enumerable.uniqueEnglishName\n    }\n\n    protected override _createUniqueNameOnCardList(enumerable: MysteryMushrooms,): string {\n        return enumerable.uniqueEnglishName\n    }\n\n    protected override _createAppOptionInterpreter(): AppInterpreterWithTable<MysteryMushrooms, MysteryMushroomAppOption> {\n        return new class implements AppInterpreterWithTable<MysteryMushrooms, MysteryMushroomAppOption> {\n\n            public get iterable() {\n                return MysteryMushrooms[Symbol.iterator]()\n            }\n\n            //region -------------------- List interpreter --------------------\n\n            public createListDimension(): PossibleDimensionOnList {\n                return {\n                    small: 6,\n                    medium: null,\n                    large: 4,\n                    extraLarge: 3,\n                    extraExtraLarge: 2,\n                }\n            }\n\n            //endregion -------------------- List interpreter --------------------\n            //region -------------------- Card list interpreter --------------------\n\n            public createCardListDimension(): PossibleDimensionOnCardList {\n                return 'list'\n            }\n\n            public createCardListContent(enumerable: MysteryMushrooms,) {\n                const amountOfImages = enumerable.fileName.imageFileNames.length\n                const contains2Images = amountOfImages === 2\n\n                return amountOfImages === 0\n                    ? null\n                    : <div className={`image-content-container ${contains2Images ? 'dual' : 'single'}-image-content-container`}>\n                        {[\n                            MysteryMushroomAppOption.WAITING,\n                            MysteryMushroomAppOption.TAUNT,\n                            MysteryMushroomAppOption.PRESSING_DOWN,\n                            MysteryMushroomAppOption.WALK,\n                            MysteryMushroomAppOption.RUNNING,\n                            MysteryMushroomAppOption.SWIMMING,\n                            MysteryMushroomAppOption.JUMP,\n                            MysteryMushroomAppOption.FALLING_AFTER_JUMP,\n                            MysteryMushroomAppOption.TURNING,\n                            MysteryMushroomAppOption.CLIMBING,\n                            MysteryMushroomAppOption.GOAL_POLE,\n                        ].map(appOption => appOption.renderImageContent(enumerable, contains2Images,))}\n                    </div>\n            }\n\n            //endregion -------------------- Card list interpreter --------------------\n            //region -------------------- Table interpreter --------------------\n\n            public set callbackToGetEnumerable(value: () => MysteryMushrooms,) {\n                MysteryMushroomAppOption.CALLBACK_TO_GET_ENUMERATION = value\n            }\n\n            public get tableOptions(): readonly MysteryMushroomAppOption[] {\n                return [\n                    MysteryMushroomAppOption.CONDITION_TO_UNLOCK_IT,\n                    MysteryMushroomAppOption.GAME,\n                    MysteryMushroomAppOption.NAME,\n                    MysteryMushroomAppOption.IMAGES_AND_SOUNDS,\n                ]\n            }\n\n            public get tableProperties(): SimplifiedTableProperties {\n                return {\n                    caption: gameContentTranslation('Every Mystery Mushrooms', {pluralName: '--Mystery Mushrooms--'},),//TODO add Mystery Mushroom (plural)\n                }\n            }\n\n\n            public createTableContent(option: MysteryMushroomAppOption,) {\n                return option.renderContent\n            }\n\n            public createTableHeader(option: MysteryMushroomAppOption) {\n                return option.renderTableHeader\n            }\n\n            //endregion -------------------- Table interpreter --------------------\n\n        }()\n    }\n\n    //endregion -------------------- Create methods --------------------\n\n}\n","import type {Enum} from '@joookiwi/enumerable/dist/types'\nimport {lazy}      from 'react'\n\nimport type {SingleHeaderContent, SingleHeadersContent} from 'app/tools/table/SimpleHeader'\nimport type {ClassWithEnglishName}                      from 'core/ClassWithEnglishName'\nimport type {ClassWithReference}                        from 'core/ClassWithReference'\nimport type {ClassInAnySuperMarioMakerGame}             from 'core/game/ClassInAnySuperMarioMakerGame'\nimport type {Themes}                                    from 'core/theme/Themes'\nimport type {Name}                                      from 'lang/name/Name'\nimport type {NameTrait}                                 from 'lang/name/NameTrait'\nimport type {NameTraitFromACategory}                    from 'lang/name/NameTraitFromACategory'\nimport type {ReactElement}                              from 'util/react/ReactProperties'\n\nimport {BASE_PATH}                                  from 'variables'\nimport {Games}                                      from 'core/game/Games'\nimport {contentTranslation, gameContentTranslation} from 'lang/components/translationMethods'\nimport {EmptyStringName}                            from 'lang/name/EmptyStringName'\n\n//region -------------------- dynamic imports --------------------\n\nconst Image =         lazy(() => import('app/tools/images/Image'))\nconst NameComponent = lazy(() => import('lang/name/component/Name.component'))\n\n//endregion -------------------- dynamic imports --------------------\n\n/**\n * @singleton\n */\nexport class CommonOptions {\n\n    //region -------------------- Singleton usage --------------------\n\n    static #instance?: CommonOptions\n\n    private constructor() {\n    }\n\n    public static get get() {\n        return this.#instance ??= new this()\n    }\n\n    //endregion -------------------- Singleton usage --------------------\n    //region -------------------- Fields --------------------\n\n    #nameHeader?: SingleHeaderContent\n    #gameHeader?: SingleHeaderContent\n    #gameHeaderWithAllGames?: SingleHeaderContent\n    #gameHeaderWithMainGames?: SingleHeaderContent\n    #mainGames?: readonly [SingleHeaderContent, SingleHeaderContent,]\n    #categoryHeader?: SingleHeaderContent\n\n    //endregion -------------------- Fields --------------------\n\n    public get nameHeader(): SingleHeaderContent {\n        return this.#nameHeader ??= {key: 'name', element: contentTranslation('Name'),}\n    }\n\n    public getNameContent(enumeration: EnumerationWithReference,): ReactElement {\n        return <NameComponent id=\"name\" name={enumeration.reference} popoverOrientation=\"left\"/>\n    }\n\n\n    public get categoryHeader(): SingleHeaderContent {\n        return this.#categoryHeader ??= {key: 'category', element: gameContentTranslation('Category'),}\n    }\n\n    public getCategoryContent(enumeration: EnumerationWithCategoryReference, imagePath_or_nameCallback: () => | string | Name<string>,): ReactElement {\n        const name = enumeration.reference.categoryNameContainer\n        if (name === EmptyStringName.get)\n            return null\n\n        const imagePath_or_name = imagePath_or_nameCallback()\n        const englishName = name.english\n        const startingKey = `category name (${englishName})`\n        if (typeof imagePath_or_name == 'string')\n            return <Image key={`${startingKey} image`} source={imagePath_or_name} fallbackName={`${name.english} - image`}/>\n        return <NameComponent key={`${startingKey} name`} id={`category-name-${enumeration.englishNameInHtml}`} name={name} popoverOrientation=\"left\"/>\n    }\n\n\n    public get gameHeader(): SingleHeaderContent {\n        return this.#gameHeader ??= {key: 'game', element: gameContentTranslation('Game'),}\n    }\n\n    public getGameHeader(...subHeaders: SingleHeadersContent): SingleHeaderContent {\n        return {\n            key: 'game', element: gameContentTranslation('Game'),\n            subHeaders: subHeaders,\n        }\n    }\n\n    /**@deprecated Relocate the games in the name content */\n    public get gameHeaderWithAllGames(): SingleHeaderContent {\n        return this.#gameHeaderWithAllGames ??= this.getGameHeader(\n            {key: 'isInSuperMarioMaker1', alt: Games.SUPER_MARIO_MAKER_1.englishName, path: Games.SUPER_MARIO_MAKER_1.imagePath,},\n            {key: 'isInSuperMarioMakerFor3DS', alt: Games.SUPER_MARIO_MAKER_FOR_NINTENDO_3DS.englishName, path: Games.SUPER_MARIO_MAKER_FOR_NINTENDO_3DS.imagePath,},\n            {key: 'isInSuperMarioMaker2', alt: Games.SUPER_MARIO_MAKER_2.englishName, path: Games.SUPER_MARIO_MAKER_2.imagePath,},\n        )\n    }\n\n    public get gameHeaderWithMainGames(): SingleHeaderContent {\n        return this.#gameHeaderWithMainGames ??= this.getGameHeader(...this.mainGames)\n    }\n\n    public get mainGames(): readonly [SingleHeaderContent, SingleHeaderContent,] {\n        return this.#mainGames ??= [\n            {key: 'isInSuperMarioMaker1And3DS', alt: Games.SUPER_MARIO_MAKER_1.englishName, path: Games.SUPER_MARIO_MAKER_1.imagePath,},//TODO create a animated image for both games (SMM1 & SMM3DS)\n            {key: 'isInSuperMarioMaker2', alt: Games.SUPER_MARIO_MAKER_2.englishName, path: Games.SUPER_MARIO_MAKER_2.imagePath,},\n        ]\n    }\n\n    /**\n     * Get a {@link HTMLDivElement} containing each images (if true)\n     * of the {@link Games} contained in the {@link Enum} {@link ClassWithReference reference}.\n     *\n     * @param enumeration The enumerable to retrieve the {@link Games} properties & {@link ClassWithEnglishName english name}.\n     */\n    public getGameContent(enumeration: EnumerationWithInSuperMarioMakerGameReference,): ReactElement {\n        const reference = enumeration.reference\n        const isInSMM1 = reference.isInSuperMarioMaker1\n        const isInSMM3DS = reference.isInSuperMarioMakerFor3DS\n        const isInSMM2 = reference.isInSuperMarioMaker2\n\n        return <div key={`${enumeration.englishName} (game content images)`} id={`${enumeration.englishNameInHtml}-gameContentImages-container`} className=\"gameContentImages-container\">\n            {isInSMM1 ? Games.SUPER_MARIO_MAKER_1.renderSingleComponent : null}\n            {isInSMM3DS ? Games.SUPER_MARIO_MAKER_FOR_NINTENDO_3DS.renderSingleComponent : null}\n            {isInSMM2 ? Games.SUPER_MARIO_MAKER_2.renderSingleComponent : null}\n        </div>\n    }\n\n\n    public getThemeContent(enumeration: Themes,): ReactElement {\n        const reference = enumeration.reference\n\n        return <div key={`${enumeration.englishName} (theme content images)`} id={`${enumeration.englishNameInHtml}-themeContentImages-container`} className=\"themeContentImages-container\">\n            {reference.isInCourseTheme ? <Image source={`/${BASE_PATH}/theme/Course theme.tiff`} fallbackName=\"Course theme\"/> : null}\n            {reference.isInWorldTheme ? <Image source={`/${BASE_PATH}/theme/World theme.tiff`} fallbackName=\"World theme\"/> : null}\n        </div>\n    }\n\n}\n\ntype EnumerationWithReference = Enum<any, any> & ClassWithEnglishName<string> & ClassWithReference<Name<string>>\ntype EnumerationWithCategoryReference = Enum<any, any> & ClassWithEnglishName<string> & ClassWithReference<NameTraitFromACategory<string, NameTrait<string>>>\ntype EnumerationWithInSuperMarioMakerGameReference = Enum<any, any> & ClassWithEnglishName<string> & ClassWithReference<ClassInAnySuperMarioMakerGame>\n"],"names":["NameComponent","lazy","Image","SimpleSoundComponent","Symbol","iterator","MysteryMushroomAppOption","type","this","callback","renderDiv","callbackToRender","enumeration","value","englishName","_mysteryMushroomType","file","title","map","index","uniqueEnglishName","fallbackName","source","englishNameInHtml","partialId","images","image","AppOptionWithContentComponent","_createContentOption","CALLBACK_TO_GET_ENUMERATION","__appOptionWithContent","renderContent","_createImageContent","_createSoundContent","AppOptionWithTableComponent","_createTableHeaderOption","__appOptionWithTable","renderTableHeader","POWER_UP_COLLECTED","WAITING","TAUNT","PRESSING_DOWN","WALK","RUNNING","SWIMMING","JUMP","FALLING_AFTER_JUMP","ON_GROUND_AFTER_JUMP","TURNING","CLIMBING","GOAL_POLE","LOST_A_LIFE","Enum","values","MysteryMushrooms","CONDITION_TO_UNLOCK_IT","reference","conditionToUnlockIt","key","element","GAME","id","games","game","Fragment","name","popoverOrientation","length","ProjectLanguages","CommonOptions","NAME","IMAGES_AND_SOUNDS","_imagesAndSounds","enumerable","flat","subHeaders","_renderSoundContent","_createSound","powerUpCollectedSound","haveASoundEffectWhenCollected","_renderImageContent","_createImage","waitingImage","_createSingleImageAndSoundContainer","tauntImage","tauntSound","haveASoundEffectOnTaunt","pressingDownImage","_createAnimatedImages","walkImages","runningImages","swimmingImages","MysteryMushroomAppOption_Jump","jumpImages","_createSounds","jumpSounds","haveASoundEffectOnJump","fallingAfterJumpImage","onGroundAfterJumpSound","haveASoundEffectOnGroundAfterJump","turningImage","turningSound","haveASoundEffectOnTurnAfterRun","climbingImages","goalPoleImages","goalPoleSound","haveASoundEffectOnGoalPole","lostALifeSound","haveASoundEffectOnDeath","TextComponent","content","MysteryMushroomApp","props","state","typeDisplayed","ViewDisplays","gameContentTranslation","pluralName","small","medium","large","extraLarge","extraExtraLarge","amountOfImages","fileName","imageFileNames","contains2Images","className","appOption","renderImageContent","caption","option","AbstractTableApp","contentTranslation","imagePath_or_nameCallback","categoryNameContainer","EmptyStringName","imagePath_or_name","english","startingKey","getGameHeader","alt","Games","path","mainGames","isInSMM1","isInSuperMarioMaker1","isInSMM3DS","isInSuperMarioMakerFor3DS","isInSMM2","isInSuperMarioMaker2","isInCourseTheme","BASE_PATH","isInWorldTheme"],"sourceRoot":""}