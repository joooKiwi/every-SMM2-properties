{"version":3,"file":"static/js/550.ba23e265.chunk.js","mappings":"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","sources":["app/options/SoundEffectCategoryAppOption.tsx","app/SoundEffectCategoryApp.tsx","core/soundEffectCategory/component/SoundEffectCategoryIcon.tsx"],"sourcesContent":["import type {CompanionEnumSingleton} from '@joookiwi/enumerable'\nimport {CompanionEnum, Enum}         from '@joookiwi/enumerable'\n\nimport type {AppOption}             from 'app/options/AppOption'\nimport type {Names, Ordinals}       from 'app/options/SoundEffectCategoryAppOption.types'\nimport type {SingleHeaderContent}   from 'app/tools/table/SimpleHeader'\nimport type {SoundEffectCategories} from 'core/soundEffectCategory/SoundEffectCategories'\n\nimport {CommonOptions}         from 'app/options/CommonOptions'\nimport SoundEffectCategoryIcon from 'core/soundEffectCategory/component/SoundEffectCategoryIcon'\n\nexport abstract class SoundEffectCategoryAppOption\n    extends Enum<Ordinals, Names>\n    implements AppOption<SoundEffectCategories> {\n\n    //region -------------------- Enum instances --------------------\n\n    public static readonly ICON = new class SoundEffectCategoryAppOption_Icon extends SoundEffectCategoryAppOption {\n\n        protected override _createContentOption(enumeration: SoundEffectCategories,) {\n            return <SoundEffectCategoryIcon reference={enumeration}/>\n        }\n\n        protected override _createTableHeaderOption() {\n            return CommonOptions.get.iconHeader\n        }\n\n    }('icon',)\n    public static readonly NAME = new class SoundEffectCategoryAppOption_Name extends SoundEffectCategoryAppOption {\n\n        protected override _createContentOption(enumeration: SoundEffectCategories,) {\n            return CommonOptions.get.getNameContent(enumeration,)\n        }\n\n        protected override _createTableHeaderOption() {\n            return CommonOptions.get.nameHeader\n        }\n\n    }('name',)\n\n    //endregion -------------------- Enum instances --------------------\n    //region -------------------- Companion enum --------------------\n\n    public static readonly CompanionEnum: CompanionEnumSingleton<SoundEffectCategoryAppOption, typeof SoundEffectCategoryAppOption> = class CompanionEnum_SoundEffectCategoryAppOption\n        extends CompanionEnum<SoundEffectCategoryAppOption, typeof SoundEffectCategoryAppOption> {\n\n        //region -------------------- Singleton usage --------------------\n\n        static #instance?: CompanionEnum_SoundEffectCategoryAppOption\n\n        private constructor() {\n            super(SoundEffectCategoryAppOption,)\n        }\n\n        public static get get() {\n            return this.#instance ??= new this()\n        }\n\n        //endregion -------------------- Singleton usage --------------------\n\n    }\n\n    //endregion -------------------- Companion enum --------------------\n    //region -------------------- Fields --------------------\n\n    readonly #associatedClass\n    readonly #additionalClasses\n\n    //endregion -------------------- Fields --------------------\n    //region -------------------- Constructor --------------------\n\n    private constructor(associatedClass: string,) {\n        super()\n        this.#additionalClasses = [this.#associatedClass = associatedClass,] as const\n    }\n\n    //endregion -------------------- Constructor --------------------\n    //region -------------------- Getter methods --------------------\n\n    public get associatedClass(): string {\n        return this.#associatedClass\n    }\n\n    public get additionalClasses(): readonly [string,] {\n        return this.#additionalClasses\n    }\n\n    //endregion -------------------- Getter methods --------------------\n    //region -------------------- Methods --------------------\n\n    //region -------------------- App option - content --------------------\n\n    protected abstract _createContentOption(enumeration: SoundEffectCategories,): ReactElement\n\n    public renderContent(enumeration: SoundEffectCategories,): readonly [ReactElement,] {\n        return [this._createContentOption(enumeration,),]\n    }\n\n    //endregion -------------------- App option - content --------------------\n    //region -------------------- App option - table --------------------\n\n    protected abstract _createTableHeaderOption(): SingleHeaderContent\n\n    public renderTableHeader(): SingleHeaderContent {\n        return this._createTableHeaderOption()\n    }\n\n    //endregion -------------------- App option - table --------------------\n\n    //endregion -------------------- Methods --------------------\n\n}\n","import './SoundEffectCategoryApp.scss'\n\nimport type {Array}              from '@joookiwi/type'\nimport type {CollectionHolder}   from '@joookiwi/collection'\nimport {GenericCollectionHolder} from '@joookiwi/collection'\n\nimport type {AppWithInterpreterProperties} from 'app/AppProperties.types'\nimport type {AppInterpreterWithTable}      from 'app/interpreter/AppInterpreterWithTable'\nimport type {DimensionOnList}              from 'app/interpreter/DimensionOnList'\nimport type {ViewAndRouteName}             from 'app/withInterpreter/DisplayButtonGroup.properties'\nimport type {ReactProperties}              from 'util/react/ReactProperties'\n\nimport SubMainContainer               from 'app/_SubMainContainer'\nimport {SoundEffectCategoryAppOption} from 'app/options/SoundEffectCategoryAppOption'\nimport CardList                       from 'app/withInterpreter/CardList'\nimport {ViewDisplays}                 from 'app/withInterpreter/ViewDisplays'\nimport List                           from 'app/util/List'\nimport Table                          from 'app/tools/table/Table'\nimport {SoundEffectCategories}        from 'core/soundEffectCategory/SoundEffectCategories'\nimport SoundEffectCategoryIcon        from 'core/soundEffectCategory/component/SoundEffectCategoryIcon'\nimport {gameContentTranslation}       from 'lang/components/translationMethods'\nimport NameComponent                  from 'lang/name/component/Name.component'\n\nimport ALL = SoundEffectCategories.ALL\n\nclass SoundEffectCategoryAppInterpreter\n    implements AppInterpreterWithTable<SoundEffectCategories, SoundEffectCategoryAppOption> {\n\n    public get content() {\n        return new GenericCollectionHolder(ALL,)\n    }\n\n    //region -------------------- Card --------------------\n\n    public createCardListDimension() {\n        return {\n            default: 1,\n            small: 2,\n            medium: 3,\n            large: 5,\n        } as const satisfies DimensionOnList\n    }\n\n    public createCardListContent(enumerable: SoundEffectCategories,) {\n        return <SoundEffectCategoryIcon reference={enumerable} asWhiteImage/>\n    }\n\n    //endregion -------------------- Card --------------------\n    //region -------------------- Table --------------------\n\n    public readonly tableHeadersColor = 'info' satisfies BootstrapThemeColor\n    public readonly tableCaption = gameContentTranslation('sound effect category.all',) satisfies ReactElementOrString\n\n    public get tableOptions(): Array<SoundEffectCategoryAppOption> {\n        return [SoundEffectCategoryAppOption.NAME, SoundEffectCategoryAppOption.ICON,]\n    }\n\n\n    public getAdditionalClass(option: SoundEffectCategoryAppOption,) {\n        return option.additionalClasses\n    }\n\n    public createTableContent(content: SoundEffectCategories, option: SoundEffectCategoryAppOption,) {\n        return option.renderContent(content,)\n    }\n\n    public createTableHeader(option: SoundEffectCategoryAppOption,) {\n        return option.renderTableHeader()\n    }\n\n    //endregion -------------------- Table --------------------\n\n}\n\nconst viewDisplayAndRouteName = [\n    [ViewDisplays.SIMPLE_LIST, 'everySoundEffectCategory (list)',],\n    [ViewDisplays.CARD_LIST, 'everySoundEffectCategory (card)',],\n    [ViewDisplays.TABLE, 'everySoundEffectCategory (table)',],\n] as const satisfies Array<ViewAndRouteName>\nconst appInterpreter = new SoundEffectCategoryAppInterpreter()\n\n/** @reactComponent */\nexport default function SoundEffectCategoryApp({viewDisplay,}: AppWithInterpreterProperties,) {\n    return <SubMainContainer reactKey=\"soundEffectCategory\" viewDisplayAndRouteName={viewDisplayAndRouteName} viewDisplay={viewDisplay}\n                             titleContent={gameContentTranslation('sound effect category.all',)}>\n        <SubContent viewDisplay={viewDisplay}/>\n    </SubMainContainer>\n}\n\n/** @reactComponent */\nfunction SubContent({viewDisplay,}: AppWithInterpreterProperties,) {\n    if (viewDisplay === ViewDisplays.SIMPLE_LIST)\n        return <SoundEffectCategoryList items={appInterpreter.content}/>\n    if (viewDisplay === ViewDisplays.CARD_LIST)\n        return <CardList reactKey=\"soundEffectCategory\" interpreter={appInterpreter}/>\n    return <Table id=\"soundEffectCategory-table\" interpreter={appInterpreter}/>\n}\n\n//region -------------------- List --------------------\n\ninterface SoundEffectCategory_ListProperties\n    extends ReactProperties {\n\n    readonly items: CollectionHolder<SoundEffectCategories>\n\n}\n\n/** @reactComponent */\nfunction SoundEffectCategoryList({items,}: SoundEffectCategory_ListProperties,) {\n    return <List partialId=\"soundEffectCategory\" items={items}>{it =>\n        <div className=\"d-flex justify-content-between align-items-center\">\n            <NameComponent id=\"soundEffectCategory-name\" name={it.reference} popoverOrientation=\"right\"/>\n            <SoundEffectCategoryIcon reference={it}/>\n        </div>\n    }</List>\n}\n\n//endregion -------------------- List --------------------\n","import './SoundEffectCategoryIcon.scss'\n\nimport Image                        from 'app/tools/images/Image'\n\nimport type {SoundEffectCategories} from 'core/soundEffectCategory/SoundEffectCategories'\nimport type {ReactProperties}       from 'util/react/ReactProperties'\n\ninterface SoundEffectCategoryIconProperties\n    extends ReactProperties {\n\n    readonly reference: SoundEffectCategories\n\n    readonly asWhiteImage?: boolean\n\n}\n\nexport default function SoundEffectCategoryIcon({reference,asWhiteImage = false,}: SoundEffectCategoryIconProperties,) {\n    if (asWhiteImage)\n        return <Image file={reference.imageFile} className={`soundEffectCategory-icon white-soundEffectCategory-icon soundEffectCategory-icon-${reference.englishNameInHtml}`}/>\n    return <Image file={reference.imageFile} className={`soundEffectCategory-icon colored-soundEffectCategory-icon soundEffectCategory-icon-${reference.englishNameInHtml}`}/>\n}\n"],"names":["_associatedClass","_classPrivateFieldLooseKey","_additionalClasses","SoundEffectCategoryAppOption","Enum","constructor","associatedClass","super","Object","defineProperty","writable","value","_classPrivateFieldLooseBase","this","additionalClasses","renderContent","enumeration","_createContentOption","renderTableHeader","_createTableHeaderOption","_SoundEffectCategoryAppOption","ICON","_jsx","SoundEffectCategoryIcon","reference","CommonOptions","get","iconHeader","NAME","getNameContent","nameHeader","CompanionEnum","_instance","_CompanionEnum_SoundEffectCategoryAppOption","_classPrivateFieldLoo","_classPrivateFieldLoo2","ALL","SoundEffectCategories","viewDisplayAndRouteName","ViewDisplays","SIMPLE_LIST","CARD_LIST","TABLE","appInterpreter","tableHeadersColor","tableCaption","gameContentTranslation","content","GenericCollectionHolder","createCardListDimension","default","small","medium","large","createCardListContent","enumerable","asWhiteImage","tableOptions","getAdditionalClass","option","createTableContent","createTableHeader","SoundEffectCategoryApp","_ref","viewDisplay","SubMainContainer","reactKey","titleContent","children","SubContent","_ref2","SoundEffectCategoryList","items","CardList","interpreter","Table","id","_ref3","List","partialId","it","_jsxs","className","NameComponent","name","popoverOrientation","Image","file","imageFile","concat","englishNameInHtml"],"sourceRoot":""}