{"version":3,"file":"static/js/531.7e2cf6d3.chunk.js","mappings":"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","sources":["app/options/GameStyleAppOption.tsx","app/GameStyleApp.tsx","core/nightEffect/NightEffect.component.tsx"],"sourcesContent":["import type {CollectionHolder, CollectionIterator}              from '@joookiwi/collection'\nimport type {CompanionEnumSingleton, PossibleEnumerableValueBy} from '@joookiwi/enumerable'\nimport {CompanionEnum, Enum}                                    from '@joookiwi/enumerable'\n\nimport type {AppOption}           from 'app/options/AppOption'\nimport type {Names, Ordinals}     from 'app/options/GameStyleAppOption.types'\nimport type {SingleHeaderContent} from 'app/tools/table/SimpleHeader'\nimport type {GameStyles}          from 'core/gameStyle/GameStyles'\n\nimport {CommonOptions}          from 'app/options/CommonOptions'\nimport {unfinishedText}         from 'app/tools/text/UnfinishedText'\nimport NightEffectComponent     from 'core/nightEffect/NightEffect.component'\nimport {Themes}                 from 'core/theme/Themes'\nimport {Times}                  from 'core/time/Times'\nimport {ProjectLanguages}       from 'lang/ProjectLanguages'\nimport {gameContentTranslation} from 'lang/components/translationMethods'\n\nexport abstract class GameStyleAppOption\n    extends Enum<Ordinals, Names>\n    implements AppOption<GameStyles> {\n\n    //region -------------------- Enum instances --------------------\n\n    public static readonly ICON =             new class GameStyleAppOption_Images extends GameStyleAppOption {\n\n        protected override _createContentOption(enumeration: GameStyles,) {\n            return enumeration.renderSingleComponent\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {key: 'icon', element: unfinishedText('Icon'),}\n        }\n\n    }()\n    public static readonly NAME =              new class GameStyleAppOption_Name extends GameStyleAppOption {\n\n        protected override _createContentOption(enumeration: GameStyles,) {\n            return CommonOptions.get.getNameContent(enumeration)\n        }\n\n        protected override _createTableHeaderOption() {\n            return CommonOptions.get.nameHeader\n        }\n\n    }()\n    public static readonly NIGHT_DESERT_WIND = new class GameStyleAppOption_NightDesertWind extends GameStyleAppOption {\n\n        protected override _createContentOption({reference,}: GameStyles,) {\n            return <NightEffectComponent gameStyle={reference}/>\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {\n                key: 'nightDesertWind',\n                element: <div className=\"night-desert-wind-effect-container\">{Themes.DESERT.renderSingleComponent(false)}{Times.NIGHT.renderSingleComponent}</div>,\n                tooltip: gameContentTranslation('Wind effect (night desert)', {\n                    night: unfinishedText('night'),//TODO add night reference\n                    desert: ProjectLanguages.current.get(Themes.DESERT.reference)!.toLowerCase(),\n                },),\n            }\n        }\n\n    }()\n\n    //endregion -------------------- Enum instances --------------------\n    //region -------------------- Companion enum --------------------\n\n    public static readonly CompanionEnum: CompanionEnumSingleton<GameStyleAppOption, typeof GameStyleAppOption> = class CompanionEnum_GameStyleAppOption\n        extends CompanionEnum<GameStyleAppOption, typeof GameStyleAppOption> {\n\n        //region -------------------- Singleton usage --------------------\n\n        static #instance?: CompanionEnum_GameStyleAppOption\n\n        private constructor() {\n            super(GameStyleAppOption,)\n        }\n\n        public static get get() {\n            return this.#instance ??= new CompanionEnum_GameStyleAppOption()\n        }\n\n        //endregion -------------------- Singleton usage --------------------\n\n    }\n\n    //endregion -------------------- Companion enum --------------------\n    //region -------------------- Fields --------------------\n    //endregion -------------------- Fields --------------------\n    //region -------------------- Constructor --------------------\n\n    private constructor() {\n        super()\n    }\n\n    //endregion -------------------- Constructor --------------------\n    //region -------------------- Getter methods --------------------\n    //endregion -------------------- Getter methods --------------------\n    //region -------------------- Methods --------------------\n\n    //region -------------------- App option - content --------------------\n\n    protected abstract _createContentOption(enumeration: GameStyles,): ReactElement\n\n    public renderContent(enumeration: GameStyles,): readonly [ReactElement,] {\n        return [this._createContentOption(enumeration,),]\n    }\n\n    //endregion -------------------- App option - content --------------------\n    //region -------------------- App option - table --------------------\n\n    protected abstract _createTableHeaderOption(): SingleHeaderContent\n\n    public renderTableHeader(): NullOr<SingleHeaderContent> {\n        return this._createTableHeaderOption()\n    }\n\n    //endregion -------------------- App option - table --------------------\n\n    //endregion -------------------- Methods --------------------\n    //region -------------------- Enum methods --------------------\n\n    public static getValue(value: PossibleEnumerableValueBy<GameStyleAppOption>,): GameStyleAppOption {\n        return GameStyleAppOption.CompanionEnum.get.getValue(value,)\n    }\n\n    public static get values(): CollectionHolder<GameStyleAppOption> {\n        return GameStyleAppOption.CompanionEnum.get.values\n    }\n\n    public static [Symbol.iterator](): CollectionIterator<GameStyleAppOption> {\n        return GameStyleAppOption.CompanionEnum.get[Symbol.iterator]()\n    }\n\n    //endregion -------------------- Enum methods --------------------\n\n}\n","import './GameStyleApp.scss'\n\nimport type {GameStyleProperties}                                  from 'app/AppProperties.types'\nimport type {AppInterpreterWithTable}                              from 'app/interpreter/AppInterpreterWithTable'\nimport type {PossibleDimensionOnCardList, PossibleDimensionOnList} from 'app/interpreter/DimensionOnList'\nimport type {EveryPossibleRouteNames}                              from 'route/everyRoutes.types'\n\nimport {GameStyleAppOption}     from 'app/options/GameStyleAppOption'\nimport {AbstractTableApp}       from 'app/withInterpreter/AbstractTableApp'\nimport {GameStyles}             from 'core/gameStyle/GameStyles'\nimport {gameContentTranslation} from 'lang/components/translationMethods'\nimport {filterGame}             from 'util/utilitiesMethods'\n\nexport default class GameStyleApp\n    extends AbstractTableApp<AppInterpreterWithTable<GameStyles, GameStyleAppOption>, GameStyleProperties> {\n\n    //region -------------------- Create methods --------------------\n\n    protected override _createKey(): string {\n        return 'gameStyle'\n    }\n\n\n    protected override _createSimpleListRouteName(): EveryPossibleRouteNames {\n        return 'everyGameStyle (list)'\n    }\n\n    protected override _createCardListRouteName(): EveryPossibleRouteNames {\n        return 'everyGameStyle (card)'\n    }\n\n    protected override _createTableRouteName(): EveryPossibleRouteNames {\n        return 'everyGameStyle (table)'\n    }\n\n\n    protected override _createTitleContent(): ReactElementOrString {\n        return gameContentTranslation('game style.all')\n    }\n\n    protected override _createAppOptionInterpreter() {\n        const $this = this\n\n        return new class GameStyleAppInterpreter implements AppInterpreterWithTable<GameStyles, GameStyleAppOption> {\n\n            public get content() {\n                return filterGame(GameStyles.values, $this.props.games,)\n            }\n\n            //region -------------------- List interpreter --------------------\n\n            public createListDimension(): PossibleDimensionOnList {\n                return {\n                    small: 6,\n                    medium: 4,\n                    large: null,\n                }\n            }\n\n            //endregion -------------------- List interpreter --------------------\n            //region -------------------- Card list interpreter --------------------\n\n            public createCardListDimension(): PossibleDimensionOnCardList {\n                return 'list'\n            }\n\n            public createCardListContent(enumerable: GameStyles,) {\n                return <div className=\"card-body\" id={`gameStyle-${enumerable.englishNameInHtml}`}>\n                    {enumerable.renderSingleComponent}\n                </div>\n            }\n\n            //endregion -------------------- Card list interpreter --------------------\n\n            public readonly tableHeadersColor = 'info' satisfies BootstrapThemeColor\n            public readonly tableColor = 'primary' satisfies BootstrapThemeColor\n            public readonly tableCaption = gameContentTranslation('game style.all') satisfies ReactElementOrString\n\n            public get tableOptions(): readonly GameStyleAppOption[] {\n                return [\n                    GameStyleAppOption.ICON,\n                    GameStyleAppOption.NAME,\n                    GameStyleAppOption.NIGHT_DESERT_WIND,\n                ]\n            }\n\n\n            public createNewTableContent(content: GameStyles, option: GameStyleAppOption,) {\n                return option.renderContent(content,)\n            }\n\n            public createTableHeader(option: GameStyleAppOption,) {\n                return option.renderTableHeader()\n            }\n\n        }()\n    }\n\n    //endregion -------------------- Create methods --------------------\n\n}\n","import type {GameStyle}       from 'core/gameStyle/GameStyle'\nimport type {CourseTheme}     from 'core/theme/CourseTheme'\nimport type {ReactProperties} from 'util/react/ReactProperties'\n\nimport {gameContentTranslation} from 'lang/components/translationMethods'\n\ninterface NightEffectComponentProperties_GameStyle\n    extends ReactProperties {\n\n    gameStyle: GameStyle\n\n}\n\ninterface NightEffectComponentProperties_Theme\n    extends ReactProperties {\n\n    theme: CourseTheme\n\n}\n\n/**\n * @param properties\n * @reactComponent\n */\nexport default function NightEffectComponent(properties: | NightEffectComponentProperties_GameStyle | NightEffectComponentProperties_Theme,) {\n    return 'gameStyle' in properties\n        ? <NightEffectByGameStyle {...properties}/>\n        : <NightEffectByTheme {...properties}/>\n}\n\nfunction NightEffectByGameStyle({gameStyle: {nightDesertWindTranslationKey: translationKey,},}: NightEffectComponentProperties_GameStyle,) {\n    return translationKey == null ? null : <>{gameContentTranslation(`nightEffect.nightDesertWindEffect.${translationKey}`)}</>\n}\n\nfunction NightEffectByTheme({theme: {effect,},}: NightEffectComponentProperties_Theme,) {\n    return effect?.createNewComponent ?? null\n}\n"],"names":["_Symbol$iterator","Symbol","iterator","GameStyleAppOption","_ref","_inherits","_super","_createSuper","_classCallCheck","call","_createClass","key","value","enumeration","this","_createContentOption","_createTableHeaderOption","CompanionEnum","get","getValue","values","Enum","ICON","_GameStyleAppOption","GameStyleAppOption_Images","_super2","apply","arguments","renderSingleComponent","element","unfinishedText","NAME","_GameStyleAppOption2","GameStyleAppOption_Name","_super3","CommonOptions","getNameContent","nameHeader","NIGHT_DESERT_WIND","_GameStyleAppOption3","GameStyleAppOption_NightDesertWind","_super4","_ref2","reference","_jsx","NightEffectComponent","gameStyle","_jsxs","className","children","Themes","DESERT","Times","NIGHT","tooltip","gameContentTranslation","night","desert","ProjectLanguages","current","toLowerCase","_instance","_classPrivateFieldLooseKey","_class","_CompanionEnum","CompanionEnum_GameStyleAppOption","_super5","_classPrivateFieldLoo","_classPrivateFieldLoo2","_classPrivateFieldLooseBase","Object","defineProperty","writable","GameStyleApp","_AbstractTableApp","$this","GameStyleAppInterpreter","tableHeadersColor","tableColor","tableCaption","filterGame","GameStyles","props","games","small","medium","large","enumerable","id","concat","englishNameInHtml","content","option","renderContent","renderTableHeader","AbstractTableApp","properties","NightEffectByGameStyle","_objectSpread","NightEffectByTheme","translationKey","nightDesertWindTranslationKey","_Fragment","_effect$createNewComp","effect","theme","createNewComponent"],"sourceRoot":""}