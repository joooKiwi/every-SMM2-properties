{"version":3,"file":"static/js/686.8fd85dd6.chunk.js","mappings":"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","sources":["app/options/ThemeAppOption.tsx","app/ThemeApp.tsx","app/tools/button/LinkButton.tsx","core/nightEffect/NightEffect.component.tsx"],"sourcesContent":["import type {CompanionEnumSingleton} from '@joookiwi/enumerable'\nimport {CompanionEnum, Enum}         from '@joookiwi/enumerable'\n\nimport type {AppOption}           from 'app/options/AppOption'\nimport type {Names, Ordinals}     from 'app/options/ThemeAppOption.types'\nimport type {SingleHeaderContent} from 'app/tools/table/SimpleHeader'\n\nimport {CommonOptions}          from 'app/options/CommonOptions'\nimport Image                    from 'app/tools/images/Image'\nimport {unfinishedText}         from 'app/tools/text/UnfinishedText'\nimport NightEffectComponent     from 'core/nightEffect/NightEffect.component'\nimport {Themes}                 from 'core/theme/Themes'\nimport {Times}                  from 'core/time/Times'\nimport {gameContentTranslation} from 'lang/components/translationMethods'\n\n/**\n * @todo change the SMM1 & SMM2 yes/no result into something different like the sounds or other things\n * @fixme if the yes/no is still in used after the change, use Texts.renderYesNoComponent() instead.\n */\nexport abstract class ThemeAppOption\n    extends Enum<Ordinals, Names>\nimplements AppOption<Themes>{\n\n    //region -------------------- Enum instances --------------------\n\n    public static readonly ICON =                  new class ThemeAppOption_Image extends ThemeAppOption {\n\n        protected override _createContentOption(enumeration: Themes,) {\n            return enumeration.renderSingleComponent(false,)\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {key: 'icon', element: unfinishedText('Icon'),}\n        }\n\n    }()\n    public static readonly ENDLESS_MARIO_ICON =    new class ThemeAppOption_EndlessMarioImage extends ThemeAppOption {\n\n        protected override _createContentOption({endlessMarioImageFile,}: Themes,) {\n            return <Image file={endlessMarioImageFile}/>\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {key: 'endless-mario-icon', element: unfinishedText('Endless Mario'),}//TODO add Endless Mario\n        }\n\n    }()\n    public static readonly NAME =                   new class ThemeAppOptionName extends ThemeAppOption {\n\n        protected override _createContentOption(enumeration: Themes,) {\n            return <div className=\"nameWithContent-container\">\n                <div className=\"col-10\">\n                    {CommonOptions.get.getGameContent(enumeration)}\n                    {CommonOptions.get.getNameContent(enumeration)}\n                </div>\n                <div className=\"col-2\">{CommonOptions.get.getThemeContent(enumeration)}</div>\n            </div>\n        }\n\n        protected override _createTableHeaderOption() {\n            return CommonOptions.get.nameHeader\n        }\n\n    }()\n    public static readonly NIGHT_EFFECT =           new class ThemeAppOption_NightEffect extends ThemeAppOption {\n\n        protected override _createContentOption({reference: {courseTheme,},}: Themes,) {\n            return <NightEffectComponent theme={courseTheme}/>\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {\n                key: 'effect', element: <div className=\"nightDesert-header-image-container position-relative mx-auto\">\n                    {Themes.DESERT.renderSingleComponent(false)}\n                    {Times.NIGHT.renderSingleComponent}\n                </div>,\n                tooltip: gameContentTranslation('Effect (night)', {night: unfinishedText('night effect name'),},)//TODO add translation for the night effect name\n            }\n        }\n\n    }()\n\n    //endregion -------------------- Enum instances --------------------\n    //region -------------------- Companion enum --------------------\n\n    public static readonly CompanionEnum: CompanionEnumSingleton<ThemeAppOption, typeof ThemeAppOption> = class CompanionEnum_ThemeAppOption\n        extends CompanionEnum<ThemeAppOption, typeof ThemeAppOption> {\n\n        //region -------------------- Singleton usage --------------------\n\n        static #instance?: CompanionEnum_ThemeAppOption\n\n        private constructor() {\n            super(ThemeAppOption,)\n        }\n\n        public static get get() {\n            return this.#instance ??= new CompanionEnum_ThemeAppOption()\n        }\n\n        //endregion -------------------- Singleton usage --------------------\n\n    }\n\n    //endregion -------------------- Companion enum --------------------\n    //region -------------------- Fields --------------------\n    //endregion -------------------- Fields --------------------\n    //region -------------------- Constructor --------------------\n\n    private constructor() {\n        super()\n    }\n\n    //endregion -------------------- Constructor --------------------\n    //region -------------------- Getter methods --------------------\n    //endregion -------------------- Getter methods --------------------\n    //region -------------------- Methods --------------------\n\n    //region -------------------- App option - content --------------------\n\n    protected abstract _createContentOption(enumeration: Themes,): ReactElement\n\n    public renderContent(enumeration: Themes,): readonly [ReactElement,] {\n        return [this._createContentOption(enumeration,),]\n    }\n\n    //endregion -------------------- App option - content --------------------\n    //region -------------------- App option - table --------------------\n\n    protected abstract _createTableHeaderOption(): SingleHeaderContent\n\n    public renderTableHeader(): SingleHeaderContent {\n        return this._createTableHeaderOption()\n    }\n\n    //endregion -------------------- App option - table --------------------\n\n    //endregion -------------------- Methods --------------------\n\n}\n","import './ThemeApp.scss'\n\nimport type {ThemeAppProperties}                                   from 'app/AppProperties.types'\nimport type {AppInterpreterWithTable}                              from 'app/interpreter/AppInterpreterWithTable'\nimport type {PossibleDimensionOnCardList, PossibleDimensionOnList} from 'app/interpreter/DimensionOnList'\nimport type {ThemeTypes}                                           from 'app/property/ThemeTypes'\nimport type {Themes}                                               from 'core/theme/Themes'\nimport type {PossibleRouteName}                                    from 'route/EveryRoutes.types'\n\nimport {CommonOptions}                                   from 'app/options/CommonOptions'\nimport {ThemeAppOption}                                  from 'app/options/ThemeAppOption'\nimport {COURSE_THEME_IMAGE_FILE, WORLD_THEME_IMAGE_FILE} from 'app/options/file/themeImageFiles'\nimport LinkButton                                        from 'app/tools/button/LinkButton'\nimport Image                                             from 'app/tools/images/Image'\nimport {AbstractTableApp}                                from 'app/withInterpreter/AbstractTableApp'\nimport {contentTranslation, gameContentTranslation}      from 'lang/components/translationMethods'\nimport {filterGame}                                      from 'util/utilitiesMethods'\n\n/** @reactComponent */\nexport default class ThemeApp\n    extends AbstractTableApp<AppInterpreterWithTable<Themes, ThemeAppOption>, ThemeAppProperties> {\n\n    //region -------------------- Getter methods --------------------\n\n    public get type(): ThemeTypes {\n        return this.props.type\n    }\n\n    //endregion -------------------- Getter methods --------------------\n    //region -------------------- Create methods --------------------\n\n    protected override _createKey() {\n        return 'theme'\n    }\n\n\n    protected override _createSimpleListRouteName(): PossibleRouteName {\n        return `${this.type.routeName} (list)`\n    }\n\n    protected override _createCardListRouteName(): PossibleRouteName {\n        return `${this.type.routeName} (card)`\n    }\n\n    protected override _createTableRouteName(): PossibleRouteName {\n        return `${this.type.routeName} (table)`\n    }\n\n\n    protected override _createTitleContent(): ReactElementOrString {\n        return gameContentTranslation('theme.all.all')\n    }\n\n    protected override _createAsideContent(): ReactElementOrString {\n        const {type, viewDisplay,} = this\n\n        return <div id=\"theme-linkButton-container\" className=\"btn-group btn-group-vertical btn-group-sm\">\n            <LinkButton partialId=\"allTheme\" routeName={viewDisplay.getRoutePath(type.allRouteName)} color={type.allColor}>{contentTranslation('All')}</LinkButton>\n            <div id=\"theme-linkButton-courseAndWorld-container\" className=\"btn-group btn-group-sm\">\n                <LinkButton partialId=\"courseTheme\" routeName={viewDisplay.getRoutePath(type.courseRouteName)} color={type.courseColor}>\n                    <Image id=\"courseTheme-button-image\" file={COURSE_THEME_IMAGE_FILE} className=\"theme-button-image\"/>\n                </LinkButton>\n                <LinkButton partialId=\"worldTheme\" routeName={viewDisplay.getRoutePath(type.worldRouteName)} color={type.worldColor}>\n                    <Image id=\"worldTheme-button-image\" file={WORLD_THEME_IMAGE_FILE} className=\"theme-button-image\"/>\n                </LinkButton>\n            </div>\n        </div>\n    }\n\n    protected override _createAppOptionInterpreter() {\n        const $this = this\n\n        return new class ThemeAppInterpreter implements AppInterpreterWithTable<Themes, ThemeAppOption> {\n\n            public get content() {\n                return filterGame($this.type.content, $this.props.games,)\n            }\n\n            //region -------------------- List interpreter --------------------\n\n            public createListDimension(): PossibleDimensionOnList {\n                return {\n                    small: 6,\n                    medium: 4,\n                    large: 3,\n                    extraLarge: 2,\n                }\n            }\n\n            //endregion -------------------- List interpreter --------------------\n            //region -------------------- Card list interpreter --------------------\n\n            public createCardListDimension(): PossibleDimensionOnCardList {\n                return 'list'\n            }\n\n            public createCardListContent(enumerable: Themes,) {\n                const {englishNameInHtml, endlessMarioImageFile,} = enumerable\n\n                return <div className=\"card-body\" id={`theme-${englishNameInHtml}`}>\n                    <div className=\"col-2\">{CommonOptions.get.getGameContent(enumerable)}</div>\n                    <div className=\"images-container col-7\">\n                        {enumerable.renderSingleComponent(true)}\n                        <Image file={endlessMarioImageFile}/>\n                    </div>\n                    <div className=\"col-2\">{CommonOptions.get.getThemeContent(enumerable)}</div>\n                </div>\n            }\n\n            //endregion -------------------- Card list interpreter --------------------\n            //region -------------------- Table interpreter --------------------\n\n            public readonly tableHeadersColor = 'info' satisfies BootstrapThemeColor\n            public readonly tableColor = 'primary' satisfies BootstrapThemeColor\n            public readonly tableCaption = gameContentTranslation('theme.all.all') satisfies ReactElementOrString\n\n            public get tableOptions(): readonly ThemeAppOption[] {\n                return [\n                    ThemeAppOption.ICON,\n                    ThemeAppOption.ENDLESS_MARIO_ICON,\n                    ThemeAppOption.NAME,\n                    ThemeAppOption.NIGHT_EFFECT,\n                ]\n            }\n\n\n            public createNewTableContent(content: Themes, option: ThemeAppOption,) {\n                return option.renderContent(content,)\n            }\n\n            public createTableHeader(option: ThemeAppOption,) {\n                return option.renderTableHeader()\n            }\n\n            //endregion -------------------- Table interpreter --------------------\n\n        }()\n    }\n\n    //endregion -------------------- Create methods --------------------\n\n}\n","import {Link} from 'react-router-dom'\n\nimport type {PossibleRouteName}                            from 'route/EveryRoutes.types'\nimport type {ReactProperties, ReactPropertiesWithChildren} from 'util/react/ReactProperties'\n\nimport {routeFromName} from 'route/route'\n\ninterface LinkButtonsProperties\n    extends ReactProperties {\n\n    partialId: string\n\n    routeName: Nullable<PossibleRouteName>\n\n    color: BootstrapColor\n\n}\n\n/**\n * Create a {@link Link} button or a simple disabled button (if the {@link LinkButtonsProperties.routeName route name} is <b>null</b>)\n *\n * @reactComponent\n */\nexport default function LinkButton({partialId, routeName, color, children,}: ReactPropertiesWithChildren<LinkButtonsProperties, ReactElementOrString>,) {\n    const id = `${partialId}-button`\n    const className = `btn btn-${color} link-button`\n\n    if (routeName == null)\n        return <button type=\"button\" id={id} className={className} disabled>{children}</button>\n    return <Link type=\"button\" id={id} className={className} to={routeFromName(routeName,)}>{children}</Link>\n}\n","import type {GameStyle}       from 'core/gameStyle/GameStyle'\nimport type {CourseTheme}     from 'core/theme/CourseTheme'\nimport type {ReactProperties} from 'util/react/ReactProperties'\n\nimport {gameContentTranslation} from 'lang/components/translationMethods'\n\ninterface NightEffectComponentProperties_GameStyle\n    extends ReactProperties {\n\n    gameStyle: GameStyle\n\n}\n\ninterface NightEffectComponentProperties_Theme\n    extends ReactProperties {\n\n    theme: CourseTheme\n\n}\n\n/**\n * @param properties\n * @reactComponent\n */\nexport default function NightEffectComponent(properties: | NightEffectComponentProperties_GameStyle | NightEffectComponentProperties_Theme,) {\n    return 'gameStyle' in properties\n        ? <NightEffectByGameStyle {...properties}/>\n        : <NightEffectByTheme {...properties}/>\n}\n\nfunction NightEffectByGameStyle({gameStyle: {nightDesertWindTranslationKey: translationKey,},}: NightEffectComponentProperties_GameStyle,) {\n    return translationKey == null ? null : <>{gameContentTranslation(`nightEffect.nightDesertWindEffect.${translationKey}`)}</>\n}\n\nfunction NightEffectByTheme({theme: {effect,},}: NightEffectComponentProperties_Theme,) {\n    return effect?.createNewComponent ?? null\n}\n"],"names":["ThemeAppOption","_ref","_inherits","_super","_createSuper","_classCallCheck","call","_createClass","key","value","enumeration","this","_createContentOption","_createTableHeaderOption","Enum","ICON","_ThemeAppOption","ThemeAppOption_Image","_super2","apply","arguments","renderSingleComponent","element","unfinishedText","ENDLESS_MARIO_ICON","_ThemeAppOption2","ThemeAppOption_EndlessMarioImage","_super3","_ref2","endlessMarioImageFile","_jsx","Image","file","NAME","_ThemeAppOption3","ThemeAppOptionName","_super4","_jsxs","className","children","CommonOptions","get","getGameContent","getNameContent","getThemeContent","nameHeader","NIGHT_EFFECT","_ThemeAppOption4","ThemeAppOption_NightEffect","_super5","_ref3","courseTheme","reference","NightEffectComponent","theme","Themes","DESERT","Times","NIGHT","tooltip","gameContentTranslation","night","CompanionEnum","_instance","_classPrivateFieldLooseKey","_class","_CompanionEnum","CompanionEnum_ThemeAppOption","_super6","_classPrivateFieldLoo","_classPrivateFieldLoo2","_classPrivateFieldLooseBase","Object","defineProperty","writable","ThemeApp","_AbstractTableApp","props","type","concat","routeName","viewDisplay","id","LinkButton","partialId","getRoutePath","allRouteName","color","allColor","contentTranslation","courseRouteName","courseColor","COURSE_THEME_IMAGE_FILE","worldRouteName","worldColor","WORLD_THEME_IMAGE_FILE","$this","ThemeAppInterpreter","tableHeadersColor","tableColor","tableCaption","filterGame","content","games","small","medium","large","extraLarge","enumerable","englishNameInHtml","option","renderContent","renderTableHeader","AbstractTableApp","disabled","Link","to","routeFromName","properties","NightEffectByGameStyle","_objectSpread","NightEffectByTheme","translationKey","gameStyle","nightDesertWindTranslationKey","_Fragment","_effect$createNewComp","effect","createNewComponent"],"sourceRoot":""}