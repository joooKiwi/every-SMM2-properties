{"version":3,"file":"static/js/194.2e207b92.chunk.js","mappings":"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","sources":["app/MiiCostumeCategoryApp.tsx","app/withInterpreter/AbstractCardListApp.tsx"],"sourcesContent":["import type {AppInterpreterWithCardList}                           from 'app/interpreter/AppInterpreterWithCardList'\nimport type {PossibleDimensionOnCardList, PossibleDimensionOnList} from 'app/interpreter/DimensionOnList'\nimport type {PossibleRouteName}                                    from 'route/EveryRoutes.types'\n\nimport Image                    from 'app/tools/images/Image'\nimport {unfinishedText}         from 'app/tools/text/UnfinishedText'\nimport {AbstractCardListApp}    from 'app/withInterpreter/AbstractCardListApp'\nimport {MiiCostumeCategories}   from 'core/miiCostumeCategory/MiiCostumeCategories'\nimport {OtherWordInTheGames}    from 'core/otherWordInTheGame/OtherWordInTheGames'\nimport {gameContentTranslation} from 'lang/components/translationMethods'\n\n//region -------------------- Import from deconstruction --------------------\n\nconst {MII_COSTUME,} = OtherWordInTheGames\n\n//endregion -------------------- Import from deconstruction --------------------\n\nexport default class MiiCostumeCategoryApp\n    extends AbstractCardListApp<AppInterpreterWithCardList<MiiCostumeCategories>> {\n\n    //region -------------------- Create methods --------------------\n\n    protected override _createKey() {\n        return 'miiCostumeCategory'\n    }\n\n\n    protected override _createSimpleListRouteName(): PossibleRouteName {\n        return 'everyMiiCostumeCategory (list)'\n    }\n\n    protected override _createCardListRouteName(): PossibleRouteName {\n        return 'everyMiiCostumeCategory (card)'\n    }\n\n\n    protected override _createTitleContent(): ReactElementOrString {\n        return gameContentTranslation('mii costume category.all', {\n            singularName: MII_COSTUME.singularLowerCaseNameOnReferenceOrNull ?? unfinishedText(MII_COSTUME.singularEnglishName),\n            pluralName: MII_COSTUME.pluralLowerCaseNameOnReferenceOrNull ?? unfinishedText(MII_COSTUME.pluralEnglishName),\n        },)\n    }\n\n    protected override _createAppOptionInterpreter() {\n        return new class MiiCostumeCategoryAppInterpreter implements AppInterpreterWithCardList<MiiCostumeCategories> {\n\n            public get content() {\n                return MiiCostumeCategories.CompanionEnum.get.values.toArray()\n            }\n\n            //region -------------------- List interpreter --------------------\n\n            public createListDimension(): PossibleDimensionOnList {\n                return {\n                    default: 12,\n                    small: 6,\n                    medium: 3,\n                    large: null,\n                }\n            }\n\n            //endregion -------------------- List interpreter --------------------\n            //region -------------------- Card list interpreter --------------------\n\n            public createCardListDimension(): PossibleDimensionOnCardList {\n                return 'list'\n            }\n\n            public createCardListContent(enumerable: MiiCostumeCategories,) {\n                return <Image file={enumerable.imageFile}/>\n            }\n\n            //endregion -------------------- Card list interpreter --------------------\n\n        }()\n    }\n\n    //region -------------------- Create methods --------------------\n\n}\n","import type {AppWithInterpreterProperties} from 'app/AppProperties.types'\nimport type {AppStates}                    from 'app/AppStates.types'\nimport type {ValueByApp}                   from 'app/interpreter/AppInterpreter'\nimport type {AppInterpreterWithCardList}   from 'app/interpreter/AppInterpreterWithCardList'\nimport type {ViewAndRouteName}             from 'app/withInterpreter/DisplayButtonGroup.properties'\nimport type {PossibleRouteName}            from 'route/EveryRoutes.types'\n\nimport {AbstractSimpleListApp} from 'app/withInterpreter/AbstractSimpleListApp'\nimport {ListDimensionCreator}  from 'app/withInterpreter/ListDimension.creator'\nimport {ViewDisplays}          from 'app/withInterpreter/ViewDisplays'\nimport NameComponent           from 'lang/name/component/Name.component'\n\nexport abstract class AbstractCardListApp<APP extends AppInterpreterWithCardList,\n    T extends AppWithInterpreterProperties = AppWithInterpreterProperties, S extends AppStates = AppStates, >\n    extends AbstractSimpleListApp<APP, T, S> {\n\n    //region -------------------- Fields --------------------\n\n    #routeName?: PossibleRouteName\n\n    //endregion -------------------- Fields --------------------\n    //region -------------------- Getter & create methods --------------------\n\n    protected override _createPossibleViewDisplay(): readonly ViewAndRouteName[] {\n        return [\n            ...super._createPossibleViewDisplay(),\n            [ViewDisplays.CARD_LIST, this.__cardRouteName,],\n        ]\n    }\n\n    private get __cardRouteName(): PossibleRouteName {\n        return this.#routeName ??= this._createCardListRouteName()\n    }\n\n    protected abstract _createCardListRouteName(): PossibleRouteName\n\n    protected _createUniqueNameOnCardList(enumerable: ValueByApp<APP>,): string {\n        return enumerable.englishName\n    }\n\n    //endregion -------------------- Getter & create methods --------------------\n    //region -------------------- Render methods --------------------\n\n    /**\n     * Create a list of elements in a card manner.\n     * It can be similar to the {@link createList} but has more information displayed.\n     */\n    public createCardList(): ReactElement {\n        const optionInterpreter = this._appOptionInterpreter\n        const key = this._key\n        const cardListDimension = optionInterpreter.createCardListDimension()\n        const dimensions = new ListDimensionCreator(cardListDimension === 'list' ? optionInterpreter.createListDimension() : cardListDimension,).createDimensions()\n        const content = optionInterpreter.content\n\n        const size = content.length\n        const contentToDisplay = new Array<ReactElement>(size,)\n        let index = size\n        while (index-- > 0) {\n            const enumerable = content[index]\n            const uniqueEnglishName = this._createUniqueNameOnCardList(enumerable,)\n\n            //TODO change the popover to be on the id instead of the name directly\n            contentToDisplay[index] =\n                <div key={`${uniqueEnglishName} - main card list container`} id={`${key}-${enumerable.englishNameInHtml}-container`} className={`${key}-container listElement-container ${dimensions}`}>\n                    <div key={`${uniqueEnglishName} - main card list sub-container`} className=\"cardListElement-container rounded-pill\">\n                        <NameComponent key={`${uniqueEnglishName} - text container`} id=\"name\" name={enumerable.reference.nameContainer} popoverOrientation=\"left\"/>\n                        <div className=\"cardListName-content-container\">{optionInterpreter.createCardListContent(enumerable)}</div>\n                    </div>\n                </div>\n        }\n        return <>{contentToDisplay}</>\n    }\n\n    //endregion -------------------- Render methods --------------------\n\n}\n"],"names":["MII_COSTUME","OtherWordInTheGames","MiiCostumeCategoryApp","_AbstractCardListApp","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","_MII_COSTUME$singular","_MII_COSTUME$pluralLo","gameContentTranslation","singularName","singularLowerCaseNameOnReferenceOrNull","unfinishedText","singularEnglishName","pluralName","pluralLowerCaseNameOnReferenceOrNull","pluralEnglishName","MiiCostumeCategoryAppInterpreter","get","MiiCostumeCategories","CompanionEnum","values","toArray","default","small","medium","large","enumerable","_jsx","Image","file","imageFile","AbstractCardListApp","_routeName","_classPrivateFieldLooseKey","_AbstractSimpleListAp","_this","_len","length","args","Array","_key","call","concat","Object","defineProperty","_assertThisInitialized","writable","_toConsumableArray","_get","_getPrototypeOf","prototype","ViewDisplays","CARD_LIST","this","__cardRouteName","_classPrivateFieldLoo","_classPrivateFieldLoo2","_classPrivateFieldLooseBase","_createCardListRouteName","englishName","optionInterpreter","_appOptionInterpreter","cardListDimension","createCardListDimension","dimensions","ListDimensionCreator","createListDimension","createDimensions","content","size","contentToDisplay","index","uniqueEnglishName","_createUniqueNameOnCardList","id","englishNameInHtml","className","children","_jsxs","NameComponent","name","reference","nameContainer","popoverOrientation","createCardListContent","_Fragment","AbstractSimpleListApp"],"sourceRoot":""}