{"version":3,"file":"static/js/916.1d78c2eb.chunk.js","mappings":"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","sources":["core/entity/properties/instrument/InstrumentProperty.component.tsx","core/limit/Limit.component.tsx","core/limit/PlayLimit.component.tsx","core/limit/SMM1And3DSEditorLimit.component.tsx","core/limit/SMM2EditorLimit.component.tsx","core/theme/CourseTheme.component.tsx","app/options/EntityAppOption.tsx","app/EntityApp.tsx","core/editorVoice/EditorVoiceSound.component.tsx"],"sourcesContent":["import './InstrumentProperty.scss'\n\nimport type {Entities}        from 'core/entity/Entities'\nimport type {ReactProperties} from 'util/react/ReactProperties'\n\nimport Tooltip                  from 'bootstrap/tooltip/Tooltip'\nimport {gameContentTranslation} from 'lang/components/translationMethods'\n\ninterface InstrumentPropertyProperties\n    extends ReactProperties {\n\n    value: Entities\n\n}\n\n/**\n * @todo add on click event to play the music block sound (randomly if more than one)\n * @reactComponent\n */\nexport default function InstrumentPropertyComponent({value: {englishNameInHtml, reference: {canMakeASoundOutOfAMusicBlock: value, canMakeASoundOutOfAMusicBlockComment: comment,},},}: InstrumentPropertyProperties,) {\n    if (value !== true)\n        return null\n    const id = `${englishNameInHtml}-instrumentProperty`\n\n    if (comment == null)\n        return <i id={id} className=\"music-block\"/>\n    return <Tooltip option={{title: gameContentTranslation(`instrument.${comment}`),}} elementId={id}>\n        <i id={id} className=\"music-block-with-comment\"/>\n    </Tooltip>\n}\n","import {Fragment} from 'react'\n\nimport type {ReactProperties} from 'util/react/ReactProperties'\n\nimport {Limits}           from 'core/limit/Limits'\nimport NameComponent      from 'lang/name/component/Name.component'\nimport {ProjectLanguages} from 'lang/ProjectLanguages'\nimport TextComponent      from 'app/tools/text/TextComponent'\nimport Tooltip            from 'bootstrap/tooltip/Tooltip'\nimport {StringContainer}  from 'util/StringContainer'\n\ntype Id = `${| 'editor' | 'play'}-${string}`\n\ninterface EditorLimitProperties\n    extends ReactProperties {\n\n    readonly id: Id\n\n    readonly limits: | Limits | ReadonlyMap<Limits, boolean>\n\n    readonly displayAcronymIfApplicable: boolean\n\n}\n\n/**\n *\n * @param properties\n * @reactComponent\n */\nexport default function LimitComponent({id, limits, displayAcronymIfApplicable,}: EditorLimitProperties,) {\n    if (limits instanceof Limits)\n        return createSingleComponent(id, limits, displayAcronymIfApplicable,)\n\n    const selectedLimits = [...limits].filter(([, hasLimit]) => hasLimit).map(([limit,]) => limit)\n    return selectedLimits.length === 0\n        ? <></>\n        : <>{selectedLimits.map((limit, index,) =>\n            <Fragment key={`${limit.englishName} #${index + 1} → ${id}`}>{createSingleComponent(id, limit, displayAcronymIfApplicable,)}{createReturnOfLine(selectedLimits, index,)}</Fragment>\n        )}</>\n}\n\nfunction createReturnOfLine(selectedLimits: readonly Limits[], index: number,) {\n    return index === selectedLimits.length - 1 ? <></> : <>{ProjectLanguages.current.comma}<br/></>\n}\n\nfunction createSingleComponent(id: Id, limit: Limits, displayAcronymIfApplicable: boolean,) {\n    if (displayAcronymIfApplicable) {\n        const acronym = limit.acronym\n        if (acronym == null)\n            return createSingleNameComponent(id, limit,)\n        const acronymId = `limit-acronym-${id}-${StringContainer.getInHtml(limit.acronym!)}`\n        //TODO Transform the tooltip to a popover to display every names instead\n        return <Tooltip option={{title: limit.reference.nameContainer.languageValue,}} elementId={acronymId}>\n            <TextComponent key={`${limit.englishName} (acronym) → ${id}`} id={acronymId} content={acronym}/>\n        </Tooltip>\n    }\n    return createSingleNameComponent(id, limit,)\n}\n\nfunction createSingleNameComponent(id: Id, limit: Limits,) {\n    return <NameComponent key={`${limit.englishName} (name) → ${id}`} id={`limit-name-${id}`} name={limit.reference}/>\n}","import type {SimpleLimitComponentProperties} from 'core/limit/Limit.component.types'\n\nimport LimitComponent from 'core/limit/Limit.component'\n\nexport default function PlayLimitComponent({reference,}: SimpleLimitComponentProperties,) {\n    return <LimitComponent id={`play-${reference.englishNameInHtml}`} limits={reference.reference.toPlayLimitMap()} displayAcronymIfApplicable/>\n}\n","import type {SimpleLimitComponentProperties} from 'core/limit/Limit.component.types'\n\nimport TextComponent    from 'app/tools/text/TextComponent'\nimport LimitComponent   from 'core/limit/Limit.component'\nimport {NOT_APPLICABLE} from 'util/commonVariables'\n\nexport default function SMM1And3DSEditorLimitComponent({reference,}: SimpleLimitComponentProperties,) {\n    const editorLimit = reference.reference.editorLimit_smm1And3ds\n\n    return editorLimit == null\n        ? <TextComponent id={`editor-SuperMarioMaker1And3DS-${reference.englishNameInHtml}`} content={NOT_APPLICABLE}/>\n        : <LimitComponent id={`editor-SuperMarioMaker1And3DS-${reference.englishNameInHtml}`} limits={editorLimit} displayAcronymIfApplicable/>\n}\n","import type {SimpleLimitComponentProperties} from 'core/limit/Limit.component.types'\n\nimport TextComponent    from 'app/tools/text/TextComponent'\nimport LimitComponent   from 'core/limit/Limit.component'\nimport {NOT_APPLICABLE} from 'util/commonVariables'\n\nexport default function SMM2EditorLimitComponent({reference,}: SimpleLimitComponentProperties,) {\n    const entity = reference.reference\n    const editorLimit = entity.editorLimit_smm2\n\n    return editorLimit == null || editorLimit === NOT_APPLICABLE\n        ? <TextComponent id={`editor-SuperMarioMaker2-${reference.englishNameInHtml}`} content={editorLimit} isUnknown={entity.isUnknown_editorLimit_smm2}/>\n        : <LimitComponent id={`editor-SuperMarioMaker2-${reference.englishNameInHtml}`} limits={editorLimit} displayAcronymIfApplicable/>\n}\n","import type {ThemeProperty} from 'core/entity/properties/theme/ThemeProperty'\n\nimport {COURSE_THEME_IMAGE_FILE} from 'app/options/file/themeImageFiles'\nimport Image                     from 'app/tools/images/Image'\nimport TextComponent             from 'app/tools/text/TextComponent'\nimport {ThemeComponent}          from 'core/theme/Theme.component'\nimport {Themes}                  from 'core/theme/Themes'\nimport {gameContentTranslation}  from 'lang/components/translationMethods'\n\n/** @reactComponent */\nexport default class CourseThemeComponent\n    extends ThemeComponent<ThemeProperty> {\n\n\n    protected override get _map() {\n        return this.reference.toCourseThemeMap()\n    }\n\n    protected override get _isInAll() {\n        return this.reference.isInGroundTheme\n            && this.reference.isInUndergroundTheme\n            && this.reference.isInUnderwaterTheme\n            && (this.reference.isInDesertTheme ?? false)\n            && (this.reference.isInSnowTheme ?? false)\n            && (this.reference.isInSkyTheme ?? false)\n            && (this.reference.isInForestTheme ?? false)\n            && this.reference.isInGhostHouseTheme\n            && this.reference.isInAirshipTheme\n            && this.reference.isInCastleTheme\n    }\n\n    protected override _renderSingleComponent(theme: Themes,) {\n        return CourseThemeComponent.renderSingleComponent(theme, true, this.name.english,)\n    }\n\n    protected override _renderComponentForAllAsText() {\n        return <TextComponent content={gameContentTranslation('theme.course.all', {courseThemeImage:<Image file={COURSE_THEME_IMAGE_FILE}/>,},)}/>\n    }\n\n    protected override _renderComponentForAllAsImages() {\n        return <div key={`${this.name.english} (every course themes)`}>{Themes.courseThemes.map(courseTheme => this._renderSingleComponent(courseTheme))}</div>\n    }\n\n}\n","import type {CompanionEnumSingleton} from '@joookiwi/enumerable'\nimport {CompanionEnum, Enum}         from '@joookiwi/enumerable'\nimport {Fragment}                    from 'react'\n\nimport type {AppOption}           from 'app/options/AppOption'\nimport type {Names, Ordinals}     from 'app/options/EntityAppOption.types'\nimport type {SingleHeaderContent} from 'app/tools/table/SimpleHeader'\nimport type {Entities}            from 'core/entity/Entities'\n\nimport {CommonOptions}                from 'app/options/CommonOptions'\nimport Image                          from 'app/tools/images/Image'\nimport {gameContentTranslation}       from 'lang/components/translationMethods'\nimport EditorVoiceSoundComponent      from 'core/editorVoice/EditorVoiceSound.component'\nimport InstrumentPropertyComponent    from 'core/entity/properties/instrument/InstrumentProperty.component'\nimport {EntityCategories}             from 'core/entityCategory/EntityCategories'\nimport GameComponent                  from 'core/game/Game.component'\nimport {GameStyles}                   from 'core/gameStyle/GameStyles'\nimport GameStyleComponent             from 'core/gameStyle/GameStyle.component'\nimport PlayLimitComponent             from 'core/limit/PlayLimit.component'\nimport SMM1And3DSEditorLimitComponent from 'core/limit/SMM1And3DSEditorLimit.component'\nimport SMM2EditorLimitComponent       from 'core/limit/SMM2EditorLimit.component'\nimport CourseThemeComponent           from 'core/theme/CourseTheme.component'\nimport {Themes}                       from 'core/theme/Themes'\nimport {Times}                        from 'core/time/Times'\nimport TimeComponent                  from 'core/time/Time.component'\n\nexport class EntityAppOption\n    extends Enum<Ordinals, Names>\n    implements AppOption<Entities> {\n\n    //region -------------------- Enum instances --------------------\n\n    public static readonly IMAGE_IN_SMB = new class EntityAppOption_Images extends EntityAppOption {\n\n        protected override _createContentOption({englishName, englishNameInHtml, uniqueImage,}: Entities,) {\n            const imageFiles = uniqueImage.map.get(GameStyles.SUPER_MARIO_BROS,)\n            if (imageFiles == null)\n                return null\n\n            const size = imageFiles.length\n            const images = new Array<ReactJSXElement>(size,)\n            let index = size\n            while (index-- > 0)\n                images[index] = <Image key={`Entity image (${englishName} - SMB - image #${index + 1})`} className={`entity-image ${englishNameInHtml}-image`} file={imageFiles[index]}/>\n            return <Fragment key={`unique image (${englishName})`}>{images}</Fragment>\n        }\n\n        protected override _createTableHeaderOption() {\n            return {key: `image-smb`, element: GameStyles.SUPER_MARIO_BROS.renderSingleComponent,} satisfies SingleHeaderContent\n        }\n\n    }('smb-images',)\n    public static readonly IMAGE_IN_SMB3 = new class EntityAppOption_Images extends EntityAppOption {\n\n        protected override _createContentOption({englishName, englishNameInHtml, uniqueImage,}: Entities,) {\n            const imageFiles = uniqueImage.map.get(GameStyles.SUPER_MARIO_BROS_3,)\n            if (imageFiles == null)\n                return null\n\n            const size = imageFiles.length\n            const images = new Array<ReactJSXElement>(size,)\n            let index = size\n            while (index-- > 0)\n                images[index] = <Image key={`Entity image (${englishName} - SMB3 - image #${index + 1})`} className={`entity-image ${englishNameInHtml}-image`} file={imageFiles[index]}/>\n            return <Fragment key={`unique image (${englishName})`}>{images}</Fragment>\n        }\n\n        protected override _createTableHeaderOption() {\n            return {key: `image-smb3`, element: GameStyles.SUPER_MARIO_BROS_3.renderSingleComponent,} satisfies SingleHeaderContent\n        }\n\n    }('smb3-images',)\n    public static readonly IMAGE_IN_SMW = new class EntityAppOption_Images extends EntityAppOption {\n\n        protected override _createContentOption({englishName, englishNameInHtml, uniqueImage,}: Entities,) {\n            const imageFiles = uniqueImage.map.get(GameStyles.SUPER_MARIO_WORLD,)\n            if (imageFiles == null)\n                return null\n\n            const size = imageFiles.length\n            const images = new Array<ReactJSXElement>(size,)\n            let index = size\n            while (index-- > 0)\n                images[index] = <Image key={`Entity image (${englishName} - SMW - image #${index + 1})`} className={`entity-image ${englishNameInHtml}-image`} file={imageFiles[index]}/>\n            return <Fragment key={`unique image (${englishName})`}>{images}</Fragment>\n        }\n\n        protected override _createTableHeaderOption() {\n            return {key: `image-smw`, element: GameStyles.SUPER_MARIO_WORLD.renderSingleComponent,} satisfies SingleHeaderContent\n        }\n\n    }('smw-images',)\n    public static readonly IMAGE_IN_NSMBU = new class EntityAppOption_Images extends EntityAppOption {\n\n        protected override _createContentOption({englishName, englishNameInHtml, uniqueImage,}: Entities,) {\n            const imageFiles = uniqueImage.map.get(GameStyles.NEW_SUPER_MARIO_BROS_U,)\n            if (imageFiles == null)\n                return null\n\n            const size = imageFiles.length\n            const images = new Array<ReactJSXElement>(size,)\n            let index = size\n            while (index-- > 0)\n                images[index] = <Image key={`Entity image (${englishName} - NSMBU - image #${index + 1})`} className={`entity-image ${englishNameInHtml}-image`} file={imageFiles[index]}/>\n            return <Fragment key={`unique image (${englishName})`}>{images}</Fragment>\n        }\n\n        protected override _createTableHeaderOption() {\n            return {key: `image-nsmbu`, element: GameStyles.NEW_SUPER_MARIO_BROS_U.renderSingleComponent,} satisfies SingleHeaderContent\n        }\n\n    }('nsmbu-images',)\n    public static readonly IMAGE_IN_SM3DW = new class EntityAppOption_Images extends EntityAppOption {\n\n        protected override _createContentOption({englishName, englishNameInHtml, uniqueImage,}: Entities,) {\n            const imageFiles = uniqueImage.map.get(GameStyles.SUPER_MARIO_3D_WORLD,)\n            if (imageFiles == null)\n                return null\n\n            const size = imageFiles.length\n            const images = new Array<ReactJSXElement>(size,)\n            let index = size\n            while (index-- > 0)\n                images[index] = <Image key={`Entity image (${englishName} - SM3DW - image #${index + 1})`} className={`entity-image ${englishNameInHtml}-image`} file={imageFiles[index]}/>\n            return <Fragment key={`unique image (${englishName})`}>{images}</Fragment>\n        }\n\n        protected override _createTableHeaderOption() {\n            return {key: `image-sm3dw`, element: GameStyles.SUPER_MARIO_3D_WORLD.renderSingleComponent,} satisfies SingleHeaderContent\n        }\n\n    }('sm3dw-images',)\n    /**\n     * Display an animation or not.\n     *\n     * If the value is \"separated\", then, it will display every image animation separated.\n     * @see AnimatedImages\n     */\n    public static readonly IMAGES_ON_EDITOR = new EntityAppOption('editor-images',)\n    public static readonly IMAGES_ON_CLEAR_CONDITION = new EntityAppOption('clearCondition-images',)\n    public static readonly IMAGES_ON_WHILE_PLAYING = new EntityAppOption('play-images',)\n    public static readonly IMAGES_ON_UNUSED = new EntityAppOption('unused-images',)\n\n    public static readonly NAME = new class EntityAppOption_Name extends EntityAppOption {\n\n        protected override _createContentOption(enumeration: Entities,) {\n            return <div className=\"nameAndEditorVoiceSound-container container\">\n                {CommonOptions.get.getNameContent(enumeration)}\n                <div className=\"properties\">\n                    <InstrumentPropertyComponent value={enumeration}/>\n                </div>\n                <EditorVoiceSoundComponent editorVoiceSound={enumeration.editorVoiceSoundFileHolder} name={enumeration.englishName}/>\n            </div>\n        }\n\n        protected override _createTableHeaderOption() {\n            return CommonOptions.get.nameHeader\n        }\n\n    }('name',)\n\n    public static readonly GAME = new class EntityAppOption_Game extends EntityAppOption {\n\n        protected override _createContentOption({reference,}: Entities,) {\n            return <GameComponent reference={reference} name={reference} displayAllAsText/>\n        }\n\n        protected override _createTableHeaderOption() {\n            return CommonOptions.get.gameHeader\n        }\n\n    }('game',)\n    public static readonly WHEN_ALL_SELECTED_GAME = new EntityAppOption('???',)\n\n    public static readonly GAME_STYLE = new class EntityAppOption_GameStyle extends EntityAppOption {\n\n        protected override _createContentOption({reference,}: Entities,) {\n            return <GameStyleComponent reference={reference} name={reference} displayAllAsText/>\n        }\n\n        protected override _createTableHeaderOption() {\n            return {key: 'gameStyle', element: gameContentTranslation('game style.singular'),} satisfies SingleHeaderContent\n        }\n\n    }('gameStyle',)\n    public static readonly WHEN_ALL_SELECTED_GAME_STYLE = new EntityAppOption('???',)\n\n    public static readonly COURSE_THEME = new class EntityAppOption_CourseTheme extends EntityAppOption {\n\n        protected override _createContentOption({reference,}: Entities,) {\n            return <CourseThemeComponent reference={reference} name={reference} displayAllAsText/>\n        }\n\n        protected override _createTableHeaderOption() {\n            return {key: 'courseTheme', element: gameContentTranslation('theme.course.singular'),} satisfies SingleHeaderContent\n        }\n\n    }('courseTheme',)\n    public static readonly WHEN_ALL_SELECTED_COURSE_THEME = new EntityAppOption('???',)\n\n    public static readonly TIME = new class EntityAppOption_Time extends EntityAppOption {\n\n        protected override _createContentOption({reference,}: Entities,) {\n            return <TimeComponent reference={reference} name={reference} displayAllAsText={false}/>\n        }\n\n        protected override _createTableHeaderOption() {\n            return {key: 'time', element: gameContentTranslation('time.singular'),} satisfies SingleHeaderContent\n        }\n\n    }('time',)\n    public static readonly WHEN_ALL_SELECTED_TIME = new EntityAppOption('???',)\n\n    public static readonly CATEGORY = new class EntityAppOption_Category extends EntityAppOption {\n\n        protected override _createContentOption(enumeration: Entities,) {\n            const categoryName = enumeration.reference.categoryNameContainer\n\n            return CommonOptions.get.getCategoryContent(enumeration, () => EntityCategories.CompanionEnum.get.getValueByName(categoryName.english,).imageFile,)\n        }\n\n        protected override _createTableHeaderOption() {\n            return CommonOptions.get.categoryHeader\n        }\n\n    }('category',)\n    /**\n     * Tell whenever a {@link EntityAppOption.CATEGORY category} is displayed\n     * as a text (<i>true</i>) or an image (<i>false</i>).\n     */\n    public static readonly CATEGORY_AS_TEXT = new EntityAppOption('???',)\n\n    public static readonly EDITOR_LIMIT_IN_SMM1_AND_3DS = new class EntityAppOption_LimitInSMM1And3DS extends EntityAppOption {\n\n        protected override _createContentOption(enumeration: Entities,) {\n            return <SMM1And3DSEditorLimitComponent reference={enumeration}/>\n        }\n\n        protected override _createTableHeaderOption() {\n            return CommonOptions.get.completeEditorLimitInSmm1And3dsHeader\n        }\n\n    }('smm1And3ds-editorLimit',)\n    public static readonly EDITOR_LIMIT_IN_SMM1_AND_3DS_ONLY = new class EntityAppOption_LimitInSMM1And3DS extends EntityAppOption {\n\n        protected override _createContentOption(enumeration: Entities,) {\n            return <SMM1And3DSEditorLimitComponent reference={enumeration}/>\n        }\n\n        protected override _createTableHeaderOption() {\n            return CommonOptions.get.completeEditorLimitHeader\n        }\n\n    }('editorLimit',)\n    public static readonly EDITOR_LIMIT_IN_SMM2 = new class EntityAppOption_LimitInSMM2 extends EntityAppOption {\n\n        protected override _createContentOption(enumeration: Entities,) {\n            return <SMM2EditorLimitComponent reference={enumeration}/>\n        }\n\n        protected override _createTableHeaderOption() {\n            return CommonOptions.get.completeEditorLimitInSmm2Header\n        }\n\n    }('smm2-editorLimit',)\n    public static readonly EDITOR_LIMIT_IN_SMM2_ONLY = new class EntityAppOption_LimitInSMM2 extends EntityAppOption {\n\n        protected override _createContentOption(enumeration: Entities,) {\n            return <SMM2EditorLimitComponent reference={enumeration}/>\n        }\n\n        protected override _createTableHeaderOption() {\n            return CommonOptions.get.completeEditorLimitHeader\n        }\n\n    }('editorLimit',)\n    public static readonly PLAY_LIMIT = new class EntityAppOption_PlayLimit extends EntityAppOption {\n\n        protected override _createContentOption(enumeration: Entities,) {\n            return <PlayLimitComponent reference={enumeration}/>\n        }\n\n        protected override _createTableHeaderOption() {\n            return CommonOptions.get.completePlayLimitHeader\n        }\n    }('playLimit',)\n\n    //endregion -------------------- Enum instances --------------------\n    //region -------------------- Companion enum --------------------\n\n    public static readonly CompanionEnum: CompanionEnumSingleton<EntityAppOption, typeof EntityAppOption> = class CompanionEnum_EntityAppOption\n        extends CompanionEnum<EntityAppOption, typeof EntityAppOption> {\n\n        //region -------------------- Singleton usage --------------------\n\n        static #instance?: CompanionEnum_EntityAppOption\n\n        private constructor() {\n            super(EntityAppOption,)\n        }\n\n        public static get get() {\n            return this.#instance ??= new this()\n        }\n\n        //endregion -------------------- Singleton usage --------------------\n\n    }\n\n    //endregion -------------------- Companion enum --------------------\n    //region -------------------- Fields --------------------\n\n    static #gameStyles?: readonly GameStyles[]\n    static #gameStyles_unusedImages?: | readonly [GameStyles,] | EmptyArray\n    static #times?: readonly Times[]\n    static #themes?: readonly Themes[]\n\n    readonly #associatedClass\n    readonly #additionalClasses\n\n    //endregion -------------------- Fields --------------------\n    //region -------------------- Constructor --------------------\n\n    private constructor(associatedClass: string,) {\n        super()\n        this.#additionalClasses = [this.#associatedClass = associatedClass,] as const\n    }\n\n    //endregion -------------------- Constructor --------------------\n    //region -------------------- Getter methods --------------------\n\n    public get associatedClass(): string {\n        return this.#associatedClass\n    }\n\n    public get additionalClasses(): readonly [string,] {\n        return this.#additionalClasses\n    }\n\n\n    protected static get _gameStyles(): readonly GameStyles[] {\n        return this.#gameStyles ??= GameStyles.CompanionEnum.get.values.toArray()\n    }\n\n    protected static get _gameStyles_unusedImages(): | readonly [GameStyles,] | EmptyArray {\n        return this.#gameStyles_unusedImages ??= [GameStyles.SUPER_MARIO_BROS,]\n    }\n\n    protected static get times(): readonly Times[] {\n        return this.#times ??= Times.CompanionEnum.get.values.toArray()\n    }\n\n    protected static get themes(): readonly Themes[] {\n        return this.#themes ??= Themes.courseThemes\n    }\n\n    //endregion -------------------- Getter methods --------------------\n    //region -------------------- Methods --------------------\n\n    //region -------------------- App option - content --------------------\n\n    protected _createContentOption(enumeration: Entities,): ReactElement {\n        throw new ReferenceError(`The EntityAppOption.${this.name} cannot create a content option`,)\n    }\n\n    public renderContent(enumeration: Entities,): readonly [ReactElement,] {\n        return [this._createContentOption(enumeration,),]\n    }\n\n    //endregion -------------------- App option - content --------------------\n    //region -------------------- App option - table --------------------\n\n    protected _createTableHeaderOption(): NullOr<SingleHeaderContent> {\n        throw new ReferenceError(`The EntityAppOption.${this.name} cannot create a table header option`,)\n    }\n\n    public renderTableHeader(): NullOr<SingleHeaderContent> {\n        const content = this._createTableHeaderOption()\n        if (content == null)\n            return null\n        return content\n    }\n\n    //endregion -------------------- App option - table --------------------\n\n    //endregion -------------------- Methods --------------------\n\n}\n","import './EntityApp.scss'\nimport './options/EntityAppOption.scss'\n\nimport type {EntityProperties}        from 'app/AppProperties.types'\nimport type {AppInterpreterWithTable} from 'app/interpreter/AppInterpreterWithTable'\nimport type {DimensionOnList}         from 'app/interpreter/DimensionOnList'\nimport type {PossibleRouteName}       from 'route/EveryRoutes.types'\n\nimport {EntityAppOption}             from 'app/options/EntityAppOption'\nimport {AbstractTableApp}            from 'app/withInterpreter/AbstractTableApp'\nimport EditorVoiceSoundComponent     from 'core/editorVoice/EditorVoiceSound.component'\nimport {Entities}                    from 'core/entity/Entities'\nimport {OtherWordInTheGames}         from 'core/otherWordInTheGame/OtherWordInTheGames'\nimport {gameContentTranslation}      from 'lang/components/translationMethods'\nimport {unfinishedText}              from 'app/tools/text/UnfinishedText'\nimport {filterGame, filterGameStyle} from 'util/utilitiesMethods'\n\n//region -------------------- Deconstruction imports --------------------\n\nconst {ENTITY,} = OtherWordInTheGames\n\n//endregion -------------------- Deconstruction imports --------------------\n\nexport default class EntityApp\n    extends AbstractTableApp<Entities, AppInterpreterWithTable<Entities, EntityAppOption>, EntityProperties> {\n\n    //region -------------------- Create methods --------------------\n\n    protected override _createKey() {\n        return 'entity'\n    }\n\n\n    protected override _createSimpleListRouteName(): PossibleRouteName {\n        return 'everyEntity (list)'\n    }\n\n    protected override _createCardListRouteName(): PossibleRouteName {\n        return 'everyEntity (card)'\n    }\n\n    protected override _createTableRouteName(): PossibleRouteName {\n        return 'everyEntity (table)'\n    }\n\n\n    protected override _createTitleContent(): ReactElementOrString {\n        const singularEntityName = ENTITY.singularNameOnReferenceOrNull ?? unfinishedText(ENTITY.singularEnglishName), singularEntityLowerCaseName = ENTITY.singularLowerCaseNameOnReferenceOrNull ?? singularEntityName.toLowerCase()\n        const pluralEntityName = ENTITY.pluralNameOnReferenceOrNull ?? unfinishedText(ENTITY.pluralEnglishName), pluralEntityLowerCaseName = ENTITY.pluralLowerCaseNameOnReferenceOrNull ?? pluralEntityName.toLowerCase()\n\n        return gameContentTranslation('entity.all', {\n            Entity: singularEntityName,\n            Entities: pluralEntityName,\n            entity: singularEntityLowerCaseName,\n            entities: pluralEntityLowerCaseName,\n        },)\n    }\n\n    protected override _createAppOptionInterpreter() {\n        const $this = this\n\n        return new class EntityAppInterpreter implements AppInterpreterWithTable<Entities, EntityAppOption> {\n\n            public get content() {\n                return filterGameStyle(filterGame(Entities.CompanionEnum.get.values, $this.props.games,), $this.props.gameStyles,)\n            }\n\n            //region -------------------- List interpreter --------------------\n\n            public createListDimension(): DimensionOnList {\n                return {\n                    default: 1,\n                    small: 2,\n                    medium: 3,\n                    large: 4,\n                    extraLarge: 6,\n                }\n            }\n\n            //endregion -------------------- List interpreter --------------------\n            //region -------------------- Card list interpreter --------------------\n\n            public createCardListDimension() {\n                return this.createListDimension()\n            }\n\n            public createCardListContent({englishName: name, reference, editorVoiceSoundFileHolder,}: Entities,) {\n                //TODO encapsulate the voiceSound into a sound interpreter.\n                const category = reference.categoryEnglish === '' ? '' : `entityCategory-${reference.categoryEnglish}`//TODO move to the parent container className.\n                return <div className={`${category}`}>\n                    <EditorVoiceSoundComponent editorVoiceSound={editorVoiceSoundFileHolder} name={name}/>\n                </div>\n            }\n\n            //endregion -------------------- Card list interpreter --------------------\n            //region -------------------- Table interpreter --------------------\n\n            public readonly tableHeadersColor = 'secondary' satisfies BootstrapThemeColor\n\n            public get tableCaption() {\n                const singularEntityName = ENTITY.singularNameOnReferenceOrNull ?? unfinishedText(ENTITY.singularEnglishName), singularEntityLowerCaseName = ENTITY.singularLowerCaseNameOnReferenceOrNull ?? singularEntityName.toLowerCase()\n                return gameContentTranslation('entity.all', {\n                    Entity: singularEntityName,\n                    entity: singularEntityLowerCaseName,\n                },) satisfies ReactElementOrString\n            }\n\n            public get tableOptions(): readonly EntityAppOption[] {\n                const games = $this.props.games\n                const gameStyles = $this.props.gameStyles\n                const hasSMM1Or3DS = games.hasSMM1Or3DS\n                const hasSMM2 = games.hasSMM2\n\n                const options: EntityAppOption[] = []\n                if (gameStyles.hasSMB)\n                    options.push(EntityAppOption.IMAGE_IN_SMB,)\n                if (gameStyles.hasSMB3)\n                    options.push(EntityAppOption.IMAGE_IN_SMB3,)\n                if (gameStyles.hasSMW)\n                    options.push(EntityAppOption.IMAGE_IN_SMW,)\n                if (gameStyles.hasNSMBU)\n                    options.push(EntityAppOption.IMAGE_IN_NSMBU,)\n                if (gameStyles.hasSM3DW && hasSMM2) // The SMM2 validation is a fail-safe\n                    options.push(EntityAppOption.IMAGE_IN_SM3DW,)\n                options.push(\n                    EntityAppOption.NAME,\n                    // EntityAppOption.GAME,\n                    // EntityAppOption.GAME_STYLE,\n                    // EntityAppOption.COURSE_THEME,\n                    // EntityAppOption.TIME,\n                    EntityAppOption.CATEGORY,\n                )\n                if (hasSMM1Or3DS && hasSMM2)\n                    options.push(EntityAppOption.EDITOR_LIMIT_IN_SMM1_AND_3DS, EntityAppOption.EDITOR_LIMIT_IN_SMM2,)\n                else {\n                    if (hasSMM1Or3DS)\n                        options.push(EntityAppOption.EDITOR_LIMIT_IN_SMM1_AND_3DS_ONLY,)\n                    if (hasSMM2)\n                        options.push(EntityAppOption.EDITOR_LIMIT_IN_SMM2_ONLY,)\n                }\n                options.push(EntityAppOption.PLAY_LIMIT,)\n                return options\n            }\n\n\n            public getAdditionalClass(option: EntityAppOption,) {\n                return option.additionalClasses\n            }\n\n            public createTableContent(content: Entities, option: EntityAppOption,) {\n                return option.renderContent(content,)\n            }\n\n            public createTableHeader(option: EntityAppOption,) {\n                return option.renderTableHeader()\n            }\n\n            //endregion -------------------- Table interpreter --------------------\n\n        }()\n    }\n\n    //endregion -------------------- Create methods --------------------\n\n}\n","import './EditorVoiceSound.component.scss'\n\nimport type {EditorVoiceSound} from 'core/editorVoice/sound/EditorVoiceSound'\nimport type {ReactProperties}  from 'util/react/ReactProperties'\n\nimport SimpleSoundComponent from 'util/file/sound/component/SimpleSound.component'\n\ninterface EditorVoiceSoundComponentProperties\n    extends ReactProperties {\n\n    editorVoiceSound: Nullable<EditorVoiceSound>\n\n    name: string\n\n}\n\n/**\n * @param properties\n * @reactComponent\n */\nexport default function EditorVoiceSoundComponent({editorVoiceSound, name,}: EditorVoiceSoundComponentProperties,) {\n    if (editorVoiceSound == null)\n        return null\n\n    const {regularSound: regularFile, europeanSound: europeanFile,} = editorVoiceSound\n    return regularFile == null\n        ? null\n        : europeanFile == null\n            ? <div key={`Editor voice sound container (single - ${name})`} className=\"single-editorVoiceSound-container\">\n                <SimpleSoundComponent file={regularFile} title={name}/>\n            </div>\n            : <div key={`Editor voice sound container (double - ${name})`} className=\"double-editorVoiceSound-container container\">\n                <div key={`Editor voice sound container (single #1 - ${name}`} className=\"single-editorVoiceSound-container\">\n                    <SimpleSoundComponent file={regularFile} title={name}/>\n                </div>\n                <div key={`Editor voice sound container (single #2 - ${name})`} className=\"single-editorVoiceSound-container\">\n                    <SimpleSoundComponent file={europeanFile} title={name}/>\n                </div>\n            </div>\n\n}\n"],"names":["InstrumentPropertyComponent","_ref","value","englishNameInHtml","reference","canMakeASoundOutOfAMusicBlock","canMakeASoundOutOfAMusicBlockComment","comment","id","concat","_jsx","className","Tooltip","option","title","gameContentTranslation","elementId","children","LimitComponent","limits","displayAcronymIfApplicable","Limits","createSingleComponent","selectedLimits","filter","_ref2","hasLimit","map","_ref3","limit","length","_Fragment","index","_jsxs","Fragment","createReturnOfLine","englishName","ProjectLanguages","current","comma","acronym","createSingleNameComponent","acronymId","StringContainer","getInHtml","nameContainer","languageValue","TextComponent","content","NameComponent","name","PlayLimitComponent","toPlayLimitMap","SMM1And3DSEditorLimitComponent","editorLimit","editorLimit_smm1And3ds","NOT_APPLICABLE","SMM2EditorLimitComponent","entity","editorLimit_smm2","isUnknown","isUnknown_editorLimit_smm2","CourseThemeComponent","ThemeComponent","_map","this","toCourseThemeMap","_isInAll","_this$reference$isInD","_this$reference$isInS","_this$reference$isInS2","_this$reference$isInF","isInGroundTheme","isInUndergroundTheme","isInUnderwaterTheme","isInDesertTheme","isInSnowTheme","isInSkyTheme","isInForestTheme","isInGhostHouseTheme","isInAirshipTheme","isInCastleTheme","_renderSingleComponent","theme","renderSingleComponent","english","_renderComponentForAllAsText","courseThemeImage","Image","file","COURSE_THEME_IMAGE_FILE","_renderComponentForAllAsImages","Themes","courseThemes","courseTheme","_gameStyles","_classPrivateFieldLooseKey","_gameStyles_unusedImages","_times","_themes","_associatedClass","_additionalClasses","EntityAppOption","Enum","constructor","associatedClass","super","Object","defineProperty","writable","_classPrivateFieldLooseBase","additionalClasses","_classPrivateFieldLoo","_classPrivateFieldLoo2","GameStyles","CompanionEnum","get","values","toArray","_classPrivateFieldLoo3","_classPrivateFieldLoo4","SUPER_MARIO_BROS","times","_classPrivateFieldLoo5","_classPrivateFieldLoo6","Times","themes","_classPrivateFieldLoo7","_classPrivateFieldLoo8","_createContentOption","enumeration","ReferenceError","renderContent","_createTableHeaderOption","renderTableHeader","IMAGE_IN_SMB","uniqueImage","imageFiles","size","images","Array","key","element","IMAGE_IN_SMB3","SUPER_MARIO_BROS_3","IMAGE_IN_SMW","SUPER_MARIO_WORLD","IMAGE_IN_NSMBU","_ref4","NEW_SUPER_MARIO_BROS_U","IMAGE_IN_SM3DW","_ref5","SUPER_MARIO_3D_WORLD","IMAGES_ON_EDITOR","IMAGES_ON_CLEAR_CONDITION","IMAGES_ON_WHILE_PLAYING","IMAGES_ON_UNUSED","NAME","CommonOptions","getNameContent","EditorVoiceSoundComponent","editorVoiceSound","editorVoiceSoundFileHolder","nameHeader","GAME","_ref6","GameComponent","displayAllAsText","gameHeader","WHEN_ALL_SELECTED_GAME","GAME_STYLE","_ref7","GameStyleComponent","WHEN_ALL_SELECTED_GAME_STYLE","COURSE_THEME","_ref8","WHEN_ALL_SELECTED_COURSE_THEME","TIME","_ref9","TimeComponent","WHEN_ALL_SELECTED_TIME","CATEGORY","categoryName","categoryNameContainer","getCategoryContent","EntityCategories","getValueByName","imageFile","categoryHeader","CATEGORY_AS_TEXT","EDITOR_LIMIT_IN_SMM1_AND_3DS","completeEditorLimitInSmm1And3dsHeader","EDITOR_LIMIT_IN_SMM1_AND_3DS_ONLY","completeEditorLimitHeader","EDITOR_LIMIT_IN_SMM2","completeEditorLimitInSmm2Header","EDITOR_LIMIT_IN_SMM2_ONLY","PLAY_LIMIT","completePlayLimitHeader","_instance","_class","_classPrivateFieldLoo9","_classPrivateFieldLoo10","ENTITY","OtherWordInTheGames","EntityApp","AbstractTableApp","_createKey","_createSimpleListRouteName","_createCardListRouteName","_createTableRouteName","_createTitleContent","_ENTITY$singularNameO","_ENTITY$singularLower","_ENTITY$pluralNameOnR","_ENTITY$pluralLowerCa","singularEntityName","singularNameOnReferenceOrNull","unfinishedText","singularEnglishName","singularEntityLowerCaseName","singularLowerCaseNameOnReferenceOrNull","toLowerCase","pluralEntityName","pluralNameOnReferenceOrNull","pluralEnglishName","pluralEntityLowerCaseName","pluralLowerCaseNameOnReferenceOrNull","Entity","Entities","entities","_createAppOptionInterpreter","$this","tableHeadersColor","filterGameStyle","filterGame","props","games","gameStyles","createListDimension","default","small","medium","large","extraLarge","createCardListDimension","createCardListContent","category","categoryEnglish","tableCaption","_ENTITY$singularNameO2","_ENTITY$singularLower2","tableOptions","hasSMM1Or3DS","hasSMM2","options","hasSMB","push","hasSMB3","hasSMW","hasNSMBU","hasSM3DW","getAdditionalClass","createTableContent","createTableHeader","regularSound","regularFile","europeanSound","europeanFile","SimpleSoundComponent"],"sourceRoot":""}