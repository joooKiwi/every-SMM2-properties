{"version":3,"file":"static/js/674.db097ad5.chunk.js","mappings":"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","sources":["app/options/MysteryMushroomAppOption.tsx","app/MysteryMushroomApp.tsx"],"sourcesContent":["import type {CollectionHolder, EnumerableConstructor, PossibleValueByEnumerable} from '@joookiwi/enumerable/dist/types'\nimport {Enum}                                                                    from '@joookiwi/enumerable'\nimport {Fragment, lazy}                                                          from 'react'\n\nimport type {Names, Ordinals, PossibleMysteryMushroomType}            from 'app/options/MysteryMushroomAppOption.types'\nimport type {AppOptionWithContent, PossibleRenderReactElement}        from 'app/options/component/AppOptionWithContent'\nimport type {AppOptionWithTable}                                      from 'app/options/component/AppOptionWithTable'\nimport type {SingleHeaderContent}                                     from 'app/tools/table/SimpleHeader'\nimport type {MysteryMushroom}                                         from 'core/mysteryMushroom/MysteryMushroom'\nimport type {MysteryMushroomImageFile as ImageFile}                   from 'core/mysteryMushroom/file/MysteryMushroomImageFile'\nimport type {MysteryMushroomSoundFile as SoundFile}                   from 'core/mysteryMushroom/file/MysteryMushroomSoundFile'\nimport type {ReactElement}                                            from 'util/react/ReactProperties'\nimport type {Nullable, NullOr}                                        from 'util/types/nullable'\nimport type {NotApplicable}                                           from 'util/types/variables'\n\nimport {MysteryMushrooms}              from 'core/mysteryMushroom/MysteryMushrooms'\nimport {CommonOptions}                 from 'app/options/CommonOptions'\nimport {AppOptionWithContentComponent} from 'app/options/component/AppOptionWithContent.component'\nimport {AppOptionWithTableComponent}   from 'app/options/component/AppOptionWithTable.component'\nimport TextComponent                   from 'app/tools/text/TextComponent'\nimport {ProjectLanguages}              from 'lang/ProjectLanguages'\n\n//region -------------------- dynamic imports --------------------\n\nconst NameComponent =        lazy(() => import('lang/name/component/Name.component'))\nconst Image =                lazy(() => import('app/tools/images/Image'))\nconst SimpleSoundComponent = lazy(() => import('util/file/sound/component/SimpleSound.component'))\n\n//endregion -------------------- dynamic imports --------------------\n\nexport abstract class MysteryMushroomAppOption\n    extends Enum<Ordinals, Names> {\n\n    //region -------------------- Enum instances --------------------\n\n    public static readonly CONDITION_TO_UNLOCK_IT = new class MysteryMushroomAppOption_ConditionToUnlockIt extends MysteryMushroomAppOption {\n\n        protected override _createContentOption({reference,}: MysteryMushrooms,): PossibleRenderReactElement {\n            return <>--{reference.conditionToUnlockIt}--</>\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {key: 'conditionToUnlockIt', element: '--Condition to unlock it--',}//TODO add condition to unlock it\n        }\n\n    }(null,)\n    public static readonly GAME = new class MysteryMushroomAppOption_Game extends MysteryMushroomAppOption {\n\n        protected override _createContentOption(enumeration: MysteryMushrooms,) {\n            const {uniqueEnglishName, englishNameInHtml, reference,} = enumeration\n\n            return <div key={`games - ${uniqueEnglishName}`} id={`games-${englishNameInHtml}`}>{\n                reference.games.map((game, index, games,) => <Fragment key={`game (${index + 1}) - ${uniqueEnglishName}`}>\n                    <NameComponent id={`game_${index + 1}_${englishNameInHtml}`} name={game.reference} popoverOrientation=\"right\"/>\n                    {index === games.length - 1 ? null : <>{ProjectLanguages.currentLanguage.comma}<br/></>}\n                </Fragment>)\n            }</div>\n        }\n\n        protected override _createTableHeaderOption() {\n            return CommonOptions.get.gameHeader\n        }\n\n    }(null,)\n    public static readonly NAME = new class MysteryMushroomAppOption_Name extends MysteryMushroomAppOption {\n\n        protected override _createContentOption(enumeration: MysteryMushrooms,) {\n            return CommonOptions.get.getNameContent(enumeration)/*<YesOrNoResultTextComponent boolean={reference.canBeUnlockedByAnAmiibo}/>*/\n        }\n\n        protected override _createTableHeaderOption() {\n            return CommonOptions.get.nameHeader\n        }\n\n    }(null,)\n\n\n    public static readonly IMAGES_AND_SOUNDS = new class MysteryMushroomAppOption_ImagesAndSounds extends MysteryMushroomAppOption {\n\n        protected override _createContentOption() {\n            return MysteryMushroomAppOption._imagesAndSounds.map(enumerable => enumerable.renderContent).flat()\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {\n                key: 'imagesAndSounds', element: '--Images & sounds--',//TODO add images & sound\n                subHeaders: MysteryMushroomAppOption._imagesAndSounds.map(enumerable => enumerable.renderTableHeader!)\n            }\n        }\n\n    }(null,)\n    public static readonly POWER_UP_COLLECTED = new class MysteryMushroomAppOption_PowerUpCollectedSound extends MysteryMushroomAppOption {\n\n        protected override _createContentOption() {\n            return this._renderSoundContent()\n        }\n\n        public override _createSoundContent(renderDiv: boolean,) {\n            return this._createSound(enumeration => enumeration.powerUpCollectedSound, reference => reference.haveASoundEffectWhenCollected, renderDiv,)\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {key: 'powerUpCollectedSound', element: '--Power-up collected (sound)--',}//TODO add power-up collected & sound\n        }\n\n    }('power-up collected',)\n    public static readonly WAITING = new class MysteryMushroomAppOption_WaitingImages extends MysteryMushroomAppOption {\n\n        protected override _createContentOption() {\n            return this._renderImageContent()\n        }\n\n        public override _createImageContent(renderDiv: boolean,) {\n            return this._createImage(enumeration => enumeration.waitingImage, renderDiv,)\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {key: 'waitingImage', element: '--Waiting (image)--',}//TODO add waiting & image\n        }\n\n    }('waiting',)\n    public static readonly TAUNT = new class MysteryMushroomAppOption_Taunt extends MysteryMushroomAppOption {\n\n        protected override _createContentOption() {\n            return this._createSingleImageAndSoundContainer(() => <>\n                {this._renderImageContent(false,)}\n                {this._renderSoundContent(false,)}\n            </>)\n        }\n\n        protected override _createImageContent(renderDiv: boolean,) {\n            return this._createImage(enumeration => enumeration.tauntImage, renderDiv,)\n        }\n\n        public override _createSoundContent(renderDiv: boolean,) {\n            return this._createSound(enumeration => enumeration.tauntSound, reference => reference.haveASoundEffectOnTaunt, renderDiv,)\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {key: 'tauntImageAndSound', element: '--Taunt (image & sound)--',}//TODO add taunt, image & sound\n        }\n\n    }('taunt',)\n    public static readonly PRESSING_DOWN = new class MysteryMushroomAppOption_PressingDown extends MysteryMushroomAppOption {\n\n        protected override _createContentOption() {\n            return this._renderImageContent()\n        }\n\n        protected override _createImageContent(renderDiv: boolean,) {\n            return this._createImage(enumeration => enumeration.pressingDownImage, renderDiv,)\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {key: 'pressingDownImage', element: <>--Pressing ↓ (image)--</>,}\n        }\n\n    }('pressing ↓',)\n    public static readonly WALK = new class MysteryMushroomAppOption_Walk extends MysteryMushroomAppOption {\n\n        protected override _createContentOption() {\n            return this._renderImageContent()\n        }\n\n        protected override _createImageContent(renderDiv: boolean,) {\n            return this._createAnimatedImages(enumeration => enumeration.walkImages, renderDiv,)\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {key: 'walkImages', element: '--Walk (image)--',}//TODO add walk & image\n        }\n\n    }('walk',)\n    public static readonly RUNNING = new class MysteryMushroomAppOption_Running extends MysteryMushroomAppOption {\n\n        protected override _createContentOption() {\n            return this._renderImageContent()\n        }\n\n        protected override _createImageContent(renderDiv: boolean,) {\n            return this._createAnimatedImages(enumeration => enumeration.runningImages, renderDiv,)\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {key: 'runningImages', element: '--Running (images)--',}//TODO add running & image\n        }\n\n    }('running',)\n    public static readonly SWIMMING = new class MysteryMushroomAppOption_Swimming extends MysteryMushroomAppOption {\n\n        protected override _createContentOption() {\n            return this._renderImageContent()\n        }\n\n        protected override _createImageContent(renderDiv: boolean,) {\n            return this._createAnimatedImages(enumeration => enumeration.swimmingImages, renderDiv,)\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {key: 'swimmingImages', element: '--Swimming (images)--',}//TODO add swimming & image\n        }\n\n    }('swimming',)\n    public static readonly JUMP = new class MysteryMushroomAppOption_Jump extends MysteryMushroomAppOption {\n\n        protected override _createContentOption() {\n            return this._createSingleImageAndSoundContainer(() => <>\n                {this._renderImageContent(false,)}\n                {this._renderSoundContent(false,)}\n            </>)\n        }\n\n        protected override _createImageContent(renderDiv: boolean,) {\n            const enumeration = MysteryMushroomAppOption_Jump.CALLBACK_TO_GET_ENUMERATION()\n            return (enumeration.jumpImages[0]?.length ?? 0) > 1\n                ? this._createAnimatedImages(() => enumeration.jumpImages, renderDiv,)\n                : this._createImage(() => enumeration.jumpImages.map(images => images[0]!), renderDiv,)\n        }\n\n        public override _createSoundContent(renderDiv: boolean,) {\n            return this._createSounds(enumeration => enumeration.jumpSounds, reference => reference.haveASoundEffectOnJump, renderDiv,)\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {key: 'jumpingImagesAndSounds', element: '--Jumping (images & sounds)--',}//TODO add jumping, image & sound\n        }\n\n    }('jump',)\n    public static readonly FALLING_AFTER_A_JUMP = new class MysteryMushroomAppOption_FallingAfterAJump extends MysteryMushroomAppOption {\n\n        protected override _createContentOption() {\n            return this._renderImageContent()\n        }\n\n        protected override _createImageContent(renderDiv: boolean,) {\n            return this._createImage(enumeration => enumeration.fallingAfterAJumpImage, renderDiv,)\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {key: 'fallingAfterJumpImage', element: '--Falling after jump (images)--',}//TODO add falling after jump & image\n        }\n\n    }('falling after a jump',)\n    public static readonly ON_GROUND_AFTER_A_JUMP = new class MysteryMushroomAppOption_OnGroundAfterAJump extends MysteryMushroomAppOption {\n\n        protected override _createContentOption() {\n            return this._renderSoundContent()\n        }\n\n        public override _createSoundContent(renderDiv: boolean,) {\n            return this._createSound(enumeration => enumeration.onGroundAfterJumpASound, reference => reference.haveASoundEffectOnGroundAfterJump, renderDiv,)\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {key: 'groundAfterJumpImage', element: '--Ground after jump (sound)--',}//TODO add ground after jump & sound\n        }\n\n    }('ground after a jump',)\n    public static readonly TURNING = new class MysteryMushroomAppOption_Turning extends MysteryMushroomAppOption {\n\n        protected override _createContentOption() {\n            return this._createSingleImageAndSoundContainer(() => <>\n                {this._renderImageContent(false,)}\n                {this._renderSoundContent(false,)}\n            </>)\n        }\n\n        protected override _createImageContent(renderDiv: boolean,) {\n            return this._createImage(enumeration => enumeration.turningImage, renderDiv,)\n        }\n\n        public override _createSoundContent(renderDiv: boolean,) {\n            return this._createSound(enumeration => enumeration.turningSound, reference => reference.haveASoundEffectOnTurnAfterRun, renderDiv,)\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {key: 'turningImageAndSound', element: '--Turning (image & sound)--',}//TODO add turning, image & sound\n        }\n\n    }('turning',)\n    public static readonly CLIMBING = new class MysteryMushroomAppOption_Climbing extends MysteryMushroomAppOption {\n\n        protected override _createContentOption() {\n            return this._renderImageContent()\n        }\n\n        protected override _createImageContent(renderDiv: boolean,) {\n            return this._createAnimatedImages(enumeration => enumeration.climbingImages, renderDiv,)\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {key: 'climbingImages', element: '--Climbing (images)--',}//TODO add climbing & image\n        }\n\n    }('climbing',)\n    public static readonly GOAL_POLE = new class MysteryMushroomAppOption_GoalPole extends MysteryMushroomAppOption {\n\n        protected override _createContentOption() {\n            return this._createSingleImageAndSoundContainer(() => <>\n                {this._renderImageContent(false,)}\n                {this._renderSoundContent(false,)}\n            </>)\n        }\n\n        protected override _createImageContent(renderDiv: boolean,) {\n            return this._createAnimatedImages(enumeration => enumeration.goalPoleImages, renderDiv,)\n        }\n\n        public override _createSoundContent(renderDiv: boolean,) {\n            return this._createSound(enumeration => enumeration.goalPoleSound, reference => reference.haveASoundEffectOnGoalPole, renderDiv,)\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {key: 'goalPoleImagesAndSound', element: <>--Goal pole (images & sound)--</>,}\n        }\n\n    }('goal pole',)\n    public static readonly LOST_A_LIFE = new class MysteryMushroomAppOption_LostALife extends MysteryMushroomAppOption {\n\n        protected override _createContentOption() {\n            return this._renderImageContent()\n        }\n\n        protected override _createImageContent(renderDiv: boolean,) {\n            return this._createSound(enumeration => enumeration.lostALifeSound, reference => reference.haveASoundEffectOnDeath, renderDiv,)\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {key: 'lostALifeSound', element: '--Lost a life (sound)--',}//TODO add lost a life & sound\n        }\n\n    }('lost a life',)\n\n    //endregion -------------------- Enum instances --------------------\n    //region -------------------- Enum fields --------------------\n\n    static [index: number]: MysteryMushroomAppOption\n\n    //endregion -------------------- Enum fields --------------------\n    //region -------------------- Fields --------------------\n\n    static #imagesAndSounds?: readonly MysteryMushroomAppOption[]\n    public static CALLBACK_TO_GET_ENUMERATION: () => MysteryMushrooms\n\n    static readonly #NOT_APPLICABLE_COMPONENT = <TextComponent content=\"N/A\"/>\n\n    readonly #type\n    #appOptionWithContent?: AppOptionWithContent\n    #appOptionWithTable?: AppOptionWithTable\n\n    //endregion -------------------- Fields --------------------\n\n    private constructor(type: PossibleMysteryMushroomType,) {\n        super()\n        this.#type = type\n    }\n\n    //region -------------------- Getter methods --------------------\n\n    protected get _mysteryMushroomType(): PossibleMysteryMushroomType {\n        return this.#type\n    }\n\n    protected static get _imagesAndSounds(): readonly MysteryMushroomAppOption[] {\n        return this.#imagesAndSounds ??= [\n            MysteryMushroomAppOption.POWER_UP_COLLECTED,\n            MysteryMushroomAppOption.WAITING,\n            MysteryMushroomAppOption.TAUNT,\n            MysteryMushroomAppOption.PRESSING_DOWN,\n            MysteryMushroomAppOption.WALK,\n            MysteryMushroomAppOption.RUNNING,\n            MysteryMushroomAppOption.SWIMMING,\n            MysteryMushroomAppOption.JUMP,\n            MysteryMushroomAppOption.FALLING_AFTER_A_JUMP,\n            MysteryMushroomAppOption.ON_GROUND_AFTER_A_JUMP,\n            MysteryMushroomAppOption.TURNING,\n            MysteryMushroomAppOption.CLIMBING,\n            MysteryMushroomAppOption.GOAL_POLE,\n            MysteryMushroomAppOption.LOST_A_LIFE,\n        ]\n    }\n\n    //endregion -------------------- Getter methods --------------------\n    //region -------------------- Methods --------------------\n\n    //region -------------------- App option - content --------------------\n\n    #createSingleImageAndSoundContainer(renderDiv: boolean, callback: (enumeration: MysteryMushrooms,) => ReactElement,) {\n        const enumeration = MysteryMushroomAppOption.CALLBACK_TO_GET_ENUMERATION()\n\n        return enumeration === MysteryMushrooms.MYSTERY_MUSHROOM\n            ? MysteryMushroomAppOption.#NOT_APPLICABLE_COMPONENT\n            : renderDiv\n                ? <div key={`${enumeration.uniqueEnglishName} - ${this._mysteryMushroomType}`}>{callback(enumeration)}</div>\n                : callback(enumeration)\n    }\n\n    protected _createSingleImageAndSoundContainer(callback: (enumeration: MysteryMushrooms,) => ReactElement, renderDiv: boolean = true,): ReactElement {\n        return this.#createSingleImageAndSoundContainer(renderDiv, callback,)\n    }\n\n    protected _createSound(callback: (enumeration: MysteryMushrooms,) => Nullable<SoundFile>, callbackToRender: ReferenceCallback, renderDiv: boolean,): ReactElement {\n        return this.#createSingleImageAndSoundContainer(renderDiv, enumeration => {\n            const value = callback(enumeration)\n            if (value == null)\n                return null\n\n            const englishName = enumeration.englishName\n            const type = this._mysteryMushroomType\n            return <SimpleSoundComponent file={value} title={`${englishName} - ${type}`}/>\n        },)\n    }\n\n    protected _createSounds(callback: (enumeration: MysteryMushrooms,) => readonly SoundFile[], callbackToRender: ReferenceCallback, renderDiv: boolean,): ReactElement {\n        return this.#createSingleImageAndSoundContainer(renderDiv, enumeration => {\n            const englishName = enumeration.englishName\n            const type = this._mysteryMushroomType\n\n            return <>{callback(enumeration).map((value, index,) =>\n                <SimpleSoundComponent file={value} title={`${englishName} - ${type} #${index + 1}`}/>\n            )}</>\n        },)\n    }\n\n    protected _createImage(callback: (enumeration: MysteryMushrooms,) => readonly ImageFile[], renderDiv: boolean,): ReactElement {\n        return this.#createSingleImageAndSoundContainer(renderDiv, enumeration => {\n            const uniqueEnglishName = enumeration.uniqueEnglishName\n\n            return <>{callback(enumeration).map((value, index,) =>\n                <Image key={`${uniqueEnglishName} #${index + 1}`} file={value}/>\n            )}</>\n        },)\n    }\n\n    protected _createAnimatedImages(callback: (enumeration: MysteryMushrooms,) => readonly (| readonly ImageFile[] )[], renderDiv: boolean,): ReactElement {\n        return this.#createSingleImageAndSoundContainer(renderDiv, enumeration => {\n            const uniqueEnglishName = enumeration.uniqueEnglishName\n            const englishNameInHtml = enumeration.englishNameInHtml\n\n            return <>{callback(enumeration).map((value, index,) =>\n                <Image key={`${uniqueEnglishName} #${index + 1}`} partialId={`${englishNameInHtml}-${index + 1}`} images={value.map(it => ({file: it,}))}/>\n            )}</>\n        },)\n    }\n\n    protected abstract _createContentOption(enumeration: MysteryMushrooms,): PossibleRenderReactElement\n\n    private get __appOptionWithContent(): AppOptionWithContent {\n        return this.#appOptionWithContent ??= new AppOptionWithContentComponent(() => this._createContentOption(MysteryMushroomAppOption.CALLBACK_TO_GET_ENUMERATION()),)\n    }\n\n    public get renderContent(): readonly ReactElement[] {\n        return this.__appOptionWithContent.renderContent\n    }\n\n\n    protected _createImageContent(renderDiv: boolean,): ReactElement {\n        return null\n    }\n\n    public renderImageContent(enumeration: MysteryMushrooms, renderDiv: boolean = false,): ReactElement {\n        MysteryMushroomAppOption.CALLBACK_TO_GET_ENUMERATION = () => enumeration\n        return this._createImageContent(renderDiv,)\n    }\n\n    protected _renderImageContent(renderDiv: boolean = true,): ReactElement {\n        return this._createImageContent(renderDiv,)\n    }\n\n    public _createSoundContent(renderDiv: boolean,): ReactElement {\n        return null\n    }\n\n    public renderSoundContent(enumeration: MysteryMushrooms,): ReactElement {\n        MysteryMushroomAppOption.CALLBACK_TO_GET_ENUMERATION = () => enumeration\n        return this._createSoundContent(false)\n    }\n\n    protected _renderSoundContent(renderDiv: boolean = true,): ReactElement {\n        return this._createSoundContent(renderDiv,)\n    }\n\n    //endregion -------------------- App option - content --------------------\n    //region -------------------- App option - table --------------------\n\n    protected abstract _createTableHeaderOption(): SingleHeaderContent\n\n    private get __appOptionWithTable(): AppOptionWithTable {\n        return this.#appOptionWithTable ??= new AppOptionWithTableComponent(() => this._createTableHeaderOption(),)\n    }\n\n    public get renderTableHeader(): NullOr<SingleHeaderContent> {\n        return this.__appOptionWithTable.renderTableHeader\n    }\n\n    //endregion -------------------- App option - table --------------------\n\n    //endregion -------------------- Methods --------------------\n    //region -------------------- Enum methods --------------------\n\n    protected override get _static(): EnumerableConstructor<Ordinals, Names> {\n        return MysteryMushroomAppOption\n    }\n\n    public static getValue(value: PossibleValueByEnumerable<MysteryMushroomAppOption>,): MysteryMushroomAppOption {\n        return Enum.getValueOn(this, value,)\n    }\n\n    public static get values(): CollectionHolder<MysteryMushroomAppOption> {\n        return Enum.getValuesOn(this,)\n    }\n\n    public static* [Symbol.iterator](): IterableIterator<MysteryMushroomAppOption> {\n        yield* this.values\n    }\n\n    //endregion -------------------- Enum methods --------------------\n\n}\n\ntype ReferenceCallback = (reference: MysteryMushroom,) => | boolean | NotApplicable\n","import './MysteryMushroomApp.scss'\n\nimport type {AppInterpreterWithTable, SimplifiedTableProperties}   from 'app/interpreter/AppInterpreterWithTable'\nimport type {PossibleDimensionOnCardList, PossibleDimensionOnList} from 'app/interpreter/DimensionOnList'\nimport type {EveryPossibleRouteNames}                              from 'routes/everyRoutes.types'\nimport type {ReactElementOrString}                                 from 'util/react/ReactProperties'\n\nimport {MysteryMushroomAppOption} from 'app/options/MysteryMushroomAppOption'\nimport {unfinishedText}           from 'app/tools/text/UnfinishedText'\nimport {AbstractTableApp}         from 'app/withInterpreter/AbstractTableApp'\nimport {MysteryMushrooms}         from 'core/mysteryMushroom/MysteryMushrooms'\nimport {OtherWordInTheGames}      from 'core/otherWordInTheGame/OtherWordInTheGames'\nimport {gameContentTranslation}   from 'lang/components/translationMethods'\n\n//region -------------------- Import from deconstruction --------------------\n\nconst {MYSTERY_MUSHROOM,} = OtherWordInTheGames\n\n//endregion -------------------- Import from deconstruction --------------------\nexport default class MysteryMushroomApp\n    extends AbstractTableApp<AppInterpreterWithTable<MysteryMushrooms, MysteryMushroomAppOption>> {\n\n    //region -------------------- Create methods --------------------\n\n    protected override _createKey() {\n        return 'mysteryMushroom'\n    }\n\n\n    protected override _createSimpleListRouteName(): EveryPossibleRouteNames {\n        return 'everyMysteryMushroom (list)'\n    }\n\n    protected override _createCardListRouteName(): EveryPossibleRouteNames {\n        return 'everyMysteryMushroom (card)'\n    }\n\n    protected override _createTableRouteName(): EveryPossibleRouteNames {\n        return 'everyMysteryMushroom (table)'\n    }\n\n\n    protected override _createTitleContent(): ReactElementOrString {\n        return gameContentTranslation('mystery mushroom.all', {\n            singularName: MYSTERY_MUSHROOM.singularLowerCaseNameOnReferenceOrNull ?? unfinishedText(MYSTERY_MUSHROOM.singularEnglishName).toLowerCase(),\n            pluralName: MYSTERY_MUSHROOM.pluralLowerCaseNameOnReferenceOrNull ?? unfinishedText(MYSTERY_MUSHROOM.pluralEnglishName).toLowerCase(),\n        },)\n    }\n\n    protected override _createUniqueNameOnSimpleList(enumerable: MysteryMushrooms,): string {\n        return enumerable.uniqueEnglishName\n    }\n\n    protected override _createUniqueNameOnCardList(enumerable: MysteryMushrooms,): string {\n        return enumerable.uniqueEnglishName\n    }\n\n    protected override _createAppOptionInterpreter(): AppInterpreterWithTable<MysteryMushrooms, MysteryMushroomAppOption> {\n        return new class implements AppInterpreterWithTable<MysteryMushrooms, MysteryMushroomAppOption> {\n\n            public get iterable() {\n                return MysteryMushrooms[Symbol.iterator]()\n            }\n\n            //region -------------------- List interpreter --------------------\n\n            public createListDimension(): PossibleDimensionOnList {\n                return {\n                    small: 6,\n                    medium: null,\n                    large: 4,\n                    extraLarge: 3,\n                    extraExtraLarge: 2,\n                }\n            }\n\n            //endregion -------------------- List interpreter --------------------\n            //region -------------------- Card list interpreter --------------------\n\n            public createCardListDimension(): PossibleDimensionOnCardList {\n                return 'list'\n            }\n\n            public createCardListContent(enumerable: MysteryMushrooms,) {\n                const amountOfImages = enumerable.imageFileNames.length\n                const contains2Images = amountOfImages === 2\n\n                return amountOfImages === 0\n                    ? null\n                    : <div className={`image-content-container ${contains2Images ? 'dual' : 'single'}-image-content-container`}>\n                        {[\n                            MysteryMushroomAppOption.WAITING,\n                            MysteryMushroomAppOption.TAUNT,\n                            MysteryMushroomAppOption.PRESSING_DOWN,\n                            MysteryMushroomAppOption.WALK,\n                            MysteryMushroomAppOption.RUNNING,\n                            MysteryMushroomAppOption.SWIMMING,\n                            MysteryMushroomAppOption.JUMP,\n                            MysteryMushroomAppOption.FALLING_AFTER_A_JUMP,\n                            MysteryMushroomAppOption.TURNING,\n                            MysteryMushroomAppOption.CLIMBING,\n                            MysteryMushroomAppOption.GOAL_POLE,\n                        ].map(appOption => appOption.renderImageContent(enumerable, contains2Images,))}\n                    </div>\n            }\n\n            //endregion -------------------- Card list interpreter --------------------\n            //region -------------------- Table interpreter --------------------\n\n            public set callbackToGetEnumerable(value: () => MysteryMushrooms,) {\n                MysteryMushroomAppOption.CALLBACK_TO_GET_ENUMERATION = value\n            }\n\n            public get tableOptions(): readonly MysteryMushroomAppOption[] {\n                return [\n                    MysteryMushroomAppOption.CONDITION_TO_UNLOCK_IT,\n                    MysteryMushroomAppOption.GAME,\n                    MysteryMushroomAppOption.NAME,\n                    MysteryMushroomAppOption.IMAGES_AND_SOUNDS,\n                ]\n            }\n\n            public get tableProperties(): SimplifiedTableProperties {\n                return {\n                    caption: gameContentTranslation('mystery mushroom.all', {\n                        singularName: MYSTERY_MUSHROOM.singularLowerCaseNameOnReferenceOrNull ?? unfinishedText(MYSTERY_MUSHROOM.singularEnglishName).toLowerCase(),\n                        pluralName: MYSTERY_MUSHROOM.pluralLowerCaseNameOnReferenceOrNull ?? unfinishedText(MYSTERY_MUSHROOM.pluralEnglishName).toLowerCase(),\n                    },),\n                }\n            }\n\n\n            public createTableContent(option: MysteryMushroomAppOption,) {\n                return option.renderContent\n            }\n\n            public createTableHeader(option: MysteryMushroomAppOption) {\n                return option.renderTableHeader\n            }\n\n            //endregion -------------------- Table interpreter --------------------\n\n        }()\n    }\n\n    //endregion -------------------- Create methods --------------------\n\n}\n"],"names":["NameComponent","lazy","Image","SimpleSoundComponent","Symbol","iterator","MysteryMushroomAppOption","type","this","callback","renderDiv","callbackToRender","enumeration","value","englishName","_mysteryMushroomType","file","title","map","index","uniqueEnglishName","englishNameInHtml","partialId","images","it","AppOptionWithContentComponent","_createContentOption","CALLBACK_TO_GET_ENUMERATION","__appOptionWithContent","renderContent","_createImageContent","_createSoundContent","AppOptionWithTableComponent","_createTableHeaderOption","__appOptionWithTable","renderTableHeader","POWER_UP_COLLECTED","WAITING","TAUNT","PRESSING_DOWN","WALK","RUNNING","SWIMMING","JUMP","FALLING_AFTER_A_JUMP","ON_GROUND_AFTER_A_JUMP","TURNING","CLIMBING","GOAL_POLE","LOST_A_LIFE","Enum","values","MysteryMushrooms","CONDITION_TO_UNLOCK_IT","reference","conditionToUnlockIt","key","element","GAME","id","games","game","Fragment","name","popoverOrientation","length","ProjectLanguages","CommonOptions","NAME","IMAGES_AND_SOUNDS","_imagesAndSounds","enumerable","flat","subHeaders","_renderSoundContent","_createSound","powerUpCollectedSound","haveASoundEffectWhenCollected","_renderImageContent","_createImage","waitingImage","_createSingleImageAndSoundContainer","tauntImage","tauntSound","haveASoundEffectOnTaunt","pressingDownImage","_createAnimatedImages","walkImages","runningImages","swimmingImages","MysteryMushroomAppOption_Jump","jumpImages","_createSounds","jumpSounds","haveASoundEffectOnJump","fallingAfterAJumpImage","onGroundAfterJumpASound","haveASoundEffectOnGroundAfterJump","turningImage","turningSound","haveASoundEffectOnTurnAfterRun","climbingImages","goalPoleImages","goalPoleSound","haveASoundEffectOnGoalPole","lostALifeSound","haveASoundEffectOnDeath","TextComponent","content","MYSTERY_MUSHROOM","OtherWordInTheGames","MysteryMushroomApp","gameContentTranslation","singularName","singularLowerCaseNameOnReferenceOrNull","unfinishedText","singularEnglishName","toLowerCase","pluralName","pluralLowerCaseNameOnReferenceOrNull","pluralEnglishName","small","medium","large","extraLarge","extraExtraLarge","amountOfImages","imageFileNames","contains2Images","className","appOption","renderImageContent","caption","option","AbstractTableApp"],"sourceRoot":""}