{"version":3,"file":"static/js/795.886bde62.chunk.js","mappings":"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","sources":["core/soundEffect/SMM1And3DSSoundEffectSounds.component.tsx","core/soundEffect/SMM1And3DSOnlySoundEffectSounds.component.tsx","core/soundEffect/SMM2SoundEffectSoundsComponent.tsx","core/soundEffect/SMM2OnlySoundEffectSounds.component.tsx","core/soundEffect/SoundEffectSounds.component.tsx","app/options/SoundEffectAppOption.tsx","app/SoundEffectApp.tsx"],"sourcesContent":["import type {SoundEffectSoundsComponentProperties} from 'core/soundEffect/SoundEffectSounds.component.types'\n\nimport SimpleSoundComponent from 'util/file/sound/component/SimpleSound.component'\n\nexport default function SMM1And3DSSoundEffectSoundsComponent({reference,}: SoundEffectSoundsComponentProperties,) {\n    const englishName = reference.englishName\n    return <div key={`${englishName} (sound effect sounds - SMM1&3DS)`} className=\"soundEffect-sounds-smm1-container\">{\n        reference.sounds_standaloneSmm1.map(it =>\n            <div key={`${englishName} (sound effect sound - SMM1&3DS - ${it.key})`} className=\"soundEffect-sound-container soundEffect-sound-smm1-container col-12 col-lg-6 col-xl-4 col-xxl-3\">\n                <SimpleSoundComponent file={it} title={`${englishName} (${it.key})`}/>\n            </div>)\n    }</div>\n}\n","import type {SoundEffectSoundsComponentProperties} from 'core/soundEffect/SoundEffectSounds.component.types'\n\nimport SMM1And3DSSoundEffectSoundsComponent from 'core/soundEffect/SMM1And3DSSoundEffectSounds.component'\n\nexport default function SMM1And3DSOnlySoundEffectSoundsComponent({reference,}: SoundEffectSoundsComponentProperties,) {\n    if (reference.sounds_standaloneSmm1.length === 0)\n        return null\n    return <div className=\"soundEffect-sounds-container sound-effect-sounds-smm1-only-container\">\n        <SMM1And3DSSoundEffectSoundsComponent reference={reference}/>\n    </div>\n}\n","import type {SoundEffectSoundsComponentProperties} from 'core/soundEffect/SoundEffectSounds.component.types'\n\nimport SimpleSoundComponent from 'util/file/sound/component/SimpleSound.component'\n\nexport default function SMM2SoundEffectSoundsComponent({reference,}: SoundEffectSoundsComponentProperties,) {\n    const englishName = reference.englishName\n    return <div key={`${englishName} (sound effect sounds - SMM2)`} className=\"soundEffect-sounds-smm2-container\">\n        {reference.sounds_smm2.map(it =>\n            <div key={`${englishName} (sound effect sound - SMM2 - ${it.key})`} className=\"soundEffect-sound-container soundEffect-sound-smm2-container col-12 col-lg-6 col-xl-4 col-xxl-3\">\n                <SimpleSoundComponent file={it} title={`${englishName} (${it.key})`}/>\n            </div>)}\n    </div>\n}\n","import type {SoundEffectSoundsComponentProperties} from 'core/soundEffect/SoundEffectSounds.component.types'\n\nimport SMM2SoundEffectSoundsComponent from 'core/soundEffect/SMM2SoundEffectSoundsComponent'\n\nexport default function SMM2OnlySoundEffectSoundsComponent({reference,}: SoundEffectSoundsComponentProperties,) {\n    if (reference.sounds_smm2.length === 0)\n        return null\n    return <div className=\"soundEffect-sounds-container sound-effect-sounds-smm2-only-container\">\n        <SMM2SoundEffectSoundsComponent reference={reference}/>\n    </div>\n}\n","import type {SoundEffectSoundsComponentProperties} from 'core/soundEffect/SoundEffectSounds.component.types'\n\nimport SMM1And3DSSoundEffectSoundsComponent from 'core/soundEffect/SMM1And3DSSoundEffectSounds.component'\nimport SMM2SoundEffectSoundsComponent       from 'core/soundEffect/SMM2SoundEffectSoundsComponent'\n\nexport default function SoundEffectSoundsComponent({reference,}: SoundEffectSoundsComponentProperties,) {\n    const isSMM1Empty = reference.sounds_exclusiveSmm1.length === 0\n    const isSMM2Empty = reference.sounds_smm2.length === 0\n\n    if (isSMM1Empty && isSMM2Empty)\n        return null\n\n    if (isSMM1Empty && !isSMM2Empty)\n        return <div className=\"soundEffect-sounds-container sound-effect-sounds-smm2-only-container\">\n            <SMM2SoundEffectSoundsComponent reference={reference}/>\n        </div>\n    if (!isSMM1Empty && isSMM2Empty)\n        return <div className=\"soundEffect-sounds-container sound-effect-sounds-smm1-only-container\">\n            <SMM1And3DSSoundEffectSoundsComponent reference={reference}/>\n        </div>\n    return <div className=\"soundEffect-sounds-container\">\n        <SMM1And3DSSoundEffectSoundsComponent reference={reference}/>\n        <hr className=\"my-1\"/>\n        <SMM2SoundEffectSoundsComponent reference={reference}/>\n    </div>\n}\n","import type {CompanionEnumSingleton} from '@joookiwi/enumerable'\nimport {CompanionEnum, Enum}         from '@joookiwi/enumerable'\n\nimport type {SoundEffects}        from 'core/soundEffect/SoundEffects'\nimport type {AppOption}           from 'app/options/AppOption'\nimport type {Names, Ordinals}     from 'app/options/SoundEffectAppOption.types'\nimport type {SingleHeaderContent} from 'app/tools/table/SimpleHeader'\n\nimport {CommonOptions}                          from 'app/options/CommonOptions'\nimport UnfinishedText, {unfinishedText}         from 'app/tools/text/UnfinishedText'\nimport {Games}                                  from 'core/game/Games'\nimport SMM1And3DSOnlySoundEffectSoundsComponent from 'core/soundEffect/SMM1And3DSOnlySoundEffectSounds.component'\nimport SMM2OnlySoundEffectSoundsComponent       from 'core/soundEffect/SMM2OnlySoundEffectSounds.component'\nimport SoundEffectComponent                     from 'core/soundEffect/SoundEffect.component'\nimport SoundEffectSoundsComponent               from 'core/soundEffect/SoundEffectSounds.component'\nimport {SoundEffectCategories}                  from 'core/soundEffectCategory/SoundEffectCategories'\n\nexport abstract class SoundEffectAppOption\n    extends Enum<Ordinals, Names>\n    implements AppOption<SoundEffects> {\n\n    //region -------------------- Enum instances --------------------\n\n    public static readonly SMM1_AND_SMM3DS_ICON = new class GameStyleAppOption_SMM1AndSMM3DSIcon extends SoundEffectAppOption {\n\n        protected override _createContentOption(enumeration: SoundEffects,) {\n            return SoundEffectAppOption.renderSMM1And3DSImage(enumeration,)\n        }\n\n        protected override _createTableHeaderOption() {\n            return CommonOptions.get.smm1And3dsGameHeader\n        }\n\n    }('smm1AndSmm3ds-icon',)\n    public static readonly SMM2_ICON =            new class GameStyleAppOption_SMM2Icon extends SoundEffectAppOption {\n\n        protected override _createContentOption(enumeration: SoundEffects,) {\n            return SoundEffectAppOption.renderSMM2Image(enumeration,)\n        }\n\n        protected override _createTableHeaderOption() {\n            return CommonOptions.get.smm2GameHeader\n        }\n\n    }('smm2-icon',)\n    public static readonly NAME =                 new class GameStyleAppOption_Name extends SoundEffectAppOption {\n\n        protected override _createContentOption(enumeration: SoundEffects,) {\n            return CommonOptions.get.getNameContent(enumeration)\n        }\n\n        protected override _createTableHeaderOption() {\n            return CommonOptions.get.nameHeader\n        }\n\n    }('name',)\n    public static readonly CATEGORY =             new class GameStyleAppOption_Category extends SoundEffectAppOption {\n\n        protected override _createContentOption(enumeration: SoundEffects,) {\n            const {reference,} = enumeration\n\n            return CommonOptions.get.getCategoryContent(enumeration, () => SoundEffectCategories.CompanionEnum.get.getValueByName(reference.categoryEnglish,).imageFile,)\n        }\n\n        protected override _createTableHeaderOption() {\n            return CommonOptions.get.categoryHeader\n        }\n\n    }('category',)\n    public static readonly PLAYER_BEHAVIOUR =     new class GameStyleAppOption_PlayerBehaviour extends SoundEffectAppOption {\n\n        protected override _createContentOption(enumeration: SoundEffects,) {\n            return enumeration.reference.playerSoundEffectTriggerContainer.createNewComponent(enumeration.englishName,)\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {key: 'player behaviour', element: unfinishedText('Player behaviour'),}//TODO add Player behaviour\n        }\n\n    }('playerBehaviour',)\n    public static readonly SOUNDS =               new class GameStyleAppOption_Sounds extends SoundEffectAppOption {\n\n        protected override _createContentOption(enumeration: SoundEffects,) {\n            return <SoundEffectSoundsComponent reference={enumeration}/>\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {key: 'sounds', element: <UnfinishedText>Sounds</UnfinishedText>,}//TODO add sounds\n        }\n\n    }('sounds',)\n    public static readonly SOUNDS_IN_SMM1_AND_3DS_ONLY = new class GameStyleAppOption_SoundsInSMM1And3DSOnly extends SoundEffectAppOption {\n\n        protected override _createContentOption(enumeration: SoundEffects,) {\n            return <SMM1And3DSOnlySoundEffectSoundsComponent reference={enumeration}/>\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {key: 'sounds', element: <UnfinishedText>Sounds</UnfinishedText>,}//TODO add sounds\n        }\n\n    }('sounds',)\n    public static readonly SOUNDS_IN_SMM2_ONLY = new class GameStyleAppOption_SoundsInSMM2Only extends SoundEffectAppOption {\n\n        protected override _createContentOption(enumeration: SoundEffects,) {\n            return <SMM2OnlySoundEffectSoundsComponent reference={enumeration}/>\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {key: 'sounds', element: <UnfinishedText>Sounds</UnfinishedText>,}//TODO add sounds\n        }\n\n    }('sounds',)\n\n    //endregion -------------------- Enum instances --------------------\n    //region -------------------- Companion enum --------------------\n\n    public static readonly CompanionEnum: CompanionEnumSingleton<SoundEffectAppOption, typeof SoundEffectAppOption> = class CompanionEnum_SoundEffectAppOption\n        extends CompanionEnum<SoundEffectAppOption, typeof SoundEffectAppOption> {\n\n        //region -------------------- Singleton usage --------------------\n\n        static #instance?: CompanionEnum_SoundEffectAppOption\n\n        private constructor() {\n            super(SoundEffectAppOption,)\n        }\n\n        public static get get() {\n            return this.#instance ??= new CompanionEnum_SoundEffectAppOption()\n        }\n\n        //endregion -------------------- Singleton usage --------------------\n\n    }\n\n    //endregion -------------------- Companion enum --------------------\n    //region -------------------- Fields --------------------\n\n    readonly #associatedClass\n    readonly #additionalClasses\n\n    //endregion -------------------- Fields --------------------\n    //region -------------------- Constructor --------------------\n\n    private constructor(associatedClass: string,) {\n        super()\n        this.#additionalClasses = [this.#associatedClass = associatedClass,] as const\n    }\n\n    //endregion -------------------- Constructor --------------------\n    //region -------------------- Getter methods --------------------\n\n    public get associatedClass(): string {\n        return this.#associatedClass\n    }\n\n    public get additionalClasses(): readonly [string,] {\n        return this.#additionalClasses\n    }\n\n    //endregion -------------------- Getter methods --------------------\n    //region -------------------- Methods --------------------\n\n    //region -------------------- App option - content --------------------\n\n    public static renderSMM1And3DSImage(enumerable: SoundEffects,): ReactElement {\n        const reference = enumerable.reference\n\n        return reference.isInSuperMarioMaker1 ? <SoundEffectComponent reference={enumerable} name={reference} game={Games.SUPER_MARIO_MAKER_1}/> : null\n    }\n\n    public static renderSMM2Image(enumerable: SoundEffects,): ReactElement {\n        const reference = enumerable.reference\n\n        return reference.isInSuperMarioMaker2 ? <SoundEffectComponent reference={enumerable} name={reference} game={Games.SUPER_MARIO_MAKER_2}/> : null\n    }\n\n    protected abstract _createContentOption(enumeration: SoundEffects,): ReactElement\n\n    public renderContent(enumeration: SoundEffects,): readonly [ReactElement,] {\n        return [this._createContentOption(enumeration,),]\n    }\n\n    //endregion -------------------- App option - content --------------------\n    //region -------------------- App option - table --------------------\n\n    protected abstract _createTableHeaderOption(): SingleHeaderContent\n\n    public renderTableHeader(): SingleHeaderContent {\n        return this._createTableHeaderOption()\n    }\n\n    //endregion -------------------- App option - table --------------------\n\n    //endregion -------------------- Methods --------------------\n\n}\n","import './SoundEffectApp.scss'\n\nimport type {SoundEffectProperties}   from 'app/AppProperties.types'\nimport type {AppInterpreterWithTable} from 'app/interpreter/AppInterpreterWithTable'\nimport type {DimensionOnList}         from 'app/interpreter/DimensionOnList'\nimport type {PossibleRouteName}       from 'route/EveryRoutes.types'\n\nimport {SoundEffectAppOption}   from 'app/options/SoundEffectAppOption'\nimport {AbstractTableApp}       from 'app/withInterpreter/AbstractTableApp'\nimport {SoundEffects}           from 'core/soundEffect/SoundEffects'\nimport {gameContentTranslation} from 'lang/components/translationMethods'\nimport {filterGame}             from 'util/utilitiesMethods'\n\nexport default class SoundEffectApp\n    extends AbstractTableApp<SoundEffects, AppInterpreterWithTable<SoundEffects, SoundEffectAppOption>, SoundEffectProperties> {\n\n    //region -------------------- Create methods --------------------\n\n    protected override _createKey() {\n        return 'soundEffect'\n    }\n\n\n    protected override _createSimpleListRouteName(): PossibleRouteName {\n        return 'everySoundEffect (list)'\n    }\n\n    protected override _createCardListRouteName(): PossibleRouteName {\n        return 'everySoundEffect (card)'\n    }\n\n    protected override _createTableRouteName(): PossibleRouteName {\n        return 'everySoundEffect (table)'\n    }\n\n\n    protected override _createTitleContent(): ReactElementOrString {\n        return gameContentTranslation('sound effect.all')\n    }\n\n    protected override _createAppOptionInterpreter() {\n        const $this = this\n\n        return new class SoundEffectAppInterpreter implements AppInterpreterWithTable<SoundEffects, SoundEffectAppOption> {\n\n            public get content() {\n                return filterGame(SoundEffects.CompanionEnum.get.values, $this.props.games,)\n            }\n\n            //region -------------------- List interpreter --------------------\n\n            public createListDimension(): DimensionOnList {\n                return {\n                    default: 1,\n                    small: 3,\n                    medium: 4,\n                    large: 5,\n                    extraLarge: 6,\n                }\n            }\n\n            //endregion -------------------- List interpreter --------------------\n            //region -------------------- Card list interpreter --------------------\n\n            public createCardListDimension() {\n                return this.createListDimension()\n            }\n\n            public createCardListContent(enumerable: SoundEffects,) {\n                return <div>\n                    <div className=\"soundEffect-images-container\">\n                        {SoundEffectAppOption.renderSMM1And3DSImage(enumerable)}\n                        {SoundEffectAppOption.renderSMM2Image(enumerable)}\n                    </div>\n                </div>\n            }\n\n            //endregion -------------------- Card list interpreter --------------------\n            //region -------------------- Table interpreter --------------------\n\n            public readonly tableHeadersColor = 'info' satisfies BootstrapThemeColor\n            public readonly tableColor = 'primary' satisfies BootstrapThemeColor\n            public readonly tableCaption = gameContentTranslation('sound effect.all') satisfies ReactElementOrString\n\n            public get tableOptions(): readonly SoundEffectAppOption[] {\n                const games = $this.props.games\n                const hasSMM1Or3DS = games.hasSMM1Or3DS\n                const hasSMM2 = games.hasSMM2\n\n                const options = [] as SoundEffectAppOption[]\n                if (hasSMM1Or3DS)\n                    options.push(SoundEffectAppOption.SMM1_AND_SMM3DS_ICON,)\n                if (hasSMM2)\n                    options.push(SoundEffectAppOption.SMM2_ICON,)\n                options.push(\n                    SoundEffectAppOption.NAME,\n                    SoundEffectAppOption.CATEGORY,\n                    SoundEffectAppOption.PLAYER_BEHAVIOUR,\n                )\n                if (hasSMM1Or3DS && hasSMM2)\n                    options.push(SoundEffectAppOption.SOUNDS,)\n                else {\n                    if (hasSMM1Or3DS)\n                        options.push(SoundEffectAppOption.SOUNDS_IN_SMM1_AND_3DS_ONLY,)\n                    if (hasSMM2)\n                        options.push(SoundEffectAppOption.SOUNDS_IN_SMM2_ONLY,)\n                }\n                return options\n            }\n\n\n            public getAdditionalClass(option: SoundEffectAppOption,) {\n                return option.additionalClasses\n            }\n\n            public createTableContent(content: SoundEffects, option: SoundEffectAppOption,) {\n                //TODO add content based on the game style parameter\n                return option.renderContent(content,)\n            }\n\n            public createTableHeader(option: SoundEffectAppOption,) {\n                return option.renderTableHeader()\n            }\n\n            //endregion -------------------- Table interpreter --------------------\n\n        }()\n    }\n\n    //endregion -------------------- Create methods --------------------\n\n}\n"],"names":["SMM1And3DSSoundEffectSoundsComponent","_ref","reference","englishName","_jsx","className","children","sounds_standaloneSmm1","map","it","SimpleSoundComponent","file","title","concat","key","SMM1And3DSOnlySoundEffectSoundsComponent","length","SMM2SoundEffectSoundsComponent","sounds_smm2","SMM2OnlySoundEffectSoundsComponent","SoundEffectSoundsComponent","isSMM1Empty","sounds_exclusiveSmm1","isSMM2Empty","_jsxs","_associatedClass","_classPrivateFieldLooseKey","_additionalClasses","SoundEffectAppOption","Enum","constructor","associatedClass","super","Object","defineProperty","writable","value","_classPrivateFieldLooseBase","this","additionalClasses","enumerable","isInSuperMarioMaker1","SoundEffectComponent","name","game","Games","SUPER_MARIO_MAKER_1","isInSuperMarioMaker2","SUPER_MARIO_MAKER_2","renderContent","enumeration","_createContentOption","renderTableHeader","_createTableHeaderOption","SMM1_AND_SMM3DS_ICON","renderSMM1And3DSImage","CommonOptions","get","smm1And3dsGameHeader","SMM2_ICON","renderSMM2Image","smm2GameHeader","NAME","getNameContent","nameHeader","CATEGORY","getCategoryContent","SoundEffectCategories","CompanionEnum","getValueByName","categoryEnglish","imageFile","categoryHeader","PLAYER_BEHAVIOUR","playerSoundEffectTriggerContainer","createNewComponent","element","unfinishedText","SOUNDS","UnfinishedText","SOUNDS_IN_SMM1_AND_3DS_ONLY","SOUNDS_IN_SMM2_ONLY","_instance","_class","CompanionEnum_SoundEffectAppOption","_classPrivateFieldLoo","_classPrivateFieldLoo2","SoundEffectApp","AbstractTableApp","_createKey","_createSimpleListRouteName","_createCardListRouteName","_createTableRouteName","_createTitleContent","gameContentTranslation","_createAppOptionInterpreter","$this","tableHeadersColor","tableColor","tableCaption","content","filterGame","SoundEffects","values","props","games","createListDimension","default","small","medium","large","extraLarge","createCardListDimension","createCardListContent","tableOptions","hasSMM1Or3DS","hasSMM2","options","push","getAdditionalClass","option","createTableContent","createTableHeader"],"sourceRoot":""}