{"version":3,"sources":["app/tools/text/BooleanTextComponent.tsx","app/tools/text/BooleanResultTextComponent.tsx","app/tools/text/YesOrNoResultTextComponent.tsx"],"names":["BooleanTextComponent","boolean","_true","true","_false","false","otherProperties","content","BooleanResultTextComponent","classes","trueValue","trueColor","falseValue","falseColor","YesOrNoResultTextComponent","properties","translation"],"mappings":"2PASe,SAASA,EAAT,GAAkH,IAAnFC,EAAkF,EAAlFA,QAAeC,EAAmE,EAAzEC,KAAoBC,EAAqD,EAA5DC,MAAkBC,EAA0C,iBAC5H,OAAO,cAAC,UAAD,aAAeC,QAASN,EAAUC,EAAQE,GAAYE,M,2KCIlD,SAASE,EAAT,GAAuI,IAAlGP,EAAiG,EAAjGA,QAASQ,EAAwF,EAAxFA,QAAeP,EAAyE,EAA/EC,KAAoBC,EAA2D,EAAlEC,MAAkBC,EAAgD,iBACjJ,EAAgD,iBAATJ,EAAoB,CAACA,EAX1B,gBAWuDA,EAAzF,mBAAOQ,EAAP,KAAkBC,EAAlB,KACA,EAAmD,iBAAVP,EAAqB,CAACA,EAX5B,eAW2DA,EAA9F,mBAAOQ,EAAP,KAAmBC,EAAnB,KAEA,OAAO,cAAC,UAAD,aAAsBJ,QAAO,6BAAOA,QAAP,IAAOA,IAAW,IAAlB,CAAwBR,EAAUU,EAAYE,IAAcZ,QAASA,EAASE,KAAMO,EAAWL,MAAOO,GAAgBN,M,mJCD/I,SAASQ,EAA2BC,GAC/C,OAAO,cAAC,IAAD,UAA8B,SAAAC,GAAW,OAC5C,cAAC,UAAD,aACIb,KAAM,CAACa,EAAY,OAZF,YAajBX,MAAO,CAACW,EAAY,MAZJ,YAaZD","file":"static/js/2.7e8ee57d.chunk.js","sourcesContent":["import type {BooleanTextProperties} from './properties/BooleanTextProperties';\n\nimport TextComponent from './TextComponent';\n\n/**\n * Create a simple {@link TextComponent}\n * with a variable value based on a simple boolean.\n * @reactComponent\n */\nexport default function BooleanTextComponent({boolean, true: _true, false: _false, ...otherProperties}: BooleanTextProperties,) {\n    return <TextComponent content={boolean ? _true : _false} {...otherProperties}/>;\n}\n","import type {BooleanResultTextProperties, TextColor} from './properties/BooleanResultTextProperties';\n\nimport BooleanTextComponent from './BooleanTextComponent';\n\nconst TRUE_DEFAULT_COLOR: TextColor = 'text-success';\nconst FALSE_DEFAULT_COLOR: TextColor = 'text-danger';\n\n/**\n * Create a coloration based on the boolean value.\n *\n * Return a new {@link BooleanTextComponent}\n * with the classes \"text-success\" or \"text-danger\".\n * @reactComponent\n */\nexport default function BooleanResultTextComponent({boolean, classes, true: _true, false: _false, ...otherProperties}: BooleanResultTextProperties,) {\n    const [trueValue, trueColor,] = typeof _true == 'string' ? [_true, TRUE_DEFAULT_COLOR] : _true;\n    const [falseValue, falseColor,] = typeof _false == 'string' ? [_false, FALSE_DEFAULT_COLOR] : _false;\n\n    return <BooleanTextComponent classes={[...(classes ?? []), (boolean ? trueColor : falseColor)]} boolean={boolean} true={trueValue} false={falseValue} {...otherProperties}/>;\n}\n","import './YesOrNoResultTextComponent.scss';\n\nimport type {TextColor}             from './properties/BooleanResultTextProperties';\nimport type {YesOrNoTextProperties} from './properties/YesOrNoTextProperties';\n\nimport BooleanResultTextComponent  from './BooleanResultTextComponent';\nimport ContentTranslationComponent from '../../../lang/components/ContentTranslationComponent';\n\nconst YES_COLOR: TextColor = 'text-yes';\nconst NO_COLOR: TextColor = 'text-no';\n\n/**\n * Return a new {@link BooleanResultTextComponent} with a value based on the translation \"Yes\" or \"No\".\n *\n * @return {@link BooleanResultContainer}\n * @reactComponent\n */\nexport default function YesOrNoResultTextComponent(properties: YesOrNoTextProperties,): JSX.Element {\n    return <ContentTranslationComponent>{translation =>\n        <BooleanResultTextComponent\n            true={[translation('Yes'), YES_COLOR,]}\n            false={[translation('No'), NO_COLOR,]}\n            {...properties}\n        />}</ContentTranslationComponent>;\n}\n"],"sourceRoot":""}