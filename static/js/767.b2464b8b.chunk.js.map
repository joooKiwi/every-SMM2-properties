{"version":3,"file":"static/js/767.b2464b8b.chunk.js","mappings":"oVAsBMA,GAA6BC,EAAAA,EAAAA,OAAK,kBAAM,6BAAN,IAClCC,GAA6BD,EAAAA,EAAAA,OAAK,kBAAM,6BAAN,I,oEAwIrBE,OAAOC,SApInB,IAAeC,EAAtB,0CAkFI,aAAuB,IAAD,wBAClB,eADkB,+HAErB,CApFL,mDA8FI,WAA4D,IAAD,WACvD,4BAAOC,KAAP,2BAAsC,IAAIC,EAAAA,GAA8B,kBAAM,EAAKC,qBAAqBH,EAAmBI,8BAAnD,GAC3E,GAhGL,yBAkGI,WACI,OAAOH,KAAKI,uBAAuBC,aACtC,GApGL,gCA2GI,WAAwD,IAAD,WACnD,4BAAOL,KAAP,2BAAoC,IAAIM,EAAAA,GAA4B,kBAAM,EAAKC,0BAAX,GACvE,GA7GL,6BA+GI,WACI,OAAOP,KAAKQ,qBAAqBC,iBACpC,GAjHL,mBAwHI,WACI,OAAOV,CACV,IA1HL,uBA4HI,SAAuBW,GACnB,OAAOC,EAAAA,GAAAA,WAAgBX,KAAMU,EAChC,GA9HL,kBAgII,WACI,OAAOC,EAAAA,GAAAA,YAAiBX,KAC3B,GAlIL,aAoII,WACI,OAAOA,KAAKY,OAAOf,OAAOC,WAC7B,KAtIL,GACYa,EAAAA,IADUZ,EAMKc,MAAoB,4JAEvC,SAAwCC,GACpC,OAAOA,EAAYC,qBACtB,GAJsC,sCAMvC,WACI,MAAO,CAACC,IAAK,QAASC,SAASC,EAAAA,EAAAA,IAAmB,SACrD,KARsC,EAAG,CAAyCnB,IANrEA,EAiBKoB,KAAoB,4JAEvC,SAAwCL,GACpC,OAAOM,EAAAA,EAAAA,IAAAA,eAAiCN,EAC3C,GAJsC,sCAMvC,WACI,OAAOM,EAAAA,EAAAA,IAAAA,UACV,KARsC,EAAG,CAAuCrB,IAjBnEA,EA4BKsB,KAAoB,4JAEvC,YAAoE,IAA3BC,EAA0B,EAA1BA,UACrC,MAAO,EACH,SAAC1B,EAAD,CAA4B2B,QAASD,EAAUE,wBAC/C,SAAC5B,EAAD,CAA4B2B,QAASD,EAAUG,6BAC/C,SAAC7B,EAAD,CAA4B2B,QAASD,EAAUI,uBAEtD,GARsC,sCAUvC,WACI,OAAON,EAAAA,EAAAA,IAAAA,sBACV,KAZsC,EAAG,CAAuCrB,IA5BnEA,EA2CK4B,kBAAoB,4JAEvC,YAAoE,IAA3BL,EAA0B,EAA1BA,UACrC,OAAO,SAAC5B,EAAD,CAAsBkC,UAAWN,GAC3C,GAJsC,sCAMvC,WACI,MAAO,CACHN,IAAK,kBACLC,SAAS,iBAAKY,UAAU,qCAAf,UAAqDC,EAAAA,EAAAA,OAAAA,uBAAoC,GAAQC,EAAAA,EAAAA,MAAAA,yBAC1GC,SAASC,EAAAA,EAAAA,IAAuB,6BAA8B,CAC1DC,MAAO,YACPC,OAAQC,EAAAA,EAAAA,gBAAAA,IAAqCN,EAAAA,EAAAA,OAAAA,WAA0BO,gBAGlF,KAfsC,EAAG,CAAkDtC,IA3C9EA,EA2EJI,iCAAAA,E,kCCrFGmC,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAGjB,WAAmBC,GAAwB,IAAD,yBACtC,cAAMA,IACDC,MAAQ,CACTC,cAAeC,EAAAA,EAAAA,OAHmB,CAKzC,C,yCAID,WACI,MAAO,WACV,oCAED,WACI,OAAOT,EAAAA,EAAAA,IAAuB,oBACjC,4CAED,WACI,OAAO,iFAEH,WACI,OAAOU,EAAAA,EAAW9C,OAAOC,WAC5B,GAJE,iCAQH,WACI,MAAO,CACH8C,MAAO,EACPC,OAAQ,EACRC,MAAO,KAEd,GAdE,qCAmBH,WACI,MAAO,MACV,GArBE,mCAuBH,SAA6BC,GACzB,OAAO,gBAAKlB,UAAU,YAAYmB,GAAE,oBAAeD,EAAWE,mBAAvD,SACFF,EAAWhC,uBAEnB,GA3BE,mCA+BH,SAAmCL,GAC/BX,EAAmBI,4BAA8BO,CACpD,GAjCE,wBAmCH,WACI,MAAO,CACHX,EAAmBc,MACnBd,EAAmBoB,KACnBpB,EAAmBsB,KACnBtB,EAAmB4B,kBAE1B,GA1CE,2BA4CH,WACI,MAAO,CACHuB,SAASjB,EAAAA,EAAAA,IAAuB,qBAEvC,GAhDE,gCAmDH,SAA0BkB,GACtB,OAAOA,EAAO9C,aACjB,GArDE,+BAuDH,SAAyB8C,GACrB,OAAOA,EAAO1C,iBACjB,KAzDE,KA4DV,K,EAjFgB6B,CACTc,EAAAA,E,wKCENC,GAAgB1D,EAAAA,EAAAA,OAAK,kBAAM,sCAAN,IACrB2D,GAAgB3D,EAAAA,EAAAA,OAAK,kBAAM,sCAAN,IAM3B,kMACayB,EAAb,WAMI,cAAuB,oWACtB,CAPL,uCAyBI,WAA8C,IAAD,IACzC,4BAAOpB,KAAP,2BAA4B,CAACgB,IAAK,OAAQC,SAASC,EAAAA,EAAAA,IAAmB,QACzE,GA3BL,4BA6BI,SAAsBJ,GAClB,OAAO,SAACwC,EAAD,CAAeN,GAAG,OAAOO,KAAMzC,EAAYQ,UAAWkC,mBAAmB,QACnF,GA/BL,0BAkCI,WAAkD,IAAD,IAC7C,4BAAOxD,KAAP,2BAAgC,CAACgB,IAAK,WAAYC,SAASgB,EAAAA,EAAAA,IAAuB,YACrF,GApCL,gCAsCI,SAA0BnB,EAA+C2C,GACrE,IAAMF,EAAOzC,EAAYQ,UAAUoC,sBACnC,GAAIH,IAASI,EAAAA,EAAAA,IACT,OAAO,KAEX,IAAMC,EAAoBH,IACpBI,EAAcN,EAAKO,QACnBC,EAAW,yBAAqBF,EAArB,KACjB,MAAgC,iBAArBD,GACA,SAACP,EAAD,CAAoCW,OAAQJ,EAAmBK,aAAY,UAAKV,EAAKO,QAAV,aAA3E,UAAeC,EAAf,YACJ,SAACT,EAAD,CAA2CN,GAAE,wBAAmBlC,EAAYmC,mBAAqBM,KAAMA,EAAMC,mBAAmB,QAAhI,UAAuBO,EAAvB,SACV,GAjDL,sBAoDI,WAA8C,IAAD,IACzC,4BAAO/D,KAAP,2BAA4B,CAACgB,IAAK,OAAQC,SAASgB,EAAAA,EAAAA,IAAuB,QAC7E,GAtDL,2BAwDI,WAAgF,IAAD,uBAAvDiC,EAAuD,yBAAvDA,EAAuD,gBAC3E,MAAO,CACHlD,IAAK,OAAQC,SAASgB,EAAAA,EAAAA,IAAuB,QAC7CiC,WAAYA,EAEnB,GA7DL,kCAgEI,WAA0D,IAAD,IACrD,4BAAOlE,KAAP,2BAAwCA,KAAKmE,cACzC,CAACnD,IAAK,uBAAwBoD,IAAKC,EAAAA,EAAAA,oBAAAA,YAAuCC,KAAMD,EAAAA,EAAAA,oBAAAA,WAChF,CAACrD,IAAK,4BAA6BoD,IAAKC,EAAAA,EAAAA,mCAAAA,YAAsDC,KAAMD,EAAAA,EAAAA,mCAAAA,WACpG,CAACrD,IAAK,uBAAwBoD,IAAKC,EAAAA,EAAAA,oBAAAA,YAAuCC,KAAMD,EAAAA,EAAAA,oBAAAA,WAEvF,GAtEL,mCAwEI,WAA2D,IAAD,IACtD,4BAAOrE,KAAP,2BAAyCA,KAAKmE,cAAL,MAAAnE,MAAA,OAAsBA,KAAKuE,WACvE,GA1EL,qBA4EI,WAA8E,IAAD,IACzE,4BAAOvE,KAAP,2BAA2B,CACvB,CAACgB,IAAK,6BAA8BoD,IAAKC,EAAAA,EAAAA,oBAAAA,YAAuCC,KAAMD,EAAAA,EAAAA,oBAAAA,WACtF,CAACrD,IAAK,uBAAwBoD,IAAKC,EAAAA,EAAAA,oBAAAA,YAAuCC,KAAMD,EAAAA,EAAAA,oBAAAA,WAEvF,GAjFL,4BAyFI,SAAsBvD,GAClB,IAAMQ,EAAYR,EAAYQ,UACxBkD,EAAWlD,EAAUE,qBACrBiD,EAAanD,EAAUG,0BACvBiD,EAAWpD,EAAUI,qBAE3B,OAAO,iBAA8DsB,GAAE,UAAKlC,EAAYmC,kBAAjB,gCAAkEpB,UAAU,8BAA5I,UACF2C,EAAWH,EAAAA,EAAAA,oBAAAA,sBAAkD,KAC7DI,EAAaJ,EAAAA,EAAAA,mCAAAA,sBAAiE,KAC9EK,EAAWL,EAAAA,EAAAA,oBAAAA,sBAAkD,OAH3D,UAAavD,EAAY+C,YAAzB,0BAKV,GApGL,6BAuGI,SAAuB/C,GACnB,IAAMQ,EAAYR,EAAYQ,UAE9B,OAAO,iBAA+D0B,GAAE,UAAKlC,EAAYmC,kBAAjB,iCAAmEpB,UAAU,+BAA9I,UACFP,EAAUqD,iBAAkB,SAACtB,EAAD,CAAOW,OAAM,WAAMY,EAAAA,EAAN,4BAA2CX,aAAa,iBAAmB,KACpH3C,EAAUuD,gBAAiB,SAACxB,EAAD,CAAOW,OAAM,WAAMY,EAAAA,EAAN,2BAA0CX,aAAa,gBAAkB,OAF/G,UAAanD,EAAY+C,YAAzB,2BAIV,IA9GL,gBASI,WAAyB,IAAD,IACpB,4BAAO7D,KAAP,2BAA0B,IAAIA,IACjC,KAXL,2BAAaoB,EAAAA,EAAAA,CAAAA,UAAAA,EAAAA,WAAAA,G","sources":["app/options/GameStyleAppOption.tsx","app/GameStyleApp.tsx","app/options/CommonOptions.tsx"],"sourcesContent":["import type {CollectionHolder, EnumerableConstructor, PossibleValueByEnumerable} from '@joookiwi/enumerable/dist/types'\nimport {Enum}                                                                    from '@joookiwi/enumerable'\nimport {lazy}                                                                    from 'react'\n\nimport type {Names, Ordinals}                                  from 'app/options/GameStyleAppOption.types'\nimport type {AppOptionWithContent, PossibleRenderReactElement} from 'app/options/component/AppOptionWithContent'\nimport type {AppOptionWithTable}                               from 'app/options/component/AppOptionWithTable'\nimport type {SingleHeaderContent}                              from 'app/tools/table/SimpleHeader'\nimport type {GameStyles}                                       from 'core/gameStyle/GameStyles'\nimport type {ReactElement}                                     from 'util/react/ReactProperties'\nimport type {NullOr}                                           from 'util/types/nullable'\n\nimport {CommonOptions}                              from 'app/options/CommonOptions'\nimport {AppOptionWithContentComponent}              from 'app/options/component/AppOptionWithContent.component'\nimport {AppOptionWithTableComponent}                from 'app/options/component/AppOptionWithTable.component'\nimport {Themes}                                     from 'core/theme/Themes'\nimport {Times}                                      from 'core/time/Times'\nimport {ProjectLanguages}                           from 'lang/ProjectLanguages'\nimport {contentTranslation, gameContentTranslation} from 'lang/components/translationMethods'\n\n//region -------------------- dynamic imports --------------------\n\nconst NightEffectComponent =       lazy(() => import('core/nightEffect/NightEffect.component'))\nconst YesOrNoResultTextComponent = lazy(() => import('app/tools/text/YesOrNoResultTextComponent'))\n\n//endregion -------------------- dynamic imports --------------------\n\nexport abstract class GameStyleAppOption\n    extends Enum<Ordinals, Names>\n    implements AppOptionWithContent, AppOptionWithTable {\n\n    //region -------------------- Enum instances --------------------\n\n    public static readonly IMAGE =             new class GameStyleAppOption_Images extends GameStyleAppOption {\n\n        protected override _createContentOption(enumeration: GameStyles,) {\n            return enumeration.renderSingleComponent\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {key: 'image', element: contentTranslation('Image'),}\n        }\n\n    }()\n    public static readonly NAME =              new class GameStyleAppOption_Name extends GameStyleAppOption {\n\n        protected override _createContentOption(enumeration: GameStyles,) {\n            return CommonOptions.get.getNameContent(enumeration)\n        }\n\n        protected override _createTableHeaderOption() {\n            return CommonOptions.get.nameHeader\n        }\n\n    }()\n    public static readonly GAME =              new class GameStyleAppOption_Game extends GameStyleAppOption {\n\n        protected override _createContentOption({reference,}: GameStyles,) {\n            return [\n                <YesOrNoResultTextComponent boolean={reference.isInSuperMarioMaker1}/>,\n                <YesOrNoResultTextComponent boolean={reference.isInSuperMarioMakerFor3DS}/>,\n                <YesOrNoResultTextComponent boolean={reference.isInSuperMarioMaker2}/>,\n            ]\n        }\n\n        protected override _createTableHeaderOption() {\n            return CommonOptions.get.gameHeaderWithAllGames\n        }\n\n    }()\n    public static readonly NIGHT_DESERT_WIND = new class GameStyleAppOption_NightDesertWind extends GameStyleAppOption {\n\n        protected override _createContentOption({reference,}: GameStyles,) {\n            return <NightEffectComponent gameStyle={reference}/>\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {\n                key: 'nightDesertWind',\n                element: <div className=\"night-desert-wind-effect-container\">{Themes.DESERT.renderSingleComponent(false)}{Times.NIGHT.renderSingleComponent}</div>,\n                tooltip: gameContentTranslation('Wind effect (night desert)', {\n                    night: '--night--',//TODO add night reference\n                    desert: ProjectLanguages.currentLanguage.get(Themes.DESERT.reference)!.toLowerCase(),\n                },),\n            }\n        }\n\n    }()\n\n    //endregion -------------------- Enum instances --------------------\n    //region -------------------- Enum fields --------------------\n\n    static [index: number]: GameStyleAppOption\n\n    //endregion -------------------- Enum fields --------------------\n    //region -------------------- Fields --------------------\n\n    /**\n     * The callback to get the enumeration based for each option.\n     *\n     * @note It should only be set by {@link GameStyleAppOption} and get by {@link EntityAppOption}.\n     */\n    public static CALLBACK_TO_GET_ENUMERATION: () => GameStyles\n\n    #appOptionWithContent?: AppOptionWithContent\n    #appOptionWithTable?: AppOptionWithTable\n\n    //endregion -------------------- Fields --------------------\n\n    private constructor() {\n        super()\n    }\n\n    //region -------------------- Getter methods --------------------\n    //endregion -------------------- Getter methods --------------------\n    //region -------------------- Methods --------------------\n\n    //region -------------------- App option - content --------------------\n\n    protected abstract _createContentOption(enumeration: GameStyles,): PossibleRenderReactElement\n\n    private get __appOptionWithContent(): AppOptionWithContent {\n        return this.#appOptionWithContent ??= new AppOptionWithContentComponent(() => this._createContentOption(GameStyleAppOption.CALLBACK_TO_GET_ENUMERATION()),)\n    }\n\n    public get renderContent(): readonly ReactElement[] {\n        return this.__appOptionWithContent.renderContent\n    }\n\n    //endregion -------------------- App option - content --------------------\n    //region -------------------- App option - table --------------------\n\n    protected abstract _createTableHeaderOption(): SingleHeaderContent\n\n    private get __appOptionWithTable(): AppOptionWithTable {\n        return this.#appOptionWithTable ??= new AppOptionWithTableComponent(() => this._createTableHeaderOption(),)\n    }\n\n    public get renderTableHeader(): NullOr<SingleHeaderContent> {\n        return this.__appOptionWithTable.renderTableHeader\n    }\n\n    //endregion -------------------- App option - table --------------------\n\n    //endregion -------------------- Methods --------------------\n    //region -------------------- Enum methods --------------------\n\n    protected override get _static(): EnumerableConstructor<Ordinals, Names> {\n        return GameStyleAppOption\n    }\n\n    public static getValue(value: PossibleValueByEnumerable<GameStyleAppOption>,): GameStyleAppOption {\n        return Enum.getValueOn(this, value,)\n    }\n\n    public static get values(): CollectionHolder<GameStyleAppOption> {\n        return Enum.getValuesOn(this)\n    }\n\n    public static [Symbol.iterator]() {\n        return this.values[Symbol.iterator]()\n    }\n\n    //endregion -------------------- Enum methods --------------------\n\n}\n","import './GameStyleApp.scss'\n\nimport type {AppProperties}                                        from 'app/AppProperties.types'\nimport type {GameStyleAppStates}                                   from 'app/AppStates.types'\nimport type {AppInterpreterWithTable, SimplifiedTableProperties}   from 'app/interpreter/AppInterpreterWithTable'\nimport type {PossibleDimensionOnCardList, PossibleDimensionOnList} from 'app/interpreter/DimensionOnList'\nimport type {ReactElementOrString}                                 from 'util/react/ReactProperties'\n\nimport {GameStyleAppOption}     from 'app/options/GameStyleAppOption'\nimport {AbstractTableApp}       from 'app/withInterpreter/AbstractTableApp'\nimport {ViewDisplays}           from 'app/withInterpreter/ViewDisplays'\nimport {GameStyles}             from 'core/gameStyle/GameStyles'\nimport {gameContentTranslation} from 'lang/components/translationMethods'\n\n/**\n * @reactComponent\n */\nexport default class GameStyleApp\n    extends AbstractTableApp<AppInterpreterWithTable<GameStyles, GameStyleAppOption>, AppProperties, GameStyleAppStates> {\n\n    public constructor(props: AppProperties,) {\n        super(props,)\n        this.state = {\n            typeDisplayed: ViewDisplays.TABLE,\n        }\n    }\n\n    //region -------------------- Create methods --------------------\n\n    protected override _createKey(): string {\n        return 'gameStyle'\n    }\n\n    protected override _createTitleContent(): ReactElementOrString {\n        return gameContentTranslation('Every game styles')\n    }\n\n    protected override _createAppOptionInterpreter(): AppInterpreterWithTable<GameStyles, GameStyleAppOption> {\n        return new class implements AppInterpreterWithTable<GameStyles, GameStyleAppOption> {\n\n            public get iterable() {\n                return GameStyles[Symbol.iterator]()\n            }\n\n            //region -------------------- List interpreter --------------------\n\n            public createListDimension(): PossibleDimensionOnList {\n                return {\n                    small: 6,\n                    medium: 4,\n                    large: null,\n                }\n            }\n\n            //endregion -------------------- List interpreter --------------------\n            //region -------------------- Card list interpreter --------------------\n\n            public createCardListDimension(): PossibleDimensionOnCardList {\n                return 'list'\n            }\n\n            public createCardListContent(enumerable: GameStyles,) {\n                return <div className=\"card-body\" id={`gameStyle-${enumerable.englishNameInHtml}`}>\n                    {enumerable.renderSingleComponent}\n                </div>\n            }\n\n            //endregion -------------------- Card list interpreter --------------------\n\n            public set callbackToGetEnumerable(value: () => GameStyles,) {\n                GameStyleAppOption.CALLBACK_TO_GET_ENUMERATION = value\n            }\n\n            public get tableOptions(): readonly GameStyleAppOption[] {\n                return [\n                    GameStyleAppOption.IMAGE,\n                    GameStyleAppOption.NAME,\n                    GameStyleAppOption.GAME,\n                    GameStyleAppOption.NIGHT_DESERT_WIND,\n                ]\n            }\n\n            public get tableProperties(): SimplifiedTableProperties {\n                return {\n                    caption: gameContentTranslation('Every game styles'),\n                }\n            }\n\n\n            public createTableContent(option: GameStyleAppOption,) {\n                return option.renderContent\n            }\n\n            public createTableHeader(option: GameStyleAppOption,) {\n                return option.renderTableHeader\n            }\n\n        }()\n    }\n\n    //endregion -------------------- Create methods --------------------\n\n}\n","import type {Enum} from '@joookiwi/enumerable/dist/types'\nimport {lazy}      from 'react'\n\nimport type {SingleHeaderContent, SingleHeadersContent} from 'app/tools/table/SimpleHeader'\nimport type {ClassWithEnglishName}                      from 'core/ClassWithEnglishName'\nimport type {ClassWithReference}                        from 'core/ClassWithReference'\nimport type {ClassInAnySuperMarioMakerGame}             from 'core/game/ClassInAnySuperMarioMakerGame'\nimport type {Themes}                                    from 'core/theme/Themes'\nimport type {Name}                                      from 'lang/name/Name'\nimport type {NameTrait}                                 from 'lang/name/NameTrait'\nimport type {NameTraitFromACategory}                    from 'lang/name/NameTraitFromACategory'\nimport type {ReactElement}                              from 'util/react/ReactProperties'\n\nimport {BASE_PATH}                                  from 'variables'\nimport {Games}                                      from 'core/game/Games'\nimport {contentTranslation, gameContentTranslation} from 'lang/components/translationMethods'\nimport {EmptyStringName}                            from 'lang/name/EmptyStringName'\n\n//region -------------------- dynamic imports --------------------\n\nconst Image =         lazy(() => import('app/tools/images/Image'))\nconst NameComponent = lazy(() => import('lang/name/component/Name.component'))\n\n//endregion -------------------- dynamic imports --------------------\n\n/**\n * @singleton\n */\nexport class CommonOptions {\n\n    //region -------------------- Singleton usage --------------------\n\n    static #instance?: CommonOptions\n\n    private constructor() {\n    }\n\n    public static get get() {\n        return this.#instance ??= new this()\n    }\n\n    //endregion -------------------- Singleton usage --------------------\n    //region -------------------- Fields --------------------\n\n    #nameHeader?: SingleHeaderContent\n    #gameHeader?: SingleHeaderContent\n    #gameHeaderWithAllGames?: SingleHeaderContent\n    #gameHeaderWithMainGames?: SingleHeaderContent\n    #mainGames?: readonly [SingleHeaderContent, SingleHeaderContent,]\n    #categoryHeader?: SingleHeaderContent\n\n    //endregion -------------------- Fields --------------------\n\n    public get nameHeader(): SingleHeaderContent {\n        return this.#nameHeader ??= {key: 'name', element: contentTranslation('Name'),}\n    }\n\n    public getNameContent(enumeration: EnumerationWithReference,): ReactElement {\n        return <NameComponent id=\"name\" name={enumeration.reference} popoverOrientation=\"left\"/>\n    }\n\n\n    public get categoryHeader(): SingleHeaderContent {\n        return this.#categoryHeader ??= {key: 'category', element: gameContentTranslation('Category'),}\n    }\n\n    public getCategoryContent(enumeration: EnumerationWithCategoryReference, imagePath_or_nameCallback: () => | string | Name<string>,): ReactElement {\n        const name = enumeration.reference.categoryNameContainer\n        if (name === EmptyStringName.get)\n            return null\n\n        const imagePath_or_name = imagePath_or_nameCallback()\n        const englishName = name.english\n        const startingKey = `category name (${englishName})`\n        if (typeof imagePath_or_name == 'string')\n            return <Image key={`${startingKey} image`} source={imagePath_or_name} fallbackName={`${name.english} - image`}/>\n        return <NameComponent key={`${startingKey} name`} id={`category-name-${enumeration.englishNameInHtml}`} name={name} popoverOrientation=\"left\"/>\n    }\n\n\n    public get gameHeader(): SingleHeaderContent {\n        return this.#gameHeader ??= {key: 'game', element: gameContentTranslation('Game'),}\n    }\n\n    public getGameHeader(...subHeaders: SingleHeadersContent): SingleHeaderContent {\n        return {\n            key: 'game', element: gameContentTranslation('Game'),\n            subHeaders: subHeaders,\n        }\n    }\n\n    /**@deprecated Relocate the games in the name content */\n    public get gameHeaderWithAllGames(): SingleHeaderContent {\n        return this.#gameHeaderWithAllGames ??= this.getGameHeader(\n            {key: 'isInSuperMarioMaker1', alt: Games.SUPER_MARIO_MAKER_1.englishName, path: Games.SUPER_MARIO_MAKER_1.imagePath,},\n            {key: 'isInSuperMarioMakerFor3DS', alt: Games.SUPER_MARIO_MAKER_FOR_NINTENDO_3DS.englishName, path: Games.SUPER_MARIO_MAKER_FOR_NINTENDO_3DS.imagePath,},\n            {key: 'isInSuperMarioMaker2', alt: Games.SUPER_MARIO_MAKER_2.englishName, path: Games.SUPER_MARIO_MAKER_2.imagePath,},\n        )\n    }\n\n    public get gameHeaderWithMainGames(): SingleHeaderContent {\n        return this.#gameHeaderWithMainGames ??= this.getGameHeader(...this.mainGames)\n    }\n\n    public get mainGames(): readonly [SingleHeaderContent, SingleHeaderContent,] {\n        return this.#mainGames ??= [\n            {key: 'isInSuperMarioMaker1And3DS', alt: Games.SUPER_MARIO_MAKER_1.englishName, path: Games.SUPER_MARIO_MAKER_1.imagePath,},//TODO create a animated image for both games (SMM1 & SMM3DS)\n            {key: 'isInSuperMarioMaker2', alt: Games.SUPER_MARIO_MAKER_2.englishName, path: Games.SUPER_MARIO_MAKER_2.imagePath,},\n        ]\n    }\n\n    /**\n     * Get a {@link HTMLDivElement} containing each images (if true)\n     * of the {@link Games} contained in the {@link Enum} {@link ClassWithReference reference}.\n     *\n     * @param enumeration The enumerable to retrieve the {@link Games} properties & {@link ClassWithEnglishName english name}.\n     */\n    public getGameContent(enumeration: EnumerationWithInSuperMarioMakerGameReference,): ReactElement {\n        const reference = enumeration.reference\n        const isInSMM1 = reference.isInSuperMarioMaker1\n        const isInSMM3DS = reference.isInSuperMarioMakerFor3DS\n        const isInSMM2 = reference.isInSuperMarioMaker2\n\n        return <div key={`${enumeration.englishName} (game content images)`} id={`${enumeration.englishNameInHtml}-gameContentImages-container`} className=\"gameContentImages-container\">\n            {isInSMM1 ? Games.SUPER_MARIO_MAKER_1.renderSingleComponent : null}\n            {isInSMM3DS ? Games.SUPER_MARIO_MAKER_FOR_NINTENDO_3DS.renderSingleComponent : null}\n            {isInSMM2 ? Games.SUPER_MARIO_MAKER_2.renderSingleComponent : null}\n        </div>\n    }\n\n\n    public getThemeContent(enumeration: Themes,): ReactElement {\n        const reference = enumeration.reference\n\n        return <div key={`${enumeration.englishName} (theme content images)`} id={`${enumeration.englishNameInHtml}-themeContentImages-container`} className=\"themeContentImages-container\">\n            {reference.isInCourseTheme ? <Image source={`/${BASE_PATH}/theme/Course theme.tiff`} fallbackName=\"Course theme\"/> : null}\n            {reference.isInWorldTheme ? <Image source={`/${BASE_PATH}/theme/World theme.tiff`} fallbackName=\"World theme\"/> : null}\n        </div>\n    }\n\n}\n\ntype EnumerationWithReference = Enum<any, any> & ClassWithEnglishName<string> & ClassWithReference<Name<string>>\ntype EnumerationWithCategoryReference = Enum<any, any> & ClassWithEnglishName<string> & ClassWithReference<NameTraitFromACategory<string, NameTrait<string>>>\ntype EnumerationWithInSuperMarioMakerGameReference = Enum<any, any> & ClassWithEnglishName<string> & ClassWithReference<ClassInAnySuperMarioMakerGame>\n"],"names":["NightEffectComponent","lazy","YesOrNoResultTextComponent","Symbol","iterator","GameStyleAppOption","this","AppOptionWithContentComponent","_createContentOption","CALLBACK_TO_GET_ENUMERATION","__appOptionWithContent","renderContent","AppOptionWithTableComponent","_createTableHeaderOption","__appOptionWithTable","renderTableHeader","value","Enum","values","IMAGE","enumeration","renderSingleComponent","key","element","contentTranslation","NAME","CommonOptions","GAME","reference","boolean","isInSuperMarioMaker1","isInSuperMarioMakerFor3DS","isInSuperMarioMaker2","NIGHT_DESERT_WIND","gameStyle","className","Themes","Times","tooltip","gameContentTranslation","night","desert","ProjectLanguages","toLowerCase","GameStyleApp","props","state","typeDisplayed","ViewDisplays","GameStyles","small","medium","large","enumerable","id","englishNameInHtml","caption","option","AbstractTableApp","Image","NameComponent","name","popoverOrientation","imagePath_or_nameCallback","categoryNameContainer","EmptyStringName","imagePath_or_name","englishName","english","startingKey","source","fallbackName","subHeaders","getGameHeader","alt","Games","path","mainGames","isInSMM1","isInSMM3DS","isInSMM2","isInCourseTheme","BASE_PATH","isInWorldTheme"],"sourceRoot":""}