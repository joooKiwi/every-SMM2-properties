{"version":3,"file":"static/js/767.5e0c60e9.chunk.js","mappings":"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","sources":["app/options/GameStyleAppOption.tsx","app/GameStyleApp.tsx"],"sourcesContent":["import type {CollectionHolder, EnumerableConstructor, PossibleValueByEnumerable} from '@joookiwi/enumerable/dist/types'\nimport {Enum}                                                                    from '@joookiwi/enumerable'\nimport {lazy}                                                                    from 'react'\n\nimport type {Names, Ordinals}                                  from 'app/options/GameStyleAppOption.types'\nimport type {AppOptionWithContent, PossibleRenderReactElement} from 'app/options/component/AppOptionWithContent'\nimport type {AppOptionWithTable}                               from 'app/options/component/AppOptionWithTable'\nimport type {SingleHeaderContent}                              from 'app/tools/table/SimpleHeader'\nimport type {GameStyles}                                       from 'core/gameStyle/GameStyles'\nimport type {ReactElement}                                     from 'util/react/ReactProperties'\nimport type {NullOr}                                           from 'util/types/nullable'\n\nimport {CommonOptions}                              from 'app/options/CommonOptions'\nimport {AppOptionWithContentComponent}              from 'app/options/component/AppOptionWithContent.component'\nimport {AppOptionWithTableComponent}                from 'app/options/component/AppOptionWithTable.component'\nimport {unfinishedText}                             from 'app/tools/text/UnfinishedText'\nimport {Themes}                                     from 'core/theme/Themes'\nimport {Times}                                      from 'core/time/Times'\nimport {ProjectLanguages}                           from 'lang/ProjectLanguages'\nimport {contentTranslation, gameContentTranslation} from 'lang/components/translationMethods'\n\n//region -------------------- dynamic imports --------------------\n\nconst NightEffectComponent =       lazy(() => import('core/nightEffect/NightEffect.component'))\nconst YesOrNoResultTextComponent = lazy(() => import('app/tools/text/YesOrNoResultTextComponent'))\n\n//endregion -------------------- dynamic imports --------------------\n\nexport abstract class GameStyleAppOption\n    extends Enum<Ordinals, Names>\n    implements AppOptionWithContent, AppOptionWithTable {\n\n    //region -------------------- Enum instances --------------------\n\n    public static readonly IMAGE =             new class GameStyleAppOption_Images extends GameStyleAppOption {\n\n        protected override _createContentOption(enumeration: GameStyles,) {\n            return enumeration.renderSingleComponent\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {key: 'image', element: contentTranslation('Image'),}\n        }\n\n    }()\n    public static readonly NAME =              new class GameStyleAppOption_Name extends GameStyleAppOption {\n\n        protected override _createContentOption(enumeration: GameStyles,) {\n            return CommonOptions.get.getNameContent(enumeration)\n        }\n\n        protected override _createTableHeaderOption() {\n            return CommonOptions.get.nameHeader\n        }\n\n    }()\n    public static readonly GAME =              new class GameStyleAppOption_Game extends GameStyleAppOption {\n\n        protected override _createContentOption({reference,}: GameStyles,) {\n            return [\n                <YesOrNoResultTextComponent boolean={reference.isInSuperMarioMaker1}/>,\n                <YesOrNoResultTextComponent boolean={reference.isInSuperMarioMakerFor3DS}/>,\n                <YesOrNoResultTextComponent boolean={reference.isInSuperMarioMaker2}/>,\n            ]\n        }\n\n        protected override _createTableHeaderOption() {\n            return CommonOptions.get.gameHeaderWithAllGames\n        }\n\n    }()\n    public static readonly NIGHT_DESERT_WIND = new class GameStyleAppOption_NightDesertWind extends GameStyleAppOption {\n\n        protected override _createContentOption({reference,}: GameStyles,) {\n            return <NightEffectComponent gameStyle={reference}/>\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {\n                key: 'nightDesertWind',\n                element: <div className=\"night-desert-wind-effect-container\">{Themes.DESERT.renderSingleComponent(false)}{Times.NIGHT.renderSingleComponent}</div>,\n                tooltip: gameContentTranslation('Wind effect (night desert)', {\n                    night: unfinishedText('night'),//TODO add night reference\n                    desert: ProjectLanguages.currentLanguage.get(Themes.DESERT.reference)!.toLowerCase(),\n                },),\n            }\n        }\n\n    }()\n\n    //endregion -------------------- Enum instances --------------------\n    //region -------------------- Enum fields --------------------\n\n    static [index: number]: GameStyleAppOption\n\n    //endregion -------------------- Enum fields --------------------\n    //region -------------------- Fields --------------------\n\n    /**\n     * The callback to get the enumeration based for each option.\n     *\n     * @note It should only be set by {@link GameStyleAppOption} and get by {@link EntityAppOption}.\n     */\n    public static CALLBACK_TO_GET_ENUMERATION: () => GameStyles\n\n    #appOptionWithContent?: AppOptionWithContent\n    #appOptionWithTable?: AppOptionWithTable\n\n    //endregion -------------------- Fields --------------------\n\n    private constructor() {\n        super()\n    }\n\n    //region -------------------- Getter methods --------------------\n    //endregion -------------------- Getter methods --------------------\n    //region -------------------- Methods --------------------\n\n    //region -------------------- App option - content --------------------\n\n    protected abstract _createContentOption(enumeration: GameStyles,): PossibleRenderReactElement\n\n    private get __appOptionWithContent(): AppOptionWithContent {\n        return this.#appOptionWithContent ??= new AppOptionWithContentComponent(() => this._createContentOption(GameStyleAppOption.CALLBACK_TO_GET_ENUMERATION()),)\n    }\n\n    public get renderContent(): readonly ReactElement[] {\n        return this.__appOptionWithContent.renderContent\n    }\n\n    //endregion -------------------- App option - content --------------------\n    //region -------------------- App option - table --------------------\n\n    protected abstract _createTableHeaderOption(): SingleHeaderContent\n\n    private get __appOptionWithTable(): AppOptionWithTable {\n        return this.#appOptionWithTable ??= new AppOptionWithTableComponent(() => this._createTableHeaderOption(),)\n    }\n\n    public get renderTableHeader(): NullOr<SingleHeaderContent> {\n        return this.__appOptionWithTable.renderTableHeader\n    }\n\n    //endregion -------------------- App option - table --------------------\n\n    //endregion -------------------- Methods --------------------\n    //region -------------------- Enum methods --------------------\n\n    protected override get _static(): EnumerableConstructor<Ordinals, Names> {\n        return GameStyleAppOption\n    }\n\n    public static getValue(value: PossibleValueByEnumerable<GameStyleAppOption>,): GameStyleAppOption {\n        return Enum.getValueOn(this, value,)\n    }\n\n    public static get values(): CollectionHolder<GameStyleAppOption> {\n        return Enum.getValuesOn(this)\n    }\n\n    public static [Symbol.iterator]() {\n        return this.values[Symbol.iterator]()\n    }\n\n    //endregion -------------------- Enum methods --------------------\n\n}\n","import './GameStyleApp.scss'\n\nimport type {AppInterpreterWithTable, SimplifiedTableProperties}   from 'app/interpreter/AppInterpreterWithTable'\nimport type {PossibleDimensionOnCardList, PossibleDimensionOnList} from 'app/interpreter/DimensionOnList'\nimport type {EveryPossibleRouteNames}                              from 'routes/everyRoutes.types'\nimport type {ReactElementOrString}                                 from 'util/react/ReactProperties'\n\nimport {GameStyleAppOption}     from 'app/options/GameStyleAppOption'\nimport {AbstractTableApp}       from 'app/withInterpreter/AbstractTableApp'\nimport {GameStyles}             from 'core/gameStyle/GameStyles'\nimport {gameContentTranslation} from 'lang/components/translationMethods'\n\nexport default class GameStyleApp\n    extends AbstractTableApp<AppInterpreterWithTable<GameStyles, GameStyleAppOption>> {\n\n    //region -------------------- Create methods --------------------\n\n    protected override _createKey(): string {\n        return 'gameStyle'\n    }\n\n\n    protected override _createSimpleListRouteName(): EveryPossibleRouteNames {\n        return 'everyGameStyles (list)'\n    }\n\n    protected override _createCardListRouteName(): EveryPossibleRouteNames {\n        return 'everyGameStyles (card)'\n    }\n\n    protected override _createTableRouteName(): EveryPossibleRouteNames {\n        return 'everyGameStyles (table)'\n    }\n\n\n    protected override _createTitleContent(): ReactElementOrString {\n        return gameContentTranslation('game style.all')\n    }\n\n    protected override _createAppOptionInterpreter(): AppInterpreterWithTable<GameStyles, GameStyleAppOption> {\n        return new class implements AppInterpreterWithTable<GameStyles, GameStyleAppOption> {\n\n            public get iterable() {\n                return GameStyles[Symbol.iterator]()\n            }\n\n            //region -------------------- List interpreter --------------------\n\n            public createListDimension(): PossibleDimensionOnList {\n                return {\n                    small: 6,\n                    medium: 4,\n                    large: null,\n                }\n            }\n\n            //endregion -------------------- List interpreter --------------------\n            //region -------------------- Card list interpreter --------------------\n\n            public createCardListDimension(): PossibleDimensionOnCardList {\n                return 'list'\n            }\n\n            public createCardListContent(enumerable: GameStyles,) {\n                return <div className=\"card-body\" id={`gameStyle-${enumerable.englishNameInHtml}`}>\n                    {enumerable.renderSingleComponent}\n                </div>\n            }\n\n            //endregion -------------------- Card list interpreter --------------------\n\n            public set callbackToGetEnumerable(value: () => GameStyles,) {\n                GameStyleAppOption.CALLBACK_TO_GET_ENUMERATION = value\n            }\n\n            public get tableOptions(): readonly GameStyleAppOption[] {\n                return [\n                    GameStyleAppOption.IMAGE,\n                    GameStyleAppOption.NAME,\n                    GameStyleAppOption.GAME,\n                    GameStyleAppOption.NIGHT_DESERT_WIND,\n                ]\n            }\n\n            public get tableProperties(): SimplifiedTableProperties {\n                return {\n                    caption: gameContentTranslation('game style.all'),\n                }\n            }\n\n\n            public createTableContent(option: GameStyleAppOption,) {\n                return option.renderContent\n            }\n\n            public createTableHeader(option: GameStyleAppOption,) {\n                return option.renderTableHeader\n            }\n\n        }()\n    }\n\n    //endregion -------------------- Create methods --------------------\n\n}\n"],"names":["NightEffectComponent","lazy","YesOrNoResultTextComponent","Symbol","iterator","GameStyleAppOption","this","AppOptionWithContentComponent","_createContentOption","CALLBACK_TO_GET_ENUMERATION","__appOptionWithContent","renderContent","AppOptionWithTableComponent","_createTableHeaderOption","__appOptionWithTable","renderTableHeader","value","Enum","values","IMAGE","enumeration","renderSingleComponent","key","element","contentTranslation","NAME","CommonOptions","GAME","reference","boolean","isInSuperMarioMaker1","isInSuperMarioMakerFor3DS","isInSuperMarioMaker2","NIGHT_DESERT_WIND","gameStyle","className","Themes","Times","tooltip","gameContentTranslation","night","unfinishedText","desert","ProjectLanguages","toLowerCase","GameStyleApp","GameStyles","small","medium","large","enumerable","id","englishNameInHtml","caption","option","AbstractTableApp"],"sourceRoot":""}