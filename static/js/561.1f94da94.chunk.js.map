{"version":3,"file":"static/js/561.1f94da94.chunk.js","mappings":"uRAkBe,SAASA,EAA8BC,GAAkD,IAAjD,MAACC,EAAK,SAAEC,GAAqCF,EAChG,MAAMG,GAAcC,EAAAA,EAAAA,QAAuB,MACrCC,EAAOJ,EAAMK,UAAUC,cAE7B,OAAY,MAARF,EACOH,GACJM,EAAAA,EAAAA,KAACC,EAAAA,EAAO,CAACC,OAAQ,CAACC,OAAOC,EAAAA,EAAAA,IAAuB,cAADC,OAAeR,GAAQJ,EAAMa,qBAAwBR,UAAWH,EAAYD,UAC9HM,EAAAA,EAAAA,KAAA,OAAKO,IAAKZ,EAAaa,UAAU,0FAAyFd,SACrHA,KAGb,C,yFCROe,EAAoBC,EAAAA,EAAiBC,UAASC,GAAAC,EAAAA,EAAAA,GAAA,mBAAAC,GAAAD,EAAAA,EAAAA,GAAA,qBAE9C,MAAeE,UACVC,EAAAA,KAqJAC,WAAAA,CAAYC,GAChBC,QATJC,OAAAC,eAAA,KAAAT,EAAA,CAAAU,UAAA,EAAA7B,WAAA,IAAA2B,OAAAC,eAAA,KAAAP,EAAA,CAAAQ,UAAA,EAAA7B,WAAA,KAUI8B,EAAAA,EAAAA,GAAAC,KAAIV,GAAAA,GAAsB,EAACS,EAAAA,EAAAA,GAAAC,KAAIZ,GAAAA,GAAoBM,EACvD,CAKA,mBAAWA,GACP,OAAAK,EAAAA,EAAAA,GAAOC,KAAIZ,GAAAA,EACf,CAEA,qBAAWa,GACP,OAAAF,EAAAA,EAAAA,GAAOC,KAAIV,GAAAA,EACf,CASOY,aAAAA,CAAcC,GACjB,MAAO,CAACH,KAAKI,qBAAqBD,GACtC,CAOOE,iBAAAA,GACH,OAAOL,KAAKM,0BAChB,EAjIU,SAAAC,EAdejC,EAAkBkC,GACnC,OAAIA,GACOC,EAAAA,EAAAA,MAAA,OAAKzB,UAAU,mDAAkDd,SAAA,EACpEM,EAAAA,EAAAA,KAACkC,EAAAA,EAAK,CAACC,KAAMC,EAAAA,EAAyB5B,UAAU,6EAChDR,EAAAA,EAAAA,KAACqC,EAAAA,EAAa,CAACC,GAAG,OAAOC,KAAMzC,EAAW0C,mBAAmB,eAE9DxC,EAAAA,EAAAA,KAACqC,EAAAA,EAAa,CAACC,GAAG,OAAOC,KAAMzC,EAAW0C,mBAAmB,UACxE,CA8IPC,EA9LqB1B,EAAAA,EAMK2B,QAAU,IAAI,cAAqC3B,EAEnDa,oBAAAA,CAAoBpC,GAA2C,IAA1C,QAACmD,EAAO,mBAAEC,GAA4BpD,EAC1E,OAA0B,MAAtBoD,EACe,MAAXD,EACO,MACJ3C,EAAAA,EAAAA,KAAC6C,EAAAA,EAAa,CAACC,QAASH,KAE5BV,EAAAA,EAAAA,MAAA,OAAKzB,UAAU,oDAAmDd,SAAA,EACrEM,EAAAA,EAAAA,KAAC6C,EAAAA,EAAa,CAACC,QAASH,KACxB3C,EAAAA,EAAAA,KAAA,OAAKQ,UAAU,yDACfR,EAAAA,EAAAA,KAAA,MAAIQ,UAAU,iDACdR,EAAAA,EAAAA,KAAC6C,EAAAA,EAAa,CAACC,QAASF,MAEhC,CAEmBd,wBAAAA,GACf,MAAO,CAACiB,IAAK,UAAWC,SAASC,EAAAA,EAAAA,IAAmB,cACxD,GAEF,WA1BgBlC,EA2BKmC,KAAO,IAAAC,GAAAtC,EAAAA,EAAAA,GAAA,uBAAI,cAAkCE,EAAeE,WAAAA,GAAA,SAAAmC,WAAAhC,OAAAC,eAAA,KAAA8B,EAAA,CAAA1D,MAAAsC,GAAA,CAE5DH,oBAAAA,CAAoByB,GAAwC,IAAvC,UAACvD,EAAS,cAAEkC,GAAuBqB,EACvE,MAAMC,EAAuBxD,EAAUwD,qBACvC,OAAIA,aAAgCC,EAAAA,GAChChC,EAAAA,EAAAA,GAAOC,KAAI2B,GAAAA,GAAsBrD,EAAWkC,IACzCC,EAAAA,EAAAA,MAAA,OAAKzB,UAAU,iDAAgDd,SAAA,EAAA6B,EAAAA,EAAAA,GACjEC,KAAI2B,GAAAA,GAAsBrD,EAAWkC,IACtChC,EAAAA,EAAAA,KAAA,OAAKQ,UAAU,yDACfR,EAAAA,EAAAA,KAAA,MAAIQ,UAAU,iDACdR,EAAAA,EAAAA,KAACqC,EAAAA,EAAa,CAACC,GAAG,kBAAkBC,KAAMe,EAAsBd,mBAAmB,aAE3F,CAYmBV,wBAAAA,GACf,OAAO0B,EAAAA,EAAcC,IAAIC,UAC7B,IAEF,QAvDgB3C,EAwDK4C,YAAc,IAAI,cAAyC5C,EAE3Da,oBAAAA,CAAoBgC,GAAoE,IAAlE9D,WAAW,YAAC+D,GAAa,0BAAEC,GAAmCF,EACnG,OAAO5D,EAAAA,EAAAA,KAAC6C,EAAAA,EAAa,CAACC,SAAS1C,EAAAA,EAAAA,IAAuB,qBAADC,OAAsBwD,GAAeC,IAC9F,CAEmBhC,wBAAAA,GACf,MAAO,CAACiB,IAAK,cAAeC,SAASC,EAAAA,EAAAA,IAAmB,eAC5D,GAEF,eAlEgBlC,EAmEKgD,oBAAsB,IAAI,cAAoChD,EAE9Da,oBAAAA,CAAqBD,GACpC,MAAM7B,EAAY6B,EAAY7B,UACxBkE,EAAelE,EAAUmE,mBACzB,YAACC,GAAgBvC,EACvB,GAAI7B,EAAUqE,6BAA+BH,EACzC,OAAOhE,EAAAA,EAAAA,KAACT,EAA8B,CAACE,MAAOkC,EAAYjC,UACtDM,EAAAA,EAAAA,KAAC6C,EAAAA,EAAa,CAACC,QAASkB,EAAcI,UAAWtE,EAAUuE,wBAAuB,GAAAhE,OADnB6D,EAAW,kEAIlF,MAAMI,EAAkB7D,EAAkB8D,QAC1C,OAAOtC,EAAAA,EAAAA,MAAC1C,EAA8B,CAACE,MAAOkC,EAAYjC,SAAA,EACtDM,EAAAA,EAAAA,KAAC6C,EAAAA,EAAa,CAACC,QAAShD,EAAUqE,2BAA4BC,UAAWtE,EAAU0E,iCACnFvC,EAAAA,EAAAA,MAAA,QAAMzB,UAAU,YAAWd,SAAA,CAAE4E,EAAgBG,MAAOH,EAAgBI,MAAOJ,EAAgBG,UAC3FzE,EAAAA,EAAAA,KAAC6C,EAAAA,EAAa,CAACC,QAAShD,EAAUmE,kBAAmBG,UAAWtE,EAAUuE,yBAAuB,GAAAhE,OAHlC6D,EAAW,gCAKlF,CAEmBpC,wBAAAA,GACf,OAAO0B,EAAAA,EAAcC,IAAIkB,WAC7B,GACF,kBAzFgB5D,EA0FK6D,0BAA4B,IAAI,cAAmD7D,EAEnFa,oBAAAA,CAAqBD,GACpC,MAAM7B,EAAY6B,EAAY7B,UAC9B,OAAOE,EAAAA,EAAAA,KAACT,EAA8B,CAACE,MAAOkC,EAAYjC,UACtDM,EAAAA,EAAAA,KAAC6C,EAAAA,EAAa,CAACC,QAAShD,EAAUqE,2BAA4BC,UAAWtE,EAAU0E,iCAAgC,GAAAnE,OADpDsB,EAAYuC,YAAW,yCAG9F,CAEmBpC,wBAAAA,GACf,OAAO0B,EAAAA,EAAcC,IAAIkB,WAC7B,GAEF,eAvGgB5D,EAwGK8D,eAAiB,IAAI,cAA0C9D,EAE/Da,oBAAAA,CAAqBD,GACpC,MAAM7B,EAAY6B,EAAY7B,UAC9B,OAAOE,EAAAA,EAAAA,KAACT,EAA8B,CAACE,MAAOkC,EAAYjC,UACtDM,EAAAA,EAAAA,KAAC6C,EAAAA,EAAa,CAACC,QAAShD,EAAUmE,kBAAmBG,UAAWtE,EAAUuE,wBAAuB,GAAAhE,OADlCsB,EAAYuC,YAAW,gCAG9F,CAEmBpC,wBAAAA,GACf,OAAO0B,EAAAA,EAAcC,IAAIkB,WAC7B,GAEF,eArHgB5D,EA0HK+D,eAAaC,GAAAlE,EAAAA,EAAAA,GAAA,YAAAmE,EAAkE,MAAMC,UAChGH,EAAAA,cAMA7D,WAAAA,GACJE,MAAMJ,EACV,CAEA,cAAkB0C,GAAO,IAADyB,EAAAC,EACpB,OAAW,QAAXA,GAAAD,GAAA3D,EAAAA,EAAAA,GAAOC,KAAIuD,IAAAA,UAAA,IAAAI,EAAAA,EAAAD,EAAAH,GAAe,IAAIE,CAClC,GAIH7D,OAAAC,eAAA2D,EAAAD,EAAA,CAAAzD,UAAA,EAAA7B,WAAA,IAAAuF,GC3JE,MAAMI,UACDpE,EAAAA,KAqEAC,WAAAA,GACJE,OACJ,CAKA,YAAWkE,GACP,MAAO,SACX,CAEA,kBAAWC,GACP,MAAO,SACX,CAEA,aAAWC,GACP,MAAO,SACX,CAKOC,eAAAA,CAAgBC,GACnB,MAAM,GAANpF,OAAUoF,EAAKC,UAAS,cAC5B,CAEOC,qBAAAA,CAAsBF,GACzB,MAAM,GAANpF,OAAUoF,EAAKC,UAAS,gBAC5B,CAEOE,gBAAAA,CAAiBH,GACpB,MAAM,GAANpF,OAAUoF,EAAKC,UAAS,YAC5B,EAIHG,EA1GYT,EAAAA,EAKcU,UAAY,IAAI,cAAkCV,EAErDI,eAAAA,GACZ,OAAO,IACX,GATKJ,EAYcW,wDAA0D,IAAI,cAAwEX,EAEzJ,YAAoBC,GAChB,MAAO,SACX,CAEA,aAAoBE,GAChB,MAAO,SACX,CAEgBI,qBAAAA,GACZ,OAAO,IACX,GAxBKP,EA2BcY,oBAAsB,IAAI,cAA0CZ,EAEvF,YAAoBC,GAChB,MAAO,SACX,CAEA,kBAAoBC,GAChB,MAAO,SACX,CAEgBM,gBAAAA,GACZ,OAAO,IACX,GAvCKR,EA8CcN,eAAaC,GAAAlE,EAAAA,EAAAA,GAAA,YAAAoF,EAA0D,MAAMC,UACxFpB,EAAAA,cAMA7D,WAAAA,GACJE,MAAMiE,EACV,CAEA,cAAkB3B,GAAO,IAADyB,EAAAC,EACpB,OAAW,QAAXA,GAAAD,GAAA3D,EAAAA,EAAAA,GAAOC,KAAIuD,IAAAA,UAAA,IAAAI,EAAAA,EAAAD,EAAAH,GAAe,IAAImB,CAClC,GAIH9E,OAAAC,eAAA4E,EAAAlB,EAAA,CAAAzD,UAAA,EAAA7B,WAAA,IAAAwG,GC/DE,MAAME,UACDnF,EAAAA,KAgJAC,WAAAA,GACJE,OACJ,CAKA,YAAWkE,GACP,MAAO,SACX,CAEOe,QAAAA,CAASC,GACZ,MAAO,SACX,CAEOC,SAAAA,CAAUD,GACb,MAAO,SACX,CAEOE,eAAAA,CAAgBF,GACnB,MAAO,SACX,CAEOG,UAAAA,CAAWH,GACd,MAAO,SACX,CAKOb,eAAAA,CAAgBC,GACnB,MAAM,GAANpF,OAAUoF,EAAKC,UAAS,mBAC5B,CAEOe,eAAAA,CAAgBhB,GACnB,MAAM,GAANpF,OAAUoF,EAAKC,UAAS,iBAC5B,CAEOgB,gBAAAA,CAAiBjB,GACpB,MAAM,GAANpF,OAAUoF,EAAKC,UAAS,iBAC5B,CAEOiB,sBAAAA,CAAuBlB,GAC1B,MAAM,GAANpF,OAAUoF,EAAKC,UAAS,mBAC5B,CAEOkB,iBAAAA,CAAkBnB,GACrB,MAAM,GAANpF,OAAUoF,EAAKC,UAAS,mBAC5B,EAIHmB,EArMYV,EAAAA,EAKcW,gBAAkB,IAAI,cAA4CX,EAErEX,eAAAA,GACZ,OAAO,IACX,GATKW,EAacY,IAAM,IAAI,cAAkCZ,EAE/D,YAAoBd,GAChB,MAAO,SACX,CAEgBmB,UAAAA,GACZ,MAAO,SACX,CAEgBC,eAAAA,GACZ,OAAO,IACX,GAzBKN,EA4Bca,KAAO,IAAI,cAAmCb,EAEjE,YAAoBd,GAChB,MAAO,SACX,CAEgBe,QAAAA,GACZ,MAAO,SACX,CAEgBM,gBAAAA,GACZ,OAAO,IACX,GAxCKP,EA2Ccc,aAAe,IAAI,cAAoCd,EAE1E,YAAoBd,GAChB,MAAO,SACX,CAEgBe,QAAAA,GACZ,MAAO,SACX,CAEgBE,SAAAA,GACZ,MAAO,SACX,CAEgBC,eAAAA,GACZ,MAAO,SACX,CAEgBC,UAAAA,GACZ,MAAO,SACX,CAEgBG,sBAAAA,GACZ,OAAO,IACX,GAnEKR,EAsEce,MAAQ,IAAI,cAAoCf,EAEnE,YAAoBd,GAChB,MAAO,SACX,CAEgBe,QAAAA,GACZ,MAAO,SACX,CAEgBE,SAAAA,GACZ,MAAO,SACX,CAEgBC,eAAAA,GACZ,MAAO,SACX,CAEgBK,iBAAAA,GACZ,OAAO,IACX,GA1FKT,EA8FcgB,iBAAmB,IAAI,cAA6ChB,EAEvF,YAAoBd,GAChB,MAAO,SACX,CAEgBe,QAAAA,CAASC,GACrB,OAAOA,EAAa,UAAY,SACpC,CAEgBC,SAAAA,CAAUD,GACtB,OAAOA,EAAa,UAAY,SACpC,CAEgBE,eAAAA,CAAgBF,GAC5B,OAAOA,EAAa,UAAY,SACpC,CAEgBG,UAAAA,CAAWH,GACvB,OAAOA,EAAa,UAAY,SACpC,GAlHKF,EAyHcrB,eAAaC,GAAAlE,EAAAA,EAAAA,GAAA,YAAAuG,EAAoE,MAAMC,UAClGvC,EAAAA,cAMA7D,WAAAA,GACJE,MAAMgF,EACV,CAEA,cAAkB1C,GAAO,IAADyB,EAAAC,EACpB,OAAW,QAAXA,GAAAD,GAAA3D,EAAAA,EAAAA,GAAOC,KAAIuD,IAAAA,UAAA,IAAAI,EAAAA,EAAAD,EAAAH,GAAe,IAAIsC,CAClC,GAIHjG,OAAAC,eAAA+F,EAAArC,EAAA,CAAAzD,UAAA,EAAA7B,WAAA,IAAA2H,G,kJCvGEN,EAAkBQ,EAAAA,EAAWC,IAC7BC,EAAkBC,EAAAA,EAAMD,aACxBE,EAAkBJ,EAAAA,EAAWI,MAC7BX,EAAkBO,EAAAA,EAAWP,IAC7BC,GAAkBM,EAAAA,EAAWN,KAC7BW,GAAkBC,EAAAA,EAAMD,KACxBE,GAAkBD,EAAAA,EAAMC,KACxBC,GAAkBF,EAAAA,EAAME,OACxBC,GAAkBT,EAAAA,EAAWS,IAC7Bb,GAAkBI,EAAAA,EAAWJ,MAAKc,IAAAnH,EAAAA,EAAAA,GAAA,QAAAoH,IAAApH,EAAAA,EAAAA,GAAA,SAEzC,MAAMqH,GAWKjH,WAAAA,CAAYwE,EAAkB0C,GARrC/G,OAAAC,eAAA,KAAA2G,GAAA,CAAA1G,UAAA,EAAA7B,WAAA,IAAA2B,OAAAC,eAAA,KAAA4G,GAAA,CAAA3G,UAAA,EAAA7B,WAAA,IA0DA,KAEgB2I,kBAAoB,QAnDhC7G,EAAAA,EAAAA,GAAAC,KAAIwG,IAAAA,IAASvC,GACblE,EAAAA,EAAAA,GAAAC,KAAIyG,IAAAA,IAAUE,CAClB,CAIA,WAAWrF,GACP,MAAMqF,GAAK5G,EAAAA,EAAAA,GAAGC,KAAIyG,IAAAA,IAClB,OAAOI,EAAAA,EAAAA,gBAAc9G,EAAAA,EAAAA,GAAAC,KAAIwG,IAAAA,IAAOlF,SAASwF,GACrCH,EAAMI,SAASD,EAAGxI,YAC1B,CAIO0I,uBAAAA,GACH,MAAO,CACHC,QAAS,EACTC,MAAO,EACPC,OAAQ,EACRC,MAAO,EACPC,WAAY,EAEpB,CAEOC,qBAAAA,CAAsBnH,GACzB,MAAMwG,GAAK5G,EAAAA,EAAAA,GAAGC,KAAIyG,IAAAA,IACZc,EAAeZ,EAAMa,YACrBjI,EAAegD,oBACfoE,EAAMc,aACFlI,EAAe6D,0BACf7D,EAAe8D,eAEnBqE,EAA0D,MAAlCvH,EAAYiB,mBACpCuG,EAA2D,MAAtCxH,EAAYyH,uBACjCC,EAAW1H,EAAYK,cAE7B,OAAOC,EAAAA,EAAAA,MAAA,OAAKK,GAAE,SAAAjC,OAAWsB,EAAY2H,mBAAqB9I,UAAS,aAAAH,OAAegJ,EAAW,sBAAwB7B,EAAY,gBAAe9H,SAAA,CAC3I2J,GAAWrJ,EAAAA,EAAAA,KAACkC,EAAAA,EAAK,CAACC,KAAMC,EAAAA,EAAyB5B,UAAU,uDAAyD,KACpH2I,GAAqBnJ,EAAAA,EAAAA,KAACqC,EAAAA,EAAa,CAACC,GAAG,wBAAwBC,KAAMZ,EAAY7B,UAAUwD,qBAAsB9C,UAAU,oBAAsB,KACjJuI,EAAarH,cAAcC,IAC5BM,EAAAA,EAAAA,MAAA,OAAKzB,UAAU,sFAAqFd,SAAA,EAChGM,EAAAA,EAAAA,KAAC6C,EAAAA,EAAa,CAACC,QAASnB,EAAYgB,UACnCuG,GAAwBlJ,EAAAA,EAAAA,KAAA,OAAKQ,UAAU,YAAc,MACtDR,EAAAA,EAAAA,KAAC6C,EAAAA,EAAa,CAACC,QAASnB,EAAYiB,0BAGhD,CAOA,gBAAW2G,GACP,OAAOnJ,EAAAA,EAAAA,IAAuB,SAADC,QAAUkB,EAAAA,EAAAA,GAAAC,KAAIwG,IAAAA,IAAOvC,KAAI,QAC1D,CAEA,gBAAW+D,GACP,MAAMrB,GAAK5G,EAAAA,EAAAA,GAAGC,KAAIyG,IAAAA,IAEZwB,EAAwC,CAC1C1I,EAAe2B,QACf3B,EAAemC,KACfnC,EAAe4C,aAUnB,OARIwE,EAAMa,YACNS,EAAQC,KAAK3I,EAAegD,sBAExBoE,EAAMc,cACNQ,EAAQC,KAAK3I,EAAe6D,2BAC5BuD,EAAMwB,SACNF,EAAQC,KAAK3I,EAAe8D,iBAE7B4E,CACX,CAGOG,kBAAAA,CAAmB1J,GACtB,OAAOA,EAAOuB,iBAClB,CAEOoI,kBAAAA,CAAmB/G,EAAiB5C,GACvC,OAAOA,EAAOwB,cAAcoB,EAChC,CAEOgH,iBAAAA,CAAkB5J,GACrB,OAAOA,EAAO2B,mBAClB,EAOW,SAASkI,GAAQvK,GAAgE,IAA/D,YAACwK,EAAW,KAAEvE,EAAI,MAAE0C,EAAK,WAAE8B,GAAgCzK,EACxF,MAAMkG,EAAYD,EAAKC,UACjBwE,EAA0B,CAC5B,CAACC,EAAAA,EAAaC,YAAY,GAAD/J,OAAKqF,EAAS,YACvC,CAACyE,EAAAA,EAAaE,UAAU,GAADhK,OAAKqF,EAAS,YACrC,CAACyE,EAAAA,EAAaG,MAAM,GAADjK,OAAKqF,EAAS,cAK/B6E,EAAOpC,EAAMa,YACb5D,EAAWU,UACXqC,EAAMwB,QACFvE,EAAWY,oBACXZ,EAAWW,wDAKfyE,GAA6BC,EAAAA,EAAAA,IAAU3D,EAAiBmD,GAAaS,OACrEC,EAAYxC,EAAMwB,QACa,IAA/Ba,EACIrE,EAAgBW,gBACe,IAA/B0D,EACIrE,EAAgBgB,iBAChB8C,EAAWW,OACPzE,EAAgBY,IAChBkD,EAAWY,QACP1E,EAAgBa,KAChBiD,EAAWa,cACP3E,EAAgBc,aAChBd,EAAgBe,MACL,IAA/BsD,GAAmE,IAA/BA,EAChCrE,EAAgBW,gBACe,IAA/B0D,EACIrE,EAAgBgB,iBAChB8C,EAAWW,OACPzE,EAAgBY,IAChBkD,EAAWY,QACP1E,EAAgBa,KAChBb,EAAgBc,aAItC,OAAOjH,EAAAA,EAAAA,KAAC+K,EAAAA,EAAgB,CAACC,SAAS,QAAQd,wBAAyBA,EAAyBF,YAAaA,EAChFiB,cAAc7K,EAAAA,EAAAA,IAAuB,SAADC,OAAUoF,EAAKA,KAAI,SACvD5B,aAAa7D,EAAAA,EAAAA,KAACkL,GAAgB,CAAClB,YAAaA,EAAavE,KAAMA,EAAM8E,KAAMA,IAC3EY,cAAcnL,EAAAA,EAAAA,KAACoL,GAAiB,CAAC3F,KAAMA,EAAM8E,KAAMA,EAAMI,UAAWA,EAAWxC,MAAOA,EAAO8B,WAAYA,IAAcvK,UAC5IM,EAAAA,EAAAA,KAACqL,GAAU,CAACrB,YAAaA,EAAavE,KAAMA,EAAM0C,MAAOA,KAEjE,CAGA,SAASkD,GAAUhI,GAAmF,IAAlF,YAAC2G,EAAW,KAAEvE,EAAI,MAAE0C,GAA2D9E,EAC/F,MAAMiI,EAAiB,IAAIpD,GAAoBzC,EAAM0C,GAErD,OAAI6B,IAAgBG,EAAAA,EAAaC,aACnBpK,EAAAA,EAAAA,KAACuL,GAAS,CAACC,MAAOF,EAAexI,QAASqF,MAAOA,IAC3D6B,IAAgBG,EAAAA,EAAaE,WAClBrK,EAAAA,EAAAA,KAACyL,EAAAA,EAAQ,CAACT,SAAS,QAAQU,YAAaJ,KACjDtL,EAAAA,EAAAA,KAAC2L,EAAAA,EAAK,CAACrJ,GAAG,cAAcoJ,YAAaJ,GAC/C,CAcA,SAASC,GAAS3H,GAA0C,IAAzC,MAAC4H,EAAK,MAAErD,GAA6BvE,EACpD,MAAMmF,EAAeZ,EAAMa,YACrBjI,EAAegD,oBACfoE,EAAMc,aACFlI,EAAe6D,0BACf7D,EAAe8D,eACzB,OAAO7E,EAAAA,EAAAA,KAAC4L,EAAAA,EAAI,CAACC,UAAU,QAAQL,MAAOA,EAAOM,eAAa,EAAApM,SAAE4I,IACxD,MAAMxI,EAAYwI,EAAGxI,UACfiM,EAA0C,MAAzBzD,EAAG1F,mBAC1B,OAAOX,EAAAA,EAAAA,MAAA,OAAKzB,UAAU,oDAAmDd,SAAA,EACrEuC,EAAAA,EAAAA,MAAA,OAAKzB,UAAU,qBAAoBd,SAAA,EAC/BuC,EAAAA,EAAAA,MAAA,OAAKzB,UAAU,SAAQd,SAAA,EACnBM,EAAAA,EAAAA,KAAC6C,EAAAA,EAAa,CAACC,QAASwF,EAAG3F,QAASnC,UAAU,+CAC9CR,EAAAA,EAAAA,KAACqC,EAAAA,EAAa,CAACC,GAAG,aAAaC,KAAMzC,EAAW0C,mBAAmB,WAEtEuJ,GAAiB9J,EAAAA,EAAAA,MAAA,OAAKzB,UAAU,SAAQd,SAAA,EACrCM,EAAAA,EAAAA,KAAC6C,EAAAA,EAAa,CAACC,QAASwF,EAAG1F,mBAAoBpC,UAAU,+CACzDR,EAAAA,EAAAA,KAACqC,EAAAA,EAAa,CAACC,GAAG,wBAAwBC,KAAMzC,EAAUwD,qBAAsBd,mBAAmB,WAC9F,QAEZuG,EAAarH,cAAc4G,KAC1B,GAEd,CAiBA,SAAS4C,GAAgBc,GAA2D,IAA1D,YAAChC,EAAW,KAAEvE,EAAI,KAAE8E,GAAkCyB,EAC5E,MAAMC,EAAgB1B,EAAK5E,sBAAsBF,GAC3CyG,EAAW3B,EAAK3E,iBAAiBH,GAEjC0G,EAAW1G,EAAK2G,cAChBC,EAAa5G,EAAK6G,gBAElBC,EAAWvC,IAAgBG,EAAAA,EAAaC,YAAc,KAAO,oBAC7DoC,EAAWxC,IAAgBG,EAAAA,EAAaE,UAAY,KAAO,oBAC3DoC,EAAYzC,IAAgBG,EAAAA,EAAaG,MAAQ,KAAO,qBAE9D,OAAOrI,EAAAA,EAAAA,MAAAyK,EAAAA,SAAA,CAAAhN,SAAA,EACHuC,EAAAA,EAAAA,MAAA,KAAAvC,SAAA,EACKU,EAAAA,EAAAA,IAAuB,sCAADC,OAAuCoF,EAAKA,KAAI,KAAK,CACxEkH,UAAU3M,EAAAA,EAAAA,KAAC4M,EAAAA,EAAU,CAAgBtK,GAAG,uBAAuBoD,UAAWuG,EAAcvM,UAACM,EAAAA,EAAAA,KAAC6M,EAAAA,EAAS,CAAC/M,UAAW6H,MAArF,YAC1BmF,YAAY9M,EAAAA,EAAAA,KAAC4M,EAAAA,EAAU,CAAkBtK,GAAG,yBAAyBoD,UAAWuG,EAAcvM,UAACM,EAAAA,EAAAA,KAAC6M,EAAAA,EAAS,CAAC/M,UAAWgI,MAAzF,cAC5BoE,UAAUlM,EAAAA,EAAAA,KAAC4M,EAAAA,EAAU,CAAgBtK,GAAG,uBAAuBoD,UAAWwG,EAASxM,UAACM,EAAAA,EAAAA,KAAC6M,EAAAA,EAAS,CAAC/M,UAAW+H,MAAhF,eAE7BzH,EAAAA,EAAAA,IAAuB,4CAA6C,CACjEuM,UAAU3M,EAAAA,EAAAA,KAAC4M,EAAAA,EAAU,CAAgBtK,GAAG,mCAAmCoD,UAAWuG,EAAcvM,UAACM,EAAAA,EAAAA,KAAC6M,EAAAA,EAAS,CAAC/M,UAAW6H,MAAjG,YAC1BmF,YAAY9M,EAAAA,EAAAA,KAAC4M,EAAAA,EAAU,CAAkBtK,GAAG,qCAAqCoD,UAAWuG,EAAcvM,UAACM,EAAAA,EAAAA,KAAC6M,EAAAA,EAAS,CAAC/M,UAAWgI,MAArG,cAC5BoE,UAAUlM,EAAAA,EAAAA,KAAC4M,EAAAA,EAAU,CAAgBtK,GAAG,mCAAmCoD,UAAWwG,EAASxM,UAACM,EAAAA,EAAAA,KAAC6M,EAAAA,EAAS,CAAC/M,UAAW+H,MAA5F,eAE7BzH,EAAAA,EAAAA,IAAuB,gDACvBA,EAAAA,EAAAA,IAAuB,0CAA2C,CAC/D+L,UAAUnM,EAAAA,EAAAA,KAAC+M,EAAAA,EAAQ,CAAgBlB,UAAU,WAAWnG,UAAWyG,EAAUa,MAAM,UAAStN,UAAEU,EAAAA,EAAAA,IAAuB,yBAA0B6M,eAAvH,YACxBZ,YAAYrM,EAAAA,EAAAA,KAAC+M,EAAAA,EAAQ,CAAkBlB,UAAU,aAAanG,UAAW2G,EAAYW,MAAM,UAAStN,UAAEU,EAAAA,EAAAA,IAAuB,2BAA4B6M,eAA/H,oBAGlCjN,EAAAA,EAAAA,KAAA,KAAAN,UAAIU,EAAAA,EAAAA,IAAuB,kCAAmC,CAC1DmM,UAAUvM,EAAAA,EAAAA,KAAC+M,EAAAA,EAAQ,CAAgBlB,UAAU,WAAWnG,UAAW6G,EAAUS,MAAM,UAAStN,UAAEuD,EAAAA,EAAAA,IAAmB,2BAA4BgK,eAArH,YACxBT,UAAUxM,EAAAA,EAAAA,KAAC+M,EAAAA,EAAQ,CAAgBlB,UAAU,WAAWnG,UAAW8G,EAAUQ,MAAM,UAAStN,UAAEuD,EAAAA,EAAAA,IAAmB,2BAA4BgK,eAArH,YACxBC,WAAWlN,EAAAA,EAAAA,KAAC+M,EAAAA,EAAQ,CAAiBlB,UAAU,YAAYnG,UAAW8G,EAAUQ,MAAM,UAAStN,UAAEuD,EAAAA,EAAAA,IAAmB,yBAA0BgK,eAArH,aACzBR,WAAWzM,EAAAA,EAAAA,KAAC+M,EAAAA,EAAQ,CAAiBlB,UAAU,YAAYnG,UAAW+G,EAAWO,MAAM,UAAStN,UAAEuD,EAAAA,EAAAA,IAAmB,4BAA6BgK,eAAzH,mBAGrC,CAkBA,SAAS7B,GAAiB+B,GAA6E,IAA5E,KAAC1H,EAAI,KAAE8E,EAAI,UAAEI,EAAS,MAAExC,EAAK,WAAE8B,GAAyCkD,EAC/F,OAAOlL,EAAAA,EAAAA,MAAA,OAAKK,GAAG,+BAA8B5C,SAAA,EACzCM,EAAAA,EAAAA,KAACoN,GAAgB,CAAC3H,KAAMA,KACxBzF,EAAAA,EAAAA,KAAA,OAAKQ,UAAU,mBACfR,EAAAA,EAAAA,KAACqN,GAAgB,CAAC5H,KAAMA,EAAM8E,KAAMA,KACpCvK,EAAAA,EAAAA,KAAA,OAAKQ,UAAU,mBACfR,EAAAA,EAAAA,KAACsN,GAAqB,CAAC7H,KAAMA,EAAMkF,UAAWA,EAAWxC,MAAOA,EAAO8B,WAAYA,MAE3F,CAGA,SAASmD,GAAgBG,GAAuD,IAAtD,KAAC9H,GAAiD8H,EACxE,OAAOtL,EAAAA,EAAAA,MAAA,OAAKK,GAAG,6BAA6B9B,UAAU,kCAAiCd,SAAA,EACnFM,EAAAA,EAAAA,KAACwN,EAAAA,EAAU,CAAC3B,UAAU,WAAWnG,UAAWD,EAAKgI,aAAcT,MAAOvH,EAAKJ,SAAS3F,UAAEuD,EAAAA,EAAAA,IAAmB,UACzGhB,EAAAA,EAAAA,MAAA,OAAKK,GAAG,2CAA2C9B,UAAU,yBAAwBd,SAAA,EACjFM,EAAAA,EAAAA,KAACwN,EAAAA,EAAU,CAAC3B,UAAU,YAAYnG,UAAWD,EAAK2G,cAAeY,MAAOvH,EAAKiI,UAAUhO,UAAEU,EAAAA,EAAAA,IAAuB,wBAChHJ,EAAAA,EAAAA,KAACwN,EAAAA,EAAU,CAAC3B,UAAU,cAAcnG,UAAWD,EAAK6G,gBAAiBU,MAAOvH,EAAKkI,YAAYjO,UAAEU,EAAAA,EAAAA,IAAuB,8BAGlI,CAGA,SAASkN,GAAqBM,GAA8H,IAA7H,KAACnI,EAAI,UAAEkF,EAAS,MAAExC,EAAK,WAAE8B,GAAgG2D,EACpJ,OAAIzF,EAAMwB,SAEC1H,EAAAA,EAAAA,MAAA,OAAKK,GAAG,mCAAmC9B,UAAU,kEAAiEd,SAAA,EACzHM,EAAAA,EAAAA,KAACwN,EAAAA,EAAU,CAAC3B,UAAU,oBAAoBnG,UAAWiF,EAAUnF,gBAAgBC,GAAQuH,MAAOrC,EAAUtF,SAAS3F,UAAEuD,EAAAA,EAAAA,IAAmB,UACtIhB,EAAAA,EAAAA,MAAA,OAAKK,GAAG,0DAA0D9B,UAAU,yBAAwBd,SAAA,EAChGM,EAAAA,EAAAA,KAACwN,EAAAA,EAAU,CAAC3B,UAAU,oBAAoBnG,UAAWiF,EAAUlE,gBAAgBhB,GAAQuH,MAAOrC,EAAUvE,SAAS6D,EAAWW,QAASlL,UACjIM,EAAAA,EAAAA,KAAC6N,EAAAA,EAAc,CAAC/N,UAAWiH,OAE/B/G,EAAAA,EAAAA,KAACwN,EAAAA,EAAU,CAAC3B,UAAU,qBAAqBnG,UAAWiF,EAAUjE,iBAAiBjB,GAAQuH,MAAOrC,EAAUrE,UAAU2D,EAAWY,SAAUnL,UACrIM,EAAAA,EAAAA,KAAC6N,EAAAA,EAAc,CAAC/N,UAAWkH,QAE/BhH,EAAAA,EAAAA,KAACwN,EAAAA,EAAU,CAAC3B,UAAU,sBAAsBnG,UAAWiF,EAAU/D,kBAAkBnB,GAAQuH,MAAOrC,EAAUnE,WAAWyD,EAAW6D,UAAWpO,UACzIM,EAAAA,EAAAA,KAAC6N,EAAAA,EAAc,CAAC/N,UAAWoH,WAGnClH,EAAAA,EAAAA,KAAA,OAAKsC,GAAG,6DAA6D9B,UAAU,yBAAwBd,UACnGuC,EAAAA,EAAAA,MAACuL,EAAAA,EAAU,CAAC3B,UAAU,sBAAsBnG,UAAWiF,EAAUhE,uBAAuBlB,GAAQuH,MAAOrC,EAAUpE,gBAAgB0D,EAAW8D,UAAWrO,SAAA,EACnJM,EAAAA,EAAAA,KAAC6N,EAAAA,EAAc,CAAC/N,UAAWiI,GAAKvH,UAAU,UAC1CR,EAAAA,EAAAA,KAAC6N,EAAAA,EAAc,CAAC/N,UAAW4H,aAKpCzF,EAAAA,EAAAA,MAAA,OAAKK,GAAG,mCAAmC9B,UAAU,kEAAiEd,SAAA,EACzHM,EAAAA,EAAAA,KAACwN,EAAAA,EAAU,CAAC3B,UAAU,oBAAoBnG,UAAWiF,EAAUnF,gBAAgBC,GAAQuH,MAAOrC,EAAUtF,SAAS3F,UAAEuD,EAAAA,EAAAA,IAAmB,UACtIhB,EAAAA,EAAAA,MAAA,OAAKK,GAAG,0DAA0D9B,UAAU,yBAAwBd,SAAA,EAChGM,EAAAA,EAAAA,KAACwN,EAAAA,EAAU,CAAC3B,UAAU,oBAAoBnG,UAAWiF,EAAUlE,gBAAgBhB,GAAQuH,MAAOrC,EAAUvE,SAAS6D,EAAWW,QAASlL,UACjIM,EAAAA,EAAAA,KAAC6N,EAAAA,EAAc,CAAC/N,UAAWiH,OAE/B/G,EAAAA,EAAAA,KAACwN,EAAAA,EAAU,CAAC3B,UAAU,qBAAqBnG,UAAWiF,EAAUjE,iBAAiBjB,GAAQuH,MAAOrC,EAAUrE,UAAU2D,EAAWY,SAAUnL,UACrIM,EAAAA,EAAAA,KAAC6N,EAAAA,EAAc,CAAC/N,UAAWkH,WAGnChH,EAAAA,EAAAA,KAAA,OAAKsC,GAAG,6DAA6D9B,UAAU,yBAAwBd,UACnGuC,EAAAA,EAAAA,MAACuL,EAAAA,EAAU,CAAC3B,UAAU,oBAAoBnG,UAAWiF,EAAUhE,uBAAuBlB,GAAQuH,MAAOrC,EAAUpE,gBAAgB0D,EAAW+D,QAAStO,SAAA,EAC/IM,EAAAA,EAAAA,KAAC6N,EAAAA,EAAc,CAAC/N,UAAWiI,GAAKvH,UAAU,UAC1CR,EAAAA,EAAAA,KAAC6N,EAAAA,EAAc,CAAC/N,UAAW4H,WAI3C,CAGA,SAAS2F,GAAgBY,GAAwE,IAAvE,KAACxI,EAAI,KAAE8E,GAA4D0D,EACzF,OAAOhM,EAAAA,EAAAA,MAAA,OAAKK,GAAG,8BAA8B9B,UAAU,6DAA4Dd,SAAA,EAC/GM,EAAAA,EAAAA,KAACwN,EAAAA,EAAU,CAAC3B,UAAU,eAAenG,UAAW6E,EAAK/E,gBAAgBC,GAAQuH,MAAOzC,EAAKlF,SAAS3F,UAAEuD,EAAAA,EAAAA,IAAmB,UACvHhB,EAAAA,EAAAA,MAAA,OAAKK,GAAG,2CAA2C9B,UAAU,yBAAwBd,SAAA,EACjFuC,EAAAA,EAAAA,MAACuL,EAAAA,EAAU,CAAC3B,UAAU,gBAAgBnG,UAAW6E,EAAK5E,sBAAsBF,GAAQuH,MAAOzC,EAAKjF,eAAe5F,SAAA,EAC3GM,EAAAA,EAAAA,KAAC6M,EAAAA,EAAS,CAAC/M,UAAW6H,MACtB3H,EAAAA,EAAAA,KAAC6M,EAAAA,EAAS,CAAC/M,UAAWgI,SAE1B9H,EAAAA,EAAAA,KAACwN,EAAAA,EAAU,CAAC3B,UAAU,WAAWnG,UAAW6E,EAAK3E,iBAAiBH,GAAQuH,MAAOzC,EAAKhF,UAAU7F,UAC5FM,EAAAA,EAAAA,KAAC6M,EAAAA,EAAS,CAAC/M,UAAW+H,YAItC,C,sEC/Xe,SAAS2F,EAAUhO,GAA8H,IAA7H,UAACqM,EAAS,UAAEnG,EAAS,MAAEsH,EAAK,SAAEtN,GAA2FF,EACxJ,MAAM8C,EAAE,GAAAjC,OAAMwL,EAAS,WACjBrL,EAAS,WAAAH,OAAc2M,EAAK,gBAElC,OAAiB,MAAbtH,GACO1F,EAAAA,EAAAA,KAAA,UAAQyF,KAAK,SAASnD,GAAIA,EAAI9B,UAAWA,EAAW0N,UAAQ,EAAAxO,SAAEA,KAClEM,EAAAA,EAAAA,KAACmO,EAAAA,GAAI,CAAC1I,KAAK,SAASnD,GAAIA,EAAI9B,UAAWA,EAAW4N,IAAIC,EAAAA,EAAAA,GAAc3I,GAAYhG,SAAEA,GAC7F,C,sECPe,SAASqN,EAAQvN,GAA2H,IAA1H,UAACqM,EAAS,UAAEnG,EAAS,MAAEsH,EAAK,SAAEtN,GAAwFF,EACnJ,MAAM8C,EAAE,GAAAjC,OAAMwL,EAAS,SAEvB,OAAiB,MAAbnG,GACO1F,EAAAA,EAAAA,KAAA,QAAMsC,GAAIA,EAAI9B,UAAU,4BAA2Bd,SAAEA,KACzDM,EAAAA,EAAAA,KAACmO,EAAAA,GAAI,CAAC7L,GAAIA,EAAI9B,UAAS,QAAAH,OAAU2M,GAASoB,IAAIC,EAAAA,EAAAA,GAAc3I,GAAYhG,SAAEA,GACrF,C,sECRe,SAASkN,EAAUpN,GAA+G,IAA9G,GAAC8C,EAAE,UAAEoD,EAAS,SAAEhG,GAA0FF,EACzI,OAAiB,MAAbkG,GACO1F,EAAAA,EAAAA,KAAA,QAAMsC,GAAIA,EAAG5C,SAAEA,KACnBM,EAAAA,EAAAA,KAACmO,EAAAA,GAAI,CAAC7L,GAAIA,EAAI8L,IAAIC,EAAAA,EAAAA,GAAc3I,GAAYhG,SAAEA,GACzD,C","sources":["app/options/LimitWithPossibleTooltipOnNote.tsx","app/options/LimitAppOption.tsx","app/property/LimitGames.ts","app/property/Limit.gameStyles.ts","app/LimitApp.tsx","app/tools/button/LinkButton.tsx","app/tools/text/LinkText.tsx","app/tools/text/TextOrLink.tsx"],"sourcesContent":["import 'app/tools/text/TextWithInformativeTooltip.scss'\n\nimport {useRef} from 'react'\n\nimport type {Limits}                            from 'core/limit/Limits'\nimport type {SimpleReactPropertiesWithChildren} from 'util/react/ReactProperties'\n\nimport Tooltip                  from 'bootstrap/tooltip/Tooltip'\nimport {gameContentTranslation} from 'lang/components/translationMethods'\n\ninterface LimitAmountNoteProperties\n    extends SimpleReactPropertiesWithChildren<ReactElementOrStringOrNumberOrArray> {\n\n    readonly value: Limits\n\n}\n\n/** @reactComponent */\nexport default function LimitWithPossibleTooltipOnNote({value, children,}: LimitAmountNoteProperties,) {\n    const htmlElement = useRef<HTMLDivElement>(null,)\n    const note = value.reference.amountComment\n\n    if (note == null)\n        return children\n    return <Tooltip option={{title: gameContentTranslation(`limit.note.${note}`, value.noteForTranslation,),}} reference={htmlElement}>\n        <div ref={htmlElement} className=\"limitWithPossibleTooltipOnNote-container text-withInformativeTooltip-container d-inline\">\n            {children}\n        </div>\n    </Tooltip>\n}\n","import './LimitAppOption.scss'\n\nimport type {CompanionEnumSingleton} from '@joookiwi/enumerable'\nimport {CompanionEnum, Enum}         from '@joookiwi/enumerable'\n\nimport type {AppOption}           from 'app/options/AppOption'\nimport type {Names, Ordinals}     from 'app/options/LimitAppOption.types'\nimport type {SingleHeaderContent} from 'app/tools/table/SimpleHeader'\nimport type {Limit}               from 'core/limit/Limit'\nimport type {Limits}              from 'core/limit/Limits'\n\nimport {CommonOptions}                              from 'app/options/CommonOptions'\nimport LimitWithPossibleTooltipOnNote               from 'app/options/LimitWithPossibleTooltipOnNote'\nimport {COURSE_THEME_IMAGE_FILE}                    from 'app/options/file/themeImageFiles'\nimport TextComponent                                from 'app/tools/text/TextComponent'\nimport Image                                        from 'app/tools/images/Image'\nimport {EmptyAlternativeLimit}                      from 'core/limit/EmptyAlternativeLimit'\nimport {ProjectLanguages}                           from 'lang/ProjectLanguages'\nimport {contentTranslation, gameContentTranslation} from 'lang/components/translationMethods'\nimport NameComponent                                from 'lang/name/component/Name.component'\n\nimport LanguageCompanion = ProjectLanguages.Companion\n\nexport abstract class LimitAppOption\n    extends Enum<Ordinals, Names>\n    implements AppOption<Limits> {\n\n    //region -------------------- Enum instances --------------------\n\n    public static readonly ACRONYM = new class LimitAppOption_Acronym extends LimitAppOption {\n\n        protected override _createContentOption({acronym, alternativeAcronym,}: Limits,) {\n            if (alternativeAcronym == null) {\n                if (acronym == null)\n                    return null\n                return <TextComponent content={acronym}/>\n            }\n            return <div className=\"acronyms-container d-flex flex-column flex-md-row\">\n                <TextComponent content={acronym}/>\n                <div className=\"vertical-separator vr mx-2 d-none d-md-inline-block\"/>\n                <hr className=\"horizontal-separator my-1 d-block d-md-none\"/>\n                <TextComponent content={alternativeAcronym}/>\n            </div>\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {key: 'acronym', element: contentTranslation('Acronym(s)',),}\n        }\n\n    }('acronym',)\n    public static readonly NAME = new class LimitAppOption_Name extends LimitAppOption {\n\n        protected override _createContentOption({reference, isEditorLimit,}: Limits,) {\n            const alternativeContainer = reference.alternativeContainer\n            if (alternativeContainer instanceof EmptyAlternativeLimit)\n                return this.#createNameComponent(reference, isEditorLimit,)\n            return <div className=\"names-container d-flex flex-column flex-md-row\">\n                {this.#createNameComponent(reference, isEditorLimit,)}\n                <div className=\"vertical-separator vr mx-3 d-none d-md-inline-block\"/>\n                <hr className=\"horizontal-separator my-1 d-block d-md-none\"/>\n                <NameComponent id=\"alternativeName\" name={alternativeContainer} popoverOrientation=\"bottom\"/>\n            </div>\n        }\n\n        #createNameComponent(reference: Limit, isEditorLimit: boolean,): ReactElement {\n            if (isEditorLimit)\n                return <div className=\"nameWithImage-container d-flex position-relative\">\n                    <Image file={COURSE_THEME_IMAGE_FILE} className=\"course-theme-image badge bg-transparent position-absolute top-0 start-0\"/>\n                    <NameComponent id=\"name\" name={reference} popoverOrientation=\"bottom\"/>\n                </div>\n            return <NameComponent id=\"name\" name={reference} popoverOrientation=\"bottom\"/>\n        }\n\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return CommonOptions.get.nameHeader\n        }\n\n    }('name',)\n    public static readonly DESCRIPTION = new class LimitAppOption_Description extends LimitAppOption {\n\n        protected override _createContentOption({reference: {description,}, descriptionForTranslation,}: Limits,) {\n            return <TextComponent content={gameContentTranslation(`limit.description.${description}`, descriptionForTranslation,)}/>\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {key: 'description', element: contentTranslation('Description',),}\n        }\n\n    }('description',)\n    public static readonly AMOUNT_IN_ALL_GAMES = new class LimitAppOption_Amount extends LimitAppOption {\n\n        protected override _createContentOption(enumeration: Limits,) {\n            const reference = enumeration.reference\n            const amountInSMM2 = reference.limitAmountInSMM2\n            const {englishName,} = enumeration\n            if (reference.limitAmountInSMM1AndSMM3DS === amountInSMM2)\n                return <LimitWithPossibleTooltipOnNote value={enumeration} key={`${englishName} - limit amount in all games, but displayed as the same value`}>\n                    <TextComponent content={amountInSMM2} isUnknown={reference.isUnknownLimitInSMM2}/>\n                </LimitWithPossibleTooltipOnNote>\n\n            const currentLanguage = LanguageCompanion.current\n            return <LimitWithPossibleTooltipOnNote value={enumeration} key={`${englishName} - limit amount in all games`}>\n                <TextComponent content={reference.limitAmountInSMM1AndSMM3DS} isUnknown={reference.isUnknownLimitInSMM1AndSMM3DS}/>\n                <span className=\"space-pre\">{currentLanguage.space}{currentLanguage.slash}{currentLanguage.space}</span>\n                <TextComponent content={reference.limitAmountInSMM2} isUnknown={reference.isUnknownLimitInSMM2}/>\n            </LimitWithPossibleTooltipOnNote>\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return CommonOptions.get.limitHeader\n        }\n    }('allGame-amount',)\n    public static readonly AMOUNT_IN_SMM1_AND_SMM3DS = new class LimitAppOption_AmountInSMM1AndSMM3DS extends LimitAppOption {\n\n        protected override _createContentOption(enumeration: Limits,) {\n            const reference = enumeration.reference\n            return <LimitWithPossibleTooltipOnNote value={enumeration} key={`${enumeration.englishName} - limit amount in only SMM1 & SMM3DS`}>\n                <TextComponent content={reference.limitAmountInSMM1AndSMM3DS} isUnknown={reference.isUnknownLimitInSMM1AndSMM3DS}/>\n            </LimitWithPossibleTooltipOnNote>\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return CommonOptions.get.limitHeader\n        }\n\n    }('smm1-amount',)\n    public static readonly AMOUNT_IN_SMM2 = new class LimitAppOption_AmountInSMM2 extends LimitAppOption {\n\n        protected override _createContentOption(enumeration: Limits,) {\n            const reference = enumeration.reference\n            return <LimitWithPossibleTooltipOnNote value={enumeration} key={`${enumeration.englishName} - limit amount in only SMM2`}>\n                <TextComponent content={reference.limitAmountInSMM2} isUnknown={reference.isUnknownLimitInSMM2}/>\n            </LimitWithPossibleTooltipOnNote>\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return CommonOptions.get.limitHeader\n        }\n\n    }('smm2-amount',)\n\n    //endregion -------------------- Enum instances --------------------\n    //region -------------------- Companion enum --------------------\n\n    public static readonly CompanionEnum: CompanionEnumSingleton<LimitAppOption, typeof LimitAppOption> = class CompanionEnum_LimitAppOption\n        extends CompanionEnum<LimitAppOption, typeof LimitAppOption> {\n\n        //region -------------------- Singleton usage --------------------\n\n        static #instance?: CompanionEnum_LimitAppOption\n\n        private constructor() {\n            super(LimitAppOption,)\n        }\n\n        public static get get() {\n            return this.#instance ??= new CompanionEnum_LimitAppOption()\n        }\n\n        //endregion -------------------- Singleton usage --------------------\n\n    }\n\n    //endregion -------------------- Companion enum --------------------\n    //region -------------------- Fields --------------------\n\n    readonly #associatedClass\n    readonly #additionalClasses\n\n    //endregion -------------------- Fields --------------------\n    //region -------------------- Constructor --------------------\n\n    private constructor(associatedClass: string,) {\n        super()\n        this.#additionalClasses = [this.#associatedClass = associatedClass,] as const\n    }\n\n    //endregion -------------------- Constructor --------------------\n    //region -------------------- Getter methods --------------------\n\n    public get associatedClass(): string {\n        return this.#associatedClass\n    }\n\n    public get additionalClasses(): readonly [string,] {\n        return this.#additionalClasses\n    }\n\n    //endregion -------------------- Getter methods --------------------\n    //region -------------------- Methods --------------------\n\n    //region -------------------- App option - content --------------------\n\n    protected abstract _createContentOption(enumeration: Limits,): ReactElement\n\n    public renderContent(enumeration: Limits,): readonly [ReactElement,] {\n        return [this._createContentOption(enumeration,),]\n    }\n\n    //endregion -------------------- App option - content --------------------\n    //region -------------------- App option - table --------------------\n\n    protected abstract _createTableHeaderOption(): SingleHeaderContent\n\n    public renderTableHeader(): SingleHeaderContent {\n        return this._createTableHeaderOption()\n    }\n\n    //endregion -------------------- App option - table --------------------\n\n    //endregion -------------------- Methods --------------------\n\n}\n","import type {CompanionEnumSingleton} from '@joookiwi/enumerable'\nimport type {NullOr}                 from '@joookiwi/type'\nimport {CompanionEnum, Enum}         from '@joookiwi/enumerable'\n\nimport type {Names, Ordinals, PossibleRouteName} from 'app/property/LimitGames.types'\nimport type {LimitTypes}                         from 'app/property/LimitTypes'\n\nexport class LimitGames\n    extends Enum<Ordinals, Names> {\n\n    //region -------------------- Enum instances --------------------\n\n    public static readonly ALL_GAMES = new class LimitGames_AllGames extends LimitGames {\n\n        public override getAllRouteName() {\n            return null\n        }\n\n    }()\n    public static readonly SUPER_MARIO_MAKER_OR_SUPER_MARIO_MAKER_FOR_NINTENDO_3DS = new class LimitGames_SuperMarioMakerOrSuperMarioMakerForNintendo3DS extends LimitGames {\n\n        public override get allColor(): PossibleColor {\n            return 'warning'\n        }\n\n        public override get smm2Color(): PossibleColor {\n            return 'warning'\n        }\n\n        public override getSmm1Or3dsRouteName() {\n            return null\n        }\n\n    }()\n    public static readonly SUPER_MARIO_MAKER_2 = new class LimitGames_SuperMarioMaker2 extends LimitGames {\n\n        public override get allColor(): PossibleColor {\n            return 'warning'\n        }\n\n        public override get smm1Or3dsColor(): PossibleColor {\n            return 'warning'\n        }\n\n        public override getSmm2RouteName() {\n            return null\n        }\n\n    }()\n\n    //endregion -------------------- Enum instances --------------------\n    //region -------------------- Companion enum --------------------\n\n    public static readonly CompanionEnum: CompanionEnumSingleton<LimitGames, typeof LimitGames> = class CompanionEnum_LimitGames\n        extends CompanionEnum<LimitGames, typeof LimitGames> {\n\n        //region -------------------- Singleton usage --------------------\n\n        static #instance?: CompanionEnum_LimitGames\n\n        private constructor() {\n            super(LimitGames,)\n        }\n\n        public static get get() {\n            return this.#instance ??= new CompanionEnum_LimitGames()\n        }\n\n        //endregion -------------------- Singleton usage --------------------\n\n    }\n\n    //endregion -------------------- Companion enum --------------------\n    //region -------------------- Fields --------------------\n    //endregion -------------------- Fields --------------------\n    //region -------------------- Constructor --------------------\n\n    private constructor() {\n        super()\n    }\n\n    //endregion -------------------- Constructor --------------------\n    //region -------------------- Getter methods --------------------\n\n    public get allColor(): PossibleColor {\n        return 'success'\n    }\n\n    public get smm1Or3dsColor(): PossibleColor {\n        return 'success'\n    }\n\n    public get smm2Color(): PossibleColor {\n        return 'success'\n    }\n\n    //endregion -------------------- Getter methods --------------------\n    //region -------------------- Methods --------------------\n\n    public getAllRouteName(type: LimitTypes,): NullOr<PossibleRouteName> {\n        return `${type.routeName} (Game=all)`\n    }\n\n    public getSmm1Or3dsRouteName(type: LimitTypes,): NullOr<PossibleRouteName> {\n        return `${type.routeName} (Game=1&3DS)`\n    }\n\n    public getSmm2RouteName(type: LimitTypes,): NullOr<PossibleRouteName> {\n        return `${type.routeName} (Game=2)`\n    }\n\n    //endregion -------------------- Methods --------------------\n\n}\n\ntype PossibleColor = Extract<BootstrapColor, | 'success' | 'warning'>\n","import type {CompanionEnumSingleton} from '@joookiwi/enumerable'\nimport {CompanionEnum, Enum}         from '@joookiwi/enumerable'\nimport type {NullOrString}           from '@joookiwi/type'\n\nimport type {Names, Ordinals, PossibleRouteName} from 'app/property/Limit.gameStyles.types'\nimport {LimitTypes}                              from 'app/property/LimitTypes'\n\nexport class LimitGameStyles\n    extends Enum<Ordinals, Names> {\n\n    //region -------------------- Enum instances --------------------\n\n    public static readonly ALL_GAME_STYLES = new class LimitGameStyles_AllGameStyles extends LimitGameStyles {\n\n        public override getAllRouteName() {\n            return null\n        }\n\n    }()\n\n    public static readonly SMB = new class LimitGameStyles_Smb extends LimitGameStyles {\n\n        public override get allColor(): PossibleColor {\n            return 'warning'\n        }\n\n        public override sm3dwColor(): PossibleColor {\n            return 'warning'\n        }\n\n        public override getSmbRouteName() {\n            return null\n        }\n\n    }()\n    public static readonly SMB3 = new class LimitGameStyles_Smb3 extends LimitGameStyles {\n\n        public override get allColor(): PossibleColor {\n            return 'warning'\n        }\n\n        public override smbColor(): PossibleColor {\n            return 'warning'\n        }\n\n        public override getSmb3RouteName() {\n            return null\n        }\n\n    }()\n    public static readonly SMW_OR_NSMBU = new class LimitGameStyles_Nsmbu extends LimitGameStyles {\n\n        public override get allColor(): PossibleColor {\n            return 'warning'\n        }\n\n        public override smbColor(): PossibleColor {\n            return 'warning'\n        }\n\n        public override smb3Color(): PossibleColor {\n            return 'warning'\n        }\n\n        public override smwOrNsmbuColor(): PossibleColor {\n            return 'warning'\n        }\n\n        public override sm3dwColor(): PossibleColor {\n            return 'warning'\n        }\n\n        public override getSmwOrNsmbuRouteName() {\n            return null\n        }\n\n    }()\n    public static readonly SM3DW = new class LimitGameStyles_Sm3dw extends LimitGameStyles {\n\n        public override get allColor(): PossibleColor {\n            return 'warning'\n        }\n\n        public override smbColor(): PossibleColor {\n            return 'warning'\n        }\n\n        public override smb3Color(): PossibleColor {\n            return 'warning'\n        }\n\n        public override smwOrNsmbuColor(): PossibleColor {\n            return 'warning'\n        }\n\n        public override getSm3dwRouteName() {\n            return null\n        }\n\n    }()\n\n    public static readonly MIXED_GAME_STYLE = new class LimitGameStyles_MixedGameStyle extends LimitGameStyles {\n\n        public override get allColor(): PossibleColor {\n            return 'warning'\n        }\n\n        public override smbColor(isSelected: boolean,): PossibleColor {\n            return isSelected ? 'success' : 'warning'\n        }\n\n        public override smb3Color(isSelected: boolean,): PossibleColor {\n            return isSelected ? 'success' : 'warning'\n        }\n\n        public override smwOrNsmbuColor(isSelected: boolean,): PossibleColor {\n            return isSelected ? 'success' : 'warning'\n        }\n\n        public override sm3dwColor(isSelected: boolean,): PossibleColor {\n            return isSelected ? 'success' : 'warning'\n        }\n\n    }()\n\n    //endregion -------------------- Enum instances --------------------\n    //region -------------------- Companion enum --------------------\n\n    public static readonly CompanionEnum: CompanionEnumSingleton<LimitGameStyles, typeof LimitGameStyles> = class CompanionEnum_LimitGameStyles\n        extends CompanionEnum<LimitGameStyles, typeof LimitGameStyles> {\n\n        //region -------------------- Singleton usage --------------------\n\n        static #instance?: CompanionEnum_LimitGameStyles\n\n        private constructor() {\n            super(LimitGameStyles,)\n        }\n\n        public static get get() {\n            return this.#instance ??= new CompanionEnum_LimitGameStyles()\n        }\n\n        //endregion -------------------- Singleton usage --------------------\n\n    }\n\n    //endregion -------------------- Companion enum --------------------\n    //region -------------------- Fields --------------------\n    //endregion -------------------- Fields --------------------\n    //region -------------------- Constructor --------------------\n\n    private constructor() {\n        super()\n    }\n\n    //endregion -------------------- Constructor --------------------\n    //region -------------------- Getter methods --------------------\n\n    public get allColor(): PossibleColor {\n        return 'success'\n    }\n\n    public smbColor(isSelected: boolean,): PossibleColor {\n        return 'success'\n    }\n\n    public smb3Color(isSelected: boolean,): PossibleColor {\n        return 'success'\n    }\n\n    public smwOrNsmbuColor(isSelected: boolean,): PossibleColor {\n        return 'success'\n    }\n\n    public sm3dwColor(isSelected: boolean,): PossibleColor {\n        return 'success'\n    }\n\n    //endregion -------------------- Getter methods --------------------\n    //region -------------------- Methods --------------------\n\n    public getAllRouteName(type: LimitTypes,): NullOrString<PossibleRouteName> {\n        return `${type.routeName} (GameStyle=all)`\n    }\n\n    public getSmbRouteName(type: LimitTypes,): NullOrString<PossibleRouteName> {\n        return `${type.routeName} (GameStyle=1)`\n    }\n\n    public getSmb3RouteName(type: LimitTypes,): NullOrString<PossibleRouteName> {\n        return `${type.routeName} (GameStyle=3)`\n    }\n\n    public getSmwOrNsmbuRouteName(type: LimitTypes,): NullOrString<PossibleRouteName> {\n        return `${type.routeName} (GameStyle=W&U)`\n    }\n\n    public getSm3dwRouteName(type: LimitTypes,): NullOrString<PossibleRouteName> {\n        return `${type.routeName} (GameStyle=3DW)`\n    }\n\n    //endregion -------------------- Methods --------------------\n\n}\n\ntype PossibleColor = Extract<BootstrapColor, | 'success' | 'warning'>\n","import 'app/_GameAsideContent.scss'\nimport 'app/_GameStyleAsideContent.scss'\nimport './LimitApp.scss'\n\nimport type {Array, MutableArray, NullOrString} from '@joookiwi/type'\nimport type {CollectionHolder}                  from '@joookiwi/collection'\nimport {filterByArray}                          from '@joookiwi/collection'\n\nimport type {LimitAppProperties}      from 'app/AppProperties.types'\nimport type {AppInterpreterWithTable} from 'app/interpreter/AppInterpreterWithTable'\nimport type {DimensionOnList}         from 'app/interpreter/DimensionOnList'\nimport type {LimitTypes}              from 'app/property/LimitTypes'\nimport type {ViewAndRouteName}        from 'app/withInterpreter/DisplayButtonGroup.properties'\nimport type {Limits}                  from 'core/limit/Limits'\nimport type {PossibleRouteName}       from 'route/EveryRoutes.types'\nimport type {GameCollection}          from 'util/collection/GameCollection'\nimport type {GameStyleCollection}     from 'util/collection/GameStyleCollection'\nimport type {ReactProperties}         from 'util/react/ReactProperties'\n\nimport SubMainContainer                             from 'app/_SubMainContainer'\nimport {LimitAppOption}                             from 'app/options/LimitAppOption'\nimport {COURSE_THEME_IMAGE_FILE}                    from 'app/options/file/themeImageFiles'\nimport {LimitGames}                                 from 'app/property/LimitGames'\nimport {LimitGameStyles}                            from 'app/property/Limit.gameStyles'\nimport LinkButton                                   from 'app/tools/button/LinkButton'\nimport Image                                        from 'app/tools/images/Image'\nimport Table                                        from 'app/tools/table/Table'\nimport TextComponent                                from 'app/tools/text/TextComponent'\nimport LinkText                                     from 'app/tools/text/LinkText'\nimport TextOrLink                                   from 'app/tools/text/TextOrLink'\nimport List                                         from 'app/util/List'\nimport CardList                                     from 'app/withInterpreter/CardList'\nimport {ViewDisplays}                               from 'app/withInterpreter/ViewDisplays'\nimport {Games}                                      from 'core/game/Games'\nimport GameImage                                    from 'core/game/component/GameImage'\nimport {GameStyles}                                 from 'core/gameStyle/GameStyles'\nimport GameStyleImage                               from 'core/gameStyle/component/GameStyleImage'\nimport {contentTranslation, gameContentTranslation} from 'lang/components/translationMethods'\nimport NameComponent                                from 'lang/name/component/Name.component'\nimport {Empty}                                      from 'util/emptyVariables'\nimport {intersect}                                  from 'util/utilitiesMethods'\n\nimport ALL_GAME_STYLES = GameStyles.ALL\nimport EMPTY_STRING =    Empty.EMPTY_STRING\nimport NSMBU =           GameStyles.NSMBU\nimport SMB =             GameStyles.SMB\nimport SMB3 =            GameStyles.SMB3\nimport SMM1 =            Games.SMM1\nimport SMM2 =            Games.SMM2\nimport SMM3DS =          Games.SMM3DS\nimport SMW =             GameStyles.SMW\nimport SM3DW =           GameStyles.SM3DW\n\nclass LimitAppInterpreter\n    implements AppInterpreterWithTable<Limits, LimitAppOption> {\n\n    //region -------------------- Fields --------------------\n\n    readonly #type\n    readonly #games\n\n    //endregion -------------------- Fields --------------------\n    //region -------------------- Constructor --------------------\n\n    public constructor(type: LimitTypes, games: GameCollection,) {\n        this.#type = type\n        this.#games = games\n    }\n\n    //endregion -------------------- Constructor --------------------\n\n    public get content() {\n        const games = this.#games\n        return filterByArray(this.#type.content, it =>\n            games.hasAnyIn(it.reference,),)\n    }\n\n    //region -------------------- Card  --------------------\n\n    public createCardListDimension() {\n        return {\n            default: 1,\n            small: 2,\n            medium: 4,\n            large: 5,\n            extraLarge: 6,\n        } as const satisfies DimensionOnList\n    }\n\n    public createCardListContent(enumeration: Limits,) {\n        const games = this.#games\n        const amountOption = games.hasAllGames\n            ? LimitAppOption.AMOUNT_IN_ALL_GAMES\n            : games.hasSmm1Or3ds\n                ? LimitAppOption.AMOUNT_IN_SMM1_AND_SMM3DS\n                : LimitAppOption.AMOUNT_IN_SMM2\n\n        const hasAlternativeAcronym = enumeration.alternativeAcronym != null\n        const hasAlternativeName = enumeration.alternativeEnglishName != null\n        const isEditor = enumeration.isEditorLimit\n\n        return <div id={`limit-${enumeration.englishNameInHtml}`} className={`card-body ${isEditor ? 'card-bodyWithEditor' : EMPTY_STRING} text-center`}>\n            {isEditor ? <Image file={COURSE_THEME_IMAGE_FILE} className=\"course-theme-image position-absolute start-0 top-0\"/> : null}\n            {hasAlternativeName ? <NameComponent id=\"limit-alternativeName\" name={enumeration.reference.alternativeContainer} className=\"alternativeName\"/> : null}\n            {amountOption.renderContent(enumeration,)}\n            <div className=\"acronyms-container d-flex align-content-center text-body text-opacity-50 fst-italic\">\n                <TextComponent content={enumeration.acronym}/>\n                {hasAlternativeAcronym ? <div className=\"vr mx-2\"/> : null}\n                <TextComponent content={enumeration.alternativeAcronym}/>\n            </div>\n        </div>\n    }\n\n    //endregion -------------------- Card --------------------\n    //region -------------------- Table --------------------\n\n    public readonly tableHeadersColor = 'info' satisfies BootstrapThemeColor\n\n    public get tableCaption() {\n        return gameContentTranslation(`limit.${this.#type.type}.all`,) satisfies ReactElementOrString\n    }\n\n    public get tableOptions(): Array<LimitAppOption> {\n        const games = this.#games\n\n        const options: MutableArray<LimitAppOption> = [\n            LimitAppOption.ACRONYM,\n            LimitAppOption.NAME,\n            LimitAppOption.DESCRIPTION,\n        ]\n        if (games.hasAllGames)\n            options.push(LimitAppOption.AMOUNT_IN_ALL_GAMES,)\n        else {\n            if (games.hasSmm1Or3ds)\n                options.push(LimitAppOption.AMOUNT_IN_SMM1_AND_SMM3DS,)\n            if (games.hasSmm2)\n                options.push(LimitAppOption.AMOUNT_IN_SMM2,)\n        }\n        return options\n    }\n\n\n    public getAdditionalClass(option: LimitAppOption,) {\n        return option.additionalClasses\n    }\n\n    public createTableContent(content: Limits, option: LimitAppOption,) {\n        return option.renderContent(content,)\n    }\n\n    public createTableHeader(option: LimitAppOption,) {\n        return option.renderTableHeader()\n    }\n\n    //endregion -------------------- Table --------------------\n\n}\n\n/** @reactComponent */\nexport default function LimitApp({viewDisplay, type, games, gameStyles,}: LimitAppProperties,) {\n    const routeName = type.routeName\n    const viewDisplayAndRouteName = [\n        [ViewDisplays.SIMPLE_LIST, `${routeName} (list)`,],\n        [ViewDisplays.CARD_LIST, `${routeName} (card)`,],\n        [ViewDisplays.TABLE, `${routeName} (table)`,],\n    ] as const satisfies Array<ViewAndRouteName>\n\n    //region -------------------- Game selection --------------------\n\n    const game = games.hasAllGames\n        ? LimitGames.ALL_GAMES\n        : games.hasSmm2\n            ? LimitGames.SUPER_MARIO_MAKER_2\n            : LimitGames.SUPER_MARIO_MAKER_OR_SUPER_MARIO_MAKER_FOR_NINTENDO_3DS\n\n    //endregion -------------------- Game selection --------------------\n    //region -------------------- Game style selection --------------------\n\n    const amountOfSelectedGameStyles = intersect(ALL_GAME_STYLES, gameStyles,).length\n    const gameStyle = games.hasSmm2\n        ? amountOfSelectedGameStyles === 5\n            ? LimitGameStyles.ALL_GAME_STYLES\n            : amountOfSelectedGameStyles !== 1\n                ? LimitGameStyles.MIXED_GAME_STYLE\n                : gameStyles.hasSmb\n                    ? LimitGameStyles.SMB\n                    : gameStyles.hasSmb3\n                        ? LimitGameStyles.SMB3\n                        : gameStyles.hasSmwOrNsmbu\n                            ? LimitGameStyles.SMW_OR_NSMBU\n                            : LimitGameStyles.SM3DW\n        : amountOfSelectedGameStyles === 5 || amountOfSelectedGameStyles === 4\n            ? LimitGameStyles.ALL_GAME_STYLES\n            : amountOfSelectedGameStyles !== 1\n                ? LimitGameStyles.MIXED_GAME_STYLE\n                : gameStyles.hasSmb\n                    ? LimitGameStyles.SMB\n                    : gameStyles.hasSmb3\n                        ? LimitGameStyles.SMB3\n                        : LimitGameStyles.SMW_OR_NSMBU\n\n    //endregion -------------------- Game style selection --------------------\n\n    return <SubMainContainer reactKey=\"limit\" viewDisplayAndRouteName={viewDisplayAndRouteName} viewDisplay={viewDisplay}\n                             titleContent={gameContentTranslation(`limit.${type.type}.all`,)}\n                             description={<LimitDescription viewDisplay={viewDisplay} type={type} game={game}/>}\n                             asideContent={<LimitAsideContent type={type} game={game} gameStyle={gameStyle} games={games} gameStyles={gameStyles}/>}>\n        <SubContent viewDisplay={viewDisplay} type={type} games={games}/>\n    </SubMainContainer>\n}\n\n/** @reactComponent */\nfunction SubContent({viewDisplay, type, games,}: Omit<LimitAppProperties, | 'gameStyles' | 'times'>,){\n    const appInterpreter = new LimitAppInterpreter(type, games,)\n\n    if (viewDisplay === ViewDisplays.SIMPLE_LIST)\n           return <LimitList items={appInterpreter.content} games={games}/>\n    if (viewDisplay === ViewDisplays.CARD_LIST)\n            return <CardList reactKey=\"limit\" interpreter={appInterpreter}/>\n    return<Table id=\"limit-table\" interpreter={appInterpreter}/>\n}\n\n//region -------------------- List --------------------\n\ninterface Limit_ListProperties\n    extends ReactProperties {\n\n    readonly items: CollectionHolder<Limits>\n\n    readonly games: GameCollection\n\n}\n\n/** @reactComponent */\nfunction LimitList({items, games,}: Limit_ListProperties,) {\n    const amountOption = games.hasAllGames\n        ? LimitAppOption.AMOUNT_IN_ALL_GAMES\n        : games.hasSmm1Or3ds\n            ? LimitAppOption.AMOUNT_IN_SMM1_AND_SMM3DS\n            : LimitAppOption.AMOUNT_IN_SMM2\n    return <List partialId=\"limit\" items={items} withSeparator>{it => {\n        const reference = it.reference\n        const hasAlternative = it.alternativeAcronym != null\n        return <div className=\"d-flex justify-content-between align-items-center\">\n            <div className=\"d-flex flex-column\">\n                <div className=\"d-flex\">\n                    <TextComponent content={it.acronym} className=\"text-body text-opacity-50 fst-italic me-1\"/>\n                    <NameComponent id=\"limit-name\" name={reference} popoverOrientation=\"top\"/>\n                </div>\n                {hasAlternative ? <div className=\"d-flex\">\n                    <TextComponent content={it.alternativeAcronym} className=\"text-body text-opacity-50 fst-italic me-1\"/>\n                    <NameComponent id=\"limit-alternativeName\" name={reference.alternativeContainer} popoverOrientation=\"top\"/>\n                </div> : null}\n            </div>\n            {amountOption.renderContent(it,)}\n        </div>\n    }}</List>\n}\n\n//endregion -------------------- List --------------------\n//region -------------------- Description content --------------------\n\ninterface LimitDescriptionProperties\n    extends ReactProperties {\n\n    readonly viewDisplay: ViewDisplays\n\n    readonly type: LimitTypes\n\n    readonly game: LimitGames\n\n}\n\n/** @reactComponent */\nfunction LimitDescription({viewDisplay, type, game,}: LimitDescriptionProperties,) {\n    const smm1Or3dsLink = game.getSmm1Or3dsRouteName(type,) satisfies NullOrString<PossibleRouteName>\n    const smm2Link = game.getSmm2RouteName(type,) satisfies NullOrString<PossibleRouteName>\n\n    const playLink = type.playRouteName satisfies NullOrString<PossibleRouteName>\n    const editorLink = type.editorRouteName satisfies NullOrString<PossibleRouteName>\n\n    const listLink = viewDisplay === ViewDisplays.SIMPLE_LIST ? null : 'everyLimit (list)' satisfies PossibleRouteName\n    const cardLink = viewDisplay === ViewDisplays.CARD_LIST ? null : 'everyLimit (card)' satisfies PossibleRouteName\n    const tableLink = viewDisplay === ViewDisplays.TABLE ? null : 'everyLimit (table)' satisfies PossibleRouteName\n\n    return <>\n        <p>\n            {gameContentTranslation(`limit.page description.intro page (${type.type})`, {\n                smm1Link: <TextOrLink key=\"smm1Link\" id=\"smm1Game-description\" routeName={smm1Or3dsLink}><GameImage reference={SMM1}/></TextOrLink>,\n                smm3dsLink: <TextOrLink key=\"smm3dsLink\" id=\"smm3dsGame-description\" routeName={smm1Or3dsLink}><GameImage reference={SMM3DS}/></TextOrLink>,\n                smm2Link: <TextOrLink key=\"smm2Link\" id=\"smm2Game-description\" routeName={smm2Link}><GameImage reference={SMM2}/></TextOrLink>,\n            },)}\n            {gameContentTranslation('limit.page description.intro game changes', {\n                smm1Link: <TextOrLink key=\"smm1Link\" id=\"smm1Game-gameChanges-description\" routeName={smm1Or3dsLink}><GameImage reference={SMM1}/></TextOrLink>,\n                smm3dsLink: <TextOrLink key=\"smm3dsLink\" id=\"smm3dsGame-gameChanges-description\" routeName={smm1Or3dsLink}><GameImage reference={SMM3DS}/></TextOrLink>,\n                smm2Link: <TextOrLink key=\"smm2Link\" id=\"smm2Game-gameChanges-description\" routeName={smm2Link}><GameImage reference={SMM2}/></TextOrLink>,\n            },)}\n            {gameContentTranslation('limit.page description.intro other entities',)}\n            {gameContentTranslation('limit.page description.intro references', {\n                playLink: <LinkText key=\"playLink\" partialId=\"playLink\" routeName={playLink} color=\"primary\">{gameContentTranslation('limit.play.simplified',).toLowerCase()}</LinkText>,\n                editorLink: <LinkText key=\"editorLink\" partialId=\"editorLink\" routeName={editorLink} color=\"primary\">{gameContentTranslation('limit.editor.simplified',).toLowerCase()}</LinkText>,\n            },)}\n        </p>\n        <p>{gameContentTranslation('limit.page description.viewable', {\n            listLink: <LinkText key=\"listLink\" partialId=\"listLink\" routeName={listLink} color=\"primary\">{contentTranslation('view type.list.singular',).toLowerCase()}</LinkText>,\n            cardLink: <LinkText key=\"cardLink\" partialId=\"cardLink\" routeName={cardLink} color=\"primary\">{contentTranslation('view type.card.singular',).toLowerCase()}</LinkText>,\n            cardsLink: <LinkText key=\"cardsLink\" partialId=\"cardsLink\" routeName={cardLink} color=\"primary\">{contentTranslation('view type.card.plural',).toLowerCase()}</LinkText>,\n            tableLink: <LinkText key=\"tableLink\" partialId=\"tableLink\" routeName={tableLink} color=\"primary\">{contentTranslation('view type.table.singular',).toLowerCase()}</LinkText>,\n        },)}</p>\n    </>\n}\n\n//endregion -------------------- Description content --------------------\n//region -------------------- Aside content --------------------\n\ninterface LimitAsideContentProperties\n    extends ReactProperties {\n\n    readonly type: LimitTypes\n    readonly game: LimitGames\n    readonly gameStyle: LimitGameStyles\n\n    readonly games: GameCollection\n    readonly gameStyles: GameStyleCollection\n\n}\n\n/** @reactComponent */\nfunction LimitAsideContent({type, game, gameStyle, games, gameStyles,}: LimitAsideContentProperties,) {\n    return <div id=\"limit-asideContent-container\">\n        <TypeAsideContent type={type}/>\n        <div className=\"d-inline mx-1\"/>\n        <GameAsideContent type={type} game={game}/>\n        <div className=\"d-inline mx-1\"/>\n        <GameStyleAsideContent type={type} gameStyle={gameStyle} games={games} gameStyles={gameStyles}/>\n    </div>\n}\n\n/** @reactComponent */\nfunction TypeAsideContent({type,}: Pick<LimitAsideContentProperties, 'type'>,) {\n    return <div id=\"limit-linkButton-container\" className=\"btn-group-vertical btn-group-sm\">\n        <LinkButton partialId=\"allLimit\" routeName={type.allRouteName} color={type.allColor}>{contentTranslation('All',)}</LinkButton>\n        <div id=\"limit-linkButton-playAndEditor-container\" className=\"btn-group btn-group-sm\">\n            <LinkButton partialId=\"playLimit\" routeName={type.playRouteName} color={type.playColor}>{gameContentTranslation('limit.play.simple',)}</LinkButton>\n            <LinkButton partialId=\"editorLimit\" routeName={type.editorRouteName} color={type.editorColor}>{gameContentTranslation('limit.editor.simple',)}</LinkButton>\n        </div>\n    </div>\n}\n\n/** @reactComponent */\nfunction GameStyleAsideContent({type, gameStyle, games, gameStyles,}: Pick<LimitAsideContentProperties, | 'type' | 'gameStyle' | 'games' | 'gameStyles'>,) {\n    if (games.hasSmm2)\n        //The game styles are in SMM2\n        return <div id=\"limit-gameStylesButton-container\" className=\"gameStyleAsideContent-container btn-group-vertical btn-group-sm\">\n            <LinkButton partialId=\"allGameStyleLimit\" routeName={gameStyle.getAllRouteName(type,)} color={gameStyle.allColor}>{contentTranslation('All',)}</LinkButton>\n            <div id=\"entity-gameStylesButton-singularGameStyle-top-container\" className=\"btn-group btn-group-sm\">\n                <LinkButton partialId=\"smbGameStyleLimit\" routeName={gameStyle.getSmbRouteName(type,)} color={gameStyle.smbColor(gameStyles.hasSmb,)}>\n                    <GameStyleImage reference={SMB}/>\n                </LinkButton>\n                <LinkButton partialId=\"smb3GameStyleLimit\" routeName={gameStyle.getSmb3RouteName(type,)} color={gameStyle.smb3Color(gameStyles.hasSmb3,)}>\n                    <GameStyleImage reference={SMB3}/>\n                </LinkButton>\n                <LinkButton partialId=\"sm3dwGameStyleLimit\" routeName={gameStyle.getSm3dwRouteName(type,)} color={gameStyle.sm3dwColor(gameStyles.hasSm3dw,)}>\n                    <GameStyleImage reference={SM3DW}/>\n                </LinkButton>\n            </div>\n            <div id=\"entity-gameStylesButton-singularGameStyle-bottom-container\" className=\"btn-group btn-group-sm\">\n                <LinkButton partialId=\"nsmbuGameStyleLimit\" routeName={gameStyle.getSmwOrNsmbuRouteName(type,)} color={gameStyle.smwOrNsmbuColor(gameStyles.hasNsmbu,)}>\n                    <GameStyleImage reference={SMW} className=\"me-1\"/>\n                    <GameStyleImage reference={NSMBU}/>\n                </LinkButton>\n            </div>\n        </div>\n    //The game styles are in SMM1 / SMM3DS\n    return <div id=\"limit-gameStylesButton-container\" className=\"gameStyleAsideContent-container btn-group-vertical btn-group-sm\">\n        <LinkButton partialId=\"allGameStyleLimit\" routeName={gameStyle.getAllRouteName(type,)} color={gameStyle.allColor}>{contentTranslation('All',)}</LinkButton>\n        <div id=\"entity-gameStylesButton-singularGameStyle-top-container\" className=\"btn-group btn-group-sm\">\n            <LinkButton partialId=\"smbGameStyleLimit\" routeName={gameStyle.getSmbRouteName(type,)} color={gameStyle.smbColor(gameStyles.hasSmb,)}>\n                <GameStyleImage reference={SMB}/>\n            </LinkButton>\n            <LinkButton partialId=\"smb3GameStyleLimit\" routeName={gameStyle.getSmb3RouteName(type,)} color={gameStyle.smb3Color(gameStyles.hasSmb3,)}>\n                <GameStyleImage reference={SMB3}/>\n            </LinkButton>\n        </div>\n        <div id=\"entity-gameStylesButton-singularGameStyle-bottom-container\" className=\"btn-group btn-group-sm\">\n            <LinkButton partialId=\"smwGameStyleLimit\" routeName={gameStyle.getSmwOrNsmbuRouteName(type,)} color={gameStyle.smwOrNsmbuColor(gameStyles.hasSmw,)}>\n                <GameStyleImage reference={SMW} className=\"me-1\"/>\n                <GameStyleImage reference={NSMBU}/>\n            </LinkButton>\n        </div>\n    </div>\n}\n\n/** @reactComponent */\nfunction GameAsideContent({type, game,}: Pick<LimitAsideContentProperties, | 'type' | 'game'>,) {\n    return <div id=\"limit-gamesButton-container\" className=\"gameAsideContent-container btn-group-vertical btn-group-sm\">\n        <LinkButton partialId=\"allGameLimit\" routeName={game.getAllRouteName(type,)} color={game.allColor}>{contentTranslation('All',)}</LinkButton>\n        <div id=\"limit-gamesButton-singularGame-container\" className=\"btn-group btn-group-sm\">\n            <LinkButton partialId=\"smm1Or3dsGame\" routeName={game.getSmm1Or3dsRouteName(type,)} color={game.smm1Or3dsColor}>\n                <GameImage reference={SMM1}/>\n                <GameImage reference={SMM3DS}/>\n            </LinkButton>\n            <LinkButton partialId=\"smm2Game\" routeName={game.getSmm2RouteName(type,)} color={game.smm2Color}>\n                <GameImage reference={SMM2}/>\n            </LinkButton>\n        </div>\n    </div>\n}\n\n//endregion -------------------- Aside content --------------------\n","import type {NullableString} from '@joookiwi/type'\nimport {Link}                from 'react-router-dom'\n\nimport type {PossibleRouteName}                            from 'route/EveryRoutes.types'\nimport type {ReactProperties, ReactPropertiesWithChildren} from 'util/react/ReactProperties'\n\nimport {routeFromName} from 'route/method/route.fromName'\n\ninterface LinkButtonsProperties\n    extends ReactProperties {\n\n    readonly partialId: string\n\n    readonly routeName: NullableString<PossibleRouteName>\n\n    readonly color: BootstrapColor\n\n}\n\n/**\n * Create a {@link Link} button or a disabled button (if the {@link LinkButtonsProperties.routeName route name} is <b>null</b>)\n *\n * @reactComponent\n */\nexport default function LinkButton({partialId, routeName, color, children,}: ReactPropertiesWithChildren<LinkButtonsProperties, ReactElementOrStringOrArray>,) {\n    const id = `${partialId}-button`\n    const className = `btn btn-${color} link-button`\n\n    if (routeName == null)\n        return <button type=\"button\" id={id} className={className} disabled>{children}</button>\n    return <Link type=\"button\" id={id} className={className} to={routeFromName(routeName,)}>{children}</Link>\n}\n","import type {NullableString} from '@joookiwi/type'\nimport {Link}                from 'react-router-dom'\n\nimport type {PossibleRouteName}                            from 'route/EveryRoutes.types'\nimport type {ReactProperties, ReactPropertiesWithChildren} from 'util/react/ReactProperties'\n\nimport {routeFromName} from 'route/method/route.fromName'\n\ninterface LinkTextProperties\n    extends ReactProperties {\n\n    readonly partialId: string\n\n    readonly routeName: NullableString<PossibleRouteName>\n\n    readonly color: BootstrapColor\n\n}\n\n/**\n * Create a {@link Link} text or an underlined text if the {@link LinkTextProperties.routeName route name} is <b>null</b>\n *\n * @reactComponent\n */\nexport default function LinkText({partialId, routeName, color, children,}: ReactPropertiesWithChildren<LinkTextProperties, ReactElementOrStringOrArray>,) {\n    const id = `${partialId}-text`\n\n    if (routeName == null)\n        return <span id={id} className=\"text-decoration-underline\">{children}</span>\n    return <Link id={id} className={`link-${color}`} to={routeFromName(routeName,)}>{children}</Link>\n}\n","import type {NullableString} from '@joookiwi/type'\nimport {Link}                from 'react-router-dom'\n\nimport type {PossibleRouteName}                            from 'route/EveryRoutes.types'\nimport type {ReactProperties, ReactPropertiesWithChildren} from 'util/react/ReactProperties'\n\nimport {routeFromName} from 'route/method/route.fromName'\n\ninterface TextOrLinkProperties\n    extends ReactProperties {\n\n    readonly id: string\n\n    readonly routeName: NullableString<PossibleRouteName>\n\n}\n\n/**\n * Create a {@link Link} or a text if the {@link TextOrLinkProperties.routeName route name} is <b>null</b>\n *\n * @reactComponent\n */\nexport default function TextOrLink({id, routeName, children,}: ReactPropertiesWithChildren<TextOrLinkProperties, ReactElementOrStringOrArray>,) {\n    if (routeName == null)\n        return <span id={id}>{children}</span>\n    return <Link id={id} to={routeFromName(routeName,)}>{children}</Link>\n}\n"],"names":["LimitWithPossibleTooltipOnNote","_ref","value","children","htmlElement","useRef","note","reference","amountComment","_jsx","Tooltip","option","title","gameContentTranslation","concat","noteForTranslation","ref","className","LanguageCompanion","ProjectLanguages","Companion","_associatedClass","_classPrivateFieldLooseKey","_additionalClasses","LimitAppOption","Enum","constructor","associatedClass","super","Object","defineProperty","writable","_classPrivateFieldLooseBase","this","additionalClasses","renderContent","enumeration","_createContentOption","renderTableHeader","_createTableHeaderOption","_createNameComponent2","isEditorLimit","_jsxs","Image","file","COURSE_THEME_IMAGE_FILE","NameComponent","id","name","popoverOrientation","_LimitAppOption","ACRONYM","acronym","alternativeAcronym","TextComponent","content","key","element","contentTranslation","NAME","_createNameComponent","arguments","_ref2","alternativeContainer","EmptyAlternativeLimit","CommonOptions","get","nameHeader","DESCRIPTION","_ref3","description","descriptionForTranslation","AMOUNT_IN_ALL_GAMES","amountInSMM2","limitAmountInSMM2","englishName","limitAmountInSMM1AndSMM3DS","isUnknown","isUnknownLimitInSMM2","currentLanguage","current","isUnknownLimitInSMM1AndSMM3DS","space","slash","limitHeader","AMOUNT_IN_SMM1_AND_SMM3DS","AMOUNT_IN_SMM2","CompanionEnum","_instance","_CompanionEnum_LimitAppOption","CompanionEnum_LimitAppOption","_classPrivateFieldLoo","_classPrivateFieldLoo2","LimitGames","allColor","smm1Or3dsColor","smm2Color","getAllRouteName","type","routeName","getSmm1Or3dsRouteName","getSmm2RouteName","_LimitGames","ALL_GAMES","SUPER_MARIO_MAKER_OR_SUPER_MARIO_MAKER_FOR_NINTENDO_3DS","SUPER_MARIO_MAKER_2","_CompanionEnum_LimitGames","CompanionEnum_LimitGames","LimitGameStyles","smbColor","isSelected","smb3Color","smwOrNsmbuColor","sm3dwColor","getSmbRouteName","getSmb3RouteName","getSmwOrNsmbuRouteName","getSm3dwRouteName","_LimitGameStyles","ALL_GAME_STYLES","SMB","SMB3","SMW_OR_NSMBU","SM3DW","MIXED_GAME_STYLE","_CompanionEnum_LimitGameStyles","CompanionEnum_LimitGameStyles","GameStyles","ALL","EMPTY_STRING","Empty","NSMBU","SMM1","Games","SMM2","SMM3DS","SMW","_type","_games","LimitAppInterpreter","games","tableHeadersColor","filterByArray","it","hasAnyIn","createCardListDimension","default","small","medium","large","extraLarge","createCardListContent","amountOption","hasAllGames","hasSmm1Or3ds","hasAlternativeAcronym","hasAlternativeName","alternativeEnglishName","isEditor","englishNameInHtml","tableCaption","tableOptions","options","push","hasSmm2","getAdditionalClass","createTableContent","createTableHeader","LimitApp","viewDisplay","gameStyles","viewDisplayAndRouteName","ViewDisplays","SIMPLE_LIST","CARD_LIST","TABLE","game","amountOfSelectedGameStyles","intersect","length","gameStyle","hasSmb","hasSmb3","hasSmwOrNsmbu","SubMainContainer","reactKey","titleContent","LimitDescription","asideContent","LimitAsideContent","SubContent","appInterpreter","LimitList","items","CardList","interpreter","Table","List","partialId","withSeparator","hasAlternative","_ref4","smm1Or3dsLink","smm2Link","playLink","playRouteName","editorLink","editorRouteName","listLink","cardLink","tableLink","_Fragment","smm1Link","TextOrLink","GameImage","smm3dsLink","LinkText","color","toLowerCase","cardsLink","_ref5","TypeAsideContent","GameAsideContent","GameStyleAsideContent","_ref6","LinkButton","allRouteName","playColor","editorColor","_ref7","GameStyleImage","hasSm3dw","hasNsmbu","hasSmw","_ref8","disabled","Link","to","routeFromName"],"sourceRoot":""}