{"version":3,"file":"static/js/176.232ef8f3.chunk.js","mappings":"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","sources":["core/miiCostume/component/MiiCostumeImage.tsx","app/options/MiiCostumeAppOption.tsx","app/MiiCostumeApp.tsx","core/miiCostumeCategory/component/MiiCostumeCategoryIcon.tsx"],"sourcesContent":["import type {MiiCostumes}     from 'core/miiCostume/MiiCostumes'\nimport type {ReactProperties} from 'util/react/ReactProperties'\n\nimport Image from 'app/tools/images/Image'\n\ninterface MiiCostumeImageProperties\n    extends ReactProperties {\n\n    readonly reference: MiiCostumes\n\n}\n\n/** @reactComponent */\nexport default function MiiCostumeImage({reference,}: MiiCostumeImageProperties,) {\n    return <Image file={reference.imageFile} className=\"miiCostume-image\"/>\n}\n","import type {CompanionEnumSingleton} from '@joookiwi/enumerable'\nimport type {NullOr} from \"@joookiwi/type\"\nimport {CompanionEnum, Enum}         from '@joookiwi/enumerable'\n\nimport type {AppOption}           from 'app/options/AppOption'\nimport type {Names, Ordinals}     from 'app/options/MiiCostumeAppOption.types'\nimport type {SingleHeaderContent} from 'app/tools/table/SimpleHeader'\nimport type {MiiCostumes}         from 'core/miiCostume/MiiCostumes'\n\nimport {CommonOptions}        from 'app/options/CommonOptions'\nimport MiiCostumeImage        from 'core/miiCostume/component/MiiCostumeImage'\nimport {MiiCostumeCategories} from 'core/miiCostumeCategory/MiiCostumeCategories'\nimport MiiCostumeCategoryIcon from 'core/miiCostumeCategory/component/MiiCostumeCategoryIcon'\nimport {contentTranslation}   from 'lang/components/translationMethods'\n\nimport CategoryCompanion = MiiCostumeCategories.Companion\n\n/**\n * @todo convert the \"_createTableHeaderOption\" to have the enumerable as an argument and to be non-null\n * @todo Change CATEGORY to use {IMAGE, TEXT or NONE} instead of 2 different options.\n */\nexport abstract class MiiCostumeAppOption\n    extends Enum<Ordinals, Names>\n    implements AppOption<MiiCostumes> {\n\n    //region -------------------- Enum instances --------------------\n\n    public static readonly IMAGE =                 new class MiiCostumeAppOption_Image extends MiiCostumeAppOption {\n\n        protected override _createContentOption(enumeration: MiiCostumes,) {\n            return <MiiCostumeImage reference={enumeration}/>\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {key: 'image', element: contentTranslation('Image',),}\n        }\n\n    }('image',)\n    public static readonly NAME =                  new class MiiCostumeAppOption_Name extends MiiCostumeAppOption {\n\n        protected override _createContentOption(enumeration: MiiCostumes,) {\n            return CommonOptions.get.getNameContent(enumeration,)\n        }\n\n        protected override _createTableHeaderOption() {\n            return CommonOptions.get.nameHeader\n        }\n\n    }('name',)\n    public static readonly OFFICIAL_NOTIFICATION = new class MiiCostumeAppOption_ConditionToUnlockIt extends MiiCostumeAppOption {\n\n        protected override _createContentOption(enumeration: MiiCostumes,) {\n            const miiCostume = enumeration.reference\n            return miiCostume.officialNotification?.createSimpleTranslationComponent(miiCostume.english, miiCostume.officialNotificationAmount,)\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            //TODO add new translation to the header value.\n            return {key: 'officialNotification', element: '--Official notification--',}\n        }\n\n    }('officialNotification')\n\n    public static readonly CATEGORY =              new class MiiCostumeAppOption_Category extends MiiCostumeAppOption {\n\n        protected override _createContentOption(enumeration: MiiCostumes,) {\n            return <MiiCostumeCategoryIcon reference={CategoryCompanion.getValueByName(enumeration.reference.categoryAmericanEnglish,)}/>\n        }\n\n        protected override _createTableHeaderOption() {\n            return CommonOptions.get.categoryHeader\n        }\n\n    }('category',)\n\n    //endregion -------------------- Enum instances --------------------\n    //region -------------------- Companion enum --------------------\n\n    public static readonly CompanionEnum: CompanionEnumSingleton<MiiCostumeAppOption, typeof MiiCostumeAppOption> = class CompanionEnum_MiiCostumeAppOption\n        extends CompanionEnum<MiiCostumeAppOption, typeof MiiCostumeAppOption> {\n\n        //region -------------------- Singleton usage --------------------\n\n        static #instance?: CompanionEnum_MiiCostumeAppOption\n\n        private constructor() {\n            super(MiiCostumeAppOption,)\n        }\n\n        public static get get() {\n            return this.#instance ??= new CompanionEnum_MiiCostumeAppOption()\n        }\n\n        //endregion -------------------- Singleton usage --------------------\n\n    }\n\n    //endregion -------------------- Companion enum --------------------\n    //region -------------------- Fields --------------------\n\n    readonly #associatedClass\n    readonly #additionalClasses\n\n    //endregion -------------------- Fields --------------------\n    //region -------------------- Constructor --------------------\n\n    private constructor(associatedClass: string,) {\n        super()\n        this.#additionalClasses = [this.#associatedClass = associatedClass,] as const\n    }\n\n    //endregion -------------------- Constructor --------------------\n    //region -------------------- Getter methods --------------------\n\n    public get associatedClass(): string {\n        return this.#associatedClass\n    }\n\n    public get additionalClasses(): readonly [string,] {\n        return this.#additionalClasses\n    }\n\n    //endregion -------------------- Getter methods --------------------\n    //region -------------------- Methods --------------------\n\n    //region -------------------- App option - content --------------------\n\n    protected _createContentOption(enumeration: MiiCostumes,): ReactElement {\n        throw new ReferenceError(`The MiiCostumeAppOption.${this.name} cannot create a content option`,)\n    }\n\n    public renderContent(enumeration: MiiCostumes,): readonly [ReactElement,] {\n        return [this._createContentOption(enumeration,),]\n    }\n\n    //endregion -------------------- App option - content --------------------\n    //region -------------------- App option - table --------------------\n\n    protected _createTableHeaderOption(): NullOr<SingleHeaderContent> {\n        throw new ReferenceError(`The MiiCostumeAppOption.${this.name} cannot create a table header option`,)\n    }\n\n    public renderTableHeader(): NullOr<SingleHeaderContent> {\n        const content = this._createTableHeaderOption()\n        if (content == null)\n            return null\n        return content\n    }\n\n    //endregion -------------------- App option - table --------------------\n\n    //endregion -------------------- Methods --------------------\n\n}\n","import './MiiCostumeApp.scss'\n\nimport type {Array}              from '@joookiwi/type'\nimport type {CollectionHolder}   from '@joookiwi/collection'\nimport {GenericCollectionHolder} from '@joookiwi/collection'\n\nimport type {AppWithInterpreterProperties} from 'app/AppProperties.types'\nimport type {AppInterpreterWithTable}      from 'app/interpreter/AppInterpreterWithTable'\nimport type {DimensionOnList}              from 'app/interpreter/DimensionOnList'\nimport type {ViewAndRouteName}             from 'app/withInterpreter/DisplayButtonGroup.properties'\nimport type {ReactProperties}              from 'util/react/ReactProperties'\n\nimport SubMainContainer         from 'app/_SubMainContainer'\nimport {MiiCostumeAppOption}    from 'app/options/MiiCostumeAppOption'\nimport Table                    from 'app/tools/table/Table'\nimport TextComponent            from 'app/tools/text/TextComponent'\nimport {unfinishedText}         from 'app/tools/text/UnfinishedText'\nimport List                     from 'app/util/List'\nimport CardList                 from 'app/withInterpreter/CardList'\nimport {ViewDisplays}           from 'app/withInterpreter/ViewDisplays'\nimport {MiiCostumes}            from 'core/miiCostume/MiiCostumes'\nimport MiiCostumeImage          from 'core/miiCostume/component/MiiCostumeImage'\nimport {OtherWordInTheGames}    from 'core/otherWordInTheGame/OtherWordInTheGames'\nimport {gameContentTranslation} from 'lang/components/translationMethods'\nimport NameComponent            from 'lang/name/component/Name.component'\nimport {Empty}                  from 'util/emptyVariables'\n\nimport ALL =          MiiCostumes.ALL\nimport EMPTY_STRING = Empty.EMPTY_STRING\n\nclass MiiCostumeAppInterpreter\n    implements AppInterpreterWithTable<MiiCostumes, MiiCostumeAppOption> {\n\n    public get content() {\n        return new GenericCollectionHolder(ALL,)\n    }\n\n    //region -------------------- Card --------------------\n\n    public createCardListDimension() {\n        return {\n            default: 1,\n            small: 2,\n            medium: 3,\n            large: 4,\n            extraLarge: 5,\n            extraExtraLarge: 6,\n        } as const satisfies DimensionOnList\n    }\n\n    public createCardListContent(enumeration: MiiCostumes,) {\n        const englishCategory = enumeration.reference.categoryEnglish\n        const category = englishCategory === EMPTY_STRING ? EMPTY_STRING : `miiCostumeCategory-${englishCategory}`//TODO move to the parent container className.\n        return <div className={category}>\n            <MiiCostumeImage reference={enumeration}/>\n        </div>\n    }\n\n    //endregion -------------------- Card --------------------\n    //region -------------------- Table --------------------\n\n    public readonly tableHeadersColor = 'info' satisfies BootstrapThemeColor\n    public readonly tableColor = 'primary' satisfies BootstrapThemeColor\n    public readonly tableCaption = gameContentTranslation('mii costume.all', {\n        singularName: <TextComponent key=\"miiCostume-singularName\" content={OtherWordInTheGames.MII_COSTUME.singularLowerCaseNameOnReferenceOrNull ?? unfinishedText(OtherWordInTheGames.MII_COSTUME.singularEnglishName,)} className=\"text-decoration-underline\"/>,\n        pluralName: <TextComponent key=\"miiCostume-pluralName\" content={OtherWordInTheGames.MII_COSTUME.pluralLowerCaseNameOnReferenceOrNull ?? unfinishedText(OtherWordInTheGames.MII_COSTUME.pluralEnglishName,)} className=\"text-decoration-underline\"/>,\n    },) satisfies ReactElementOrString\n\n    public get tableOptions(): Array<MiiCostumeAppOption> {\n        return [\n            MiiCostumeAppOption.IMAGE,\n            MiiCostumeAppOption.NAME,\n            MiiCostumeAppOption.OFFICIAL_NOTIFICATION,\n            MiiCostumeAppOption.CATEGORY,\n        ]\n    }\n\n\n    public getAdditionalClass(option: MiiCostumeAppOption,) {\n        return option.additionalClasses\n    }\n\n    public createTableContent(content: MiiCostumes, option: MiiCostumeAppOption,) {\n        return option.renderContent(content,)\n    }\n\n    public createTableHeader(option: MiiCostumeAppOption,) {\n        return option.renderTableHeader()\n    }\n\n    //endregion -------------------- Table --------------------\n\n}\n\nconst viewDisplayAndRouteName = [\n    [ViewDisplays.SIMPLE_LIST, 'everyMiiCostume (list)',],\n    [ViewDisplays.CARD_LIST, 'everyMiiCostume (card)',],\n    [ViewDisplays.TABLE, 'everyMiiCostume (table)',],\n] as const satisfies Array<ViewAndRouteName>\nconst appInterpreter = new MiiCostumeAppInterpreter()\n\n/** @reactComponent */\nexport default function MiiCostumeApp({viewDisplay,}: AppWithInterpreterProperties,) {\n    const miiCostume = OtherWordInTheGames.MII_COSTUME.singularLowerCaseNameOnReferenceOrNull ?? unfinishedText(OtherWordInTheGames.MII_COSTUME.singularEnglishName,)\n    const miiCostumes = OtherWordInTheGames.MII_COSTUME.pluralLowerCaseNameOnReferenceOrNull ?? unfinishedText(OtherWordInTheGames.MII_COSTUME.pluralEnglishName,)\n\n    return <SubMainContainer reactKey=\"miiCostume\" viewDisplayAndRouteName={viewDisplayAndRouteName} viewDisplay={viewDisplay}\n                             titleContent={gameContentTranslation('mii costume.all', {singularName: miiCostume, pluralName: miiCostumes,},)}>\n        <SubContent viewDisplay={viewDisplay}/>\n    </SubMainContainer>\n}\n\n/** @reactComponent */\nfunction SubContent({viewDisplay,}: AppWithInterpreterProperties,) {\n    if (viewDisplay === ViewDisplays.SIMPLE_LIST)\n        return <MiiCostumeList items={appInterpreter.content}/>\n    if (viewDisplay === ViewDisplays.CARD_LIST)\n        return <CardList reactKey=\"miiCostume\" interpreter={appInterpreter}/>\n    return <Table id=\"miiCostume-table\" interpreter={appInterpreter}/>\n}\n\n//region -------------------- List --------------------\n\ninterface MiiCostume_ListProperties\n    extends ReactProperties {\n\n    readonly items: CollectionHolder<MiiCostumes>\n\n}\n\n/** @reactComponent */\nfunction MiiCostumeList({items,}: MiiCostume_ListProperties,) {\n    return <List partialId=\"miiCostume\" items={items} withSeparator>{it =>\n        <div className=\"d-flex justify-content-between align-items-center\">\n            <NameComponent id=\"miiCostume-name\" name={it.reference} popoverOrientation=\"right\"/>\n            <MiiCostumeImage reference={it}/>\n        </div>\n    }</List>\n}\n\n//endregion -------------------- List --------------------\n","import type {MiiCostumeCategories} from 'core/miiCostumeCategory/MiiCostumeCategories'\nimport type {ReactProperties}      from 'util/react/ReactProperties'\n\nimport Image from 'app/tools/images/Image'\n\ninterface MiiCostumeCategoryIconProperties\n    extends ReactProperties {\n\n    readonly reference: MiiCostumeCategories\n\n}\n\n/** @reactComponent */\nexport default function MiiCostumeCategoryIcon({reference,}: MiiCostumeCategoryIconProperties,) {\n    return <Image file={reference.imageFile} className=\"miiCostumeCategory-icon\"/>\n}\n"],"names":["MiiCostumeImage","_ref","reference","_jsx","Image","file","imageFile","className","CategoryCompanion","MiiCostumeCategories","Companion","_associatedClass","_classPrivateFieldLooseKey","_additionalClasses","MiiCostumeAppOption","Enum","constructor","associatedClass","super","Object","defineProperty","writable","value","_classPrivateFieldLooseBase","this","additionalClasses","_createContentOption","enumeration","ReferenceError","concat","name","renderContent","_createTableHeaderOption","renderTableHeader","content","_MiiCostumeAppOption","IMAGE","key","element","contentTranslation","NAME","CommonOptions","get","getNameContent","nameHeader","OFFICIAL_NOTIFICATION","_miiCostume$officialN","miiCostume","officialNotification","createSimpleTranslationComponent","english","officialNotificationAmount","CATEGORY","MiiCostumeCategoryIcon","getValueByName","categoryAmericanEnglish","categoryHeader","CompanionEnum","_instance","_CompanionEnum_MiiCostumeAppOption","CompanionEnum_MiiCostumeAppOption","_classPrivateFieldLoo","_classPrivateFieldLoo2","ALL","MiiCostumes","EMPTY_STRING","Empty","viewDisplayAndRouteName","ViewDisplays","SIMPLE_LIST","CARD_LIST","TABLE","appInterpreter","_OtherWordInTheGames$","_OtherWordInTheGames$2","tableHeadersColor","tableColor","tableCaption","gameContentTranslation","singularName","TextComponent","OtherWordInTheGames","MII_COSTUME","singularLowerCaseNameOnReferenceOrNull","unfinishedText","singularEnglishName","pluralName","pluralLowerCaseNameOnReferenceOrNull","pluralEnglishName","GenericCollectionHolder","createCardListDimension","default","small","medium","large","extraLarge","extraExtraLarge","createCardListContent","englishCategory","categoryEnglish","category","children","tableOptions","getAdditionalClass","option","createTableContent","createTableHeader","MiiCostumeApp","_OtherWordInTheGames$3","_OtherWordInTheGames$4","viewDisplay","miiCostumes","SubMainContainer","reactKey","titleContent","SubContent","_ref2","MiiCostumeList","items","CardList","interpreter","Table","id","_ref3","List","partialId","withSeparator","it","_jsxs","NameComponent","popoverOrientation"],"sourceRoot":""}