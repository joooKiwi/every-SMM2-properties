{"version":3,"file":"static/js/766.96cfb9c9.chunk.js","mappings":"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","sources":["app/options/MiiCostumeAppOption.tsx","app/MiiCostumeApp.tsx","app/options/component/EmptyAppOption.ts"],"sourcesContent":["import type {CollectionHolder, EnumerableConstructor, PossibleValueByEnumerable} from '@joookiwi/enumerable/dist/types'\nimport {Enum}                                                                    from '@joookiwi/enumerable'\nimport {lazy}                                                                    from 'react'\n\nimport type {Names, Ordinals}                                  from 'app/options/MiiCostumeAppOption.types'\nimport type {AppOptionWithContent, PossibleRenderReactElement} from 'app/options/component/AppOptionWithContent'\nimport type {AppOptionWithTable}                               from 'app/options/component/AppOptionWithTable'\nimport type {SingleHeaderContent}                              from 'app/tools/table/SimpleHeader'\nimport type {MiiCostumes}                                      from 'core/miiCostume/MiiCostumes'\nimport type {ReactElement}                                     from 'util/react/ReactProperties'\nimport type {NullOr}                                           from 'util/types/nullable'\n\nimport {CommonOptions}                 from 'app/options/CommonOptions'\nimport {AppOptionWithContentComponent} from 'app/options/component/AppOptionWithContent.component'\nimport {AppOptionWithTableComponent}   from 'app/options/component/AppOptionWithTable.component'\nimport {EmptyAppOption}                from 'app/options/component/EmptyAppOption'\nimport {MiiCostumeCategories}          from 'core/miiCostumeCategory/MiiCostumeCategories'\nimport {contentTranslation}            from 'lang/components/translationMethods'\n\n//region -------------------- dynamic imports --------------------\n\nconst Image = lazy(() => import('app/tools/images/Image'))\n\n//endregion -------------------- dynamic imports --------------------\n\n/**\n * @todo convert the \"_createTableHeaderOption\" to have the enumerable as an argument and to be non-null\n * @todo Change CATEGORY to use {IMAGE, TEXT or NONE} instead of 2 different options.\n */\nexport abstract class MiiCostumeAppOption\n    extends Enum<Ordinals, Names> {\n\n    //region -------------------- Enum instances --------------------\n\n    public static readonly IMAGE =                 new class MiiCostumeAppOption_Image extends MiiCostumeAppOption {\n\n        protected override _createContentOption() {\n            return () => {\n                const enumeration = MiiCostumeAppOption.CALLBACK_TO_GET_ENUMERATION()\n\n                return <Image file={enumeration.imageFile}/>\n            }\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {key: 'image', element: contentTranslation('Image'),}\n        }\n\n    }()\n    public static readonly NAME =                  new class MiiCostumeAppOption_Name extends MiiCostumeAppOption {\n\n        protected override _createContentOption() {\n            return () => CommonOptions.get.getNameContent(MiiCostumeAppOption.CALLBACK_TO_GET_ENUMERATION())\n        }\n\n        protected override _createTableHeaderOption() {\n            return CommonOptions.get.nameHeader\n        }\n\n    }()\n    public static readonly OFFICIAL_NOTIFICATION = new class MiiCostumeAppOption_ConditionToUnlockIt extends MiiCostumeAppOption {\n\n        protected override _createContentOption() {\n            return () => {\n                const enumeration = MiiCostumeAppOption.CALLBACK_TO_GET_ENUMERATION()\n                const miiCostume = enumeration.reference\n\n                return miiCostume.officialNotification?.createSimpleTranslationComponent(miiCostume.english, miiCostume.officialNotificationAmount,)\n            }\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            //TODO add new translation to the header value.\n            return {key: 'officialNotification', element: '--Official notification--',}\n        }\n\n    }()\n\n    public static readonly CATEGORY =              new class MiiCostumeAppOption_Category extends MiiCostumeAppOption {\n\n        protected override _createContentOption() {\n            return () => {\n                const enumeration = MiiCostumeAppOption.CALLBACK_TO_GET_ENUMERATION(),\n                    categoryName = enumeration.reference.categoryContainer.nameContainer\n\n                return CommonOptions.get.getCategoryContent(enumeration, () => MiiCostumeCategories.getValueByName(categoryName.english).imageFile,)\n            }\n        }\n\n        protected override _createTableHeaderOption() {\n            return CommonOptions.get.categoryHeader\n        }\n\n    }()\n    /**\n     * Tell whenever a {@link MiiCostumeAppOption.CATEGORY category} is displayed\n     * as a text (<i>true</i>) or an image (<i>false</i>).\n     */\n    public static readonly CATEGORY_AS_TEXT =      new class MiiCostumeAppOption_CategoryAsText extends MiiCostumeAppOption {}()\n\n    //endregion -------------------- Enum instances --------------------\n    //region -------------------- Enum fields --------------------\n\n    static [index: number]: MiiCostumeAppOption\n\n    //endregion -------------------- Enum fields --------------------\n    //region -------------------- Fields --------------------\n\n    /**\n     * The callback to get the enumeration based for each option.\n     *\n     * @note It should only be set by {@link MiiCostumeApp} and get by {@link MiiCostumeAppOption}.\n     */\n    public static CALLBACK_TO_GET_ENUMERATION: () => MiiCostumes\n\n    #appOptionWithContent?: AppOptionWithContent\n    #appOptionWithTable?: AppOptionWithTable\n\n    //endregion -------------------- Fields --------------------\n\n    private constructor() {\n        super()\n    }\n\n    //region -------------------- Getter methods --------------------\n    //endregion -------------------- Getter methods --------------------\n    //region -------------------- Methods --------------------\n\n    //region -------------------- App option - content --------------------\n\n    protected _createContentOption(): NullOr<() => PossibleRenderReactElement> {\n        return null\n    }\n\n    private get __appOptionWithContent(): AppOptionWithContent {\n        if (this.#appOptionWithContent == null) {\n            const content = this._createContentOption()\n            this.#appOptionWithContent = content == null\n                ? EmptyAppOption.get\n                : new AppOptionWithContentComponent(content,)\n        }\n        return this.#appOptionWithContent\n    }\n\n    public get renderContent(): readonly ReactElement[] {\n        return this.__appOptionWithContent.renderContent\n    }\n\n    //endregion -------------------- App option - content --------------------\n    //region -------------------- App option - table --------------------\n\n    protected _createTableHeaderOption(): NullOr<SingleHeaderContent> {\n        return null\n    }\n\n    protected get __appOptionWithTable(): AppOptionWithTable {\n        if (this.#appOptionWithTable == null) {\n            const content = this._createTableHeaderOption()\n            this.#appOptionWithTable = content == null ? EmptyAppOption.get : new AppOptionWithTableComponent(() => content,)\n        }\n        return this.#appOptionWithTable\n    }\n\n    public get renderTableHeader(): NullOr<SingleHeaderContent> {\n        return this.__appOptionWithTable.renderTableHeader\n    }\n\n    //endregion -------------------- App option - table --------------------\n\n    //endregion -------------------- Methods --------------------\n    //region -------------------- Enum methods --------------------\n\n    protected override get _static(): EnumerableConstructor<Ordinals, Names> {\n        return MiiCostumeAppOption\n    }\n\n    public static getValue(value: PossibleValueByEnumerable<MiiCostumeAppOption>,): MiiCostumeAppOption {\n        return Enum.getValueOn(this, value,)\n    }\n\n    public static get values(): CollectionHolder<MiiCostumeAppOption> {\n        return Enum.getValuesOn(this)\n    }\n\n    public static [Symbol.iterator]() {\n        return this.values[Symbol.iterator]()\n    }\n\n    //endregion -------------------- Enum methods --------------------\n}\n","import './MiiCostumeApp.scss'\n\nimport type {AppInterpreterWithTable, SimplifiedTableProperties}   from 'app/interpreter/AppInterpreterWithTable'\nimport type {PossibleDimensionOnCardList, PossibleDimensionOnList} from 'app/interpreter/DimensionOnList'\nimport type {EveryPossibleRouteNames}                              from 'routes/everyRoutes.types'\nimport type {ReactElementOrString}                                 from 'util/react/ReactProperties'\n\nimport {MiiCostumeAppOption}    from 'app/options/MiiCostumeAppOption'\nimport Image                    from 'app/tools/images/Image'\nimport TextComponent            from 'app/tools/text/TextComponent'\nimport {unfinishedText}         from 'app/tools/text/UnfinishedText'\nimport {AbstractTableApp}       from 'app/withInterpreter/AbstractTableApp'\nimport {MiiCostumes}            from 'core/miiCostume/MiiCostumes'\nimport {gameContentTranslation} from 'lang/components/translationMethods'\n\nexport default class MiiCostumeApp\n    extends AbstractTableApp<AppInterpreterWithTable<MiiCostumes, MiiCostumeAppOption>> {\n\n    //region -------------------- Create methods --------------------\n\n    protected override _createKey() {\n        return 'miiCostume'\n    }\n\n\n    protected override _createSimpleListRouteName(): EveryPossibleRouteNames {\n        return 'everyMiiCostumes (list)'\n    }\n\n    protected override _createCardListRouteName(): EveryPossibleRouteNames {\n        return 'everyMiiCostumes (card)'\n    }\n\n    protected override _createTableRouteName(): EveryPossibleRouteNames {\n        return 'everyMiiCostumes (table)'\n    }\n\n\n    protected override _createTitleContent(): ReactElementOrString {\n        return gameContentTranslation('mii costume.all', {\n            singularName: <TextComponent key=\"miiCostume-singularName\" content={unfinishedText('Mii costume')} classes={['text-decoration-underline']}/>,//TODO add Mii costume (singular form)\n            pluralName: <TextComponent key=\"miiCostume-pluralName\" content={unfinishedText('Mii costumes')} classes={['text-decoration-underline']}/>,//TODO add Mii costume (plural form)\n        },)\n    }\n\n    protected override _createAppOptionInterpreter(): AppInterpreterWithTable<MiiCostumes, MiiCostumeAppOption> {\n        return new class implements AppInterpreterWithTable<MiiCostumes, MiiCostumeAppOption> {\n\n            public get iterable() {\n                return MiiCostumes[Symbol.iterator]()\n            }\n\n            //region -------------------- List interpreter --------------------\n\n            public createListDimension(): PossibleDimensionOnList {\n                return {\n                    small: 6,\n                    medium: 4,\n                    large: 3,\n                    extraExtraLarge: 2,\n                }\n            }\n\n            //endregion -------------------- List interpreter --------------------\n            //region -------------------- Card list interpreter --------------------\n\n            public createCardListDimension(): PossibleDimensionOnCardList {\n                return 'list'\n            }\n\n            public createCardListContent({reference, englishName, imageFile,}: MiiCostumes,) {\n                const category = reference.categoryEnglish === '' ? '' : `entityCategory-${reference.categoryEnglish}`//TODO move to the parent container className.\n                return <div className={`${category}`}>\n                    <Image file={imageFile}/>\n                </div>\n            }\n\n            //endregion -------------------- Card list interpreter --------------------\n            //region -------------------- Table interpreter --------------------\n\n            public set callbackToGetEnumerable(value: () => MiiCostumes,) {\n                MiiCostumeAppOption.CALLBACK_TO_GET_ENUMERATION = value\n            }\n\n            public get tableOptions(): readonly MiiCostumeAppOption[] {\n                return [\n                    MiiCostumeAppOption.IMAGE,\n                    MiiCostumeAppOption.NAME,\n                    MiiCostumeAppOption.OFFICIAL_NOTIFICATION,\n                    MiiCostumeAppOption.CATEGORY,\n                ]\n            }\n\n            public get tableProperties(): SimplifiedTableProperties {\n                return {\n                    caption: gameContentTranslation('mii costume.all', {\n                        singularName: <TextComponent key=\"miiCostume-singularName\" content={unfinishedText('Mii costume')} classes={['text-decoration-underline']}/>,//TODO add Mii costume (singular form)\n                        pluralName: <TextComponent key=\"miiCostume-pluralName\" content={unfinishedText('Mii costumes')} classes={['text-decoration-underline']}/>,//TODO add Mii costume (plural form)\n                    },),\n                }\n            }\n\n\n            public createTableContent(option: MiiCostumeAppOption,) {\n                return option.renderContent\n            }\n\n            public createTableHeader(option: MiiCostumeAppOption,) {\n                return option.renderTableHeader\n            }\n\n            //endregion -------------------- Table interpreter --------------------\n\n        }()\n    }\n\n    //endregion -------------------- Create methods --------------------\n\n}\n","import type {AppOptionWithContent} from 'app/options/component/AppOptionWithContent'\nimport type {AppOptionWithTable}   from 'app/options/component/AppOptionWithTable'\n\nimport {EMPTY_ARRAY} from 'util/emptyVariables'\n\n/**\n * @singleton\n */\nexport class EmptyAppOption\n    implements AppOptionWithContent, AppOptionWithTable {\n\n    //region -------------------- Singleton usage --------------------\n\n    static #instance?: EmptyAppOption\n\n    private constructor() {\n    }\n\n    public static get get() {\n        return this.#instance ??= new this()\n    }\n\n    //endregion -------------------- Singleton usage --------------------\n\n    public readonly renderContent = EMPTY_ARRAY\n    public readonly renderTableHeader = null\n\n}\n"],"names":["Image","lazy","Symbol","iterator","MiiCostumeAppOption","this","content","_createContentOption","EmptyAppOption","AppOptionWithContentComponent","__appOptionWithContent","renderContent","_createTableHeaderOption","AppOptionWithTableComponent","__appOptionWithTable","renderTableHeader","value","Enum","values","IMAGE","enumeration","CALLBACK_TO_GET_ENUMERATION","file","imageFile","key","element","contentTranslation","NAME","CommonOptions","OFFICIAL_NOTIFICATION","miiCostume","reference","officialNotification","createSimpleTranslationComponent","english","officialNotificationAmount","CATEGORY","categoryName","categoryContainer","nameContainer","MiiCostumeCategories","CATEGORY_AS_TEXT","MiiCostumeApp","gameContentTranslation","singularName","TextComponent","unfinishedText","classes","pluralName","MiiCostumes","small","medium","large","extraExtraLarge","englishName","category","categoryEnglish","className","caption","option","AbstractTableApp","EMPTY_ARRAY"],"sourceRoot":""}