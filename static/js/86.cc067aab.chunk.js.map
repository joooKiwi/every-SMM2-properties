{"version":3,"file":"static/js/86.cc067aab.chunk.js","mappings":"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","sources":["app/options/EntityLimitAppOption.tsx","app/EntityLimitApp.tsx"],"sourcesContent":["import type {CollectionHolder, EnumerableConstructor, PossibleValueByEnumerable} from '@joookiwi/enumerable/dist/types'\nimport {Enum}                                                                    from '@joookiwi/enumerable'\n\nimport type {AppOptionWithContent, PossibleRenderReactElement} from './component/AppOptionWithContent'\nimport type {AppOptionWithTable}                               from './component/AppOptionWithTable'\nimport type {EntityLimits}                                     from '../../core/entityLimit/EntityLimits'\nimport type {Names, Ordinals}                                  from './EntityLimitAppOption.types'\nimport type {NullOr}                                           from '../../util/types'\nimport type {ReactElement}                                     from '../../util/react/ReactProperties'\nimport type {SingleHeaderContent}                              from '../tools/table/SimpleHeader'\n\nimport {AppOptionWithContentComponent}              from './component/AppOptionWithContent.component'\nimport {AppOptionWithTableComponent}                from './component/AppOptionWithTable.component'\nimport {contentTranslation, gameContentTranslation} from '../../lang/components/translationMethods'\nimport {EMPTY_REACT_ELEMENT}                        from '../../util/emptyReactVariables'\nimport {Games}                                      from '../../core/game/Games'\nimport NameComponent                                from '../../lang/name/component/Name.component'\nimport TextComponent                                from '.././tools/text/TextComponent'\n\nexport abstract class EntityLimitAppOption\n    extends Enum<Ordinals, Names> {\n\n    //region -------------------- Enum instances --------------------\n\n    public static readonly ACRONYM = new class EntityLimitAppOption_Acronym extends EntityLimitAppOption {\n\n        protected override _createContentOption({reference: {acronym, alternativeAcronym,},}: EntityLimits,) {\n            const finalAcronym = alternativeAcronym == null\n                ? acronym == null\n                    ? ''\n                    : acronym\n                : `${acronym} / ${alternativeAcronym}`\n\n            return <TextComponent content={finalAcronym}/>\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {key: 'acronym', element: contentTranslation('Acronym(s)'),}\n        }\n\n    }()\n    public static readonly NAME = new class EntityLimitAppOption_Name extends EntityLimitAppOption {\n\n        protected override _createContentOption({reference,}: EntityLimits,) {\n            return [\n                <NameComponent id=\"name\" name={reference} popoverOrientation=\"bottom\"/>,\n                <NameComponent id=\"alternativeName\" name={reference.alternativeContainer} popoverOrientation=\"bottom\"/>,\n            ]\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {\n                key: 'names', element: contentTranslation('Name'),\n                subHeaders: [\n                    {key: 'name', element: EMPTY_REACT_ELEMENT,},\n                    {key: 'alternativeName', element: contentTranslation('Alternative name'),},\n                ],\n            }\n        }\n\n    }()\n    public static readonly AMOUNT = new class EntityLimitAppOption_Amount extends EntityLimitAppOption {\n\n        protected override _createContentOption({reference, englishName,}: EntityLimits,) {\n            return [\n                <TextComponent key={`${englishName} - text component (amount SMM1&3DS)`} content={reference.limitAmountInSMM1AndSMM3DS} isUnknown={reference.isUnknownLimitInSMM1AndSMM3DS}/>,\n                <TextComponent key={`${englishName} - text component (amount SMM2)`} content={reference.limitAmountInSMM2} isUnknown={reference.isUnknownLimitInSMM2}/>,\n            ]\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {\n                key: 'limit', element: contentTranslation('Limit'), subHeaders: [\n                    {key: 'limit-SuperMarioMaker1And3DS', alt: Games.SUPER_MARIO_MAKER_1.englishName, path: Games.SUPER_MARIO_MAKER_1.imagePath,},\n                    {key: 'limit-SuperMarioMaker2', alt: Games.SUPER_MARIO_MAKER_2.englishName, path: Games.SUPER_MARIO_MAKER_2.imagePath,},\n                ],\n            }\n        }\n\n    }()\n    public static readonly TYPE = new class EntityLimitAppOption_Type extends EntityLimitAppOption {\n\n        protected override _createContentOption({reference: {type,},}: EntityLimits,) {\n            return <TextComponent content={gameContentTranslation(type.englishCommonText)}/>\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {key: 'type', element: contentTranslation('Type'),}\n        }\n\n    }()\n\n    //endregion -------------------- Enum instances --------------------\n    //region -------------------- Enum fields --------------------\n\n    static [index: number]: EntityLimitAppOption\n\n    //endregion -------------------- Enum fields --------------------\n    //region -------------------- Fields --------------------\n\n    /**\n     * The callback to get the enumeration based for each option.\n     *\n     * @note It should only be set by {@link EntityLimitAppOption} and get by {@link EntityLimitApp}.\n     */\n    public static CALLBACK_TO_GET_ENUMERATION: () => EntityLimits\n\n    #appOptionWithContent?: AppOptionWithContent\n    #appOptionWithTable?: AppOptionWithTable\n\n    //endregion -------------------- Fields --------------------\n\n    private constructor() {\n        super()\n    }\n\n    //region -------------------- Getter methods --------------------\n    //endregion -------------------- Getter methods --------------------\n    //region -------------------- Methods --------------------\n\n    //region -------------------- App option - content --------------------\n\n    protected abstract _createContentOption(enumeration: EntityLimits,): PossibleRenderReactElement\n\n    private get __appOptionWithContent(): AppOptionWithContent {\n        return this.#appOptionWithContent ??= new AppOptionWithContentComponent(() => this._createContentOption(EntityLimitAppOption.CALLBACK_TO_GET_ENUMERATION()),)\n    }\n\n    public get renderContent(): readonly ReactElement[] {\n        return this.__appOptionWithContent.renderContent\n    }\n\n    //endregion -------------------- App option - content --------------------\n    //region -------------------- App option - table --------------------\n\n    protected abstract _createTableHeaderOption(): SingleHeaderContent\n\n    private get __appOptionWithTable(): AppOptionWithTable {\n        return this.#appOptionWithTable ??= new AppOptionWithTableComponent(() => this._createTableHeaderOption(),)\n    }\n\n    public get renderTableHeader(): NullOr<SingleHeaderContent> {\n        return this.__appOptionWithTable.renderTableHeader\n    }\n\n    //endregion -------------------- App option - table --------------------\n\n    //endregion -------------------- Methods --------------------\n    //region -------------------- Enum methods --------------------\n\n    protected override get _static(): EnumerableConstructor<Ordinals, Names> {\n        return EntityLimitAppOption\n    }\n\n    public static getValue(value: PossibleValueByEnumerable<EntityLimitAppOption>,): EntityLimitAppOption {\n        return Enum.getValueOn(this, value,)\n    }\n\n    public static get values(): CollectionHolder<EntityLimitAppOption> {\n        return Enum.getValuesOn(this)\n    }\n\n    public static [Symbol.iterator]() {\n        return this.values[Symbol.iterator]()\n    }\n\n    //endregion -------------------- Enum methods --------------------\n\n}\n","import './EntityLimitApp.scss'\n\nimport type {AppInterpreterWithTable, SimplifiedTableProperties}   from './interpreter/AppInterpreterWithTable'\nimport type {AppProperties}                                        from './AppProperties.types'\nimport type {EntityLimitAppStates}                                 from './AppStates.types'\nimport type {PossibleDimensionOnCardList, PossibleDimensionOnList} from './interpreter/DimensionOnList'\nimport type {ReactElementOrString}                                 from '../util/react/ReactProperties'\n\nimport {AbstractTableApp}       from './withInterpreter/AbstractTableApp'\nimport {EntityLimitAppOption}   from './options/EntityLimitAppOption'\nimport {EntityLimits}           from '../core/entityLimit/EntityLimits'\nimport {gameContentTranslation} from '../lang/components/translationMethods'\nimport TextComponent            from './tools/text/TextComponent'\nimport {ViewDisplays}           from './withInterpreter/ViewDisplays'\n\n/**\n * @reactComponent\n */\nexport default class EntityLimitApp\n    extends AbstractTableApp<AppInterpreterWithTable<EntityLimits, EntityLimitAppOption>, AppProperties, EntityLimitAppStates> {\n\n    public constructor(props: AppProperties,) {\n        super(props,)\n        this.state = {\n            typeDisplayed: ViewDisplays.TABLE,\n        }\n    }\n\n    //region -------------------- Create methods --------------------\n\n    protected override _createKey(): string {\n        return 'entityLimit'\n    }\n\n    protected override _createTitleContent(): ReactElementOrString {\n        return gameContentTranslation('Every entity limits')\n    }\n\n    protected override _createAppOptionInterpreter(): AppInterpreterWithTable<EntityLimits, EntityLimitAppOption> {\n        return new class implements AppInterpreterWithTable<EntityLimits, EntityLimitAppOption> {\n\n            public get iterable() {\n                return EntityLimits[Symbol.iterator]()\n            }\n\n            //region -------------------- List interpreter --------------------\n\n            public createListDimension(): PossibleDimensionOnList {\n                return {\n                    small: 6,\n                    large: null,\n                    extraLarge: 2,\n                }\n            }\n\n            //endregion -------------------- List interpreter --------------------\n            //region -------------------- Card list interpreter --------------------\n\n            public createCardListDimension(): PossibleDimensionOnCardList {\n                return 'list'\n            }\n\n            public createCardListContent(enumeration: EntityLimits,) {\n                EntityLimitAppOption.CALLBACK_TO_GET_ENUMERATION = () => enumeration\n                const {reference: {limitAmountInSMM1AndSMM3DS, limitAmountInSMM2, isUnknownLimitInSMM2,}, englishName, englishNameInHtml,} = enumeration\n\n                return <div className=\"card-body\" id={`entityLimit-${englishNameInHtml}`}>\n                    {limitAmountInSMM1AndSMM3DS === limitAmountInSMM2\n                        ? <TextComponent key={`${englishName} - card list text component`} content={limitAmountInSMM2} isUnknown={isUnknownLimitInSMM2}/>\n                        : EntityLimitAppOption.AMOUNT.renderContent}\n                </div>\n            }\n\n            //endregion -------------------- Card list interpreter --------------------\n            //region -------------------- Table interpreter --------------------\n\n            public set callbackToGetEnumerable(value: () => EntityLimits,) {\n                EntityLimitAppOption.CALLBACK_TO_GET_ENUMERATION = value\n            }\n\n            public get tableOptions(): readonly EntityLimitAppOption[] {\n                return [\n                    EntityLimitAppOption.ACRONYM,\n                    EntityLimitAppOption.NAME,\n                    EntityLimitAppOption.AMOUNT,\n                    EntityLimitAppOption.TYPE,\n                ]\n            }\n\n            public get tableProperties(): SimplifiedTableProperties {\n                return {\n                    caption: gameContentTranslation('Every entity limits'),\n                }\n            }\n\n\n            public createTableContent(option: EntityLimitAppOption,) {\n                return option.renderContent\n            }\n\n            public createTableHeader(option: EntityLimitAppOption,) {\n                return option.renderTableHeader\n            }\n\n            //endregion -------------------- Table interpreter --------------------\n\n        }()\n    }\n\n    //endregion -------------------- Create methods --------------------\n}\n"],"names":["Symbol","iterator","EntityLimitAppOption","this","AppOptionWithContentComponent","_createContentOption","CALLBACK_TO_GET_ENUMERATION","__appOptionWithContent","renderContent","AppOptionWithTableComponent","_createTableHeaderOption","__appOptionWithTable","renderTableHeader","value","Enum","values","ACRONYM","reference","acronym","alternativeAcronym","finalAcronym","TextComponent","content","key","element","contentTranslation","NAME","id","name","popoverOrientation","alternativeContainer","subHeaders","EMPTY_REACT_ELEMENT","AMOUNT","englishName","limitAmountInSMM1AndSMM3DS","isUnknown","isUnknownLimitInSMM1AndSMM3DS","limitAmountInSMM2","isUnknownLimitInSMM2","alt","Games","path","TYPE","type","gameContentTranslation","englishCommonText","EntityLimitApp","props","state","typeDisplayed","ViewDisplays","EntityLimits","small","large","extraLarge","enumeration","englishNameInHtml","className","caption","option","AbstractTableApp"],"sourceRoot":""}