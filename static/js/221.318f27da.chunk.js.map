{"version":3,"file":"static/js/221.318f27da.chunk.js","mappings":"8LAOOA,EAAYC,EAAAA,EAAaD,UAOjB,SAASE,EAAkBC,GAAuE,IAArEC,SAAUC,EAAG,MAAEC,EAAK,YAAEC,GAA2CJ,EACzG,OAAOK,EAAAA,EAAAA,KAAA,OAA6CC,GAAG,4BAA4BC,UAAU,YAAWC,SAAEL,EAAMM,KAAIC,IAAA,IAAEC,EAAMC,GAAMF,EAAA,OAC9HL,EAAAA,EAAAA,KAACQ,EAAa,CAAiDZ,SAAUC,EAAKS,KAAMA,EAAMG,UAAWF,EAAMR,YAAaA,GAAY,GAAAW,OAA7Gb,EAAG,6BAAAa,OAA4BJ,EAAI,KAA4E,KACzI,GAAAI,OAFmBb,EAAG,6BAG3B,CAEA,SAASW,EAAaG,GAA4E,IAA1Ef,SAAUC,EAAG,KAAES,EAAI,YAAEP,EAAW,UAAEU,GAAoCE,EAC1F,MAAOC,SAAUC,IAAgBC,EAAAA,EAAAA,MAC3BC,GAAOC,EAAAA,EAAAA,GAAcP,GAE3B,OAAII,IAAgBE,GAAQT,IAASP,GAC1BC,EAAAA,EAAAA,KAAA,UAAsCE,UAAS,sBAAAQ,OAAwBJ,EAAKW,SAAQ,oBAAoBC,KAAK,SAASC,UAAQ,MAAAT,OAA9Gb,EAAG,MAAAa,OAAKJ,EAAKC,KAAI,OACrCP,EAAAA,EAAAA,KAACoB,EAAAA,GAAI,CAA+BC,GAAIN,EAAMb,UAAS,mBAAAQ,OAAqBJ,EAAKW,SAAQ,oBAAoBK,QAASA,IAAM9B,EAAU+B,QAAUjB,GAAK,GAAAI,OAAvIb,EAAG,MAAAa,OAAKJ,EAAKC,KAAI,KAC1C,C,eCtBe,SAASiB,EAAW7B,GAAmF,IAAlF,SAACQ,GAA6ER,EAC9G,OAAOK,EAAAA,EAAAA,KAAA,OAAKE,UAAU,qEAAoEC,SAAEA,GAChG,CCyBe,SAASsB,EAAgB9B,GAA4I,IAA3I,SAACC,EAAQ,wBAAE8B,EAAuB,YAAEC,EAAW,MAAEC,EAAK,aAAEC,EAAY,aAAEC,EAAY,YAAEC,EAAW,SAAE5B,GAAsCR,EAC5K,OAAOK,EAAAA,EAAAA,KAAA,OAAKE,UAAU,oBAAmBC,UACrC6B,EAAAA,EAAAA,MAAA,OAAK/B,GAAE,GAAAS,OAAKd,EAAQ,kBAAkBM,UAAS,iBAAAQ,OAAmBiB,EAAYV,SAAQ,cAAad,SAAA,EAC/FH,EAAAA,EAAAA,KAAA,MAAIC,GAAE,GAAAS,OAAKd,EAAQ,cAAcM,UAAU,YAAWC,SAAE0B,IAC9C,MAATD,EAAgB,MAAO5B,EAAAA,EAAAA,KAAA,SAAOC,GAAE,GAAAS,OAAKd,EAAQ,oBAAoBM,UAAU,kBAAiBC,SAAEyB,KAC/FI,EAAAA,EAAAA,MAAA,SAAO9B,UAAU,wBAAuBC,SAAA,EACpCH,EAAAA,EAAAA,KAACN,EAAkB,CAACE,SAAUA,EAAUE,MAAO4B,EAAyB3B,YAAa4B,IACpFG,KAEW,MAAfC,GAAsB/B,EAAAA,EAAAA,KAACiC,EAAAA,EAAc,CAACf,KAAK,YAAYgB,UAAQ,EAAA/B,SAAC,iBAA+BH,EAAAA,EAAAA,KAACwB,EAAW,CAAArB,SAAE4B,KAC9G/B,EAAAA,EAAAA,KAAA,OAAKC,GAAE,GAAAS,OAAKd,EAAQ,gBAAgBM,UAAU,cAAaC,SAAEA,QAGzE,C,kHChCOgC,EAASC,EAAAA,EAAMD,KACfE,EAASD,EAAAA,EAAMC,KACfC,EAASF,EAAAA,EAAME,OAEtBC,GAAAC,EAAAA,EAAAA,GAAA,YAAAC,GAAAD,EAAAA,EAAAA,GAAA,cAAAE,GAAAF,EAAAA,EAAAA,GAAA,cAAAG,GAAAH,EAAAA,EAAAA,GAAA,eAAAI,GAAAJ,EAAAA,EAAAA,GAAA,wBAAAK,GAAAL,EAAAA,EAAAA,GAAA,kBAAAM,GAAAN,EAAAA,EAAAA,GAAA,cAAAO,GAAAP,EAAAA,EAAAA,GAAA,kBAAAQ,GAAAR,EAAAA,EAAAA,GAAA,eAAAS,GAAAT,EAAAA,EAAAA,GAAA,2BAAAU,GAAAV,EAAAA,EAAAA,GAAA,6BAAAW,GAAAX,EAAAA,EAAAA,GAAA,yCAAAY,GAAAZ,EAAAA,EAAAA,GAAA,mCACO,MAAMa,EAMDC,WAAAA,GAORC,OAAAC,eAAA,KAAAf,EAAA,CAAAgB,UAAA,EAAAC,WAAA,IAAAH,OAAAC,eAAA,KAAAd,EAAA,CAAAe,UAAA,EAAAC,WAAA,IAAAH,OAAAC,eAAA,KAAAb,EAAA,CAAAc,UAAA,EAAAC,WAAA,IAAAH,OAAAC,eAAA,KAAAZ,EAAA,CAAAa,UAAA,EAAAC,WAAA,IAAAH,OAAAC,eAAA,KAAAX,EAAA,CAAAY,UAAA,EAAAC,WAAA,IAAAH,OAAAC,eAAA,KAAAV,EAAA,CAAAW,UAAA,EAAAC,WAAA,IAAAH,OAAAC,eAAA,KAAAT,EAAA,CAAAU,UAAA,EAAAC,WAAA,IAAAH,OAAAC,eAAA,KAAAR,EAAA,CAAAS,UAAA,EAAAC,WAAA,IAAAH,OAAAC,eAAA,KAAAP,EAAA,CAAAQ,UAAA,EAAAC,WAAA,IAAAH,OAAAC,eAAA,KAAAN,EAAA,CAAAO,UAAA,EAAAC,WAAA,IAAAH,OAAAC,eAAA,KAAAL,EAAA,CAAAM,UAAA,EAAAC,WAAA,IAAAH,OAAAC,eAAA,KAAAJ,EAAA,CAAAK,UAAA,EAAAC,WAAA,GAPuB,CAEvB,cAAkBC,GAAO,IAADC,EAAAC,EACpB,OAAW,QAAXA,GAAAD,GAAAE,EAAAA,EAAAA,GAAOC,KAAIxB,IAAAA,UAAA,IAAAsB,EAAAA,EAAAD,EAAArB,GAAe,IAAIwB,IAClC,CAqBA,cAAWC,GAAiC,IAADC,EAAAC,EACvC,OAAW,QAAXA,GAAAD,GAAAH,EAAAA,EAAAA,GAAOC,KAAItB,IAAAA,UAAA,IAAAyB,EAAAA,EAAAD,EAAAxB,GAAiB,CAAC5C,IAAK,OAAQsE,SAASC,EAAAA,EAAAA,IAAmB,QAC1E,CAEOC,cAAAA,CAAeC,GAClB,OAAOtE,EAAAA,EAAAA,KAACuE,EAAAA,EAAa,CAACtE,GAAG,OAAOM,KAAM+D,EAAYE,UAAWC,mBAAmB,QACpF,CAGA,cAAWC,GAAiC,IAADC,EAAAC,EACvC,OAAW,QAAXA,GAAAD,GAAAb,EAAAA,EAAAA,GAAOC,KAAIrB,IAAAA,UAAA,IAAAkC,EAAAA,EAAAD,EAAAjC,GAAiB,CAAC7C,IAAK,OAAQsE,SAASC,EAAAA,EAAAA,IAAmB,QAC1E,CAEA,eAAWS,GAAkC,IAADC,EAAAC,EACxC,OAAW,QAAXA,GAAAD,GAAAhB,EAAAA,EAAAA,GAAOC,KAAIpB,IAAAA,UAAA,IAAAoC,EAAAA,EAAAD,EAAAnC,GAAkB,CAAC9C,IAAK,QAASsE,SAASC,EAAAA,EAAAA,IAAmB,kBAC5E,CAEA,kBAAWY,GAAqC,IAADC,EAAAC,EAC3C,OAAW,QAAXA,GAAAD,GAAAnB,EAAAA,EAAAA,GAAOC,KAAIhB,IAAAA,UAAA,IAAAmC,EAAAA,EAAAD,EAAAlC,GAAqB,CAAClD,IAAK,WAAYsE,SAASgB,EAAAA,EAAAA,IAAuB,YACtF,CAGA,cAAWC,GAAiC,IAADC,EAAAC,EACvC,OAAW,QAAXA,GAAAD,GAAAvB,EAAAA,EAAAA,GAAOC,KAAIjB,IAAAA,UAAA,IAAAwC,EAAAA,EAAAD,EAAAvC,GAAiB,CAACjD,IAAK,OAAQsE,SAASgB,EAAAA,EAAAA,IAAuB,iBAC9E,CAEA,wBAAWI,GAA2C,IAADC,EAAAC,EACjD,OAAW,QAAXA,GAAAD,GAAA1B,EAAAA,EAAAA,GAAOC,KAAInB,IAAAA,UAAA,IAAA6C,EAAAA,EAAAD,EAAA5C,GAA2B,CAAC/C,IAAK,6BAA8B6F,IAAKvD,EAAKwD,UAAUC,aAAc7E,KAAMoB,EAAKwD,UAAUE,SACrI,CACA,kBAAWC,GAAqC,IAADC,EAAAC,EAC3C,OAAW,QAAXA,GAAAD,GAAAjC,EAAAA,EAAAA,GAAOC,KAAIlB,IAAAA,UAAA,IAAAmD,EAAAA,EAAAD,EAAAlD,GAAqB,CAAChD,IAAK,uBAAwB6F,IAAKrD,EAAKsD,UAAUC,aAAc7E,KAAMsB,EAAKsD,UAAUE,SACzH,CAQOI,cAAAA,CAAe3B,GAClB,MAAME,EAAYF,EAAYE,UAE9B,OAAOxC,EAAAA,EAAAA,MAAA,OAA8D/B,GAAE,GAAAS,OAAK4D,EAAY4B,kBAAiB,gCAAgChG,UAAU,8BAA6BC,SAAA,CAC3KqE,EAAU2B,sBAAuBnG,EAAAA,EAAAA,KAACoG,EAAAA,EAAS,CAAC5B,UAAWrC,IAAU,KACjEqC,EAAU6B,2BAA4BrG,EAAAA,EAAAA,KAACoG,EAAAA,EAAS,CAAC5B,UAAWlC,IAAY,KACxEkC,EAAU8B,sBAAuBtG,EAAAA,EAAAA,KAACoG,EAAAA,EAAS,CAAC5B,UAAWnC,IAAU,OAAI,GAAA3B,OAHtD4D,EAAYiC,YAAW,0BAK/C,CAGA,eAAWC,GAAkC,IAADC,EAAAC,EACxC,OAAW,QAAXA,GAAAD,GAAA3C,EAAAA,EAAAA,GAAOC,KAAIf,IAAAA,UAAA,IAAA0D,EAAAA,EAAAD,EAAAzD,GAAkB,CAACnD,IAAK,QAASsE,SAASgB,EAAAA,EAAAA,IAAuB,kBAChF,CAEA,2BAAWwB,GAA8C,IAADC,EAAAC,EACpD,OAAW,QAAXA,GAAAD,GAAA9C,EAAAA,EAAAA,GAAOC,KAAId,IAAAA,UAAA,IAAA4D,EAAAA,EAAAD,EAAA3D,GAA8B,CAACpD,IAAK,aAAcsE,SAASgB,EAAAA,EAAAA,IAAuB,uBACjG,CACA,6BAAW2B,GAAgD,IAADC,EAAAC,EACtD,OAAW,QAAXA,GAAAD,GAAAjD,EAAAA,EAAAA,GAAOC,KAAIb,IAAAA,UAAA,IAAA8D,EAAAA,EAAAD,EAAA7D,GAAgC,CAACrD,IAAK,eAAgBsE,SAASgB,EAAAA,EAAAA,IAAuB,yBACrG,CAEA,yCAAW8B,GAA8D,IAADC,EAAAC,EACpE,OAAW,QAAXA,GAAAD,GAAApD,EAAAA,EAAAA,GAAOC,KAAIZ,IAAAA,UAAA,IAAAgE,EAAAA,EAAAD,EAAA/D,GAA4C,CACnDtD,IAAK,+BAAgCsE,SAASgB,EAAAA,EAAAA,IAAuB,oCAAqC,CACtGiC,MAAOjF,EAAKkF,QACZC,QAAShF,EAAO+E,UAG5B,CAEA,mCAAWE,GAAwD,IAADC,EAAAC,EAC9D,OAAW,QAAXA,GAAAD,GAAA1D,EAAAA,EAAAA,GAAOC,KAAIX,IAAAA,UAAA,IAAAqE,EAAAA,EAAAD,EAAApE,GAAsC,CAC7CvD,IAAK,oBAAqBsE,SAASgB,EAAAA,EAAAA,IAAuB,gCAAiC,CACvFuC,KAAMrF,EAAKgF,UAGvB,EAzGA9D,OAAAC,eAFSH,EAAad,EAAA,CAAAkB,UAAA,EAAAC,WAAA,G,4HCCnBiE,EAAeC,EAAAA,EAAMD,aACrBE,EAAeC,EAAAA,EAAgBD,UAsBvB,SAASE,EAAKpI,GAAwC,IAAvC,GAACM,EAAE,YAAE+H,GAA8BrI,EAC7D,MAAMsI,GAAUC,EAAAA,EAAAA,eAAcF,EAAYG,cACpCC,EAAQJ,EAAYK,WACpBC,EAAeN,EAAYO,kBAC3BC,EAAUR,EAAYS,aACtBC,EAwGV,SAAkCC,EAAiDV,GAAmE,IAAnH,mBAACW,GAA6CD,EAC7E,OAA0B,MAAtBC,EACO,IAAIC,EAAAA,wBAAwBC,MAAMC,KAAK,CAACC,OAAQf,EAAQe,SAAU,IAAMrB,KAC5EM,EAAQ7H,KAAI6I,IAAMC,EAAAA,EAAAA,qBAAoBN,EAAmBK,GAAME,EAAAA,GAAOA,EAAAA,GAAOxB,IACxF,CA5G8ByB,CAA0BpB,EAAaC,GAC3DoB,EAoHV,SAAwBC,EAA0DrB,GAA+E,IAAxI,QAACsB,EAAO,mBAAEC,GAA6CF,EAC5E,OAAOC,EAAQnJ,KAAIqJ,IACf,MAAMC,EAAmC,CAACD,EAAalD,aAGvD,OAFA0B,EAAQ0B,SAAQC,IACZC,EAAAA,EAAAA,gBAAeL,EAAmBC,EAAcG,IAAUX,GAAMS,EAAaI,KAAKb,OAC/ES,CAAY,GAE3B,CA3HqBK,CAAgB/B,EAAaC,GACxC+B,EAoIV,SAAuBC,EAAgDhC,GAAgF,IAA/H,kBAACiC,GAA4CD,EACjE,MAAME,EAAmD,GAOzD,OANAlC,EAAQ0B,SAAQV,IACZ,MAAMmB,EAAcF,EAAkBjB,GACnB,MAAfmB,GAEJD,EAAcL,KAAKM,EAAa,IAE7B,IAAIvB,EAAAA,wBAAwBsB,EACvC,CA7IoBE,CAAerC,EAAaC,GAE5C,OAAOjG,EAAAA,EAAAA,MAAA,OAAK/B,GAAIA,EAAIC,UAAS,UAAAQ,OAAqB,MAAT0H,EAAgBT,EAAY,SAAAjH,OAAY0H,GAAO,KAAA1H,OAAoB,MAAhB4H,EAAuBX,EAAY,WAAAjH,OAAc4H,GAAc,UAASnI,SAAA,EAChK6B,EAAAA,EAAAA,MAACsI,EAAW,CAAAnK,SAAA,CAAEuI,EAAmBsB,MACjChI,EAAAA,EAAAA,MAACuI,EAAY,CAAApK,SAAA,CAAEuI,EAAmBW,MAClCrH,EAAAA,EAAAA,MAACwI,EAAW,CAAArK,SAAA,CAAEuI,EAAmBsB,MACjChK,EAAAA,EAAAA,KAACyK,EAAY,CAAAtK,SAAEqI,MAEvB,CAEA,SAAS8B,EAAWjK,GAA+J,IAA7JF,UAAWuI,EAAmBsB,IAA2H3J,EAC3K,MAAMqK,EAAU,IAAI5B,MAAuBkB,EAAQhB,QAQnD,OAPAgB,EAAQL,SAAQ,CAACV,EAAI0B,KACjB,MAAMC,EAAS,GAAAlK,OAAMmK,EAAa5B,GAAI,WACtCyB,EAAQC,IAAK3I,EAAAA,EAAAA,MAAA,OAAK/B,GAAI2K,EAAuD1K,UAAS,QAAAQ,OAAUgI,EAAkB/E,IAAIgH,IAAMxK,SAAA,EACxHH,EAAAA,EAAAA,KAAC8K,EAAa,CAACF,UAAWA,EAAUzK,SAAE8I,KACtCjJ,EAAAA,EAAAA,KAAC+K,EAAqB,CAAA5K,SAAE8I,MAA2B,iBAAAvI,OAFAmK,EAAa5B,GAAI,KAGlE,KAEHjJ,EAAAA,EAAAA,KAAA,OAAKE,UAAU,UAASC,SAAEuK,GACrC,CAEA,SAASH,EAAY5J,GAA8J,IAA5JR,UAAWuI,EAAmBW,IAA0H1I,EAC3K,MAAM+I,EAAe,IAAIZ,MAAuBO,EAASL,QAczD,OAbAK,EAASM,SAAQ,CAACJ,EAASoB,KACvB,MAAMK,EAAgBzB,EAAQ,GACxB0B,EAAa,IAAInC,MAAuBS,EAAQP,OAAS,IAC/DkC,EAAAA,EAAAA,aAAY3B,EAAS,GAAII,SAAQ,CAACwB,EAAkBC,KAE5CH,EAAWG,GADS,MAApBD,GACgBnL,EAAAA,EAAAA,KAAA,OAAsEE,UAAU,iDAA+C,wBAAAQ,OAA7FsK,EAAa,KAAAtK,OAAIiK,EAAI,EAAC,KAAAjK,OAAI0K,EAAI,EAAC,OAEjEpL,EAAAA,EAAAA,KAAA,OAAgEE,UAAS,QAAAQ,OAAUgI,EAAkB/E,IAAIyH,IAAMjL,SAAEgL,GAAgB,kBAAAzK,OAArGsK,EAAa,KAAAtK,OAAIiK,EAAI,EAAC,KAAAjK,OAAI0K,EAAI,EAAC,KAA6E,IAGhK1B,EAAaiB,IACT3K,EAAAA,EAAAA,KAAA,OAA2DE,UAAS,kBAAAQ,OAAoBmH,EAAUmD,IAAkB7K,SAAE8K,GAAU,sBAAAvK,OAAhGsK,EAAa,KAAAtK,OAAIiK,EAAI,EAAC,KAAiF,KAExI3K,EAAAA,EAAAA,KAAA,OAAKE,UAAU,WAAUC,SAAEuJ,GACtC,CAEA,SAASc,EAAWa,GAA+J,IAA7JlL,UAAWuI,EAAmBsB,IAA2HqB,EAC3K,MAAMX,EAAU,IAAI5B,MAAuBkB,EAAQhB,QASnD,OARAgB,EAAQL,SAAQ,CAACV,EAAI0B,KACjB,MAAMC,EAAS,GAAAlK,OAAMmK,EAAa5B,GAAI,WACtCyB,EAAQC,IAAK3I,EAAAA,EAAAA,MAAA,OAAK/B,GAAI2K,EAAuD1K,UAAS,QAAAQ,OAAUgI,EAAkB/E,IAAIgH,IAAMxK,SAAA,EACxHH,EAAAA,EAAAA,KAACsL,EAAa,CAACV,UAAWA,EAAUzK,SAAE8I,KACtCjJ,EAAAA,EAAAA,KAAC+K,EAAqB,CAAA5K,SAAE8I,MAA2B,iBAAAvI,OAFAmK,EAAa5B,GAAI,KAGlE,KAGHjJ,EAAAA,EAAAA,KAAA,OAAKE,UAAU,eAAcC,SAAEuK,GAC1C,CAEA,SAASI,EAAaS,GAA8G,IAA7G,SAACpL,EAAQ,UAAEyK,GAA8FW,GAC5HC,EAAAA,EAAAA,IAA0B,iBAAZrL,EAAsB,6DAEpC,MAAMsL,EAAUtL,EAASsL,QACzB,OAAe,MAAXA,EACO,MACJzL,EAAAA,EAAAA,KAAC0L,EAAAA,EAAO,CAAC9B,OAAQ,CAAC+B,MAAOF,EAASG,UAAW,UAAYpH,UAAWoG,GAC/E,CAEA,SAASU,EAAaO,GAA8G,IAA7G,SAAC1L,EAAQ,UAAEyK,GAA8FiB,GAC5HL,EAAAA,EAAAA,IAA0B,iBAAZrL,EAAsB,6DAEpC,MAAMsL,EAAUtL,EAASsL,QACzB,OAAe,MAAXA,EACO,MACJzL,EAAAA,EAAAA,KAAC0L,EAAAA,EAAO,CAAC9B,OAAQ,CAAC+B,MAAOF,EAASG,UAAW,OAASpH,UAAWoG,GAC5E,CAEA,SAASG,EAAqBe,GAAwE,IAAvE,SAAC3L,GAAkE2L,EAC9F,MAAuB,iBAAZ3L,GACAH,EAAAA,EAAAA,KAAA+L,EAAAA,SAAA,CAAA5L,SAAGA,IACV,YAAaA,EACNA,EAASgE,SACbnE,EAAAA,EAAAA,KAACgM,EAAAA,EAAK,CAACC,OAAQ9L,EAASY,KAAM6E,aAAczF,EAASuF,KAChE,CAEA,SAAS+E,EAAYyB,GAAyE,IAAxE,SAAC/L,GAAmE+L,EACtF,OAAgB,MAAZ/L,EACO,MACJH,EAAAA,EAAAA,KAAA,SAAOE,UAAU,6CAA6CiM,KAAK,QAAOhM,SAAEA,GACvF,CAQA,SAAS0K,EAAauB,GAClB,MAAwB,iBAAVA,EAAqBA,EAASA,EAAOvM,GACvD,C,4DCpIO8H,EAAeC,EAAAA,EAAMD,aAuB5B,MAAM0E,EAAkFpD,GAAMA,EAAG1C,YAElF,SAAS+F,EAAI3M,GAC2F,IAAtH,UAAC4M,EAAS,MAAEC,EAAK,cAAEC,GAAgB,EAAK,cAAEC,EAAgBL,EAAyB,SAAElM,GAA6BR,EAC/G,OAAOK,EAAAA,EAAAA,KAAA,OAAKE,UAAU,qEAAoEC,UACtFH,EAAAA,EAAAA,KAAA,MAAIC,GAAE,GAAAS,OAAK6L,EAAS,SAASrM,UAAS,QAAAQ,OAAU+L,EAAgB,gBAAkB9E,EAAY,SAAQxH,SAAEqM,EAAMpM,KAAI6I,IAC9GjJ,EAAAA,EAAAA,KAAA,MAA8CC,GAAE,GAAAS,OAAK6L,EAAS,KAAA7L,OAAIuI,EAAG/C,kBAAiB,aAAahG,UAAU,WAAUC,SAAEA,EAAS8I,IAAI,cAAAvI,OAA/GgM,EAAczD,GAAI,WAGrD,C,uECnCOtB,EAAeC,EAAAA,EAAMD,aAmBb,SAASgF,EAAQhN,GAAyG,IAADiN,EAAA,IAAtE,SAAChN,EAAQ,YAAEoI,EAAW,aAAE6E,GAA2ClN,EACrH,QAAZiN,EAAAC,SAAY,IAAAD,IAAZC,EAAiBC,GAAcA,EAAWvG,aAC1C,MAAMwG,EAmBV,SAAyB/E,GACrB,MAAM+E,EAAa/E,EAAYgF,0BACzBC,EAAKF,EAAWG,QAChBC,EAAKJ,EAAWK,MAChBC,EAAKN,EAAWO,OAChBC,EAAKR,EAAWS,MAChBC,EAAKV,EAAWW,WAChBC,EAAMZ,EAAWa,gBAEvB,MAAM,YAANlN,OAAmBuM,GAAEvM,OAAS,MAANyM,EAAaxF,EAAY,gBAAAjH,OAAmByM,IAAIzM,OAAS,MAAN2M,EAAa1F,EAAY,gBAAAjH,OAAmB2M,IAAI3M,OAAS,MAAN6M,EAAa5F,EAAY,gBAAAjH,OAAmB6M,IAAI7M,OAAS,MAAN+M,EAAa9F,EAAY,gBAAAjH,OAAmB+M,IAAI/M,OAAU,MAAPiN,EAAchG,EAAY,iBAAAjH,OAAoBiN,GACtR,CA7BuBE,CAAgB7F,GAC7BuB,EAAUvB,EAAYuB,QAEtBuE,EAAmB,IAAIhF,MAA2BS,EAAQP,QAahE,OAZAO,EAAQI,SAAQ,CAACmD,EAAYnC,KACzB,MAAMoD,EAAYlB,EAAaC,GAG/BgB,EAAiBnD,IACb3K,EAAAA,EAAAA,KAAA,OAAqDC,GAAE,GAAAS,OAAKd,EAAQ,KAAAc,OAAIoM,EAAW5G,kBAAiB,cAAchG,UAAS,GAAAQ,OAAKd,EAAQ,cAAaO,UACjJ6B,EAAAA,EAAAA,MAAA,OAAyD9B,UAAU,+DAA8DC,SAAA,EAC7HH,EAAAA,EAAAA,KAACuE,EAAAA,EAAa,CAAuCtE,GAAG,OAAOM,KAAMuM,EAAWtI,UAAUwJ,cAAevJ,mBAAmB,QAAM,GAAA/D,OAA3GqN,EAAS,uBAChC/N,EAAAA,EAAAA,KAAA,OAAmDE,UAAU,iCAAgCC,SAAE6H,EAAYiG,sBAAsBnB,IAAW,GAAApM,OAA/HqN,EAAS,gCAA6H,GAAArN,OAF1IqN,EAAS,qCAGhB,GAAArN,OAJGqN,EAAS,+BAKhB,KAEP/N,EAAAA,EAAAA,KAAA,OAAKE,UAAS,OAAAQ,OAASqM,EAAU,wCAAuC5M,SAAE2N,GACrF,C,uGC9Be,SAASI,EAAOvO,GAA8J,IAA9G,SAACQ,EAAQ,OAAEyJ,EAAQuE,GAAIC,EAAQ,UAAExD,GAAyEjL,EAKrL,OAJA0O,EAAAA,EAAAA,YAAU,KACN,MAAMC,EAAWC,EAAAA,EAAyB5K,IAAI6K,IAAI5D,EAAW,IAAI6D,EAAAA,EAAgB7D,EAAWhB,EAAQwE,IACpG,MAAO,IAAMG,EAAAA,EAAyB5K,IAAI+K,OAAOJ,GAAWK,SAAS,IAE1D,OAARxO,QAAQ,IAARA,EAAAA,EAAY,IACvB,C,eCVe,SAASyO,EAAWjP,GAAmK,IAAnG,SAACQ,EAAQ,UAAEyK,KAAciE,GAAsElP,EAC9L,OAAOK,EAAAA,EAAAA,KAACkO,EAAO,CAACtD,UAAWA,KAAeiE,EAAe1O,UACrDH,EAAAA,EAAAA,KAAC8O,EAAAA,EAAa,CAAiB7O,GAAI2K,EAAWrB,QAASpJ,EAAU,iBAAe,WAA5DyK,IAE5B,C,yBCDOpL,EAAYuP,EAAAA,EAAiBvP,UAEpCwP,GAAAxM,EAAAA,EAAAA,GAAA,8BACe,MAAMyM,UACTC,EAAAA,UAUR5L,WAAAA,CAAY6L,GACRC,MAAMD,GARV5L,OAAAC,eAAA,KAAAwL,EAAA,CAAAvL,UAAA,EAAAC,WAAA,KASII,EAAAA,EAAAA,GAAAC,KAAIiL,GAAAA,GAA+BxP,EAAU+B,QAAQoC,IAAYI,KAAKxD,MACtEwD,KAAKsL,MAAQ,CACTlL,SAASnE,EAAAA,EAAAA,KAAC8O,EAAAA,EAAa,CAAgCvF,SAAOzF,EAAAA,EAAAA,GAAEC,KAAIiL,GAAAA,IAA6B,GAAAtO,OAAjEqD,KAAK9D,GAAE,iBAE/C,CAKA,MAAWA,GACP,OAAO8D,KAAKoL,MAAMlP,EACtB,CAEA,UAAWqP,GACP,OAAOvL,KAAKoL,MAAMG,MACtB,CAEA,yBAAWC,GACP,OAAOxL,KAAKoL,MAAMI,qBACtB,CAEA,mBAAWV,GACP,OAAO9K,KAAKoL,MAAMN,eACtB,CAEA,QAAWtO,GACP,OAAOwD,KAAK8K,gBAAgBtO,IAChC,CAEA,sBAAWkE,GACP,OAAOV,KAAK8K,gBAAgBpK,kBAChC,CAIgB+K,iBAAAA,GACZ,MAAMvP,EAAK8D,KAAK9D,GACVsP,EAAwBxL,KAAKwL,sBAEnCxL,KAAK0L,SAAS,CACVtL,SAASnE,EAAAA,EAAAA,KAAC4O,EAAW,CAA8BhE,UAAW3K,EAAI2J,OAAQ8F,EAAa3L,KAAKuL,OAAQvL,KAAKU,oBAAoBL,EAAAA,EAAAA,IAAmB,0BACtHL,KAAK8K,gBAAiBV,GAAK,CAACwB,KAAMA,IAAMJ,GAAsB,GAAOK,KAAMA,IAAML,GAAsB,IAAUpP,UAAA2D,EAAAA,EAAAA,GACtIC,KAAIiL,GAAAA,IAAA,GAAAtO,OAFqBT,EAAE,qBAKxC,CAEgB4P,MAAAA,GACZ,OAAO9L,KAAKsL,MAAMlL,OACtB,EAWJ,SAASuL,EAAa9E,EAAmBnG,EAAgEkH,GACrG,MAAM/B,EAAmC,CACrC+B,MAAOA,EACPpC,QAASuG,SAASC,eAAenF,GACjCoF,MAAM,EACNC,QAAS,eAKb,OAH0B,MAAtBxL,IACAmF,EAAOgC,UAAYnH,GAEhBmF,CACX,C,0BCzFOpK,EAAYuP,EAAAA,EAAiBvP,UAGrB,SAAS0Q,EAAiBvQ,GAAgE,IAA/D,GAACM,EAAE,OAAEqP,EAAM,KAAE/O,EAAI,mBAAE4P,GAAwCxQ,EACjG,MAAMyQ,GAAqBC,EAAAA,EAAAA,kBAAiB9P,EAAK+P,mBAAmBrH,GAAMA,EAAGsH,YACvEhH,EAA6C,GAC7CiH,EAAkBhR,EAAU+B,QAUlC,OATAoI,EAAAA,EAAAA,IAAQpJ,EAAKkQ,aAAa,CAACC,EAAUhN,KAC7B0M,EAAmBO,IAAID,IACvBnH,EAAQO,MAAK9H,EAAAA,EAAAA,MAAA,OAAwE9B,UAAU,2BAA0BC,SAAA,EACrHH,EAAAA,EAAAA,KAAC8O,EAAAA,EAAa,CACVvF,QAAO,GAAA7I,QAAKkQ,EAAAA,EAAAA,IAAoBF,EAASnK,cAAY7F,OAAG8P,EAAgBK,OAAKnQ,OAAG8P,EAAgBM,YAAUpQ,OAAG8P,EAAgBK,OAC7H3Q,UAAU,6EACdF,EAAAA,EAAAA,KAAC8O,EAAAA,EAAa,CAACvF,QAAS7F,EAAOxD,UAAU,wCAAqC,GAAAQ,OAJxDT,EAAE,kCAAAS,OAAiCgQ,EAASnK,cAK9D,KAETvG,EAAAA,EAAAA,KAAA,OAAoCC,GAAIqP,EAAQpP,UAAU,gBAAgB6Q,QAASZ,EAAmBhQ,SAAEoJ,GAAO,GAAA7I,OAAlGT,EAAE,qBAC1B,C,ICrBO4H,E,QAAYC,EAAgBD,UAYpB,SAAStD,EAAa5E,GAA6C,IAA5C,GAACM,KAAO4O,GAAgClP,EAC1E,MAAOwQ,EAAoBZ,IAA0ByB,EAAAA,EAAAA,WAAS,IACxD,KAACzQ,GAASsO,EAEVjE,EAAS,GAAAlK,OAAMT,EAAE,KAAAS,OAAImH,EAAUtH,EAAK0Q,UACpC3B,EAAM,GAAA5O,OAAMkK,EAAS,SAE3B,OAAO5I,EAAAA,EAAAA,MAAA,OAAK/B,GAAE,GAAAS,OAAKkK,EAAS,cAAc1K,UAAU,iBAAgBC,SAAA,EAChEH,EAAAA,EAAAA,KAACiP,EAAoB,CAAChP,GAAI2K,EAAW0E,OAAQA,EAAQC,sBAAuBA,EAAuBV,gBAAiBA,KACpH7O,EAAAA,EAAAA,KAACkQ,EAAiB,CAAC3P,KAAMA,EAAMN,GAAI2K,EAAW0E,OAAQA,EAAQa,mBAAoBA,MAE1F,C","sources":["app/withInterpreter/DisplayButtonGroup.tsx","app/util/Description.tsx","app/_SubMainContainer.tsx","app/options/CommonOptions.tsx","app/tools/table/Table.tsx","app/util/List.tsx","app/withInterpreter/CardList.tsx","bootstrap/popover/Popover.tsx","bootstrap/popover/TextPopover.tsx","lang/name/component/NamePopover.component.tsx","lang/name/component/NameList.component.tsx","lang/name/component/Name.component.tsx"],"sourcesContent":["import {Link, useLocation} from 'react-router-dom'\n\nimport type {DisplayButtonGroupProperties, DisplayButtonProperties} from 'app/withInterpreter/DisplayButtonGroup.properties'\n\nimport {ViewDisplays}  from 'app/withInterpreter/ViewDisplays'\nimport {routeFromName} from 'route/method/route.fromName'\n\nimport Companion = ViewDisplays.Companion\n\n/**\n * Create a button to be used in a \"button group\" for displaying a specific \"view display\".\n *\n * @reactComponent\n */\nexport default function DisplayButtonGroup({reactKey: key, views, currentView,}: DisplayButtonGroupProperties,) {\n    return <div key={`${key} (button group container)`} id=\"btn-viewDisplay-container\" className=\"btn-group\">{views.map(([view, name,]) =>\n        <DisplayButton key={`${key} (button group content - ${view})`} reactKey={key} view={view} routeName={name} currentView={currentView}/>\n    )}</div>\n}\n\nfunction DisplayButton({reactKey: key, view, currentView, routeName,}: DisplayButtonProperties,) {\n    const {pathname: currentPath,} = useLocation()\n    const path = routeFromName(routeName,)\n\n    if (currentPath === path || view === currentView)\n        return <button key={`${key} (${view.name})`} className={`btn btn-success bi-${view.htmlType} btn-viewDisplay`} type=\"button\" disabled/>\n    return <Link key={`${key} (${view.name})`} to={path} className={`btn btn-dark bi-${view.htmlType} btn-viewDisplay`} onClick={() => Companion.current = view}/>\n}\n","import './Description.scss'\n\nimport type {SimpleReactPropertiesWithChildren} from 'util/react/ReactProperties'\n\n/** @reactComponent */\nexport default function Description({children,}: SimpleReactPropertiesWithChildren<| NonNullReactElement | string>,) {\n    return <div className=\"description-container container-sm rounded-5 p-2 mx-auto mt-1 mb-3\">{children}</div>\n}\n","import './_SubMainContainer.scss'\n\nimport type {Array} from '@joookiwi/type'\n\nimport type {ViewAndRouteName}                  from 'app/withInterpreter/DisplayButtonGroup.properties'\nimport type {SimpleReactPropertiesWithChildren} from 'util/react/ReactProperties'\n\nimport DisplayButtonGroup from 'app/withInterpreter/DisplayButtonGroup'\nimport {ViewDisplays}     from 'app/withInterpreter/ViewDisplays'\nimport UnfinishedText     from 'app/tools/text/UnfinishedText'\nimport Description        from 'app/util/Description'\n\ninterface SubMainContainerProperties\n    extends SimpleReactPropertiesWithChildren<ReactElementOrString> {\n\n    readonly reactKey: string\n\n    readonly viewDisplayAndRouteName: Array<ViewAndRouteName>\n\n    readonly viewDisplay: ViewDisplays\n\n    readonly alert?: ReactElementOrString\n\n    readonly titleContent: ReactElementOrString\n\n    readonly asideContent?: ReactElementOrString\n\n    readonly description?: ReactElementOrString\n\n}\n\n/** @reactComponent */\nexport default function SubMainContainer({reactKey, viewDisplayAndRouteName, viewDisplay, alert, titleContent, asideContent, description, children,}: SubMainContainerProperties,) {\n    return <div className=\"subMain-container\">\n        <div id={`${reactKey}-app-container`} className={`app-container ${viewDisplay.htmlType}-container`}>\n            <h1 id={`${reactKey}-app-title`} className=\"app-title\">{titleContent}</h1>\n            {alert == null ? null : <aside id={`${reactKey}-alert-container`} className=\"alert-container\">{alert}</aside>}\n            <aside className=\"viewChanger-container\">\n                <DisplayButtonGroup reactKey={reactKey} views={viewDisplayAndRouteName} currentView={viewDisplay}/>\n                {asideContent}\n            </aside>\n            {description == null ? <UnfinishedText type=\"paragraph\" isHidden>description</UnfinishedText> : <Description>{description}</Description>}\n            <div id={`${reactKey}-app-content`} className=\"app-content\">{children}</div>\n        </div>\n    </div>\n}\n","import type {Enumerable} from '@joookiwi/enumerable'\n\nimport type {SimpleImageHeader, SimpleReactHeader, SingleHeaderContent} from 'app/tools/table/SimpleHeader'\nimport type {ClassWithEnglishName}                                      from 'core/ClassWithEnglishName'\nimport type {ClassWithReference}                                        from 'core/ClassWithReference'\nimport type {ClassInAnySuperMarioMakerGame}                             from 'core/game/ClassInAnySuperMarioMakerGame'\nimport type {Name}                                                      from 'lang/name/Name'\n\nimport {Games}                                      from 'core/game/Games'\nimport GameImage                                    from 'core/game/component/GameImage'\nimport {contentTranslation, gameContentTranslation} from 'lang/components/translationMethods'\nimport NameComponent                                from 'lang/name/component/Name.component'\n\nimport SMM1 =   Games.SMM1\nimport SMM2 =   Games.SMM2\nimport SMM3DS = Games.SMM3DS\n\n/** @singleton */\nexport class CommonOptions {\n\n    //region -------------------- Singleton usage --------------------\n\n    static #instance?: CommonOptions\n\n    private constructor() {}\n\n    public static get get() {\n        return this.#instance ??= new this()\n    }\n\n    //endregion -------------------- Singleton usage --------------------\n    //region -------------------- Fields --------------------\n\n    #nameHeader?: SimpleReactHeader\n    #iconHeader?: SimpleReactHeader\n    #soundHeader?: SimpleReactHeader\n    #smm1And3DSGameHeader?: SimpleImageHeader\n    #smm2GameHeader?: SimpleImageHeader\n    #gameHeader?: SimpleReactHeader\n    #categoryHeader?: SimpleReactHeader\n\n    #limitHeader?: SimpleReactHeader\n    #completePlayLimitHeader?: SimpleReactHeader\n    #completeEditorLimitHeader?: SimpleReactHeader\n    #completeEditorLimitInSmm1And3dsHeader?: SingleHeaderContent\n    #completeEditorLimitInSmm2Header?: SingleHeaderContent\n\n    //endregion -------------------- Fields --------------------\n\n    public get nameHeader(): SimpleReactHeader {\n        return this.#nameHeader ??= {key: 'name', element: contentTranslation('Name',),}\n    }\n\n    public getNameContent(enumeration: EnumerationWithReference,): NonNullReactElement {\n        return <NameComponent id=\"name\" name={enumeration.reference} popoverOrientation=\"left\"/>\n    }\n\n\n    public get iconHeader(): SimpleReactHeader {\n        return this.#iconHeader ??= {key: 'icon', element: contentTranslation('Icon',),}\n    }\n\n    public get soundHeader(): SimpleReactHeader {\n        return this.#soundHeader ??= {key: 'sound', element: contentTranslation('sound.singular',),}\n    }\n\n    public get categoryHeader(): SimpleReactHeader {\n        return this.#categoryHeader ??= {key: 'category', element: gameContentTranslation('Category',),}\n    }\n\n\n    public get gameHeader(): SimpleReactHeader {\n        return this.#gameHeader ??= {key: 'game', element: gameContentTranslation('game.singular',),}\n    }\n\n    public get smm1And3dsGameHeader(): SimpleImageHeader {\n        return this.#smm1And3DSGameHeader ??= {key: 'isInSuperMarioMaker1And3DS', alt: SMM1.imageFile.fallbackName, path: SMM1.imageFile.fullName,}//TODO create a animated image for both games (SMM1 & SMM3DS)\n    }\n    public get smm2GameHeader(): SimpleImageHeader {\n        return this.#smm2GameHeader ??= {key: 'isInSuperMarioMaker2', alt: SMM2.imageFile.fallbackName, path: SMM2.imageFile.fullName,}\n    }\n\n    /**\n     * Get a {@link HTMLDivElement} containing each images (if true)\n     * of the {@link Games} contained in the {@link Enum} {@link ClassWithReference reference}.\n     *\n     * @param enumeration The enumerable to retrieve the {@link Games} properties & {@link ClassWithEnglishName english name}.\n     */\n    public getGameContent(enumeration: EnumerationWithInSuperMarioMakerGameReference,): NonNullReactElement {\n        const reference = enumeration.reference\n\n        return <div key={`${enumeration.englishName} (game content images)`} id={`${enumeration.englishNameInHtml}-gameContentImages-container`} className=\"gameContentImages-container\">\n            {reference.isInSuperMarioMaker1 ? <GameImage reference={SMM1}/> : null}\n            {reference.isInSuperMarioMakerFor3DS ? <GameImage reference={SMM3DS}/> : null}\n            {reference.isInSuperMarioMaker2 ? <GameImage reference={SMM2}/> : null}\n        </div>\n    }\n\n\n    public get limitHeader(): SimpleReactHeader {\n        return this.#limitHeader ??= {key: 'limit', element: gameContentTranslation('limit.singular',),}\n    }\n\n    public get completePlayLimitHeader(): SimpleReactHeader {\n        return this.#completePlayLimitHeader ??= {key: 'limit-play', element: gameContentTranslation('limit.play.complete',),}\n    }\n    public get completeEditorLimitHeader(): SimpleReactHeader {\n        return this.#completeEditorLimitHeader ??= {key: 'limit-editor', element: gameContentTranslation('limit.editor.complete',),}\n    }\n\n    public get completeEditorLimitInSmm1And3dsHeader(): SingleHeaderContent {\n        return this.#completeEditorLimitInSmm1And3dsHeader ??= {\n            key: 'limit-editor-smm1-and-smm3ds', element: gameContentTranslation('limit.editor.complete in SMM1&3DS', {\n                Name1: SMM1.acronym,\n                Name3ds: SMM3DS.acronym,\n            }),\n        }\n    }\n\n    public get completeEditorLimitInSmm2Header(): SingleHeaderContent {\n        return this.#completeEditorLimitInSmm2Header ??= {\n            key: 'limit-editor-smm2', element: gameContentTranslation('limit.editor.complete in SMM2', {\n                Name: SMM2.acronym,\n            }),\n        }\n    }\n\n}\n\ntype EnumerationWithReference = Enumerable<any, any> & ClassWithEnglishName<string> & ClassWithReference<Name<string>>\ntype EnumerationWithInSuperMarioMakerGameReference = Enumerable<any, any> & ClassWithEnglishName<string> & ClassWithReference<ClassInAnySuperMarioMakerGame>\n","import './Table.scss'\n\nimport type {CollectionHolder}                                                                    from '@joookiwi/collection'\nimport type {Enumerable}                                                                          from '@joookiwi/enumerable'\nimport type {MutableArray}                                                                        from '@joookiwi/type'\nimport {dropByArray, filterNotNull, forEachByArray, GenericCollectionHolder, joinToStringByArray} from '@joookiwi/collection'\n\nimport type {AppInterpreterWithTable}                                                         from 'app/interpreter/AppInterpreterWithTable'\nimport type {SingleHeaderContent}                                                             from 'app/tools/table/SimpleHeader'\nimport type {SingleTableContent}                                                              from 'app/tools/table/Table.types'\nimport type {ReactProperties, ReactPropertiesWithChildren, SimpleReactPropertiesWithChildren} from 'util/react/ReactProperties'\n\nimport Image             from 'app/tools/images/Image'\nimport Tooltip           from 'bootstrap/tooltip/Tooltip'\nimport {Empty}           from 'util/emptyVariables'\nimport {SPACE}           from 'util/commonVariables'\nimport {StringContainer} from 'util/StringContainer'\nimport {assert}          from 'util/utilitiesMethods'\n\nimport EMPTY_STRING = Empty.EMPTY_STRING\nimport getInHtml =    StringContainer.getInHtml\n\ninterface TableProperties\n    extends ReactProperties {\n\n    readonly id: string\n\n    readonly interpreter: AppInterpreterWithTable\n\n}\n\n/**\n * Create a {@link HTMLTableElement table}-like element with a multiple parts:\n *  - header\n *  - content\n *  - footer\n *  - caption\n *\n * @param id The element id\n * @param interpreter The interpreter to retrieve its content\n * @reactComponent\n */\nexport default function Table({id, interpreter,}: TableProperties,) {\n    const options = filterNotNull(interpreter.tableOptions,)\n    const color = interpreter.tableColor\n    const headersColor = interpreter.tableHeadersColor\n    const caption = interpreter.tableCaption\n    const additionalClasses = retrieveAdditionalClasses(interpreter, options,)\n    const contents = retrieveContent(interpreter, options,)\n    const headers = retrieveHeader(interpreter, options,)\n\n    return <div id={id} className={`ttable ${color == null ? EMPTY_STRING : `table-${color}`} ${headersColor == null ? EMPTY_STRING : `headers-${headersColor}`} w-100`}>\n        <TableHeader>{additionalClasses}{headers}</TableHeader>\n        <TableContent>{additionalClasses}{contents}</TableContent>\n        <TableFooter>{additionalClasses}{headers}</TableFooter>\n        <TableCaption>{caption}</TableCaption>\n    </div>\n}\n\nfunction TableHeader({children: [additionalClasses, headers,],}: SimpleReactPropertiesWithChildren<readonly [CollectionHolder<string>, CollectionHolder<SingleHeaderContent>,]>,) {\n    const columns = new Array<ReactJSXElement>(headers.length,)\n    headers.forEach((it, i,) => {\n        const elementId = `${getHeaderKey(it,)}-header`\n        columns[i] = <div id={elementId} key={`table header (${getHeaderKey(it,)})`} className={`tcell${additionalClasses.get(i,)}`}>\n            <HeaderTooltip elementId={elementId}>{it}</HeaderTooltip>\n            <HeaderOrFooterContent>{it}</HeaderOrFooterContent>\n        </div>\n    },)\n    return <div className=\"theader\">{columns}</div>\n}\n\nfunction TableContent({children: [additionalClasses, contents,],}: SimpleReactPropertiesWithChildren<readonly [CollectionHolder<string>, CollectionHolder<SingleTableContent>]>,) {\n    const tableContent = new Array<ReactJSXElement>(contents.length,)\n    contents.forEach((content, i,) => {\n        const rowContentKey = content[0]\n        const rowContent = new Array<ReactJSXElement>(content.length - 1,)\n        dropByArray(content, 1,).forEach((rowColumnContent, j,) => {\n            if (rowColumnContent == null)\n                rowContent[j] = <div key={`table content (empty ${rowContentKey} ${i + 1}-${j + 2})`} className=\"tcell empty-table-rowColumn-content-container\"/>\n            else\n                rowContent[j] = <div key={`table content (${rowContentKey} ${i + 1}-${j + 2})`} className={`tcell${additionalClasses.get(j,)}`}>{rowColumnContent}</div>\n        },)\n\n        tableContent[i] =\n            <div key={`table row content (${rowContentKey} ${i + 1})`} className={`trow table-row-${getInHtml(rowContentKey,)}`}>{rowContent}</div>\n    },)\n    return <div className=\"tcontent\">{tableContent}</div>\n}\n\nfunction TableFooter({children: [additionalClasses, headers,],}: SimpleReactPropertiesWithChildren<readonly [CollectionHolder<string>, CollectionHolder<SingleHeaderContent>,]>,) {\n    const columns = new Array<ReactJSXElement>(headers.length,)\n    headers.forEach((it, i,) => {\n        const elementId = `${getHeaderKey(it,)}-footer`\n        columns[i] = <div id={elementId} key={`table footer (${getHeaderKey(it,)})`} className={`tcell${additionalClasses.get(i,)}`}>\n            <FooterTooltip elementId={elementId}>{it}</FooterTooltip>\n            <HeaderOrFooterContent>{it}</HeaderOrFooterContent>\n        </div>\n    },)\n\n    return <div className=\"tfooter mb-2\">{columns}</div>\n}\n\nfunction HeaderTooltip({children, elementId,}: ReactPropertiesWithChildren<{ readonly elementId: string, }, SingleHeaderContent>,) {\n    assert(typeof children != 'string', 'No tooltip can be displayed on a header that is a string.',)\n\n    const tooltip = children.tooltip\n    if (tooltip == null)\n        return null\n    return <Tooltip option={{title: tooltip, placement: 'bottom',}} reference={elementId}/>\n}\n\nfunction FooterTooltip({children, elementId,}: ReactPropertiesWithChildren<{ readonly elementId: string, }, SingleHeaderContent>,) {\n    assert(typeof children != 'string', 'No tooltip can be displayed on a footer that is a string.',)\n\n    const tooltip = children.tooltip\n    if (tooltip == null)\n        return null\n    return <Tooltip option={{title: tooltip, placement: 'top',}} reference={elementId}/>\n}\n\nfunction HeaderOrFooterContent({children,}: SimpleReactPropertiesWithChildren<SingleHeaderContent>,) {\n    if (typeof children == 'string')\n        return <>{children}</>\n    if ('element' in children)\n        return children.element\n    return <Image source={children.path} fallbackName={children.alt}/>\n}\n\nfunction TableCaption({children,}: SimpleReactPropertiesWithChildren<ReactElementOrString>,) {\n    if (children == null)\n        return null\n    return <small className=\"tcaption alert alert-info flex-grow-1 py-2\" role=\"alert\">{children}</small>\n}\n\n\n/**\n * Get the header key from either a {@link String} or a {@link SimpleHeader}\n *\n * @param header The header to retrieve its key\n */\nfunction getHeaderKey(header: SingleHeaderContent,): string {\n    return typeof header == 'string' ? header : header.key\n}\n\n/**\n * Get the classes with a space before and between the values\n *\n * @param interpreter The {@link AppInterpreterWithTable} to retrieve its possible classes\n * @param options The displayed options in the table\n * @private\n */\nfunction retrieveAdditionalClasses({getAdditionalClass,}: AppInterpreterWithTable, options: CollectionHolder<Enumerable>,): CollectionHolder<string> {\n    if (getAdditionalClass == null)\n        return new GenericCollectionHolder(Array.from({length: options.length,}, () => EMPTY_STRING,),)\n    return options.map(it => joinToStringByArray(getAdditionalClass(it,), SPACE, SPACE, EMPTY_STRING,),)\n}\n\n/**\n * Retrieve the {@link SingleTableContent content} of the {@link interpreter} into a {@link CollectionHolder}\n *\n * @param interpreter The {@link AppInterpreterWithTable} to retrieve its content\n * @param options The displayed options in the table\n * @private\n */\nfunction retrieveContent({content, createTableContent,}: AppInterpreterWithTable, options: CollectionHolder<Enumerable>,): CollectionHolder<SingleTableContent> {\n    return content.map(contentValue => {\n        const tableContent: SingleTableContent = [contentValue.englishName,]\n        options.forEach(option =>\n            forEachByArray(createTableContent(contentValue, option,), it => tableContent.push(it,),),)\n        return tableContent\n    },)\n}\n\n/**\n * Retrieve the {@link SingleHeaderContent header} of the {@link interpreter} into an{@link ReadonlyArray array}\n *\n *\n * @param interpreter The {@link AppInterpreterWithTable} to retrieve its content\n * @param options The displayed options in the table\n * @private\n */\nfunction retrieveHeader({createTableHeader,}: AppInterpreterWithTable, options: CollectionHolder<Enumerable>,): CollectionHolder<SingleHeaderContent> {\n    const headerContent: MutableArray<SingleHeaderContent> = []\n    options.forEach(it => {\n        const tableHeader = createTableHeader(it,)\n        if (tableHeader == null)\n            return\n        headerContent.push(tableHeader,)\n    },)\n    return new GenericCollectionHolder(headerContent,)\n}\n","import './List.scss'\n\nimport type {CollectionHolder} from '@joookiwi/collection'\n\nimport type {ClassWithEnglishName} from 'core/ClassWithEnglishName'\nimport type {ClassWithReference}   from 'core/ClassWithReference'\nimport type {Name}                 from 'lang/name/Name'\n\nimport {Empty}                     from 'util/emptyVariables'\n\nimport EMPTY_STRING = Empty.EMPTY_STRING\n\ntype ElementWithEnglishNameAndReferenceWithName = & ClassWithEnglishName<string> & ClassWithReference<Name<string>>\n\ninterface ListProperties<out T extends ElementWithEnglishNameAndReferenceWithName, > {\n\n    /** The partial identifier that is used in the list as well as in the list item */\n    readonly partialId: string\n\n    /** The items to loop over and create the list */\n    readonly items: CollectionHolder<T>\n\n    /** Have a separator between each item in the list */\n    readonly withSeparator?: boolean\n\n    /** The <i>(optional)</i> way to retrieve the {@link String} name*/\n    nameRetriever?(item: T,): string\n\n    /** A method to create the child content from a value in the {@link items} */\n    children(item: T,): NonNullReactElement\n\n}\n\nconst NAME_RETRIEVER_ON_ENGLISH: (reference: ClassWithEnglishName<string>,) => string = it => it.englishName\n\nexport default function List<const T extends ElementWithEnglishNameAndReferenceWithName, >\n({partialId, items, withSeparator = false, nameRetriever = NAME_RETRIEVER_ON_ENGLISH, children,}: ListProperties<T>,) {\n    return <div className=\"bg-dark bg-gradient bg-opacity-10 w-auto py-2 px-2 mx-auto rounded\">\n        <ol id={`${partialId}-list`} className={`list ${withSeparator ? 'withSeparator' : EMPTY_STRING} mb-0`}>{items.map(it =>\n            <li key={`list item (${nameRetriever(it,)})`} id={`${partialId}-${it.englishNameInHtml}-listItem`} className=\"listItem\">{children(it,)}</li>,)\n        }</ol>\n    </div>\n}\n","import type {Content}                    from 'app/interpreter/AppInterpreter'\nimport type {AppInterpreterWithCardList} from 'app/interpreter/AppInterpreterWithCardList'\nimport type {ReactProperties}            from 'util/react/ReactProperties'\n\nimport NameComponent from 'lang/name/component/Name.component'\nimport {Empty}       from 'util/emptyVariables'\n\nimport EMPTY_STRING = Empty.EMPTY_STRING\n\ninterface CardListProperties<CONTENT extends Content, >\n    extends ReactProperties {\n\n    readonly reactKey: string\n\n    readonly interpreter: AppInterpreterWithCardList<CONTENT>\n\n    readonly keyRetriever?: (enumerable: CONTENT,) => string\n\n}\n\n/**\n * Create a list of elements in a card manner.\n * It can be similar to the <u>simple list</u> but has more information displayed.\n *\n * @reactComponent\n */\nexport default function CardList<const CONTENT extends Content, >({reactKey, interpreter, keyRetriever,}: CardListProperties<CONTENT>,) {\n    keyRetriever ??= enumerable => enumerable.englishName\n    const dimensions = createDimension(interpreter,)\n    const content = interpreter.content\n\n    const contentToDisplay = new Array<NonNullReactElement>(content.length,)\n    content.forEach((enumerable, i,) => {\n        const uniqueKey = keyRetriever(enumerable,)\n\n        //TODO change the popover to be on the id instead of the name directly\n        contentToDisplay[i] =\n            <div key={`${uniqueKey} - main card list container`} id={`${reactKey}-${enumerable.englishNameInHtml}-container`} className={`${reactKey}-container`}>\n                <div key={`${uniqueKey} - main card list sub-container`} className=\"listElement-container cardListElement-container rounded-pill\">\n                    <NameComponent key={`${uniqueKey} - text container`} id=\"name\" name={enumerable.reference.nameContainer} popoverOrientation=\"left\"/>\n                    <div key={`${uniqueKey} - card content container`} className=\"cardListName-content-container\">{interpreter.createCardListContent(enumerable)}</div>\n                </div>\n            </div>\n    },)\n    return <div className={`row ${dimensions} align-items-center flex-grow-1 gx-0`}>{contentToDisplay}</div>\n}\n\nfunction createDimension(interpreter: AppInterpreterWithCardList,): string {\n    const dimensions = interpreter.createCardListDimension()\n    const df = dimensions.default\n    const sm = dimensions.small\n    const md = dimensions.medium\n    const lg = dimensions.large\n    const xl = dimensions.extraLarge\n    const xxl = dimensions.extraExtraLarge\n\n    return `row-cols-${df}${sm == null ? EMPTY_STRING : ` row-cols-sm-${sm}`}${md == null ? EMPTY_STRING : ` row-cols-md-${md}`}${lg == null ? EMPTY_STRING : ` row-cols-lg-${lg}`}${xl == null ? EMPTY_STRING : ` row-cols-xl-${xl}`}${xxl == null ? EMPTY_STRING : ` row-cols-xxl-${xxl}`}`\n}\n","import {useEffect} from 'react'\n\nimport type {PopoverConfiguration}                from 'bootstrap/popover/Popover.types'\nimport type {ReactPropertiesWithOptionalChildren} from 'util/react/ReactProperties'\n\nimport {BootstrapInstanceHandler} from 'bootstrap/BootstrapInstanceHandler'\nimport {PopoverInstance}          from 'bootstrap/popover/PopoverInstance'\n\n/**\n * Create a new {@link bootstrap.Popover Popover} instance\n *\n * @param properties the properties received (containing the content, the option & the id)\n * @reactComponent\n * @see https://getbootstrap.com/docs/5.2/components/popovers\n */\nexport default function Popover<const T extends ReactElement = ReactElement, >({children, option, on: triggers, elementId,}: ReactPropertiesWithOptionalChildren<PopoverConfiguration, T>,) {\n    useEffect(() => {\n        const instance = BootstrapInstanceHandler.get.add(elementId, new PopoverInstance(elementId, option, triggers,),)\n        return () => BootstrapInstanceHandler.get.remove(instance,).destroy()\n    },)\n    return children ?? null\n}\n","import type {PopoverConfiguration}        from 'bootstrap/popover/Popover.types'\nimport type {ReactPropertiesWithChildren} from 'util/react/ReactProperties'\n\nimport Popover       from 'bootstrap/popover/Popover'\nimport TextComponent from 'app/tools/text/TextComponent'\n\n/**\n *\n * @param properties\n * @reactComponent\n */\nexport default function TextPopover<const T extends ReactElementOrString = ReactElementOrString, >({children, elementId, ...otherProperties}: ReactPropertiesWithChildren<PopoverConfiguration, T>,) {\n    return <Popover elementId={elementId} {...otherProperties}>\n        <TextComponent key={elementId} id={elementId} content={children} data-bs-toggle=\"popover\"/>\n    </Popover>\n}\n","import type {NullableString, UndefinedOr} from '@joookiwi/type'\nimport type {Dispatch, SetStateAction}    from 'react'\nimport Popover                            from 'bootstrap/js/dist/popover'\nimport {Component}                        from 'react'\n\nimport type {Name}                                                     from 'lang/name/Name'\nimport type {NamePopoverProperties, NamePopoverStates, NameProperties} from 'lang/name/component/Name.properties'\nimport type {ReactComponent}                                           from 'util/react/ReactComponent'\n\nimport TextComponent        from 'app/tools/text/TextComponent'\nimport TextPopover          from 'bootstrap/popover/TextPopover'\nimport {ProjectLanguages}   from 'lang/ProjectLanguages'\nimport {contentTranslation} from 'lang/components/translationMethods'\n\nimport Companion = ProjectLanguages.Companion\n\n/** @reactComponent */\nexport default class NamePopoverComponent\n    extends Component<NamePopoverProperties, NamePopoverStates>\n    implements ReactComponent {\n\n    //region -------------------- Fields --------------------\n\n    readonly #currentLanguageTextContent\n\n    //endregion -------------------- Fields --------------------\n    //region -------------------- Constructor --------------------\n\n    constructor(props: NamePopoverProperties,) {\n        super(props,)\n        this.#currentLanguageTextContent = Companion.current.get<string>(this.name,)\n        this.state = {\n            element: <TextComponent key={`${this.id} - temporary`} content={this.#currentLanguageTextContent}/>,\n        }\n    }\n\n    //endregion -------------------- Constructor --------------------\n    //region -------------------- Getter methods --------------------\n\n    public get id(): string {\n        return this.props.id\n    }\n\n    public get listId(): string {\n        return this.props.listId\n    }\n\n    public get setDoesDisplayPopover(): Dispatch<SetStateAction<boolean>> {\n        return this.props.setDoesDisplayPopover\n    }\n\n    public get otherProperties(): Omit<NameProperties, 'id'> {\n        return this.props.otherProperties\n    }\n\n    public get name(): Name<string> {\n        return this.otherProperties.name\n    }\n\n    public get popoverOrientation(): UndefinedOr<PossiblePopoverOrientation> {\n        return this.otherProperties.popoverOrientation\n    }\n\n    //endregion -------------------- Getter methods --------------------\n\n    public override componentDidMount(): void {\n        const id = this.id\n        const setDoesDisplayPopover = this.setDoesDisplayPopover\n\n        this.setState({\n            element: <TextPopover key={`${id} - span popover`} elementId={id} option={createOption(this.listId, this.popoverOrientation, contentTranslation('In other languages',),)}\n                                  {...this.otherProperties} on={({show: () => setDoesDisplayPopover(true), hide: () => setDoesDisplayPopover(false),})}>\n                {this.#currentLanguageTextContent}\n            </TextPopover>,\n        })\n    }\n\n    public override render(): NonNullReactElement {\n        return this.state.element\n    }\n\n}\n\n/**\n * Create the option for the name popover\n *\n * @param elementId the element id\n * @param popoverOrientation the {@link Popover popover} orientation\n * @param title popover title\n */\nfunction createOption(elementId: string, popoverOrientation: NullableString<PossiblePopoverOrientation>, title: string,): Partial<Popover.Options> {\n    const option: Partial<Popover.Options> = {\n        title: title,\n        content: document.getElementById(elementId)!,\n        html: true,\n        trigger: 'hover focus',\n    }\n    if (popoverOrientation != null)\n        option.placement = popoverOrientation\n\n    return option\n}\n","import './NameList.component.scss'\n\nimport type {MutableArray} from '@joookiwi/type'\nimport {filterNotByArray}  from '@joookiwi/collection'\n\nimport type {NameListProperties} from 'lang/name/component/Name.properties'\n\nimport TextComponent         from 'app/tools/text/TextComponent'\nimport {languageTranslation} from 'lang/components/translationMethods'\nimport {ProjectLanguages}    from 'lang/ProjectLanguages'\nimport {forEach}             from 'util/utilitiesMethods'\n\nimport Companion = ProjectLanguages.Companion\n\n/** @reactComponent */\nexport default function NameListComponent({id, listId, name, doesDisplayPopover,}: NameListProperties,) {\n    const languagesToDisplay = filterNotByArray(name.originalLanguages, it => it.isCurrent,)\n    const content: MutableArray<NonNullReactElement> = []\n    const currentLanguage = Companion.current\n    forEach(name.toNameMap(), (language, value,) => {\n        if (languagesToDisplay.has(language,))\n            content.push(<div key={`${id} - single language container (${language.englishName}`} className=\"singleLanguage-container\">\n                <TextComponent\n                    content={`${languageTranslation(language.englishName)}${currentLanguage.space}${currentLanguage.unionTrait}${currentLanguage.space}`}\n                    className=\"language-text col small text-primary text-opacity-50 text-end space-pre\"/>\n                <TextComponent content={value} className=\"languageValue-text col text-start\"/>\n            </div>,)\n    },)\n    return <div key={`${id} - list container`} id={listId} className=\"language-list\" hidden={!doesDisplayPopover}>{content}</div>\n}\n","import {useState} from 'react'\n\nimport type {NameProperties} from 'lang/name/component/Name.properties'\n\nimport NamePopoverComponent from 'lang/name/component/NamePopover.component'\nimport NameListComponent    from 'lang/name/component/NameList.component'\nimport {StringContainer}    from 'util/StringContainer'\n\nimport getInHtml = StringContainer.getInHtml\n\n/**\n * A name component used to render the current language in text format\n * and the other languages (excluding the current one) in a list format.\n *\n * @param properties\n * @reactComponent\n * @see Name.toNameMap\n * @see CompanionEnum_ProjectLanguages.current\n * @todo move the name structure into the popover\n */\nexport default function NameComponent({id, ...otherProperties}: NameProperties,) {\n    const [doesDisplayPopover, setDoesDisplayPopover,] = useState(false)\n    const {name,} = otherProperties\n\n    const elementId = `${id}-${getInHtml(name.english,)}`\n    const listId = `${elementId}-list`\n\n    return <div id={`${elementId}-container`} className=\"name-container\">\n        <NamePopoverComponent id={elementId} listId={listId} setDoesDisplayPopover={setDoesDisplayPopover} otherProperties={otherProperties}/>\n        <NameListComponent name={name} id={elementId} listId={listId} doesDisplayPopover={doesDisplayPopover}/>\n    </div>\n}\n"],"names":["Companion","ViewDisplays","DisplayButtonGroup","_ref","reactKey","key","views","currentView","_jsx","id","className","children","map","_ref2","view","name","DisplayButton","routeName","concat","_ref3","pathname","currentPath","useLocation","path","routeFromName","htmlType","type","disabled","Link","to","onClick","current","Description","SubMainContainer","viewDisplayAndRouteName","viewDisplay","alert","titleContent","asideContent","description","_jsxs","UnfinishedText","isHidden","SMM1","Games","SMM2","SMM3DS","_instance","_classPrivateFieldLooseKey","_nameHeader","_iconHeader","_soundHeader","_smm1And3DSGameHeader","_smm2GameHeader","_gameHeader","_categoryHeader","_limitHeader","_completePlayLimitHeader","_completeEditorLimitHeader","_completeEditorLimitInSmm1And3dsHeader","_completeEditorLimitInSmm2Header","CommonOptions","constructor","Object","defineProperty","writable","value","get","_classPrivateFieldLoo","_classPrivateFieldLoo2","_classPrivateFieldLooseBase","this","nameHeader","_classPrivateFieldLoo3","_classPrivateFieldLoo4","element","contentTranslation","getNameContent","enumeration","NameComponent","reference","popoverOrientation","iconHeader","_classPrivateFieldLoo5","_classPrivateFieldLoo6","soundHeader","_classPrivateFieldLoo7","_classPrivateFieldLoo8","categoryHeader","_classPrivateFieldLoo9","_classPrivateFieldLoo10","gameContentTranslation","gameHeader","_classPrivateFieldLoo11","_classPrivateFieldLoo12","smm1And3dsGameHeader","_classPrivateFieldLoo13","_classPrivateFieldLoo14","alt","imageFile","fallbackName","fullName","smm2GameHeader","_classPrivateFieldLoo15","_classPrivateFieldLoo16","getGameContent","englishNameInHtml","isInSuperMarioMaker1","GameImage","isInSuperMarioMakerFor3DS","isInSuperMarioMaker2","englishName","limitHeader","_classPrivateFieldLoo17","_classPrivateFieldLoo18","completePlayLimitHeader","_classPrivateFieldLoo19","_classPrivateFieldLoo20","completeEditorLimitHeader","_classPrivateFieldLoo21","_classPrivateFieldLoo22","completeEditorLimitInSmm1And3dsHeader","_classPrivateFieldLoo23","_classPrivateFieldLoo24","Name1","acronym","Name3ds","completeEditorLimitInSmm2Header","_classPrivateFieldLoo25","_classPrivateFieldLoo26","Name","EMPTY_STRING","Empty","getInHtml","StringContainer","Table","interpreter","options","filterNotNull","tableOptions","color","tableColor","headersColor","tableHeadersColor","caption","tableCaption","additionalClasses","_ref9","getAdditionalClass","GenericCollectionHolder","Array","from","length","it","joinToStringByArray","SPACE","retrieveAdditionalClasses","contents","_ref10","content","createTableContent","contentValue","tableContent","forEach","option","forEachByArray","push","retrieveContent","headers","_ref11","createTableHeader","headerContent","tableHeader","retrieveHeader","TableHeader","TableContent","TableFooter","TableCaption","columns","i","elementId","getHeaderKey","HeaderTooltip","HeaderOrFooterContent","rowContentKey","rowContent","dropByArray","rowColumnContent","j","_ref4","FooterTooltip","_ref5","assert","tooltip","Tooltip","title","placement","_ref6","_ref7","_Fragment","Image","source","_ref8","role","header","NAME_RETRIEVER_ON_ENGLISH","List","partialId","items","withSeparator","nameRetriever","CardList","_keyRetriever","keyRetriever","enumerable","dimensions","createCardListDimension","df","default","sm","small","md","medium","lg","large","xl","extraLarge","xxl","extraExtraLarge","createDimension","contentToDisplay","uniqueKey","nameContainer","createCardListContent","Popover","on","triggers","useEffect","instance","BootstrapInstanceHandler","add","PopoverInstance","remove","destroy","TextPopover","otherProperties","TextComponent","ProjectLanguages","_currentLanguageTextContent","NamePopoverComponent","Component","props","super","state","listId","setDoesDisplayPopover","componentDidMount","setState","createOption","show","hide","render","document","getElementById","html","trigger","NameListComponent","doesDisplayPopover","languagesToDisplay","filterNotByArray","originalLanguages","isCurrent","currentLanguage","toNameMap","language","has","languageTranslation","space","unionTrait","hidden","useState","english"],"sourceRoot":""}