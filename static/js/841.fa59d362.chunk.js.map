{"version":3,"file":"static/js/841.fa59d362.chunk.js","mappings":"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","sources":["app/options/LimitAppOption.tsx","app/LimitApp.tsx","app/tools/button/LinkButton.tsx"],"sourcesContent":["import './LimitAppOption.scss'\n\nimport type {CompanionEnumSingleton} from '@joookiwi/enumerable'\nimport {CompanionEnum, Enum}         from '@joookiwi/enumerable'\n\nimport type {AppOption}           from 'app/options/AppOption'\nimport type {Names, Ordinals}     from 'app/options/LimitAppOption.types'\nimport type {SingleHeaderContent} from 'app/tools/table/SimpleHeader'\nimport type {Limit}               from 'core/limit/Limit'\nimport type {Limits}              from 'core/limit/Limits'\n\nimport {CommonOptions}           from 'app/options/CommonOptions'\nimport {COURSE_THEME_IMAGE_FILE} from 'app/options/file/themeImageFiles'\nimport TextComponent             from 'app/tools/text/TextComponent'\nimport Image                     from 'app/tools/images/Image'\nimport {EmptyLimit}              from 'core/limit/EmptyLimit'\nimport {ProjectLanguages}        from 'lang/ProjectLanguages'\nimport {contentTranslation}      from 'lang/components/translationMethods'\nimport NameComponent             from 'lang/name/component/Name.component'\n\nexport abstract class LimitAppOption\n    extends Enum<Ordinals, Names>\n    implements AppOption<Limits> {\n\n    //region -------------------- Enum instances --------------------\n\n    public static readonly ACRONYM = new class LimitAppOption_Acronym extends LimitAppOption {\n\n        protected override _createContentOption({reference: {acronym, alternativeAcronym,},}: Limits,) {\n            return alternativeAcronym == null\n                ? acronym == null\n                    ? null\n                    : <TextComponent content={acronym}/>\n                : <div className=\"acronyms-container d-flex flex-column flex-md-row\">\n                    <TextComponent content={acronym}/>\n                    <div className=\"vertical-separator vr mx-2 d-none d-md-inline-block\"/>\n                    <hr className=\"horizontal-separator my-1 d-block d-md-none\"/>\n                    <TextComponent content={alternativeAcronym}/>\n                </div>\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {key: 'acronym', element: contentTranslation('Acronym(s)'),}\n        }\n\n    }()\n    public static readonly NAME = new class LimitAppOption_Name extends LimitAppOption {\n\n        protected override _createContentOption({reference, isEditorLimit,}: Limits,) {\n            const {alternativeContainer} = reference\n            return alternativeContainer instanceof EmptyLimit\n                ? this.#createNameComponent(reference, isEditorLimit,)\n                : <div className=\"names-container d-flex flex-column flex-md-row\">\n                    {this.#createNameComponent(reference, isEditorLimit,)}\n                    <div className=\"vertical-separator vr mx-3 d-none d-md-inline-block\"/>\n                    <hr className=\"horizontal-separator my-1 d-block d-md-none\"/>\n                    <NameComponent id=\"alternativeName\" name={alternativeContainer} popoverOrientation=\"bottom\"/>\n                </div>\n        }\n\n        #createNameComponent(reference: Limit, isEditorLimit: boolean,): ReactElement {\n            return isEditorLimit\n                ? <div className=\"nameWithImage-container d-flex position-relative\">\n                    <Image file={COURSE_THEME_IMAGE_FILE} className=\"course-theme-image badge bg-transparent position-absolute top-0 start-0\"/>\n                    <NameComponent id=\"name\" name={reference} popoverOrientation=\"bottom\"/>\n                </div>\n                : <NameComponent id=\"name\" name={reference} popoverOrientation=\"bottom\"/>\n        }\n\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return CommonOptions.get.nameHeader\n        }\n\n    }()\n    public static readonly AMOUNT_IN_ALL_GAMES = new class LimitAppOption_Amount extends LimitAppOption {\n\n        protected override _createContentOption(enumeration: Limits,) {\n            const {reference: {limitAmountInSMM1AndSMM3DS, limitAmountInSMM2, isUnknownLimitInSMM2,}, englishName,} = enumeration\n            if (limitAmountInSMM1AndSMM3DS === limitAmountInSMM2)\n                return <TextComponent key={`${englishName} - text component`} content={limitAmountInSMM2} isUnknown={isUnknownLimitInSMM2}/>\n\n            return <span className=\"space-pre\">\n                {LimitAppOption.AMOUNT_IN_SMM1_AND_SMM3DS.renderContent(enumeration,)}\n                {ProjectLanguages.current.space}{ProjectLanguages.current.slash}{ProjectLanguages.current.space}\n                {LimitAppOption.AMOUNT_IN_SMM2.renderContent(enumeration,)}\n            </span>\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return CommonOptions.get.limitHeader\n        }\n    }()\n    public static readonly AMOUNT_IN_SMM1_AND_SMM3DS = new class LimitAppOption_AmountInSMM1AndSMM3DS extends LimitAppOption {\n\n        protected override _createContentOption({reference, englishName,}: Limits,) {\n            return <TextComponent key={`${englishName} - text component (amount SMM1&3DS)`} content={reference.limitAmountInSMM1AndSMM3DS} isUnknown={reference.isUnknownLimitInSMM1AndSMM3DS}/>\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return CommonOptions.get.limitHeader\n        }\n\n    }()\n    public static readonly AMOUNT_IN_SMM2 = new class LimitAppOption_AmountInSMM2 extends LimitAppOption {\n\n        protected override _createContentOption({reference, englishName,}: Limits,) {\n            return <TextComponent key={`${englishName} - text component (amount SMM2)`} content={reference.limitAmountInSMM2} isUnknown={reference.isUnknownLimitInSMM2}/>\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return CommonOptions.get.limitHeader\n        }\n\n    }()\n\n    //endregion -------------------- Enum instances --------------------\n    //region -------------------- Companion enum --------------------\n\n    public static readonly CompanionEnum: CompanionEnumSingleton<LimitAppOption, typeof LimitAppOption> = class CompanionEnum_LimitAppOption\n        extends CompanionEnum<LimitAppOption, typeof LimitAppOption> {\n\n        //region -------------------- Singleton usage --------------------\n\n        static #instance?: CompanionEnum_LimitAppOption\n\n        private constructor() {\n            super(LimitAppOption,)\n        }\n\n        public static get get() {\n            return this.#instance ??= new CompanionEnum_LimitAppOption()\n        }\n\n        //endregion -------------------- Singleton usage --------------------\n\n    }\n\n    //endregion -------------------- Companion enum --------------------\n    //region -------------------- Fields --------------------\n    //endregion -------------------- Fields --------------------\n    //region -------------------- Constructor --------------------\n\n    private constructor() {\n        super()\n    }\n\n    //endregion -------------------- Constructor --------------------\n    //region -------------------- Getter methods --------------------\n    //endregion -------------------- Getter methods --------------------\n    //region -------------------- Methods --------------------\n\n    //region -------------------- App option - content --------------------\n\n    protected abstract _createContentOption(enumeration: Limits,): ReactElement\n\n    public renderContent(enumeration: Limits,): readonly [ReactElement,] {\n        return [this._createContentOption(enumeration,),]\n    }\n\n    //endregion -------------------- App option - content --------------------\n    //region -------------------- App option - table --------------------\n\n    protected abstract _createTableHeaderOption(): SingleHeaderContent\n\n    public renderTableHeader(): SingleHeaderContent {\n        return this._createTableHeaderOption()\n    }\n\n    //endregion -------------------- App option - table --------------------\n\n    //endregion -------------------- Methods --------------------\n\n}\n","import './LimitApp.scss'\n\nimport type {LimitAppProperties}      from 'app/AppProperties.types'\nimport type {AppInterpreterWithTable} from 'app/interpreter/AppInterpreterWithTable'\nimport type {DimensionOnList}         from 'app/interpreter/DimensionOnList'\nimport type {LimitTypes}              from 'app/property/LimitTypes'\nimport type {ClassWithType}           from 'core/ClassWithType'\nimport type {Limits}                  from 'core/limit/Limits'\nimport type {PossibleRouteName}       from 'route/EveryRoutes.types'\n\nimport {LimitAppOption}                             from 'app/options/LimitAppOption'\nimport {COURSE_THEME_IMAGE_FILE}                    from 'app/options/file/themeImageFiles'\nimport LinkButton                                   from 'app/tools/button/LinkButton'\nimport Image                                        from 'app/tools/images/Image'\nimport {AbstractTableApp}                           from 'app/withInterpreter/AbstractTableApp'\nimport {contentTranslation, gameContentTranslation} from 'lang/components/translationMethods'\nimport {filterGame}                                 from 'util/utilitiesMethods'\n\nexport default class LimitApp\n    extends AbstractTableApp<Limits, AppInterpreterWithTable<Limits, LimitAppOption>, LimitAppProperties>\n    implements ClassWithType<LimitTypes> {\n\n    //region -------------------- Getter methods --------------------\n\n    public get type(): LimitTypes {\n        return this.props.type\n    }\n\n    //endregion -------------------- Getter methods --------------------\n    //region -------------------- Create methods --------------------\n\n    protected override _createKey(): string {\n        return 'limit'\n    }\n\n\n    protected override _createSimpleListRouteName(): PossibleRouteName {\n        return `${this.type.routeName} (list)`\n    }\n\n    protected override _createCardListRouteName(): PossibleRouteName {\n        return `${this.type.routeName} (card)`\n    }\n\n    protected override _createTableRouteName(): PossibleRouteName {\n        return `${this.type.routeName} (table)`\n    }\n\n\n    protected override _createTitleContent(): ReactElementOrString {\n        return gameContentTranslation(`limit.${this.type.type}.all`)\n    }\n\n    protected override _createAsideContent(): ReactElementOrString {\n        const {type, viewDisplay,} = this\n\n        return <div id=\"limit-linkButton-container\" className=\"btn-group btn-group-vertical btn-group-sm\">\n            <LinkButton partialId=\"allLimit\" routeName={viewDisplay.getRoutePath(type.allRouteName)} color={type.allColor}>{contentTranslation('All')}</LinkButton>\n            <div id=\"limit-linkButton-playAndEditor-container\" className=\"btn-group btn-group-sm\">\n                <LinkButton partialId=\"playLimit\" routeName={viewDisplay.getRoutePath(type.playRouteName)} color={type.playColor}>{gameContentTranslation('limit.play.simple')}</LinkButton>\n                <LinkButton partialId=\"editorLimit\" routeName={viewDisplay.getRoutePath(type.editorRouteName)} color={type.editorColor}>{gameContentTranslation('limit.editor.simple')}</LinkButton>\n            </div>\n        </div>\n    }\n\n    protected override _createAppOptionInterpreter() {\n        const $this = this\n\n        return new class LimitAppInterpreter implements AppInterpreterWithTable<Limits, LimitAppOption> {\n\n            public get content() {\n                return filterGame($this.type.content, $this.props.games,)\n            }\n\n            //region -------------------- List interpreter --------------------\n\n            public createListDimension(): DimensionOnList {\n                return {\n                    default: 1,\n                    small: 2,\n                    medium: 4,\n                    large: 5,\n                    extraLarge: 6,\n                }\n            }\n\n            //endregion -------------------- List interpreter --------------------\n            //region -------------------- Card list interpreter --------------------\n\n            public createCardListDimension() {\n                return this.createListDimension()\n            }\n\n            public createCardListContent(enumeration: Limits,) {\n                return enumeration.isEditorLimit\n                    ? <div className=\"card-bodyWithEditor-container\">\n                        <Image file={COURSE_THEME_IMAGE_FILE} className=\"course-theme-image position-absolute start-0 bottom-0\"/>\n                        {this.#createBody(enumeration)}\n                    </div>\n                    : this.#createBody(enumeration)\n            }\n\n            #createBody(enumeration: Limits,) {\n                return <div className=\"card-body\" id={`limit-${enumeration.englishNameInHtml}`}>\n                    {LimitAppOption.AMOUNT_IN_ALL_GAMES.renderContent(enumeration,)}\n                </div>\n            }\n\n            //endregion -------------------- Card list interpreter --------------------\n            //region -------------------- Table interpreter --------------------\n\n            public readonly tableHeadersColor = 'info' satisfies BootstrapThemeColor\n            public readonly tableColor = 'primary' satisfies BootstrapThemeColor\n            public readonly tableCaption = gameContentTranslation(`limit.${$this.type.type}.all`) satisfies ReactElementOrString\n\n            public get tableOptions(): readonly LimitAppOption[] {\n                const games = $this.props.games\n                const hasSMM1Or3DSGames = games.hasSMM1Or3DS\n                const hasSMM2Games = games.hasSMM2\n\n                const options: LimitAppOption[] = [\n                    LimitAppOption.ACRONYM,\n                    LimitAppOption.NAME,\n                ]\n                if (hasSMM1Or3DSGames && hasSMM2Games)\n                    options.push(LimitAppOption.AMOUNT_IN_ALL_GAMES,)\n                else {\n                    if (hasSMM1Or3DSGames)\n                        options.push(LimitAppOption.AMOUNT_IN_SMM1_AND_SMM3DS,)\n                    if (hasSMM2Games)\n                        options.push(LimitAppOption.AMOUNT_IN_SMM2,)\n                }\n                return options\n            }\n\n\n            public createTableContent(content: Limits, option: LimitAppOption,) {\n                return option.renderContent(content,)\n            }\n\n            public createTableHeader(option: LimitAppOption,) {\n                return option.renderTableHeader()\n            }\n\n            //endregion -------------------- Table interpreter --------------------\n\n        }()\n    }\n\n    //endregion -------------------- Create methods --------------------\n}\n","import {Link} from 'react-router-dom'\n\nimport type {PossibleRouteName}                            from 'route/EveryRoutes.types'\nimport type {ReactProperties, ReactPropertiesWithChildren} from 'util/react/ReactProperties'\n\nimport {routeFromName} from 'route/route'\n\ninterface LinkButtonsProperties\n    extends ReactProperties {\n\n    partialId: string\n\n    routeName: Nullable<PossibleRouteName>\n\n    color: BootstrapColor\n\n}\n\n/**\n * Create a {@link Link} button or a simple disabled button (if the {@link LinkButtonsProperties.routeName route name} is <b>null</b>)\n *\n * @reactComponent\n */\nexport default function LinkButton({partialId, routeName, color, children,}: ReactPropertiesWithChildren<LinkButtonsProperties, ReactElementOrString>,) {\n    const id = `${partialId}-button`\n    const className = `btn btn-${color} link-button`\n\n    if (routeName == null)\n        return <button type=\"button\" id={id} className={className} disabled>{children}</button>\n    return <Link type=\"button\" id={id} className={className} to={routeFromName(routeName,)}>{children}</Link>\n}\n"],"names":["LimitAppOption","Enum","constructor","super","renderContent","enumeration","this","_createContentOption","renderTableHeader","_createTableHeaderOption","_createNameComponent2","reference","isEditorLimit","_jsxs","className","children","_jsx","Image","file","COURSE_THEME_IMAGE_FILE","NameComponent","id","name","popoverOrientation","ACRONYM","_ref","acronym","alternativeAcronym","TextComponent","content","key","element","contentTranslation","NAME","_createNameComponent","_classPrivateFieldLooseKey","arguments","Object","defineProperty","value","_ref2","alternativeContainer","EmptyLimit","_classPrivateFieldLooseBase","CommonOptions","get","nameHeader","AMOUNT_IN_ALL_GAMES","limitAmountInSMM1AndSMM3DS","limitAmountInSMM2","isUnknownLimitInSMM2","englishName","isUnknown","concat","AMOUNT_IN_SMM1_AND_SMM3DS","ProjectLanguages","current","space","slash","AMOUNT_IN_SMM2","limitHeader","_ref3","isUnknownLimitInSMM1AndSMM3DS","_ref4","CompanionEnum","_instance","_class2","CompanionEnum_LimitAppOption","_classPrivateFieldLoo","_classPrivateFieldLoo2","writable","LimitApp","AbstractTableApp","type","props","_createKey","_createSimpleListRouteName","routeName","_createCardListRouteName","_createTableRouteName","_createTitleContent","gameContentTranslation","_createAsideContent","viewDisplay","LinkButton","partialId","getRoutePath","allRouteName","color","allColor","playRouteName","playColor","editorRouteName","editorColor","_createAppOptionInterpreter","_createBody","$this","_createBody2","tableHeadersColor","tableColor","tableCaption","filterGame","games","createListDimension","default","small","medium","large","extraLarge","createCardListDimension","createCardListContent","tableOptions","hasSMM1Or3DSGames","hasSMM1Or3DS","hasSMM2Games","hasSMM2","options","push","createTableContent","option","createTableHeader","englishNameInHtml","disabled","Link","to","routeFromName"],"sourceRoot":""}