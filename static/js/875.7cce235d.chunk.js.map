{"version":3,"file":"static/js/875.7cce235d.chunk.js","mappings":"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","sources":["app/options/MiiCostumeAppOption.tsx","app/MiiCostumeApp.tsx"],"sourcesContent":["import type {CompanionEnumSingleton} from '@joookiwi/enumerable'\nimport {CompanionEnum, Enum}         from '@joookiwi/enumerable'\n\nimport type {AppOption}           from 'app/options/AppOption'\nimport type {Names, Ordinals}     from 'app/options/MiiCostumeAppOption.types'\nimport type {SingleHeaderContent} from 'app/tools/table/SimpleHeader'\nimport type {MiiCostumes}         from 'core/miiCostume/MiiCostumes'\n\nimport {CommonOptions}        from 'app/options/CommonOptions'\nimport Image                  from 'app/tools/images/Image'\nimport {MiiCostumeCategories} from 'core/miiCostumeCategory/MiiCostumeCategories'\nimport {contentTranslation}   from 'lang/components/translationMethods'\n\n/**\n * @todo convert the \"_createTableHeaderOption\" to have the enumerable as an argument and to be non-null\n * @todo Change CATEGORY to use {IMAGE, TEXT or NONE} instead of 2 different options.\n */\nexport abstract class MiiCostumeAppOption\n    extends Enum<Ordinals, Names>\n    implements AppOption<MiiCostumes> {\n\n    //region -------------------- Enum instances --------------------\n\n    public static readonly IMAGE =                 new class MiiCostumeAppOption_Image extends MiiCostumeAppOption {\n\n        protected override _createContentOption(enumeration: MiiCostumes,) {\n            return <Image file={enumeration.imageFile}/>\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {key: 'image', element: contentTranslation('Image'),}\n        }\n\n    }()\n    public static readonly NAME =                  new class MiiCostumeAppOption_Name extends MiiCostumeAppOption {\n\n        protected override _createContentOption(enumeration: MiiCostumes,) {\n            return CommonOptions.get.getNameContent(enumeration,)\n        }\n\n        protected override _createTableHeaderOption() {\n            return CommonOptions.get.nameHeader\n        }\n\n    }()\n    public static readonly OFFICIAL_NOTIFICATION = new class MiiCostumeAppOption_ConditionToUnlockIt extends MiiCostumeAppOption {\n\n        protected override _createContentOption(enumeration: MiiCostumes,) {\n            const miiCostume = enumeration.reference\n            return miiCostume.officialNotification?.createSimpleTranslationComponent(miiCostume.english, miiCostume.officialNotificationAmount,)\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            //TODO add new translation to the header value.\n            return {key: 'officialNotification', element: '--Official notification--',}\n        }\n\n    }()\n\n    public static readonly CATEGORY =              new class MiiCostumeAppOption_Category extends MiiCostumeAppOption {\n\n        protected override _createContentOption(enumeration: MiiCostumes,) {\n            const categoryName = enumeration.reference.categoryContainer.nameContainer\n            return CommonOptions.get.getCategoryContent(enumeration, () => MiiCostumeCategories.CompanionEnum.get.getValueByName(categoryName.english,).imageFile,)\n        }\n\n        protected override _createTableHeaderOption() {\n            return CommonOptions.get.categoryHeader\n        }\n\n    }()\n    /**\n     * Tell whenever a {@link MiiCostumeAppOption.CATEGORY category} is displayed\n     * as a text (<i>true</i>) or an image (<i>false</i>).\n     */\n    public static readonly CATEGORY_AS_TEXT =      new class MiiCostumeAppOption_CategoryAsText extends MiiCostumeAppOption {}()\n\n    //endregion -------------------- Enum instances --------------------\n    //region -------------------- Companion enum --------------------\n\n    public static readonly CompanionEnum: CompanionEnumSingleton<MiiCostumeAppOption, typeof MiiCostumeAppOption> = class CompanionEnum_MiiCostumeAppOption\n        extends CompanionEnum<MiiCostumeAppOption, typeof MiiCostumeAppOption> {\n\n        //region -------------------- Singleton usage --------------------\n\n        static #instance?: CompanionEnum_MiiCostumeAppOption\n\n        private constructor() {\n            super(MiiCostumeAppOption,)\n        }\n\n        public static get get() {\n            return this.#instance ??= new CompanionEnum_MiiCostumeAppOption()\n        }\n\n        //endregion -------------------- Singleton usage --------------------\n\n    }\n\n    //endregion -------------------- Companion enum --------------------\n    //region -------------------- Fields --------------------\n    //endregion -------------------- Fields --------------------\n    //region -------------------- Constructor --------------------\n\n    private constructor() {\n        super()\n    }\n\n    //endregion -------------------- Constructor --------------------\n    //region -------------------- Getter methods --------------------\n    //endregion -------------------- Getter methods --------------------\n    //region -------------------- Methods --------------------\n\n    //region -------------------- App option - content --------------------\n\n    protected _createContentOption(enumeration: MiiCostumes,): ReactElement {\n        throw new ReferenceError(`The MiiCostumeAppOption.${this.name} cannot create a content option`,)\n    }\n\n    public renderContent(enumeration: MiiCostumes,): readonly [ReactElement,] {\n        return [this._createContentOption(enumeration,),]\n    }\n\n    //endregion -------------------- App option - content --------------------\n    //region -------------------- App option - table --------------------\n\n    protected _createTableHeaderOption(): NullOr<SingleHeaderContent> {\n        throw new ReferenceError(`The MiiCostumeAppOption.${this.name} cannot create a table header option`,)\n    }\n\n    public renderTableHeader(): NullOr<SingleHeaderContent> {\n        const content = this._createTableHeaderOption()\n        if (content == null)\n            return null\n        return content\n    }\n\n    //endregion -------------------- App option - table --------------------\n\n    //endregion -------------------- Methods --------------------\n\n}\n","import './MiiCostumeApp.scss'\n\nimport type {AppInterpreterWithTable} from 'app/interpreter/AppInterpreterWithTable'\nimport type {DimensionOnList}         from 'app/interpreter/DimensionOnList'\nimport type {PossibleRouteName}       from 'route/EveryRoutes.types'\n\nimport {MiiCostumeAppOption}    from 'app/options/MiiCostumeAppOption'\nimport Image                    from 'app/tools/images/Image'\nimport TextComponent            from 'app/tools/text/TextComponent'\nimport {unfinishedText}         from 'app/tools/text/UnfinishedText'\nimport {AbstractTableApp}       from 'app/withInterpreter/AbstractTableApp'\nimport {MiiCostumes}            from 'core/miiCostume/MiiCostumes'\nimport {OtherWordInTheGames}    from 'core/otherWordInTheGame/OtherWordInTheGames'\nimport {gameContentTranslation} from 'lang/components/translationMethods'\n\n//region -------------------- Import from deconstruction --------------------\n\nconst {MII_COSTUME,} = OtherWordInTheGames\n\n//endregion -------------------- Import from deconstruction --------------------\n\nexport default class MiiCostumeApp\n    extends AbstractTableApp<MiiCostumes, AppInterpreterWithTable<MiiCostumes, MiiCostumeAppOption>> {\n\n    //region -------------------- Create methods --------------------\n\n    protected override _createKey() {\n        return 'miiCostume'\n    }\n\n\n    protected override _createSimpleListRouteName(): PossibleRouteName {\n        return 'everyMiiCostume (list)'\n    }\n\n    protected override _createCardListRouteName(): PossibleRouteName {\n        return 'everyMiiCostume (card)'\n    }\n\n    protected override _createTableRouteName(): PossibleRouteName {\n        return 'everyMiiCostume (table)'\n    }\n\n\n    protected override _createTitleContent(): ReactElementOrString {\n        return gameContentTranslation('mii costume.all', {\n            singularName: MII_COSTUME.singularLowerCaseNameOnReferenceOrNull ?? unfinishedText(MII_COSTUME.singularEnglishName),\n            pluralName: MII_COSTUME.pluralLowerCaseNameOnReferenceOrNull ?? unfinishedText(MII_COSTUME.pluralEnglishName),\n        },)\n    }\n\n    protected override _createAppOptionInterpreter() {\n        return new class MiiCostumeAppInterpreter implements AppInterpreterWithTable<MiiCostumes, MiiCostumeAppOption> {\n\n            public get content() {\n                return MiiCostumes.CompanionEnum.get.values.toArray()\n            }\n\n            //region -------------------- List interpreter --------------------\n\n            public createListDimension(): DimensionOnList {\n                return {\n                    default: 1,\n                    small: 2,\n                    medium: 3,\n                    large: 4,\n                    extraLarge: 5,\n                    extraExtraLarge: 6,\n                }\n            }\n\n            //endregion -------------------- List interpreter --------------------\n            //region -------------------- Card list interpreter --------------------\n\n            public createCardListDimension() {\n                return this.createListDimension()\n            }\n\n            public createCardListContent({reference, imageFile,}: MiiCostumes,) {\n                const category = reference.categoryEnglish === '' ? '' : `entityCategory-${reference.categoryEnglish}`//TODO move to the parent container className.\n                return <div className={`${category}`}>\n                    <Image file={imageFile}/>\n                </div>\n            }\n\n            //endregion -------------------- Card list interpreter --------------------\n            //region -------------------- Table interpreter --------------------\n\n            public readonly tableHeadersColor = 'info' satisfies BootstrapThemeColor\n            public readonly tableColor = 'primary' satisfies BootstrapThemeColor\n            public readonly tableCaption = gameContentTranslation('mii costume.all', {\n                singularName: <TextComponent key=\"miiCostume-singularName\" content={MII_COSTUME.singularLowerCaseNameOnReferenceOrNull ?? unfinishedText(MII_COSTUME.singularEnglishName)} className=\"text-decoration-underline\"/>,\n                pluralName: <TextComponent key=\"miiCostume-pluralName\" content={MII_COSTUME.pluralLowerCaseNameOnReferenceOrNull ?? unfinishedText(MII_COSTUME.pluralEnglishName)} className=\"text-decoration-underline\"/>,\n            },) satisfies ReactElementOrString\n\n            public get tableOptions(): readonly MiiCostumeAppOption[] {\n                return [\n                    MiiCostumeAppOption.IMAGE,\n                    MiiCostumeAppOption.NAME,\n                    MiiCostumeAppOption.OFFICIAL_NOTIFICATION,\n                    MiiCostumeAppOption.CATEGORY,\n                ]\n            }\n\n\n            public createTableContent(content: MiiCostumes, option: MiiCostumeAppOption,) {\n                return option.renderContent(content,)\n            }\n\n            public createTableHeader(option: MiiCostumeAppOption,) {\n                return option.renderTableHeader()\n            }\n\n            //endregion -------------------- Table interpreter --------------------\n\n        }()\n    }\n\n    //endregion -------------------- Create methods --------------------\n\n}\n"],"names":["MiiCostumeAppOption","Enum","constructor","super","_createContentOption","enumeration","ReferenceError","concat","this","name","renderContent","_createTableHeaderOption","renderTableHeader","content","IMAGE","_jsx","Image","file","imageFile","key","element","contentTranslation","NAME","CommonOptions","get","getNameContent","nameHeader","OFFICIAL_NOTIFICATION","_miiCostume$officialN","miiCostume","reference","officialNotification","createSimpleTranslationComponent","english","officialNotificationAmount","CATEGORY","categoryName","categoryContainer","nameContainer","getCategoryContent","MiiCostumeCategories","CompanionEnum","getValueByName","categoryHeader","CATEGORY_AS_TEXT","_instance","_classPrivateFieldLooseKey","_class","CompanionEnum_MiiCostumeAppOption","_classPrivateFieldLoo","_classPrivateFieldLoo2","_classPrivateFieldLooseBase","Object","defineProperty","writable","value","MII_COSTUME","OtherWordInTheGames","MiiCostumeApp","AbstractTableApp","_createKey","_createSimpleListRouteName","_createCardListRouteName","_createTableRouteName","_createTitleContent","_MII_COSTUME$singular","_MII_COSTUME$pluralLo","gameContentTranslation","singularName","singularLowerCaseNameOnReferenceOrNull","unfinishedText","singularEnglishName","pluralName","pluralLowerCaseNameOnReferenceOrNull","pluralEnglishName","_createAppOptionInterpreter","_MII_COSTUME$singular2","_MII_COSTUME$pluralLo2","tableHeadersColor","tableColor","tableCaption","TextComponent","className","MiiCostumes","values","toArray","createListDimension","default","small","medium","large","extraLarge","extraExtraLarge","createCardListDimension","createCardListContent","_ref","category","categoryEnglish","children","tableOptions","createTableContent","option","createTableHeader"],"sourceRoot":""}