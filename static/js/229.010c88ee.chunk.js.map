{"version":3,"file":"static/js/229.010c88ee.chunk.js","mappings":"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","sources":["app/EditorVoiceApp.tsx","app/withInterpreter/AbstractCardListApp.tsx","core/editorVoice/EditorVoiceSound.component.tsx"],"sourcesContent":["import {AbstractCardListApp} from 'app/withInterpreter/AbstractCardListApp'\n\nimport type {EditorVoiceProperties}                                from 'app/AppProperties.types'\nimport type {AppInterpreterWithCardList}                           from 'app/interpreter/AppInterpreterWithCardList'\nimport type {PossibleDimensionOnCardList, PossibleDimensionOnList} from 'app/interpreter/DimensionOnList'\nimport type {PossibleRouteName}                                    from 'route/EveryRoutes.types'\n\nimport {EditorVoices}            from 'core/editorVoice/EditorVoices'\nimport EditorVoiceSoundComponent from 'core/editorVoice/EditorVoiceSound.component'\nimport {gameContentTranslation}  from 'lang/components/translationMethods'\nimport {filterGame}              from 'util/utilitiesMethods'\n\nexport default class EditorVoiceApp\n    extends AbstractCardListApp<AppInterpreterWithCardList<EditorVoices>, EditorVoiceProperties> {\n\n    //region -------------------- Create methods --------------------\n\n    protected override _createKey(): string {\n        return 'editorVoice'\n    }\n\n    protected override _createSimpleListRouteName(): PossibleRouteName {\n        return 'everyEditorVoice (list)'\n    }\n\n    protected override _createCardListRouteName(): PossibleRouteName {\n        return 'everyEditorVoice (card)'\n    }\n\n\n    protected override _createTitleContent(): ReactElementOrString {\n        return gameContentTranslation('editor voice.all')\n    }\n\n    protected override _createAppOptionInterpreter() {\n        const $this = this\n\n        return new class EditorVoiceAppInterpreter implements AppInterpreterWithCardList<EditorVoices> {\n\n            public get content() {\n                return filterGame(EditorVoices.CompanionEnum.get.values, $this.props.games,)\n            }\n\n            //region -------------------- List interpreter --------------------\n\n            public createListDimension(): PossibleDimensionOnList {\n                return null\n            }\n\n            //endregion -------------------- List interpreter --------------------\n            //region -------------------- Card list interpreter --------------------\n\n            public createCardListDimension(): PossibleDimensionOnCardList {\n                return null\n            }\n\n            public createCardListContent({englishName: name, editorVoiceSoundFileHolder,}: EditorVoices,) {\n                return <div className=\"editorVoices-container\">\n                    <EditorVoiceSoundComponent editorVoiceSound={editorVoiceSoundFileHolder} name={name}/>\n                </div>\n            }\n\n            //endregion -------------------- Card list interpreter --------------------\n\n        }()\n    }\n\n    //endregion -------------------- Create methods --------------------\n\n}\n","import type {AppWithInterpreterProperties} from 'app/AppProperties.types'\nimport type {AppStates}                    from 'app/AppStates.types'\nimport type {ValueByApp}                   from 'app/interpreter/AppInterpreter'\nimport type {AppInterpreterWithCardList}   from 'app/interpreter/AppInterpreterWithCardList'\nimport type {ViewAndRouteName}             from 'app/withInterpreter/DisplayButtonGroup.properties'\nimport type {PossibleRouteName}            from 'route/EveryRoutes.types'\n\nimport {AbstractSimpleListApp} from 'app/withInterpreter/AbstractSimpleListApp'\nimport {ListDimensionCreator}  from 'app/withInterpreter/ListDimension.creator'\nimport {ViewDisplays}          from 'app/withInterpreter/ViewDisplays'\nimport NameComponent           from 'lang/name/component/Name.component'\n\nexport abstract class AbstractCardListApp<APP extends AppInterpreterWithCardList,\n    T extends AppWithInterpreterProperties = AppWithInterpreterProperties, S extends AppStates = AppStates, >\n    extends AbstractSimpleListApp<APP, T, S> {\n\n    //region -------------------- Fields --------------------\n\n    #routeName?: PossibleRouteName\n\n    //endregion -------------------- Fields --------------------\n    //region -------------------- Getter & create methods --------------------\n\n    protected override _createPossibleViewDisplay(): readonly ViewAndRouteName[] {\n        return [\n            ...super._createPossibleViewDisplay(),\n            [ViewDisplays.CARD_LIST, this.__cardRouteName,],\n        ]\n    }\n\n    private get __cardRouteName(): PossibleRouteName {\n        return this.#routeName ??= this._createCardListRouteName()\n    }\n\n    protected abstract _createCardListRouteName(): PossibleRouteName\n\n    protected _createUniqueNameOnCardList(enumerable: ValueByApp<APP>,): string {\n        return enumerable.englishName\n    }\n\n    //endregion -------------------- Getter & create methods --------------------\n    //region -------------------- Render methods --------------------\n\n    /**\n     * Create a list of elements in a card manner.\n     * It can be similar to the {@link createList} but has more information displayed.\n     */\n    public createCardList(): ReactElement {\n        const optionInterpreter = this._appOptionInterpreter\n        const key = this._key\n        const cardListDimension = optionInterpreter.createCardListDimension()\n        const dimensions = new ListDimensionCreator(cardListDimension === 'list' ? optionInterpreter.createListDimension() : cardListDimension,).createDimensions()\n        const content = optionInterpreter.content\n\n        const size = content.length\n        const contentToDisplay = new Array<ReactElement>(size,)\n        let index = size\n        while (index-- > 0) {\n            const enumerable = content[index]\n            const uniqueEnglishName = this._createUniqueNameOnCardList(enumerable,)\n\n            //TODO change the popover to be on the id instead of the name directly\n            contentToDisplay[index] =\n                <div key={`${uniqueEnglishName} - main card list container`} id={`${key}-${enumerable.englishNameInHtml}-container`} className={`${key}-container listElement-container ${dimensions}`}>\n                    <div key={`${uniqueEnglishName} - main card list sub-container`} className=\"cardListElement-container rounded-pill\">\n                        <NameComponent key={`${uniqueEnglishName} - text container`} id=\"name\" name={enumerable.reference.nameContainer} popoverOrientation=\"left\"/>\n                        <div className=\"cardListName-content-container\">{optionInterpreter.createCardListContent(enumerable)}</div>\n                    </div>\n                </div>\n        }\n        return <>{contentToDisplay}</>\n    }\n\n    //endregion -------------------- Render methods --------------------\n\n}\n","import './EditorVoiceSound.component.scss'\n\nimport type {EditorVoiceSound} from 'core/editorVoice/sound/EditorVoiceSound'\nimport type {ReactProperties}  from 'util/react/ReactProperties'\n\nimport SimpleSoundComponent from 'util/file/sound/component/SimpleSound.component'\n\ninterface EditorVoiceSoundComponentProperties\n    extends ReactProperties {\n\n    editorVoiceSound: Nullable<EditorVoiceSound>\n\n    name: string\n\n}\n\n/**\n * @param properties\n * @reactComponent\n */\nexport default function EditorVoiceSoundComponent({editorVoiceSound, name,}: EditorVoiceSoundComponentProperties,) {\n    if (editorVoiceSound == null)\n        return null\n\n    const {regularSound: regularFile, europeanSound: europeanFile,} = editorVoiceSound\n    return regularFile == null\n        ? null\n        : europeanFile == null\n            ? <div key={`Editor voice sound container (single - ${name})`} className=\"single-editorVoiceSound-container\">\n                <SimpleSoundComponent file={regularFile} title={name}/>\n            </div>\n            : <div key={`Editor voice sound container (double - ${name})`} className=\"double-editorVoiceSound-container container\">\n                <div key={`Editor voice sound container (single #1 - ${name}`} className=\"single-editorVoiceSound-container\">\n                    <SimpleSoundComponent file={regularFile} title={name}/>\n                </div>\n                <div key={`Editor voice sound container (single #2 - ${name})`} className=\"single-editorVoiceSound-container\">\n                    <SimpleSoundComponent file={europeanFile} title={name}/>\n                </div>\n            </div>\n\n}\n"],"names":["EditorVoiceApp","_AbstractCardListApp","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","gameContentTranslation","$this","this","EditorVoiceAppInterpreter","get","filterGame","EditorVoices","CompanionEnum","values","props","games","_ref","name","englishName","editorVoiceSoundFileHolder","_jsx","className","children","EditorVoiceSoundComponent","editorVoiceSound","AbstractCardListApp","_routeName","_classPrivateFieldLooseKey","_AbstractSimpleListAp","_this","_len","length","args","Array","_key","call","concat","Object","defineProperty","_assertThisInitialized","writable","_toConsumableArray","_get","_getPrototypeOf","prototype","ViewDisplays","CARD_LIST","__cardRouteName","_classPrivateFieldLoo","_classPrivateFieldLoo2","_classPrivateFieldLooseBase","_createCardListRouteName","enumerable","optionInterpreter","_appOptionInterpreter","cardListDimension","createCardListDimension","dimensions","ListDimensionCreator","createListDimension","createDimensions","content","size","contentToDisplay","index","uniqueEnglishName","_createUniqueNameOnCardList","id","englishNameInHtml","_jsxs","NameComponent","reference","nameContainer","popoverOrientation","createCardListContent","_Fragment","AbstractSimpleListApp","regularFile","regularSound","europeanFile","europeanSound","SimpleSoundComponent","file","title"],"sourceRoot":""}