{"version":3,"file":"static/js/530.93a66e3a.chunk.js","mappings":"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","sources":["core/officialCourse/component/OfficialCourseAvailability.tsx","core/officialCourse/component/OfficialCourseReward.tsx","app/options/OfficialCourseAppOption.tsx","lang/name/ClassContainingANameWithADescription.ts","core/officialCourse/OfficialCourse.container.ts","core/officialCourse/OfficialCourse.loader.ts","core/officialCourse/OfficialCourses.ts","app/OfficialCourseApp.tsx","core/_component/LevelGameStyleAndTheme.tsx"],"sourcesContent":["import type {OfficialCourses} from 'core/officialCourse/OfficialCourses'\nimport type {ReactProperties} from 'util/react/ReactProperties'\n\nimport SimpleDate          from 'lang/date/SimpleDate'\nimport {unfinishedText}    from 'app/tools/text/UnfinishedText'\nimport {UNKNOWN_REFERENCE} from 'util/commonVariables'\n\ninterface OfficialCourseAvailabilityProperties\n    extends ReactProperties {\n\n    readonly reference: OfficialCourses\n\n}\n\n/** @reactComponent */\nexport default function OfficialCourseAvailability({reference: {reference,},}: OfficialCourseAvailabilityProperties,) {\n    const releaseDate = reference.releaseDate\n    const removalDate = reference.removalDate\n\n    if (removalDate == null)\n        return <div className=\"officialCourse-availability officialCourse-availability-releaseToEndLife\">\n            <SimpleDate date={releaseDate}/>\n            {unfinishedText(' to the game end-life',)}\n        </div>\n    if (removalDate === UNKNOWN_REFERENCE)\n        return <div className=\"officialCourse-availability officialCourse-availabilityReleaseToUnknown\">\n            <SimpleDate date={releaseDate}/>\n            {unfinishedText(' to an unknown date',)}\n        </div>\n    return <div className=\"officialCourse-availability officialCourse-availability-releaseToRemoval\">\n        <SimpleDate date={releaseDate}/>\n        {unfinishedText(' to ',)}\n        <SimpleDate date={removalDate}/>\n    </div>\n}\n","import {mapByArray} from '@joookiwi/collection'\n\nimport type {OfficialCourses} from 'core/officialCourse/OfficialCourses'\nimport type {ReactProperties} from 'util/react/ReactProperties'\n\nimport Image from 'app/tools/images/Image'\n\ninterface OfficialCourseRewardProperties\n    extends ReactProperties {\n\n    readonly reference: OfficialCourses\n\n}\n\n/** @reactComponent */\nexport default function OfficialCourseReward({reference,}: OfficialCourseRewardProperties,) {\n    return <div className=\"officialCourse-reward\">{mapByArray(reference.reference.reward, it =>\n            <Image key={`Reward (${it.englishName})`} file={it.waitingImage[0]}/>\n        ,)}</div>\n}\n","import type {CompanionEnumSingleton} from '@joookiwi/enumerable'\nimport {CompanionEnum, Enum}         from '@joookiwi/enumerable'\n\nimport type {AppOption}           from 'app/options/AppOption'\nimport type {Names, Ordinals}     from 'app/options/OfficialCourseAppOption.types'\nimport type {SingleHeaderContent} from 'app/tools/table/SimpleHeader'\nimport type {OfficialCourses}     from 'core/officialCourse/OfficialCourses'\n\nimport {CommonOptions}                  from 'app/options/CommonOptions'\nimport TextComponent                    from 'app/tools/text/TextComponent'\nimport UnfinishedText, {unfinishedText} from 'app/tools/text/UnfinishedText'\nimport LevelGameStyleAndTheme           from 'core/_component/LevelGameStyleAndTheme'\nimport OfficialCourseAvailability       from 'core/officialCourse/component/OfficialCourseAvailability'\nimport OfficialCourseReward             from 'core/officialCourse/component/OfficialCourseReward'\nimport {gameContentTranslation}         from 'lang/components/translationMethods'\nimport {UNKNOWN_REFERENCE}              from 'util/commonVariables'\n\nexport abstract class OfficialCourseAppOption\n    extends Enum<Ordinals, Names>\n    implements AppOption<OfficialCourses> {\n\n    //region -------------------- Enum instances --------------------\n\n    public static readonly REWARD = new class OfficialCourseAppOption_Reward extends OfficialCourseAppOption {\n\n        protected override _createContentOption(enumeration: OfficialCourses,): NonNullReactElement {\n            return <OfficialCourseReward reference={enumeration}/>\n        }\n\n        protected override _createTableHeaderOption() {\n            return {key: 'reward', element: unfinishedText('Reward',),} satisfies SingleHeaderContent\n        }\n\n    }('reward',)\n    public static readonly NAME = new class OfficialCourseAppOption_Name extends OfficialCourseAppOption {\n\n        protected override _createContentOption(enumeration: OfficialCourses,) {\n            return CommonOptions.get.getNameContent(enumeration,)\n        }\n\n        protected override _createTableHeaderOption() {\n            return CommonOptions.get.nameHeader\n        }\n\n    }('name',)\n    public static readonly DESCRIPTION = new class OfficialCourseAppOption_Description extends OfficialCourseAppOption {\n\n        protected override _createContentOption(enumeration: OfficialCourses,): NonNullReactElement {\n            const reference = enumeration.reference\n            const value = reference.descriptionLanguageValue\n\n            if (value === UNKNOWN_REFERENCE)\n                return <TextComponent content={reference.descriptionEnglish} isUnknown/>\n            return <TextComponent content={value}/>\n        }\n\n        protected override _createTableHeaderOption() {\n            return {key: 'description', element: unfinishedText('Description',),} satisfies SingleHeaderContent\n        }\n\n    }('description',)\n    public static readonly GAME_STYLE_AND_AREAS = new class OfficialCourseAppOption_GameStyleAndThemes extends OfficialCourseAppOption {\n\n        protected override _createContentOption({reference,}: OfficialCourses,): NonNullReactElement {\n            return <LevelGameStyleAndTheme gameStyle={reference.gameStyle} mainArea={reference.courseThemeInTheMainArea} subArea={reference.courseThemeInTheSubArea} in2Line/>\n        }\n\n        protected override _createTableHeaderOption() {\n            return {key: 'gameStyleAndAreas', element: unfinishedText(gameContentTranslation('game style.singular',) + unfinishedText(' & areas'),),} satisfies SingleHeaderContent\n        }\n\n    }('gameStyleAndAreas',)\n    public static readonly TIME = new class OfficialCourseAppOption_Time extends OfficialCourseAppOption {\n\n        protected override _createContentOption(enumeration: OfficialCourses,): NonNullReactElement {\n            return <span>{enumeration.reference.amountOfTime} <UnfinishedText>seconds</UnfinishedText></span>\n        }\n\n        protected override _createTableHeaderOption() {\n            return {key: 'time', element: gameContentTranslation('time.singular',),} satisfies SingleHeaderContent\n        }\n\n    }('time',)\n    public static readonly AVAILABILITY = new class OfficialCourseAppOption_Availability extends OfficialCourseAppOption {\n\n        protected override _createContentOption(enumeration: OfficialCourses,): NonNullReactElement {\n            return <OfficialCourseAvailability reference={enumeration}/>\n        }\n\n        protected override _createTableHeaderOption() {\n            return {key: 'availability', element: unfinishedText('Availability',),} satisfies SingleHeaderContent\n        }\n\n    }('availability',)\n\n    //endregion -------------------- Enum instances --------------------\n    //region -------------------- Companion enum --------------------\n\n    public static readonly CompanionEnum: CompanionEnumSingleton<OfficialCourseAppOption, typeof OfficialCourseAppOption> = class CompanionEnum_OfficialCourseAppOption\n        extends CompanionEnum<OfficialCourseAppOption, typeof OfficialCourseAppOption> {\n\n        //region -------------------- Singleton usage --------------------\n\n        static #instance?: CompanionEnum_OfficialCourseAppOption\n\n        private constructor() {\n            super(OfficialCourseAppOption,)\n        }\n\n        public static get get() {\n            return this.#instance ??= new CompanionEnum_OfficialCourseAppOption()\n        }\n\n        //endregion -------------------- Singleton usage --------------------\n\n    }\n\n    //endregion -------------------- Companion enum --------------------\n    //region -------------------- Fields --------------------\n\n    readonly #associatedClass\n    readonly #additionalClasses\n\n    //endregion -------------------- Fields --------------------\n    //region -------------------- Constructor --------------------\n\n    private constructor(associatedClass: string,) {\n        super()\n        this.#additionalClasses = [this.#associatedClass = associatedClass,] as const\n    }\n\n    //endregion -------------------- Constructor --------------------\n    //region -------------------- Getter methods --------------------\n\n    public get associatedClass(): string {\n        return this.#associatedClass\n    }\n\n    public get additionalClasses(): readonly [string,] {\n        return this.#additionalClasses\n    }\n\n    //endregion -------------------- Getter methods --------------------\n    //region -------------------- Methods --------------------\n\n    //region -------------------- App option - content --------------------\n\n    protected abstract _createContentOption(enumeration: OfficialCourses,): ReactElement\n\n    public renderContent(enumeration: OfficialCourses,): readonly [ReactElement,] {\n        return [this._createContentOption(enumeration,),]\n    }\n\n    //endregion -------------------- App option - content --------------------\n    //region -------------------- App option - table --------------------\n\n    protected abstract _createTableHeaderOption(): SingleHeaderContent\n\n    public renderTableHeader(): SingleHeaderContent {\n        return this._createTableHeaderOption()\n    }\n\n    //endregion -------------------- App option - table --------------------\n\n    //endregion -------------------- Methods --------------------\n\n}\n","import type {EveryLanguages}            from 'lang/EveryLanguages'\nimport type {Name}                      from 'lang/name/Name'\nimport type {NameTraitWithADescription} from 'lang/name/NameTraitWithADescription'\n\nimport {ClassContainingAName} from 'lang/name/ClassContainingAName'\n\nexport class ClassContainingANameWithADescription<const out T, const out U, const out DESCRIPTION extends Name<U>, >\n    extends ClassContainingAName<T>\n    implements NameTraitWithADescription<T, U, DESCRIPTION> {\n\n    //region -------------------- Fields --------------------\n\n    readonly #descriptionContainer\n\n    //endregion -------------------- Fields --------------------\n    //region -------------------- Constructor --------------------\n\n    public constructor(name: Name<T>, description: DESCRIPTION,) {\n        super(name,)\n        this.#descriptionContainer = description\n    }\n\n    //endregion -------------------- Constructor --------------------\n    //region -------------------- Getter methods --------------------\n\n    public get descriptionContainer(): DESCRIPTION {\n        return this.#descriptionContainer\n    }\n\n    public get descriptionLanguageValue(): this['descriptionContainer']['languageValue'] {\n        return this.descriptionContainer.languageValue\n    }\n\n    //region -------------------- English properties --------------------\n\n    public get descriptionOriginalEnglish(): this['descriptionContainer']['originalEnglish'] {\n        return this.descriptionContainer.originalEnglish\n    }\n\n    public get descriptionEnglish(): this['descriptionContainer']['english'] {\n        return this.descriptionContainer.english\n    }\n\n    public get descriptionAmericanEnglish(): this['descriptionContainer']['americanEnglish'] {\n        return this.descriptionContainer.americanEnglish\n    }\n\n    public get descriptionEuropeanEnglish(): this['descriptionContainer']['europeanEnglish'] {\n        return this.descriptionContainer.europeanEnglish\n    }\n\n    //endregion -------------------- English properties --------------------\n    //region -------------------- French properties --------------------\n\n    public get descriptionOriginalFrench(): this['descriptionContainer']['originalFrench'] {\n        return this.descriptionContainer.originalFrench\n    }\n\n    public get descriptionFrench(): this['descriptionContainer']['french'] {\n        return this.descriptionContainer.french\n    }\n\n    public get descriptionCanadianFrench(): this['descriptionContainer']['canadianFrench'] {\n        return this.descriptionContainer.canadianFrench\n    }\n\n    public get descriptionEuropeanFrench(): this['descriptionContainer']['europeanFrench'] {\n        return this.descriptionContainer.europeanFrench\n    }\n\n    //endregion -------------------- French properties --------------------\n    //region -------------------- German properties --------------------\n\n    public get descriptionGerman(): this['descriptionContainer']['german'] {\n        return this.descriptionContainer.german\n    }\n\n    //endregion -------------------- German properties --------------------\n    //region -------------------- Spanish properties --------------------\n\n    public get descriptionOriginalSpanish(): this['descriptionContainer']['originalSpanish'] {\n        return this.descriptionContainer.originalSpanish\n    }\n\n    public get descriptionSpanish(): this['descriptionContainer']['spanish'] {\n        return this.descriptionContainer.spanish\n    }\n\n    public get descriptionAmericanSpanish(): this['descriptionContainer']['americanSpanish'] {\n        return this.descriptionContainer.americanSpanish\n    }\n\n    public get descriptionEuropeanSpanish(): this['descriptionContainer']['europeanSpanish'] {\n        return this.descriptionContainer.europeanSpanish\n    }\n\n    //endregion -------------------- Spanish properties --------------------\n    //region -------------------- Italian properties --------------------\n\n    public get descriptionItalian(): this['descriptionContainer']['italian'] {\n        return this.descriptionContainer.italian\n    }\n\n    //endregion -------------------- Italian properties --------------------\n    //region -------------------- Dutch properties --------------------\n\n    public get descriptionDutch(): this['descriptionContainer']['dutch'] {\n        return this.descriptionContainer.dutch\n    }\n\n    //endregion -------------------- Dutch properties --------------------\n    //region -------------------- Portuguese properties --------------------\n\n    public get descriptionOriginalPortuguese(): this['descriptionContainer']['originalPortuguese'] {\n        return this.descriptionContainer.originalPortuguese\n    }\n\n    public get descriptionPortuguese(): this['descriptionContainer']['portuguese'] {\n        return this.descriptionContainer.portuguese\n    }\n\n    public get descriptionAmericanPortuguese(): this['descriptionContainer']['americanPortuguese'] {\n        return this.descriptionContainer.americanPortuguese\n    }\n\n    public get descriptionEuropeanPortuguese(): this['descriptionContainer']['europeanPortuguese'] {\n        return this.descriptionContainer.europeanPortuguese\n    }\n\n    //endregion -------------------- Portuguese properties --------------------\n    //region -------------------- Russian properties --------------------\n\n    public get descriptionRussian(): this['descriptionContainer']['russian'] {\n        return this.descriptionContainer.russian\n    }\n\n    //endregion -------------------- Russian properties --------------------\n    //region -------------------- Japanese properties --------------------\n\n    public get descriptionJapanese(): this['descriptionContainer']['japanese'] {\n        return this.descriptionContainer.japanese\n    }\n\n    //endregion -------------------- Japanese properties --------------------\n    //region -------------------- Chinese properties --------------------\n\n    public get descriptionOriginalChinese(): this['descriptionContainer']['originalChinese'] {\n        return this.descriptionContainer.originalChinese\n    }\n\n    public get descriptionChinese(): this['descriptionContainer']['chinese'] {\n        return this.descriptionContainer.chinese\n    }\n\n    public get descriptionTraditionalChinese(): this['descriptionContainer']['traditionalChinese'] {\n        return this.descriptionContainer.traditionalChinese\n    }\n\n    public get descriptionSimplifiedChinese(): this['descriptionContainer']['simplifiedChinese'] {\n        return this.descriptionContainer.simplifiedChinese\n    }\n\n    //endregion -------------------- Chinese properties --------------------\n    //region -------------------- Korean properties --------------------\n\n    public get descriptionKorean(): this['descriptionContainer']['korean'] {\n        return this.descriptionContainer.korean\n    }\n\n    //endregion -------------------- Korean properties --------------------\n    //region -------------------- Hebrew properties --------------------\n\n    public get descriptionIsHebrewUsed(): this['descriptionContainer']['isHebrewUsed'] {\n        return this.descriptionContainer.isHebrewUsed\n    }\n\n    public get descriptionHebrew(): this['descriptionContainer']['hebrew'] {\n        return this.descriptionContainer.hebrew\n    }\n\n    //endregion -------------------- Hebrew properties --------------------\n    //region -------------------- Polish properties --------------------\n\n    public get descriptionIsPolishUsed(): this['descriptionContainer']['isPolishUsed'] {\n        return this.descriptionContainer.isPolishUsed\n    }\n\n    public get descriptionPolish(): this['descriptionContainer']['polish'] {\n        return this.descriptionContainer.polish\n    }\n\n    //endregion -------------------- Polish properties --------------------\n    //region -------------------- Ukrainian properties --------------------\n\n    public get descriptionIsUkrainianUsed(): this['descriptionContainer']['isUkrainianUsed'] {\n        return this.descriptionContainer.isUkrainianUsed\n    }\n\n    public get descriptionUkrainian(): this['descriptionContainer']['ukrainian'] {\n        return this.descriptionContainer.ukrainian\n    }\n\n    //endregion -------------------- Ukrainian properties --------------------\n    //region -------------------- Greek properties --------------------\n\n    public get descriptionIsGreekUsed(): this['descriptionContainer']['isGreekUsed'] {\n        return this.descriptionContainer.isGreekUsed\n    }\n\n    public get descriptionGreek(): this['descriptionContainer']['greek'] {\n        return this.descriptionContainer.greek\n    }\n\n    //endregion -------------------- Greek properties --------------------\n\n    public get descriptionOriginalLanguages(): this['descriptionContainer']['originalLanguages'] {\n        return this.descriptionContainer.originalLanguages\n    }\n\n    //endregion -------------------- Getter methods --------------------\n    //endregion -------------------- Convertor methods --------------------\n\n    public toDescriptionNameMap(): ReadonlyMap<EveryLanguages, U> {\n        return this.descriptionContainer.toNameMap()\n    }\n\n    //region -------------------- Convertor methods --------------------\n\n\n}\n","import type {Array, NullOr} from '@joookiwi/type'\n\nimport type {GameStyles}           from 'core/gameStyle/GameStyles'\nimport type {MysteryMushrooms}     from 'core/mysteryMushroom/MysteryMushrooms'\nimport type {PossibleAmountOfTime} from 'core/officialCourse/loader.types'\nimport type {OfficialCourse}       from 'core/officialCourse/OfficialCourse'\nimport type {Themes}               from 'core/theme/Themes'\nimport type {Name}                 from 'lang/name/Name'\n\nimport {ClassContainingANameWithADescription} from 'lang/name/ClassContainingANameWithADescription'\n\nexport class OfficialCourseContainer\n    extends ClassContainingANameWithADescription<string, string, Name<string>>\n    implements OfficialCourse {\n\n    //region -------------------- Fields --------------------\n\n    readonly #reward\n    readonly #releaseDate\n    readonly #removalDate\n    readonly #gameStyle\n    readonly #courseThemeInTheMainArea\n    readonly #courseThemeInTheSubArea\n    readonly #amountOfTime\n\n    //endregion -------------------- Fields --------------------\n    //region -------------------- Constructor --------------------\n\n    public constructor(\n        name: Name<string>, description: Name<string>,\n        reward: Array<MysteryMushrooms>,\n        releaseDate: Date, removalDate: NullOr<| Date | UnknownReference>,\n        gameStyle: GameStyles,\n        courseThemeInMainArea: Themes, courseThemeInSubArea: NullOr<Themes>,\n        amountOfTime: PossibleAmountOfTime,) {\n        super(name, description,)\n        this.#reward = reward\n        this.#releaseDate = releaseDate\n        this.#removalDate = removalDate\n        this.#gameStyle = gameStyle\n        this.#courseThemeInTheMainArea = courseThemeInMainArea\n        this.#courseThemeInTheSubArea = courseThemeInSubArea\n        this.#amountOfTime = amountOfTime\n    }\n\n    //endregion -------------------- Constructor --------------------\n    //region -------------------- Getter methods --------------------\n\n    public get reward() { return this.#reward }\n\n    public get releaseDate() { return this.#releaseDate }\n    public get removalDate() { return this.#removalDate }\n\n    public get gameStyle() { return this.#gameStyle }\n\n    public get courseThemeInTheMainArea() { return this.#courseThemeInTheMainArea }\n    public get courseThemeInTheSubArea() {  return this.#courseThemeInTheSubArea }\n\n    public get amountOfTime() { return this.#amountOfTime }\n\n    //endregion -------------------- Getter methods --------------------\n\n}\n","import file from 'resources/compiled/Official course (SMM).json'\n\nimport type {Array, NullOr} from '@joookiwi/type'\nimport {forEachByArray}     from '@joookiwi/collection'\n\nimport type {LanguageContent}                                                                from 'core/_template/LanguageContent'\nimport type {DescriptionLanguageContent}                                                     from 'core/_template/DescriptionLanguageContent'\nimport type {PossibleAcronym_GameStyle_SMM1}                                                 from 'core/gameReference/GameReferences.types'\nimport type {PossibleAmountOfTime, PossibleReleaseDate, PossibleRemovalDate, PossibleReward} from 'core/officialCourse/loader.types'\nimport type {OfficialCourse}                                                                 from 'core/officialCourse/OfficialCourse'\nimport type {PossibleEnglishName}                                                            from 'core/officialCourse/OfficialCourses.types'\nimport type {PossibleEnglishName_CourseTheme_SMM1}                                           from 'core/theme/Themes.types'\nimport type {Loader}                                                                         from 'util/loader/Loader'\n\nimport {isInProduction}                                          from 'variables'\nimport {GameStyles}                                              from 'core/gameStyle/GameStyles'\nimport {MysteryMushrooms}                                        from 'core/mysteryMushroom/MysteryMushrooms'\nimport {OfficialCourseContainer}                                 from 'core/officialCourse/OfficialCourse.container'\nimport {Themes}                                                  from 'core/theme/Themes'\nimport {createNameFromContent, createNameFromContentDescription} from 'lang/name/createNameFromContent'\nimport {UNKNOWN_REFERENCE}                                       from 'util/commonVariables'\nimport {Empty}                                                   from 'util/emptyVariables'\n\nimport EMPTY_ARRAY =              Empty.EMPTY_ARRAY\nimport GameStyleCompanion =       GameStyles.Companion\nimport MysteryMushroomCompanion = MysteryMushrooms.Companion\nimport ThemeCompanion =           Themes.Companion\n\n/**\n * @singleton\n */\nexport class OfficialCourseLoader\n    implements Loader<ReadonlyMap<PossibleEnglishName, OfficialCourse>> {\n\n    //region -------------------- Singleton usage --------------------\n\n    static #instance?: OfficialCourseLoader\n\n    private constructor() {}\n\n    public static get get() {\n        return this.#instance ??= new this()\n    }\n\n    //endregion -------------------- Singleton usage --------------------\n\n    #map?: ReadonlyMap<PossibleEnglishName, OfficialCourse>\n\n    public load(): ReadonlyMap<PossibleEnglishName, OfficialCourse> {\n        if (this.#map != null)\n            return this.#map\n\n        const references = new Map<PossibleEnglishName, OfficialCourse>()\n        forEachByArray(file as Array<Content>, content =>\n                references.set(content.english, createReference(content,),),)\n\n        if (!isInProduction)\n            console.info(\n                '-------------------- \"official course\" has been loaded --------------------\\n',\n                references,\n                '\\n-------------------- \"official course\" has been loaded --------------------',\n            )\n\n        return this.#map = references\n    }\n\n}\n\ninterface Content\n    extends LanguageContent, DescriptionLanguageContent {\n\n    readonly reward: PossibleReward\n\n    readonly releaseDate: PossibleReleaseDate\n    readonly removalDate: PossibleRemovalDate\n\n    readonly gameStyle: PossibleAcronym_GameStyle_SMM1\n    readonly courseTheme_mainArea: PossibleEnglishName_CourseTheme_SMM1\n    readonly courseTheme_subArea: NullOr<PossibleEnglishName_CourseTheme_SMM1>\n\n    readonly amountOfTime: PossibleAmountOfTime\n\n\n    readonly english: PossibleEnglishName\n    readonly americanEnglish: null\n    readonly europeanEnglish: null\n    readonly german: string\n    readonly italian: string\n    readonly dutch: UnknownReference\n    readonly portuguese: UnknownReference\n    readonly americanPortuguese: null\n    readonly europeanPortuguese: null\n    readonly russian: string\n    readonly japanese: string\n    readonly chinese: null\n    readonly traditionalChinese: null\n    readonly simplifiedChinese: null\n    readonly korean: null\n\n    readonly americanEnglish_description: null\n    readonly europeanEnglish_description: null\n    readonly german_description: UnknownReference\n    readonly italian_description: UnknownReference\n    readonly dutch_description: UnknownReference\n    readonly portuguese_description: UnknownReference\n    readonly americanPortuguese_description: null\n    readonly europeanPortuguese_description: null\n    readonly russian_description: UnknownReference\n    readonly japanese_description: UnknownReference\n    readonly chinese_description: null\n    readonly traditionalChinese_description: null\n    readonly simplifiedChinese_description: null\n    readonly korean_description: null\n\n}\n\nfunction createReference(content: Content,): OfficialCourse {\n    const subArea = content.courseTheme_subArea\n\n    return new OfficialCourseContainer(\n        createNameFromContent(content, 1, true,),\n        createNameFromContentDescription(content, 1, true,),\n        retrieveReward(content.reward,),\n        createReleaseDate(content.releaseDate,),\n        createRemovalDate(content.removalDate,),\n        GameStyleCompanion.getValueByAcronym(content.gameStyle,),\n        ThemeCompanion.getValueByName(content.courseTheme_mainArea,),\n        subArea == null ? null : ThemeCompanion.getValueByName(subArea,),\n        content.amountOfTime,\n    )\n}\n\n\nfunction retrieveReward(value: PossibleReward,): Array<MysteryMushrooms> {\n    if (value == null)\n        return EMPTY_ARRAY\n    if (value === 'Bulbasaur / Charmander / Squirtle')\n        return [MysteryMushrooms.BULBASAUR, MysteryMushrooms.CHARMANDER, MysteryMushrooms.SQUIRTLE,]\n    if (value === 'Kitty White / Melody')\n        return [MysteryMushrooms.KITTY_WHITE, MysteryMushrooms.MELODY,]\n    if (value === 'Callie / Marie')\n        return [MysteryMushrooms.CALLIE, MysteryMushrooms.MARIE,]\n    return [MysteryMushroomCompanion.getValueByName(value,),]\n}\n\nfunction createReleaseDate(value: PossibleReleaseDate,): Date {\n    return new Date(Number(value.substring(0, 4,),), Number(value.substring(5, 6,),) - 1, Number(value.substring(8, 9,),), 0, 0, 0, 0,)\n}\n\nfunction createRemovalDate(value: PossibleRemovalDate,): NullOr<Date | UnknownReference> {\n    if (value == null)\n        return null\n    if (value === '???')\n        return UNKNOWN_REFERENCE\n\n    return new Date(Number(value.substring(0, 4,),), Number(value.substring(5, 6,),) - 1, Number(value.substring(8, 9,),), 0, 0, 0, 0,)\n}\n","import {Enum} from '@joookiwi/enumerable'\n\nimport type {ClassWithEnglishName}                 from 'core/ClassWithEnglishName'\nimport type {ClassWithReference}                   from 'core/ClassWithReference'\nimport type {OfficialCourse}                       from 'core/officialCourse/OfficialCourse'\nimport type {Names, Ordinals, PossibleEnglishName} from 'core/officialCourse/OfficialCourses.types'\nimport type {CompanionEnumByNameSingleton}         from 'util/enumerable/Singleton.types'\n\nimport {OfficialCourseLoader}           from 'core/officialCourse/OfficialCourse.loader'\nimport {StringContainer}                from 'util/StringContainer'\nimport {CompanionEnumByEnglishNameOnly} from 'util/enumerable/companion/CompanionEnumByEnglishNameOnly'\n\n/**\n * @todo Add references for the items retrieved\n */\nexport class OfficialCourses\n    extends Enum<Ordinals, Names>\n    implements ClassWithReference<OfficialCourse>,\n        ClassWithEnglishName<PossibleEnglishName> {\n\n    //region -------------------- Enum instances --------------------\n\n    public static readonly NWC_2017 =                         new OfficialCourses('NWC-2017',)\n    public static readonly DR_KAWASHIMA_ATHLETIC_TRAINING =   new OfficialCourses('Dr Kawashima’s Athletic Training',)\n    public static readonly WALKIN_WITH_UNDODOG =              new OfficialCourses('Walkin’ with Undodog',)\n    public static readonly SQUID_SISTER_VS_BLOOPERS =         new OfficialCourses('Squid Sisters vs. Bloopers',)\n    public static readonly SHAUN_MOSSY_MOLE_MISCHIEF =        new OfficialCourses('Shaun’s Mossy Mole Mischief',)\n    public static readonly HELLO_KITTY_AND_MY_MELODY =        new OfficialCourses('Hello Kitty & My Melody',)\n    public static readonly POPO_AND_NANA_CLIMBING_CHALLENGE = new OfficialCourses('Popo & Nana’s Climbing Challenge',)\n    public static readonly METAL_RESISTANCE =                 new OfficialCourses('METAL RESISTANCE',)\n    public static readonly STARFY_PRINCE_OF_PUFFTOP =         new OfficialCourses('Starfy: Prince of Pufftop',)\n    public static readonly YU_AYASAKI_BIG_ADVENTURE =         new OfficialCourses('♪Yu Ayasaki’s Big Adventure!♪',)\n    public static readonly TOADETTE_TREASURE_TRACKER =        new OfficialCourses('Toadette: Treasure Tracker',)\n    public static readonly TWILIGHT_PRINCESS_HD =             new OfficialCourses('Twilight Princess HD',)\n    public static readonly MARY_O_LUNCH_BREAK =               new OfficialCourses('Mary O.’s Lunch Break',)\n    public static readonly SECRETS_OF_STATUE_MARIO =          new OfficialCourses('Secrets of Statue Mario',)\n    public static readonly BARBARA_IN_TOMATOLAND =            new OfficialCourses('Barbara in Tomatoland',)\n    public static readonly NISEKOI_CHITOGE_AND_KOSAKIO =      new OfficialCourses('Nisekoi: Chitoge & Kosaki',)\n    public static readonly NISEKOI_TSGUMI_AND_MARIKA =        new OfficialCourses('Nisekoi: Tsugumi & Marika',)\n    public static readonly I_CHOOSE_YOU =                     new OfficialCourses('I Choose You!',)\n    public static readonly TOKAIGI_2016_CONTEST_COURSE_1 =    new OfficialCourses('Tokaigi 2016 Contest Course 1',)\n    public static readonly TOKAIGI_2016_CONTEST_COURSE_2 =    new OfficialCourses('Tokaigi 2016 Contest Course 2',)\n    public static readonly TOKAIGI_2016_CONTEST_COURSE_3 =    new OfficialCourses('Tokaigi 2016 Contest Course 3',)\n    public static readonly TOKAIGI_2016_CONTEST_COURSE_4 =    new OfficialCourses('Tokaigi 2016 Contest Course 4',)\n    public static readonly PARANORMAL_RESEARCH =              new OfficialCourses('Paranormal Research',)\n    public static readonly ADVENTURE_IN_SARASALAND =          new OfficialCourses('Adventure in Sarasaland',)\n    public static readonly COOOOOO_FEAT_YAMAMURA =            new OfficialCourses('Cooooo! (Feat. Yamamura)',)\n    public static readonly SOUDWEST_AIR_ADVENTURE =           new OfficialCourses('Soudwest Air Adventure',)\n    public static readonly NES_REMIX_EXCITE_BIKE =            new OfficialCourses('NES REMIX (Excitebike)',)\n    public static readonly NES_REMIX_SUPER_MARIO_BROS_2 =     new OfficialCourses('NES REMIX (Super Mario Bros. 2)',)\n    public static readonly CAPTAIN_TOAD_TREASURE_TRACKER =    new OfficialCourses('Captain Toad: Treasure Tracker',)\n    public static readonly WELCOME_TO_SATURN_VALLEY =         new OfficialCourses('Welcome to Saturn Valley',)\n    public static readonly BELCH_BASE =                       new OfficialCourses('Belch Base',)\n    public static readonly NINTENDO_BADGE_ARCADE =            new OfficialCourses('Nintendo Badge Arcade',)\n    public static readonly MA_RIO_HILLS =                     new OfficialCourses('Ma Rio Hills',)\n    public static readonly MERCEDES_BENZ_JUMP_N_DRIVE =       new OfficialCourses('Mercedes-Benz Jump’n’Drive',)\n    public static readonly MARIO_AND_LUIGI_PAPER_JAM =        new OfficialCourses('Mario & Luigi: Paper Jam',)\n    public static readonly NES_REMIX =                        new OfficialCourses('NES REMIX',)\n    public static readonly PAX_WEST_2015_OMEGATHON_FINAL_RD = new OfficialCourses('PAX West 2015 Omegathon Final Rd',)\n    public static readonly YOSHI_IS_AWESOME =                 new OfficialCourses('Yoshi Is Awesome',)\n    public static readonly CAT_MARIO_COURSE =                 new OfficialCourses('Cat Mario’s Course',)\n    public static readonly CAT_PEACH_COURSE =                 new OfficialCourses('Cat Peach’s Course',)\n    public static readonly SUPER_MARIO_KUN_25TH_ANNIVERSARY = new OfficialCourses('SUPER MARIO KUN 25th Anniversary',)\n    public static readonly TRI_FORCE_HEROES =                 new OfficialCourses('Tri Force Heroes',)\n    public static readonly ARINO_MAKER =                      new OfficialCourses('Arino Maker',)\n    public static readonly ARINO_MAKER_RETURNS =              new OfficialCourses('Arino Maker Returns',)\n    public static readonly NEW_ARINO_MAKER =                  new OfficialCourses('New! Arino Maker',)\n    public static readonly SUPER_BAKARHYTHM_LAND =            new OfficialCourses('Super Bakarhythm Land',)\n    public static readonly SHIP_LOVE =                        new OfficialCourses('Ship Love',)\n\n    //endregion -------------------- Enum instances --------------------\n    //region -------------------- Companion enum --------------------\n\n    public static readonly CompanionEnum: CompanionEnumByNameSingleton<OfficialCourses, typeof OfficialCourses> = class CompanionEnum_OfficialCourses\n        extends CompanionEnumByEnglishNameOnly<OfficialCourses, typeof OfficialCourses> {\n\n        //region -------------------- Singleton usage --------------------\n\n        static #instance?: CompanionEnum_OfficialCourses\n\n        private constructor() {\n            super(OfficialCourses,)\n        }\n\n        public static get get() {\n            return this.#instance ??= new CompanionEnum_OfficialCourses()\n        }\n\n        //endregion -------------------- Singleton usage --------------------\n\n    }\n\n    //endregion -------------------- Companion enum --------------------\n    //region -------------------- Fields --------------------\n\n    static #REFERENCE_MAP?: ReadonlyMap<PossibleEnglishName, OfficialCourse>\n\n    #reference?: OfficialCourse\n    readonly #englishName\n\n    //endregion -------------------- Fields --------------------\n    //region -------------------- Constructor --------------------\n\n    constructor(englishName: PossibleEnglishName,) {\n        super()\n        this.#englishName = new StringContainer(englishName,)\n    }\n\n    //endregion -------------------- Constructor --------------------\n    //region -------------------- Getter methods --------------------\n\n    public static get REFERENCE_MAP(): ReadonlyMap<PossibleEnglishName, OfficialCourse> {\n        return this.#REFERENCE_MAP ??= OfficialCourseLoader.get.load()\n    }\n\n    public get reference(): OfficialCourse {\n        return this.#reference ??= OfficialCourses.REFERENCE_MAP.get(this.englishName,)!\n    }\n\n    public get englishName(): PossibleEnglishName {\n        return this.#englishName.get\n    }\n\n    public get englishNameInHtml(): string {\n        return this.#englishName.getInHtml\n    }\n\n    //endregion -------------------- Getter methods --------------------\n    //region -------------------- Methods --------------------\n    //endregion -------------------- Methods --------------------\n\n}\n\nexport namespace OfficialCourses {\n\n    /** The companion instance of a {@link OfficialCourses} */\n    export const Companion = OfficialCourses.CompanionEnum.get\n\n    export const ALL = Companion.values.toArray()\n\n}\n\n// @ts-ignore: TODO remove this test variable when the application will be complete\n(window.test ??= {}).OfficialCourses = OfficialCourses\n","import './OfficialCourseApp.scss'\n\nimport type {Array}              from '@joookiwi/type'\nimport type {CollectionHolder}   from '@joookiwi/collection'\nimport {GenericCollectionHolder} from '@joookiwi/collection'\n\nimport type {OfficialCourseProperties} from 'app/AppProperties.types'\nimport type {AppInterpreterWithTable}  from 'app/interpreter/AppInterpreterWithTable'\nimport type {DimensionOnList}          from 'app/interpreter/DimensionOnList'\nimport type {ViewAndRouteName}         from 'app/withInterpreter/DisplayButtonGroup.properties'\nimport type {ReactProperties}          from 'util/react/ReactProperties'\n\nimport SubMainContainer                from 'app/_SubMainContainer'\nimport {OfficialCourseAppOption}       from 'app/options/OfficialCourseAppOption'\nimport Table                           from 'app/tools/table/Table'\nimport {unfinishedText}                from 'app/tools/text/UnfinishedText'\nimport List                            from 'app/util/List'\nimport CardList                        from 'app/withInterpreter/CardList'\nimport {ViewDisplays}                  from 'app/withInterpreter/ViewDisplays'\nimport LevelGameStyleAndTheme          from 'core/_component/LevelGameStyleAndTheme'\nimport {OfficialCourses}               from 'core/officialCourse/OfficialCourses'\nimport OfficialCourseAvailability      from 'core/officialCourse/component/OfficialCourseAvailability'\nimport OfficialCourseReward            from 'core/officialCourse/component/OfficialCourseReward'\nimport {OtherWordInTheGames}           from 'core/otherWordInTheGame/OtherWordInTheGames'\nimport {gameContentTranslation}        from 'lang/components/translationMethods'\nimport NameComponent                   from 'lang/name/component/Name.component'\n\nimport ALL = OfficialCourses.ALL\n\nclass EventCourseAppInterpreter\n    implements AppInterpreterWithTable<OfficialCourses, OfficialCourseAppOption> {\n\n    public get content() {\n        return new GenericCollectionHolder(ALL,)\n    }\n\n    //region -------------------- Card list interpreter --------------------\n\n    public createCardListDimension() {\n        return {\n            default: 1,\n            small: 2,\n            large: 3,\n            extraLarge: 4,\n        } as const satisfies DimensionOnList\n    }\n\n    public createCardListContent(enumerable: OfficialCourses,) {\n        const reference = enumerable.reference\n        return <div className=\"d-flex flex-column align-items-center\">\n            <OfficialCourseReward reference={enumerable}/>\n            <LevelGameStyleAndTheme gameStyle={reference.gameStyle} mainArea={reference.courseThemeInTheMainArea} subArea={reference.courseThemeInTheSubArea}/>\n            <small className=\"text-body-secondary fst-italic\"><OfficialCourseAvailability reference={enumerable}/></small>\n        </div>\n    }\n\n    //endregion -------------------- Card list interpreter --------------------\n    //region -------------------- Table interpreter --------------------\n\n    public readonly tableHeadersColor = 'info' satisfies BootstrapThemeColor\n    public readonly tableCaption = gameContentTranslation('official course.all', {\n        singularName: OtherWordInTheGames.COURSE.singularLowerCaseNameOnReferenceOrNull ?? unfinishedText(OtherWordInTheGames.COURSE.singularEnglishName,).toLowerCase(),\n        pluralName: OtherWordInTheGames.COURSE.pluralLowerCaseNameOnReferenceOrNull ?? unfinishedText(OtherWordInTheGames.COURSE.pluralEnglishName,).toLowerCase(),\n    },) satisfies ReactElementOrString\n\n    public get tableOptions(): Array<OfficialCourseAppOption> {\n        return [\n            OfficialCourseAppOption.REWARD,\n            OfficialCourseAppOption.NAME,\n            OfficialCourseAppOption.DESCRIPTION,\n            OfficialCourseAppOption.GAME_STYLE_AND_AREAS,\n            OfficialCourseAppOption.TIME,\n            OfficialCourseAppOption.AVAILABILITY,\n        ]\n    }\n\n    public getAdditionalClass(option: OfficialCourseAppOption,) {\n        return option.additionalClasses\n    }\n\n    public createTableContent(content: OfficialCourses, option: OfficialCourseAppOption,) {\n        return option.renderContent(content,)\n    }\n\n    public createTableHeader(option: OfficialCourseAppOption,) {\n        return option.renderTableHeader()\n    }\n\n\n    //endregion -------------------- Table interpreter --------------------\n\n}\n\nconst viewDisplayAndRouteName = [\n    [ViewDisplays.SIMPLE_LIST, 'everyOfficialCourse (list)',],\n    [ViewDisplays.CARD_LIST, 'everyOfficialCourse (card)',],\n    [ViewDisplays.TABLE, 'everyOfficialCourse (table)',],\n] as const satisfies Array<ViewAndRouteName>\nconst appInterpreter = new EventCourseAppInterpreter()\n\n/** @reactComponent */\nexport default function OfficialCourseApp({viewDisplay,}: OfficialCourseProperties,) {\n    const course = OtherWordInTheGames.COURSE.singularLowerCaseNameOnReferenceOrNull ?? unfinishedText(OtherWordInTheGames.COURSE.singularEnglishName.toLowerCase(),)\n    const courses = OtherWordInTheGames.COURSE.pluralLowerCaseNameOnReferenceOrNull ?? unfinishedText(OtherWordInTheGames.COURSE.pluralEnglishName.toLowerCase(),)\n\n    return <SubMainContainer reactKey=\"officialCourse\" viewDisplayAndRouteName={viewDisplayAndRouteName} viewDisplay={viewDisplay}\n                             titleContent={gameContentTranslation('official course.all', {singularName: course, pluralName: courses,},)}>\n        <SubContent viewDisplay={viewDisplay}/>\n    </SubMainContainer>\n}\n\n/** @reactComponent */\nfunction SubContent({viewDisplay,}: Pick<OfficialCourseProperties, 'viewDisplay'>,) {\n    if (viewDisplay === ViewDisplays.SIMPLE_LIST)\n        return <OfficialCourseList items={appInterpreter.content}/>\n    if (viewDisplay === ViewDisplays.CARD_LIST)\n        return <CardList reactKey=\"officialCourse\" interpreter={appInterpreter}/>\n    return <Table id=\"officialCourse-table\" interpreter={appInterpreter}/>\n}\n\n//region -------------------- List --------------------\n\ninterface OfficialCourse_ListProperties\n    extends ReactProperties {\n\n    readonly items: CollectionHolder<OfficialCourses>\n\n}\n\n/** @reactComponent */\nfunction OfficialCourseList({items,}: OfficialCourse_ListProperties,) {\n    return <List partialId=\"officialCourse\" items={items} withSeparator>{it => {\n        const reference = it.reference\n        return <div className=\"d-flex justify-content-between\">\n            <NameComponent id=\"officialCourse-name\" name={reference} popoverOrientation=\"right\"/>\n            <div className=\"d-flex\">\n                <OfficialCourseReward reference={it}/>\n                <LevelGameStyleAndTheme gameStyle={reference.gameStyle} mainArea={reference.courseThemeInTheMainArea} subArea={reference.courseThemeInTheSubArea}/>\n            </div>\n        </div>\n    }}</List>\n}\n\n//endregion -------------------- List --------------------\n","import './LevelGameStyleAndTheme.scss'\n\nimport type {Nullable}     from '@joookiwi/type'\n\nimport type {GameStyles}   from 'core/gameStyle/GameStyles'\nimport type {Themes}       from 'core/theme/Themes'\n\nimport ThemeImage     from 'core/theme/component/ThemeImage'\nimport GameStyleImage from 'core/gameStyle/component/GameStyleImage'\n\ninterface LevelGameStyleAndThemeProperties {\n\n    readonly gameStyle: GameStyles\n\n    readonly mainArea: Themes\n\n    readonly subArea: Nullable<Themes>\n\n    /** The visual will be represented in 1 (<b>false</b>) or 2 lines (<b>true</b>) */\n    readonly in2Line?: boolean\n\n}\n\n/** @reactComponent */\nexport default function LevelGameStyleAndTheme({gameStyle, mainArea, subArea, in2Line,}:LevelGameStyleAndThemeProperties,) {\n    if (!in2Line)\n        return <div className=\"levelGameAndGameStyle-container levelGameAndGameStyle-in1Line-container d-flex justify-content-between text-end\">\n            <ThemeImage reference={mainArea} isSmallPath className=\"me-1\"/>\n            <ThemeImage reference={subArea} isSmallPath className=\"me-1\"/>\n            <GameStyleImage reference={gameStyle}/>\n        </div>\n    if (subArea == null)\n        return <div className=\"levelGameAndGameStyle-container levelGameAndGameStyle-in2Line-container d-flex flex-column align-items-start\">\n            <GameStyleImage reference={gameStyle} className=\"mb-1\"/>\n            <ThemeImage reference={mainArea} isSmallPath/>\n        </div>\n    return <div className=\"levelGameAndGameStyle-container levelGameAndGameStyle-in2Line-container d-flex flex-column align-items-center\">\n        <GameStyleImage reference={gameStyle} className=\"mb-1\"/>\n        <div className=\"d-flex\">\n            <ThemeImage reference={mainArea} isSmallPath className=\"me-1\"/>\n            <ThemeImage reference={subArea} isSmallPath/>\n        </div>\n    </div>\n}\n"],"names":["OfficialCourseAvailability","_ref","reference","releaseDate","removalDate","_jsxs","className","children","_jsx","SimpleDate","date","unfinishedText","UNKNOWN_REFERENCE","OfficialCourseReward","mapByArray","reward","it","Image","file","waitingImage","concat","englishName","_associatedClass","_classPrivateFieldLooseKey","_additionalClasses","OfficialCourseAppOption","Enum","constructor","associatedClass","super","Object","defineProperty","writable","value","_classPrivateFieldLooseBase","this","additionalClasses","renderContent","enumeration","_createContentOption","renderTableHeader","_createTableHeaderOption","_OfficialCourseAppOption","REWARD","key","element","NAME","CommonOptions","get","getNameContent","nameHeader","DESCRIPTION","descriptionLanguageValue","TextComponent","content","descriptionEnglish","isUnknown","GAME_STYLE_AND_AREAS","LevelGameStyleAndTheme","gameStyle","mainArea","courseThemeInTheMainArea","subArea","courseThemeInTheSubArea","in2Line","gameContentTranslation","TIME","amountOfTime","UnfinishedText","AVAILABILITY","CompanionEnum","_instance","_CompanionEnum_OfficialCourseAppOption","CompanionEnum_OfficialCourseAppOption","_classPrivateFieldLoo","_classPrivateFieldLoo2","_descriptionContainer","ClassContainingANameWithADescription","ClassContainingAName","name","description","descriptionContainer","languageValue","descriptionOriginalEnglish","originalEnglish","english","descriptionAmericanEnglish","americanEnglish","descriptionEuropeanEnglish","europeanEnglish","descriptionOriginalFrench","originalFrench","descriptionFrench","french","descriptionCanadianFrench","canadianFrench","descriptionEuropeanFrench","europeanFrench","descriptionGerman","german","descriptionOriginalSpanish","originalSpanish","descriptionSpanish","spanish","descriptionAmericanSpanish","americanSpanish","descriptionEuropeanSpanish","europeanSpanish","descriptionItalian","italian","descriptionDutch","dutch","descriptionOriginalPortuguese","originalPortuguese","descriptionPortuguese","portuguese","descriptionAmericanPortuguese","americanPortuguese","descriptionEuropeanPortuguese","europeanPortuguese","descriptionRussian","russian","descriptionJapanese","japanese","descriptionOriginalChinese","originalChinese","descriptionChinese","chinese","descriptionTraditionalChinese","traditionalChinese","descriptionSimplifiedChinese","simplifiedChinese","descriptionKorean","korean","descriptionIsHebrewUsed","isHebrewUsed","descriptionHebrew","hebrew","descriptionIsPolishUsed","isPolishUsed","descriptionPolish","polish","descriptionIsUkrainianUsed","isUkrainianUsed","descriptionUkrainian","ukrainian","descriptionIsGreekUsed","isGreekUsed","descriptionGreek","greek","descriptionOriginalLanguages","originalLanguages","toDescriptionNameMap","toNameMap","_reward","_releaseDate","_removalDate","_gameStyle","_courseThemeInTheMainArea","_courseThemeInTheSubArea","_amountOfTime","OfficialCourseContainer","courseThemeInMainArea","courseThemeInSubArea","EMPTY_ARRAY","Empty","GameStyleCompanion","GameStyles","Companion","MysteryMushroomCompanion","MysteryMushrooms","ThemeCompanion","Themes","_map","OfficialCourseLoader","load","references","Map","forEachByArray","set","courseTheme_subArea","createNameFromContent","createNameFromContentDescription","BULBASAUR","CHARMANDER","SQUIRTLE","KITTY_WHITE","MELODY","CALLIE","MARIE","getValueByName","Date","Number","substring","createReleaseDate","createRemovalDate","getValueByAcronym","courseTheme_mainArea","createReference","isInProduction","console","info","_REFERENCE_MAP","_reference","_englishName","OfficialCourses","StringContainer","REFERENCE_MAP","_classPrivateFieldLoo3","_classPrivateFieldLoo4","englishNameInHtml","getInHtml","_OfficialCourses","NWC_2017","DR_KAWASHIMA_ATHLETIC_TRAINING","WALKIN_WITH_UNDODOG","SQUID_SISTER_VS_BLOOPERS","SHAUN_MOSSY_MOLE_MISCHIEF","HELLO_KITTY_AND_MY_MELODY","POPO_AND_NANA_CLIMBING_CHALLENGE","METAL_RESISTANCE","STARFY_PRINCE_OF_PUFFTOP","YU_AYASAKI_BIG_ADVENTURE","TOADETTE_TREASURE_TRACKER","TWILIGHT_PRINCESS_HD","MARY_O_LUNCH_BREAK","SECRETS_OF_STATUE_MARIO","BARBARA_IN_TOMATOLAND","NISEKOI_CHITOGE_AND_KOSAKIO","NISEKOI_TSGUMI_AND_MARIKA","I_CHOOSE_YOU","TOKAIGI_2016_CONTEST_COURSE_1","TOKAIGI_2016_CONTEST_COURSE_2","TOKAIGI_2016_CONTEST_COURSE_3","TOKAIGI_2016_CONTEST_COURSE_4","PARANORMAL_RESEARCH","ADVENTURE_IN_SARASALAND","COOOOOO_FEAT_YAMAMURA","SOUDWEST_AIR_ADVENTURE","NES_REMIX_EXCITE_BIKE","NES_REMIX_SUPER_MARIO_BROS_2","CAPTAIN_TOAD_TREASURE_TRACKER","WELCOME_TO_SATURN_VALLEY","BELCH_BASE","NINTENDO_BADGE_ARCADE","MA_RIO_HILLS","MERCEDES_BENZ_JUMP_N_DRIVE","MARIO_AND_LUIGI_PAPER_JAM","NES_REMIX","PAX_WEST_2015_OMEGATHON_FINAL_RD","YOSHI_IS_AWESOME","CAT_MARIO_COURSE","CAT_PEACH_COURSE","SUPER_MARIO_KUN_25TH_ANNIVERSARY","TRI_FORCE_HEROES","ARINO_MAKER","ARINO_MAKER_RETURNS","NEW_ARINO_MAKER","SUPER_BAKARHYTHM_LAND","SHIP_LOVE","_CompanionEnum_OfficialCourses","CompanionEnum_OfficialCourses","CompanionEnumByEnglishNameOnly","_classPrivateFieldLoo5","_classPrivateFieldLoo6","_OfficialCourses2","ALL","values","toArray","_window$test","_window","window","test","viewDisplayAndRouteName","ViewDisplays","SIMPLE_LIST","CARD_LIST","TABLE","appInterpreter","_OtherWordInTheGames$","_OtherWordInTheGames$2","tableHeadersColor","tableCaption","singularName","OtherWordInTheGames","COURSE","singularLowerCaseNameOnReferenceOrNull","singularEnglishName","toLowerCase","pluralName","pluralLowerCaseNameOnReferenceOrNull","pluralEnglishName","GenericCollectionHolder","createCardListDimension","default","small","large","extraLarge","createCardListContent","enumerable","tableOptions","getAdditionalClass","option","createTableContent","createTableHeader","OfficialCourseApp","_OtherWordInTheGames$3","_OtherWordInTheGames$4","viewDisplay","course","courses","SubMainContainer","reactKey","titleContent","SubContent","_ref2","OfficialCourseList","items","CardList","interpreter","Table","id","_ref3","List","partialId","withSeparator","NameComponent","popoverOrientation","GameStyleImage","ThemeImage","isSmallPath"],"sourceRoot":""}