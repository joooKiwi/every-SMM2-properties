{"version":3,"file":"static/js/239.00d7bc72.chunk.js","mappings":"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","sources":["core/soundEffect/SMM1And3DSSoundEffectSounds.component.tsx","core/soundEffect/SMM1And3DSOnlySoundEffectSounds.component.tsx","core/soundEffect/SMM2SoundEffectSoundsComponent.tsx","core/soundEffect/SMM2OnlySoundEffectSounds.component.tsx","core/soundEffect/SoundEffectSounds.component.tsx","app/options/SoundEffectAppOption.tsx","app/SoundEffectApp.tsx"],"sourcesContent":["import type {SoundEffectSoundsComponentProperties} from 'core/soundEffect/SoundEffectSounds.component.types'\n\nimport SimpleSoundComponent from 'util/file/sound/component/SimpleSound.component'\n\nexport default function SMM1And3DSSoundEffectSoundsComponent({reference,}: SoundEffectSoundsComponentProperties,) {\n    const englishName = reference.englishName\n    return <div key={`${englishName} (sound effect sounds - SMM1&3DS)`} className=\"soundEffect-sounds-smm1-container\">{\n        reference.sounds_standaloneSmm1.map(it =>\n            <div key={`${englishName} (sound effect sound - SMM1&3DS - ${it.key})`} className=\"soundEffect-sound-container soundEffect-sound-smm1-container col-12 col-lg-6 col-xl-4 col-xxl-3\">\n                <SimpleSoundComponent file={it} title={`${englishName} (${it.key})`}/>\n            </div>)\n    }</div>\n}\n","import type {SoundEffectSoundsComponentProperties} from 'core/soundEffect/SoundEffectSounds.component.types'\n\nimport SMM1And3DSSoundEffectSoundsComponent from 'core/soundEffect/SMM1And3DSSoundEffectSounds.component'\n\nexport default function SMM1And3DSOnlySoundEffectSoundsComponent({reference,}: SoundEffectSoundsComponentProperties,) {\n    if (reference.sounds_standaloneSmm1.length === 0)\n        return null\n    return <div className=\"soundEffect-sounds-container sound-effect-sounds-smm1-only-container\">\n        <SMM1And3DSSoundEffectSoundsComponent reference={reference}/>\n    </div>\n}\n","import type {SoundEffectSoundsComponentProperties} from 'core/soundEffect/SoundEffectSounds.component.types'\n\nimport SimpleSoundComponent from 'util/file/sound/component/SimpleSound.component'\n\nexport default function SMM2SoundEffectSoundsComponent({reference,}: SoundEffectSoundsComponentProperties,) {\n    const englishName = reference.englishName\n    return <div key={`${englishName} (sound effect sounds - SMM2)`} className=\"soundEffect-sounds-smm2-container\">\n        {reference.sounds_smm2.map(it =>\n            <div key={`${englishName} (sound effect sound - SMM2 - ${it.key})`} className=\"soundEffect-sound-container soundEffect-sound-smm2-container col-12 col-lg-6 col-xl-4 col-xxl-3\">\n                <SimpleSoundComponent file={it} title={`${englishName} (${it.key})`}/>\n            </div>)}\n    </div>\n}\n","import type {SoundEffectSoundsComponentProperties} from 'core/soundEffect/SoundEffectSounds.component.types'\n\nimport SMM2SoundEffectSoundsComponent from 'core/soundEffect/SMM2SoundEffectSoundsComponent'\n\nexport default function SMM2OnlySoundEffectSoundsComponent({reference,}: SoundEffectSoundsComponentProperties,) {\n    if (reference.sounds_smm2.length === 0)\n        return null\n    return <div className=\"soundEffect-sounds-container sound-effect-sounds-smm2-only-container\">\n        <SMM2SoundEffectSoundsComponent reference={reference}/>\n    </div>\n}\n","import type {SoundEffectSoundsComponentProperties} from 'core/soundEffect/SoundEffectSounds.component.types'\n\nimport SMM1And3DSSoundEffectSoundsComponent from 'core/soundEffect/SMM1And3DSSoundEffectSounds.component'\nimport SMM2SoundEffectSoundsComponent       from 'core/soundEffect/SMM2SoundEffectSoundsComponent'\n\nexport default function SoundEffectSoundsComponent({reference,}: SoundEffectSoundsComponentProperties,) {\n    const isSMM1Empty = reference.sounds_exclusiveSmm1.length === 0\n    const isSMM2Empty = reference.sounds_smm2.length === 0\n\n    if (isSMM1Empty && isSMM2Empty)\n        return null\n\n    if (isSMM1Empty && !isSMM2Empty)\n        return <div className=\"soundEffect-sounds-container sound-effect-sounds-smm2-only-container\">\n            <SMM2SoundEffectSoundsComponent reference={reference}/>\n        </div>\n    if (!isSMM1Empty && isSMM2Empty)\n        return <div className=\"soundEffect-sounds-container sound-effect-sounds-smm1-only-container\">\n            <SMM1And3DSSoundEffectSoundsComponent reference={reference}/>\n        </div>\n    return <div className=\"soundEffect-sounds-container\">\n        <SMM1And3DSSoundEffectSoundsComponent reference={reference}/>\n        <hr className=\"my-1\"/>\n        <SMM2SoundEffectSoundsComponent reference={reference}/>\n    </div>\n}\n","import type {CompanionEnumSingleton} from '@joookiwi/enumerable'\nimport {CompanionEnum, Enum}         from '@joookiwi/enumerable'\n\nimport type {SoundEffects}        from 'core/soundEffect/SoundEffects'\nimport type {AppOption}           from 'app/options/AppOption'\nimport type {Names, Ordinals}     from 'app/options/SoundEffectAppOption.types'\nimport type {SingleHeaderContent} from 'app/tools/table/SimpleHeader'\n\nimport {CommonOptions}                          from 'app/options/CommonOptions'\nimport UnfinishedText, {unfinishedText}         from 'app/tools/text/UnfinishedText'\nimport {Games}                                  from 'core/game/Games'\nimport SMM1And3DSOnlySoundEffectSoundsComponent from 'core/soundEffect/SMM1And3DSOnlySoundEffectSounds.component'\nimport SMM2OnlySoundEffectSoundsComponent       from 'core/soundEffect/SMM2OnlySoundEffectSounds.component'\nimport SoundEffectComponent                     from 'core/soundEffect/SoundEffect.component'\nimport SoundEffectSoundsComponent               from 'core/soundEffect/SoundEffectSounds.component'\nimport {SoundEffectCategories}                  from 'core/soundEffectCategory/SoundEffectCategories'\n\nexport abstract class SoundEffectAppOption\n    extends Enum<Ordinals, Names>\n    implements AppOption<SoundEffects> {\n\n    //region -------------------- Enum instances --------------------\n\n    public static readonly SMM1_AND_SMM3DS_ICON = new class GameStyleAppOption_SMM1AndSMM3DSIcon extends SoundEffectAppOption {\n\n        protected override _createContentOption(enumeration: SoundEffects,) {\n            return SoundEffectAppOption.renderSMM1And3DSImage(enumeration,)\n        }\n\n        protected override _createTableHeaderOption() {\n            return CommonOptions.get.smm1And3dsGameHeader\n        }\n\n    }('smm1AndSmm3ds-icon',)\n    public static readonly SMM2_ICON =            new class GameStyleAppOption_SMM2Icon extends SoundEffectAppOption {\n\n        protected override _createContentOption(enumeration: SoundEffects,) {\n            return SoundEffectAppOption.renderSMM2Image(enumeration,)\n        }\n\n        protected override _createTableHeaderOption() {\n            return CommonOptions.get.smm2GameHeader\n        }\n\n    }('smm2-icon',)\n    public static readonly NAME =                 new class GameStyleAppOption_Name extends SoundEffectAppOption {\n\n        protected override _createContentOption(enumeration: SoundEffects,) {\n            return CommonOptions.get.getNameContent(enumeration)\n        }\n\n        protected override _createTableHeaderOption() {\n            return CommonOptions.get.nameHeader\n        }\n\n    }('name',)\n    public static readonly CATEGORY =             new class GameStyleAppOption_Category extends SoundEffectAppOption {\n\n        protected override _createContentOption(enumeration: SoundEffects,) {\n            const {reference,} = enumeration\n\n            return CommonOptions.get.getCategoryContent(enumeration, () => SoundEffectCategories.CompanionEnum.get.getValueByName(reference.categoryEnglish,).imageFile,)\n        }\n\n        protected override _createTableHeaderOption() {\n            return CommonOptions.get.categoryHeader\n        }\n\n    }('category',)\n    public static readonly PLAYER_BEHAVIOUR =     new class GameStyleAppOption_PlayerBehaviour extends SoundEffectAppOption {\n\n        protected override _createContentOption(enumeration: SoundEffects,) {\n            return enumeration.reference.playerSoundEffectTrigger.createNewComponent(enumeration.englishName,)\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {key: 'player behaviour', element: unfinishedText('Player behaviour'),}//TODO add Player behaviour\n        }\n\n    }('playerBehaviour',)\n    public static readonly SOUNDS =               new class GameStyleAppOption_Sounds extends SoundEffectAppOption {\n\n        protected override _createContentOption(enumeration: SoundEffects,) {\n            return <SoundEffectSoundsComponent reference={enumeration}/>\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {key: 'sounds', element: <UnfinishedText>Sounds</UnfinishedText>,}//TODO add sounds\n        }\n\n    }('sounds',)\n    public static readonly SOUNDS_IN_SMM1_AND_3DS_ONLY = new class GameStyleAppOption_SoundsInSMM1And3DSOnly extends SoundEffectAppOption {\n\n        protected override _createContentOption(enumeration: SoundEffects,) {\n            return <SMM1And3DSOnlySoundEffectSoundsComponent reference={enumeration}/>\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {key: 'sounds', element: <UnfinishedText>Sounds</UnfinishedText>,}//TODO add sounds\n        }\n\n    }('sounds',)\n    public static readonly SOUNDS_IN_SMM2_ONLY = new class GameStyleAppOption_SoundsInSMM2Only extends SoundEffectAppOption {\n\n        protected override _createContentOption(enumeration: SoundEffects,) {\n            return <SMM2OnlySoundEffectSoundsComponent reference={enumeration}/>\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {key: 'sounds', element: <UnfinishedText>Sounds</UnfinishedText>,}//TODO add sounds\n        }\n\n    }('sounds',)\n\n    //endregion -------------------- Enum instances --------------------\n    //region -------------------- Companion enum --------------------\n\n    public static readonly CompanionEnum: CompanionEnumSingleton<SoundEffectAppOption, typeof SoundEffectAppOption> = class CompanionEnum_SoundEffectAppOption\n        extends CompanionEnum<SoundEffectAppOption, typeof SoundEffectAppOption> {\n\n        //region -------------------- Singleton usage --------------------\n\n        static #instance?: CompanionEnum_SoundEffectAppOption\n\n        private constructor() {\n            super(SoundEffectAppOption,)\n        }\n\n        public static get get() {\n            return this.#instance ??= new CompanionEnum_SoundEffectAppOption()\n        }\n\n        //endregion -------------------- Singleton usage --------------------\n\n    }\n\n    //endregion -------------------- Companion enum --------------------\n    //region -------------------- Fields --------------------\n\n    readonly #associatedClass\n    readonly #additionalClasses\n\n    //endregion -------------------- Fields --------------------\n    //region -------------------- Constructor --------------------\n\n    private constructor(associatedClass: string,) {\n        super()\n        this.#additionalClasses = [this.#associatedClass = associatedClass,] as const\n    }\n\n    //endregion -------------------- Constructor --------------------\n    //region -------------------- Getter methods --------------------\n\n    public get associatedClass(): string {\n        return this.#associatedClass\n    }\n\n    public get additionalClasses(): readonly [string,] {\n        return this.#additionalClasses\n    }\n\n    //endregion -------------------- Getter methods --------------------\n    //region -------------------- Methods --------------------\n\n    //region -------------------- App option - content --------------------\n\n    public static renderSMM1And3DSImage(enumerable: SoundEffects,): ReactElement {\n        const reference = enumerable.reference\n\n        return reference.isInSuperMarioMaker1 ? <SoundEffectComponent reference={enumerable} name={reference} game={Games.SUPER_MARIO_MAKER_1}/> : null\n    }\n\n    public static renderSMM2Image(enumerable: SoundEffects,): ReactElement {\n        const reference = enumerable.reference\n\n        return reference.isInSuperMarioMaker2 ? <SoundEffectComponent reference={enumerable} name={reference} game={Games.SUPER_MARIO_MAKER_2}/> : null\n    }\n\n    protected abstract _createContentOption(enumeration: SoundEffects,): ReactElement\n\n    public renderContent(enumeration: SoundEffects,): readonly [ReactElement,] {\n        return [this._createContentOption(enumeration,),]\n    }\n\n    //endregion -------------------- App option - content --------------------\n    //region -------------------- App option - table --------------------\n\n    protected abstract _createTableHeaderOption(): SingleHeaderContent\n\n    public renderTableHeader(): SingleHeaderContent {\n        return this._createTableHeaderOption()\n    }\n\n    //endregion -------------------- App option - table --------------------\n\n    //endregion -------------------- Methods --------------------\n\n}\n","import './SoundEffectApp.scss'\n\nimport type {SoundEffectProperties}   from 'app/AppProperties.types'\nimport type {AppInterpreterWithTable} from 'app/interpreter/AppInterpreterWithTable'\nimport type {DimensionOnList}         from 'app/interpreter/DimensionOnList'\nimport type {ViewAndRouteName}        from 'app/withInterpreter/DisplayButtonGroup.properties'\nimport type {GameCollection}          from 'util/collection/GameCollection'\nimport type {GameStyleCollection}     from 'util/collection/GameStyleCollection'\n\nimport SubMainContainer         from 'app/_SubMainContainer'\nimport {SoundEffectAppOption}   from 'app/options/SoundEffectAppOption'\nimport Table                    from 'app/tools/table/Table'\nimport CardList                 from 'app/withInterpreter/CardList'\nimport SimpleList               from 'app/withInterpreter/SimpleList'\nimport {ViewDisplays}           from 'app/withInterpreter/ViewDisplays'\nimport {SoundEffects}           from 'core/soundEffect/SoundEffects'\nimport {gameContentTranslation} from 'lang/components/translationMethods'\nimport {filterGame}             from 'util/utilitiesMethods'\n\nclass SoundEffectAppInterpreter\n    implements AppInterpreterWithTable<SoundEffects, SoundEffectAppOption> {\n\n    //region -------------------- Fields --------------------\n\n    readonly #games\n    readonly #gameStyles\n\n    //endregion -------------------- Fields --------------------\n    //region -------------------- Constructor --------------------\n\n    public constructor(games: GameCollection, gameStyles: GameStyleCollection,) {\n        this.#games = games\n        this.#gameStyles = gameStyles\n    }\n\n    //endregion -------------------- Constructor --------------------\n\n    public get content() {\n        return filterGame(SoundEffects.CompanionEnum.get.values, this.#games,)\n    }\n\n    //region -------------------- List interpreter --------------------\n\n    public createListDimension(): DimensionOnList {\n        return {\n            default: 1,\n            small: 3,\n            medium: 4,\n            large: 5,\n            extraLarge: 6,\n        }\n    }\n\n    //endregion -------------------- List interpreter --------------------\n    //region -------------------- Card list interpreter --------------------\n\n    public createCardListDimension() {\n        return this.createListDimension()\n    }\n\n    public createCardListContent(enumerable: SoundEffects,) {\n        return <div>\n            <div className=\"soundEffect-images-container\">\n                {SoundEffectAppOption.renderSMM1And3DSImage(enumerable,)}\n                {SoundEffectAppOption.renderSMM2Image(enumerable,)}\n            </div>\n        </div>\n    }\n\n    //endregion -------------------- Card list interpreter --------------------\n    //region -------------------- Table interpreter --------------------\n\n    public readonly tableHeadersColor = 'info' satisfies BootstrapThemeColor\n    public readonly tableColor = 'primary' satisfies BootstrapThemeColor\n    public readonly tableCaption = gameContentTranslation('sound effect.all',) satisfies ReactElementOrString\n\n    public get tableOptions(): readonly SoundEffectAppOption[] {\n        const games = this.#games\n        const hasSMM1Or3DS = games.hasSMM1Or3DS\n        const hasSMM2 = games.hasSMM2\n\n        const options = [] as SoundEffectAppOption[]\n        if (hasSMM1Or3DS)\n            options.push(SoundEffectAppOption.SMM1_AND_SMM3DS_ICON,)\n        if (hasSMM2)\n            options.push(SoundEffectAppOption.SMM2_ICON,)\n        options.push(\n            SoundEffectAppOption.NAME,\n            SoundEffectAppOption.CATEGORY,\n            SoundEffectAppOption.PLAYER_BEHAVIOUR,\n        )\n        if (hasSMM1Or3DS && hasSMM2)\n            options.push(SoundEffectAppOption.SOUNDS,)\n        else {\n            if (hasSMM1Or3DS)\n                options.push(SoundEffectAppOption.SOUNDS_IN_SMM1_AND_3DS_ONLY,)\n            if (hasSMM2)\n                options.push(SoundEffectAppOption.SOUNDS_IN_SMM2_ONLY,)\n        }\n        return options\n    }\n\n\n    public getAdditionalClass(option: SoundEffectAppOption,) {\n        return option.additionalClasses\n    }\n\n    public createTableContent(content: SoundEffects, option: SoundEffectAppOption,) {\n        //TODO add content based on the game style parameter\n        return option.renderContent(content,)\n    }\n\n    public createTableHeader(option: SoundEffectAppOption,) {\n        return option.renderTableHeader()\n    }\n\n    //endregion -------------------- Table interpreter --------------------\n\n}\n\nconst viewDisplayAndRouteName = [\n    [ViewDisplays.SIMPLE_LIST, 'everySoundEffect (list)',],\n    [ViewDisplays.CARD_LIST, 'everySoundEffect (card)',],\n    [ViewDisplays.TABLE, 'everySoundEffect (table)',],\n] as const satisfies readonly ViewAndRouteName[]\nconst titleContent = gameContentTranslation('sound effect.all',)\n\n/** @reactComponent */\nexport default function SoundEffectApp({viewDisplay, games, gameStyles,}: SoundEffectProperties,) {\n    const appInterpreter = new SoundEffectAppInterpreter(games, gameStyles,)\n\n    if (viewDisplay === ViewDisplays.SIMPLE_LIST)\n        return <SubMainContainer reactKey=\"soundEffect\" viewDisplayAndRouteName={viewDisplayAndRouteName} viewDisplay={viewDisplay} titleContent={titleContent}>\n            <SimpleList reactKey=\"soundEffect\" interpreter={appInterpreter}/>\n        </SubMainContainer>\n    if (viewDisplay === ViewDisplays.CARD_LIST)\n        return <SubMainContainer reactKey=\"soundEffect\" viewDisplayAndRouteName={viewDisplayAndRouteName} viewDisplay={viewDisplay} titleContent={titleContent}>\n            <CardList reactKey=\"soundEffect\" interpreter={appInterpreter}/>\n        </SubMainContainer>\n    return <SubMainContainer reactKey=\"soundEffect\" viewDisplayAndRouteName={viewDisplayAndRouteName} viewDisplay={viewDisplay} titleContent={titleContent}>\n        <Table id=\"soundEffect-table\" interpreter={appInterpreter}/>\n    </SubMainContainer>\n}\n"],"names":["SMM1And3DSSoundEffectSoundsComponent","_ref","reference","englishName","_jsx","className","children","sounds_standaloneSmm1","map","it","SimpleSoundComponent","file","title","concat","key","SMM1And3DSOnlySoundEffectSoundsComponent","length","SMM2SoundEffectSoundsComponent","sounds_smm2","SMM2OnlySoundEffectSoundsComponent","SoundEffectSoundsComponent","isSMM1Empty","sounds_exclusiveSmm1","isSMM2Empty","_jsxs","_associatedClass","_classPrivateFieldLooseKey","_additionalClasses","SoundEffectAppOption","Enum","constructor","associatedClass","super","Object","defineProperty","writable","value","_classPrivateFieldLooseBase","this","additionalClasses","renderSMM1And3DSImage","enumerable","isInSuperMarioMaker1","SoundEffectComponent","name","game","Games","SUPER_MARIO_MAKER_1","renderSMM2Image","isInSuperMarioMaker2","SUPER_MARIO_MAKER_2","renderContent","enumeration","_createContentOption","renderTableHeader","_createTableHeaderOption","_SoundEffectAppOption","SMM1_AND_SMM3DS_ICON","CommonOptions","get","smm1And3dsGameHeader","SMM2_ICON","smm2GameHeader","NAME","getNameContent","nameHeader","CATEGORY","getCategoryContent","SoundEffectCategories","CompanionEnum","getValueByName","categoryEnglish","imageFile","categoryHeader","PLAYER_BEHAVIOUR","playerSoundEffectTrigger","createNewComponent","element","unfinishedText","SOUNDS","UnfinishedText","SOUNDS_IN_SMM1_AND_3DS_ONLY","SOUNDS_IN_SMM2_ONLY","_instance","_CompanionEnum_SoundEffectAppOption","CompanionEnum_SoundEffectAppOption","_classPrivateFieldLoo","_classPrivateFieldLoo2","_games","_gameStyles","SoundEffectAppInterpreter","games","gameStyles","tableHeadersColor","tableColor","tableCaption","gameContentTranslation","content","filterGame","SoundEffects","values","createListDimension","default","small","medium","large","extraLarge","createCardListDimension","createCardListContent","tableOptions","hasSMM1Or3DS","hasSMM2","options","push","getAdditionalClass","option","createTableContent","createTableHeader","viewDisplayAndRouteName","ViewDisplays","SIMPLE_LIST","CARD_LIST","TABLE","titleContent","SoundEffectApp","viewDisplay","appInterpreter","SubMainContainer","reactKey","SimpleList","interpreter","CardList","Table","id"],"sourceRoot":""}