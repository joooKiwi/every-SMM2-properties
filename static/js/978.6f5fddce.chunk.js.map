{"version":3,"file":"static/js/978.6f5fddce.chunk.js","mappings":"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","sources":["app/options/ThemeAppOption.tsx","app/ThemeApp.tsx"],"sourcesContent":["import type {CollectionHolder, EnumerableConstructor, PossibleValueByEnumerable} from '@joookiwi/enumerable/dist/types'\nimport {Enum}                                                                    from '@joookiwi/enumerable'\nimport {lazy}                                                                    from 'react'\n\nimport type {Names, Ordinals}                                  from 'app/options/ThemeAppOption.types'\nimport type {AppOptionWithContent, PossibleRenderReactElement} from 'app/options/component/AppOptionWithContent'\nimport type {AppOptionWithTable}                               from 'app/options/component/AppOptionWithTable'\nimport type {SingleHeaderContent}                              from 'app/tools/table/SimpleHeader'\nimport type {Themes}                                           from 'core/theme/Themes'\nimport type {ReactElement}                                     from 'util/react/ReactProperties'\nimport type {NullOr}                                           from 'util/types/nullable'\n\nimport {AppOptionWithContentComponent}              from 'app/options/component/AppOptionWithContent.component'\nimport {AppOptionWithTableComponent}                from 'app/options/component/AppOptionWithTable.component'\nimport {CommonOptions}                              from 'app/options/CommonOptions'\nimport {Times}                                      from 'core/time/Times'\nimport {contentTranslation, gameContentTranslation} from 'lang/components/translationMethods'\n\n//region -------------------- dynamic imports --------------------\n\nconst Image =                lazy(() => import('app/tools/images/Image'))\nconst NightEffectComponent = lazy(() => import('core/nightEffect/NightEffect.component'))\n\n//endregion -------------------- dynamic imports --------------------\n\n/**\n * @todo change the SMM1 & SMM2 yes/no result into something different like the sounds or other things\n * @fixme if the yes/no is still in used after the change, use Texts.renderYesNoComponent() instead.\n */\nexport abstract class ThemeAppOption\n    extends Enum<Ordinals, Names> {\n\n    //region -------------------- Enum instances --------------------\n\n    public static readonly IMAGE =                  new class ThemeAppOption_Image extends ThemeAppOption {\n\n        protected override _createContentOption(enumeration: Themes,) {\n            const {endlessMarioImageFile,} = enumeration\n\n            return [\n                enumeration.renderSingleComponent(false),\n                <Image file={endlessMarioImageFile}/>,\n            ]\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {\n                key: 'image', element: contentTranslation('Image'),\n                subHeaders: [\n                    {key: 'image-empty', element: null,},\n                    {key: 'image-endless-mario', element: '--Endless Mario--',},//TODO add Endless Mario\n                ],\n            }\n        }\n\n    }()\n    public static readonly NAME =                   new class ThemeAppOptionName extends ThemeAppOption {\n\n        protected override _createContentOption(enumeration: Themes,) {\n            return <div className=\"nameWithContent-container\">\n                <div className=\"col-10\">\n                    {CommonOptions.get.getGameContent(enumeration)}\n                    {CommonOptions.get.getNameContent(enumeration)}\n                </div>\n                <div className=\"col-2\">{CommonOptions.get.getThemeContent(enumeration)}</div>\n            </div>\n        }\n\n        protected override _createTableHeaderOption() {\n            return CommonOptions.get.nameHeader\n        }\n\n    }()\n    public static readonly NIGHT_EFFECT =           new class ThemeAppOption_NightEffect extends ThemeAppOption {\n\n        protected override _createContentOption({reference: {courseTheme,},}: Themes,) {\n            return <NightEffectComponent theme={courseTheme}/>\n        }\n\n        protected override _createTableHeaderOption(): SingleHeaderContent {\n            return {\n                key: 'effect', element: Times.NIGHT.renderSingleComponent,\n                tooltip: gameContentTranslation('Effect (night)', {night: '--night effect name--',},)//TODO add translation for the night effect name\n            }\n        }\n\n    }()\n\n    //endregion -------------------- Enum instances --------------------\n    //region -------------------- Enum fields --------------------\n\n    static [index: number]: ThemeAppOption\n\n    //endregion -------------------- Enum fields --------------------\n    //region -------------------- Fields --------------------\n\n    /**\n     * The callback to get the enumeration based for each option.\n     *\n     * @note It should only be set by {@link ThemeAppOption} and get by {@link ThemeApp}.\n     */\n    public static CALLBACK_TO_GET_ENUMERATION: () => Themes\n\n    #appOptionWithContent?: AppOptionWithContent\n    #appOptionWithTable?: AppOptionWithTable\n\n    //endregion -------------------- Fields --------------------\n\n    private constructor() {\n        super()\n    }\n\n    //region -------------------- Getter methods --------------------\n    //endregion -------------------- Getter methods --------------------\n    //region -------------------- Methods --------------------\n\n    //region -------------------- App option - content --------------------\n\n    protected abstract _createContentOption(enumeration: Themes,): PossibleRenderReactElement\n\n    private get __appOptionWithContent(): AppOptionWithContent {\n        return this.#appOptionWithContent ??= new AppOptionWithContentComponent(() => this._createContentOption(ThemeAppOption.CALLBACK_TO_GET_ENUMERATION()),)\n    }\n\n    public get renderContent(): readonly ReactElement[] {\n        return this.__appOptionWithContent.renderContent\n    }\n\n    //endregion -------------------- App option - content --------------------\n    //region -------------------- App option - table --------------------\n\n    protected abstract _createTableHeaderOption(): SingleHeaderContent\n\n    private get __appOptionWithTable(): AppOptionWithTable {\n        return this.#appOptionWithTable ??= new AppOptionWithTableComponent(() => this._createTableHeaderOption(),)\n    }\n\n    public get renderTableHeader(): NullOr<SingleHeaderContent> {\n        return this.__appOptionWithTable.renderTableHeader\n    }\n\n    //endregion -------------------- App option - table --------------------\n\n    //endregion -------------------- Methods --------------------\n    //region -------------------- Enum methods --------------------\n\n    protected override get _static(): EnumerableConstructor<Ordinals, Names> {\n        return ThemeAppOption\n    }\n\n    public static getValue(value: PossibleValueByEnumerable<ThemeAppOption>,): ThemeAppOption {\n        return Enum.getValueOn(this, value,)\n    }\n\n    public static get values(): CollectionHolder<ThemeAppOption> {\n        return Enum.getValuesOn(this)\n    }\n\n    public static [Symbol.iterator]() {\n        return this.values[Symbol.iterator]()\n    }\n\n    //endregion -------------------- Enum methods --------------------\n\n}\n","import './ThemeApp.scss'\n\nimport type {AppProperties}                                        from 'app/AppProperties.types'\nimport type {ThemeAppStates}                                       from 'app/AppStates.types'\nimport type {AppInterpreterWithTable, SimplifiedTableProperties}   from 'app/interpreter/AppInterpreterWithTable'\nimport type {PossibleDimensionOnCardList, PossibleDimensionOnList} from 'app/interpreter/DimensionOnList'\nimport type {ReactElementOrString}                                 from 'util/react/ReactProperties'\n\nimport {CommonOptions}          from 'app/options/CommonOptions'\nimport {ThemeAppOption}         from 'app/options/ThemeAppOption'\nimport Image                    from 'app/tools/images/Image'\nimport {AbstractTableApp}       from 'app/withInterpreter/AbstractTableApp'\nimport {ViewDisplays}           from 'app/withInterpreter/ViewDisplays'\nimport {Themes}                 from 'core/theme/Themes'\nimport {gameContentTranslation} from 'lang/components/translationMethods'\n\n/**\n * @reactComponent\n */\nexport default class ThemeApp\n    extends AbstractTableApp<AppInterpreterWithTable<Themes, ThemeAppOption>, AppProperties, ThemeAppStates> {\n\n    public constructor(props: AppProperties,) {\n        super(props,)\n        this.state = {\n            typeDisplayed: ViewDisplays.CARD_LIST,\n        }\n    }\n\n    //region -------------------- Create methods --------------------\n\n    protected override _createKey() {\n        return 'theme'\n    }\n\n    protected override _createTitleContent(): ReactElementOrString {\n        return gameContentTranslation('Every themes')\n    }\n\n    protected override _createAppOptionInterpreter(): AppInterpreterWithTable<Themes, ThemeAppOption> {\n        return new class implements AppInterpreterWithTable<Themes, ThemeAppOption> {\n\n            public get iterable() {\n                return Themes[Symbol.iterator]()\n            }\n\n            //region -------------------- List interpreter --------------------\n\n            public createListDimension(): PossibleDimensionOnList {\n                return {\n                    small: 6,\n                    medium: 4,\n                    large: 3,\n                    extraLarge: 2,\n                }\n            }\n\n            //endregion -------------------- List interpreter --------------------\n            //region -------------------- Card list interpreter --------------------\n\n            public createCardListDimension(): PossibleDimensionOnCardList {\n                return 'list'\n            }\n\n            public createCardListContent(enumerable: Themes,) {\n                const {englishNameInHtml, endlessMarioImageFile,} = enumerable\n\n                return <div className=\"card-body\" id={`theme-${englishNameInHtml}`}>\n                    <div className=\"col-2\">{CommonOptions.get.getGameContent(enumerable)}</div>\n                    <div className=\"images-container col-7\">\n                        {enumerable.renderSingleComponent(true)}\n                        <Image file={endlessMarioImageFile}/>\n                    </div>\n                    <div className=\"col-2\">{CommonOptions.get.getThemeContent(enumerable)}</div>\n                </div>\n            }\n\n            //endregion -------------------- Card list interpreter --------------------\n            //region -------------------- Table interpreter --------------------\n\n            public set callbackToGetEnumerable(value: () => Themes,) {\n                ThemeAppOption.CALLBACK_TO_GET_ENUMERATION = value\n            }\n\n            public get tableOptions(): ThemeAppOption[] {\n                return [\n                    ThemeAppOption.IMAGE,\n                    ThemeAppOption.NAME,\n                    ThemeAppOption.NIGHT_EFFECT,\n                ]\n            }\n\n            public get tableProperties(): SimplifiedTableProperties {\n                return {\n                    caption: gameContentTranslation('Every themes')\n                }\n            }\n\n\n            public createTableContent(option: ThemeAppOption,) {\n                return option.renderContent\n            }\n\n            public createTableHeader(option: ThemeAppOption,) {\n                return option.renderTableHeader\n            }\n\n            //endregion -------------------- Table interpreter --------------------\n\n        }()\n    }\n\n    //endregion -------------------- Create methods --------------------\n\n}\n"],"names":["Image","lazy","NightEffectComponent","Symbol","iterator","ThemeAppOption","this","AppOptionWithContentComponent","_createContentOption","CALLBACK_TO_GET_ENUMERATION","__appOptionWithContent","renderContent","AppOptionWithTableComponent","_createTableHeaderOption","__appOptionWithTable","renderTableHeader","value","Enum","values","IMAGE","enumeration","endlessMarioImageFile","renderSingleComponent","file","key","element","contentTranslation","subHeaders","NAME","className","CommonOptions","NIGHT_EFFECT","courseTheme","reference","theme","Times","tooltip","gameContentTranslation","night","ThemeApp","props","state","typeDisplayed","ViewDisplays","Themes","small","medium","large","extraLarge","enumerable","englishNameInHtml","id","caption","option","AbstractTableApp"],"sourceRoot":""}