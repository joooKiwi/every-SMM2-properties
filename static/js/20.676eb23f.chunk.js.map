{"version":3,"sources":["app/options/GameStyleAppOption.tsx","app/EveryGameStylesApp.tsx"],"names":["NightEffectComponent","lazy","YesOrNoResultTextComponent","Symbol","iterator","GameStyleAppOption","defaultValue","this","AppOptionWithContentComponent","_createContentOption","get","__appOptionWithContent","renderContent","EMPTY_ARRAY","AppOptionWithTableComponent","_createTableHeaderOption","__appOptionWithTable","renderTableHeader","value","display","section","image","IMAGE","_lastValueRetrieved","name","NAME","game","GAME","nightDesertWind","NIGHT_DESERT_WIND","Enum","getValueOn","getValuesOn","values","AbstractAppOption","state","nextState","CALLBACK_TO_GET_ENUMERATION","renderSingleComponent","key","element","ContentTranslationComponent","translationKey","enumeration","CommonOptions","getNameContent","nameHeader","gameStyle","reference","boolean","isInSuperMarioMaker1","isInSuperMarioMakerFor3DS","isInSuperMarioMaker2","GameContentTranslationComponent","subHeaders","alt","Games","SUPER_MARIO_MAKER_1","englishName","path","imagePath","SUPER_MARIO_MAKER_FOR_NINTENDO_3DS","SUPER_MARIO_MAKER_2","className","Themes","DESERT","Times","NIGHT","tooltip","namespace","replace","night","desert","ProjectLanguages","currentLanguage","toLowerCase","EveryGameStylesApp","props","REFERENCE","createDefaultState","content","index","GameStyles","enumerable","push","flat","Table","id","caption","headers","filter","header","AbstractApp"],"mappings":"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","file":"static/js/20.676eb23f.chunk.js","sourcesContent":["import {lazy} from 'react';\n\nimport type {AppOptionStatic}                                                                                                                                                       from './AppOption';\nimport type {AppOptionWithContent, PossibleRenderReactElement}                                                                                                                      from './component/AppOptionWithContent';\nimport type {AppOptionWithTable}                                                                                                                                                    from './component/AppOptionWithTable';\nimport type {EnumArray, EnumByName, EnumByNumber, EnumByOrdinal, EnumByPossibleString, EnumByString, Names, Ordinals, PossibleNonNullableValue, PossibleStringValue, PossibleValue} from './GameStyleAppOption.types';\nimport type {GameStyleAppStates}                                                                                                                                                    from '../AppStates.types';\nimport type {GameStyles}                                                                                                                                                            from '../../core/gameStyle/GameStyles';\nimport type {ReactComponentWithState}                                                                                                                                               from '../../util/react/ReactComponent';\nimport type {ReactElement}                                                                                                                                                          from '../../util/react/ReactProperty';\nimport type {SingleHeaderContent}                                                                                                                                                   from '../tools/table/SimpleHeader';\nimport type {StaticReference}                                                                                                                                                       from '../../util/enum/Enum.types';\n\nimport {AbstractAppOption}             from './AbstractAppOption';\nimport {AppOptionWithContentComponent} from './component/AppOptionWithContent.component';\nimport {AppOptionWithTableComponent}   from './component/AppOptionWithTable.component';\nimport {CommonOptions}                 from './CommonOptions';\nimport ContentTranslationComponent     from '../../lang/components/ContentTranslationComponent';\nimport {EMPTY_ARRAY}                   from '../../util/emptyVariables';\nimport {Enum}                          from '../../util/enum/Enum';\nimport GameContentTranslationComponent from '../../lang/components/GameContentTranslationComponent';\nimport {Games}                         from '../../core/game/Games';\nimport {ProjectLanguages}              from '../../lang/ProjectLanguages';\nimport {Themes}                        from '../../core/theme/Themes';\nimport {Times}                         from '../../core/time/Times';\n\n//region -------------------- dynamic imports --------------------\n\nconst NightEffectComponent =       lazy(() => import( '../../core/nightEffect/NightEffect.component'));\nconst YesOrNoResultTextComponent = lazy(() => import( '../tools/text/YesOrNoResultTextComponent'));\n\n//endregion -------------------- dynamic imports --------------------\n\nexport abstract class GameStyleAppOption\n    extends AbstractAppOption<boolean, GameStyleAppStates, Ordinals, Names>\n    implements AppOptionWithContent, AppOptionWithTable {\n\n    //region -------------------- Enum instances --------------------\n\n    public static/* readonly*/ IMAGE;\n    public static/* readonly*/ NAME;\n    public static/* readonly*/ GAME;\n    public static/* readonly*/ NIGHT_DESERT_WIND;\n\n    static {\n        this.IMAGE =             new class GameStyleAppOption_Images extends GameStyleAppOption {\n\n            protected override _get(state: GameStyleAppStates,): boolean {\n                return state.display.section.image;\n            }\n\n            protected override _set(nextState: GameStyleAppStates, value: boolean,): void {\n                nextState.display.section.image = value;\n            }\n\n            protected override get _createContentOption(): () => PossibleRenderReactElement {\n                return () => {\n                    const enumerable = GameStyleAppOption.CALLBACK_TO_GET_ENUMERATION();\n                    return enumerable.renderSingleComponent;\n                };\n            }\n\n            protected override get _createTableHeaderOption(): SingleHeaderContent {\n                return {key: 'image', element: <ContentTranslationComponent translationKey=\"Image\"/>,}\n            }\n\n        }(true,);\n        this.NAME =              new class GameStyleAppOption_Name extends GameStyleAppOption {\n\n            protected override _get(state: GameStyleAppStates,): boolean {\n                return state.display.section.name;\n            }\n\n            protected override _set(nextState: GameStyleAppStates, value: boolean,): void {\n                nextState.display.section.name = value;\n            }\n\n            protected override get _createContentOption(): () => PossibleRenderReactElement {\n                return () => {\n                    const enumeration = GameStyleAppOption.CALLBACK_TO_GET_ENUMERATION();\n\n                    return CommonOptions.get.getNameContent(enumeration)\n                };\n            }\n\n            protected override get _createTableHeaderOption(): SingleHeaderContent {\n                return CommonOptions.get.nameHeader;\n            }\n\n        }(true,);\n        this.GAME =              new class GameStyleAppOption_Game extends GameStyleAppOption {\n\n            protected override _get(state: GameStyleAppStates,): boolean {\n                return state.display.section.game;\n            }\n\n            protected override _set(nextState: GameStyleAppStates, value: boolean,) {\n                nextState.display.section.game = value;\n            }\n\n            protected override get _createContentOption(): () => PossibleRenderReactElement {\n                return () => {\n                    const enumerable = GameStyleAppOption.CALLBACK_TO_GET_ENUMERATION();\n                    const gameStyle = enumerable.reference;\n                    return [\n                        <YesOrNoResultTextComponent boolean={gameStyle.isInSuperMarioMaker1}/>,\n                        <YesOrNoResultTextComponent boolean={gameStyle.isInSuperMarioMakerFor3DS}/>,\n                        <YesOrNoResultTextComponent boolean={gameStyle.isInSuperMarioMaker2}/>,\n                    ];\n                };\n            }\n\n            protected override get _createTableHeaderOption(): SingleHeaderContent {\n                return {\n                    key: 'game', element: <GameContentTranslationComponent translationKey=\"Game\"/>,\n                    subHeaders: [\n                        {key: 'isInSuperMarioMaker1', alt: Games.SUPER_MARIO_MAKER_1.englishName, path: Games.SUPER_MARIO_MAKER_1.imagePath,},\n                        {key: 'isInSuperMarioMakerFor3DS', alt: Games.SUPER_MARIO_MAKER_FOR_NINTENDO_3DS.englishName, path: Games.SUPER_MARIO_MAKER_FOR_NINTENDO_3DS.imagePath,},\n                        {key: 'isInSuperMarioMaker2', alt: Games.SUPER_MARIO_MAKER_2.englishName, path: Games.SUPER_MARIO_MAKER_2.imagePath,},\n                    ],\n                }\n            }\n\n        }(true,);\n        this.NIGHT_DESERT_WIND = new class GameStyleAppOption_NightDesertWind extends GameStyleAppOption {\n\n            protected override _get(state: GameStyleAppStates,): boolean {\n                return state.display.section.nightDesertWind;\n            }\n\n            protected override _set(nextState: GameStyleAppStates, value: boolean,) {\n                nextState.display.section.nightDesertWind = value;\n            }\n\n            protected override get _createContentOption(): () => PossibleRenderReactElement {\n                return () => {\n                    const enumerable = GameStyleAppOption.CALLBACK_TO_GET_ENUMERATION();\n                    const gameStyle = enumerable.reference;\n\n                    return <NightEffectComponent gameStyle={gameStyle}/>;\n                };\n            }\n\n            protected override get _createTableHeaderOption(): SingleHeaderContent {\n                return {\n                    key: 'nightDesertWind',\n                    element: <div className=\"night-desert-wind-effect-container\">{Themes.DESERT.renderSingleComponent(false)}{Times.NIGHT.renderSingleComponent}</div>,\n                    tooltip: {\n                        namespace: 'gameContent', translationKey: 'Wind effect (night desert)',\n                        replace: {\n                            night: '--night--',//TODO add night reference\n                            desert: ProjectLanguages.currentLanguage.get(Themes.DESERT.reference[0])!.toLowerCase(),\n                        },\n                    },\n                }\n            }\n\n        }(true,);\n    }\n\n    //endregion -------------------- Enum instances --------------------\n    //region -------------------- Enum attributes --------------------\n\n    static [index: number]: GameStyleAppOption;\n\n    //endregion -------------------- Enum attributes --------------------\n    //region -------------------- Attributes --------------------\n\n    static #REFERENCE: ReactComponentWithState<GameStyleAppStates>;\n    /**\n     * The callback to get the enumeration based for each option.\n     *\n     * @note It should only be set by {@link EveryEntitiesApp} and get by {@link EntityAppOption}.\n     */\n    public static CALLBACK_TO_GET_ENUMERATION: () => GameStyles;\n\n    #appOptionWithContent?: AppOptionWithContent;\n    #appOptionWithTable?: AppOptionWithTable;\n\n    //endregion -------------------- Attributes --------------------\n\n    private constructor(defaultValue: boolean,) {\n        super(defaultValue,);\n    }\n\n    //region -------------------- Getter methods --------------------\n\n    public static get REFERENCE(): ReactComponentWithState<GameStyleAppStates> {\n        return this.#REFERENCE;\n    }\n\n    public static set REFERENCE(value: ReactComponentWithState<GameStyleAppStates>,) {\n        this.#REFERENCE = value;\n    }\n\n    public static get createDefaultState(): GameStyleAppStates {\n        return {\n            display: {\n                section: {\n                    image: GameStyleAppOption.IMAGE._lastValueRetrieved,\n                    name: GameStyleAppOption.NAME._lastValueRetrieved,\n                    game: GameStyleAppOption.GAME._lastValueRetrieved,\n                    nightDesertWind: GameStyleAppOption.NIGHT_DESERT_WIND._lastValueRetrieved,\n                },\n            },\n        };\n    }\n\n\n    //endregion -------------------- Getter methods --------------------\n    //region -------------------- Methods --------------------\n\n    //region -------------------- App option - content --------------------\n\n    protected abstract get _createContentOption(): () => PossibleRenderReactElement;\n\n    protected get __appOptionWithContent(): AppOptionWithContent {\n        return this.#appOptionWithContent ??= new AppOptionWithContentComponent(this._createContentOption,);\n    }\n\n    public get renderContent(): readonly ReactElement[] {\n        return this.get\n            ? this.__appOptionWithContent.renderContent\n            : EMPTY_ARRAY;\n    }\n\n    //endregion -------------------- App option - content --------------------\n    //region -------------------- App option - table --------------------\n\n    protected abstract get _createTableHeaderOption(): SingleHeaderContent;\n\n    protected get __appOptionWithTable(): AppOptionWithTable {\n        return this.#appOptionWithTable ??= new AppOptionWithTableComponent(() => this._createTableHeaderOption,);\n    }\n\n    public get renderTableHeader(): | SingleHeaderContent | null {\n        return this.get\n            ? this.__appOptionWithTable.renderTableHeader\n            : null;\n    }\n\n    //endregion -------------------- App option - table --------------------\n\n    //endregion -------------------- Methods --------------------\n    //region -------------------- Enum methods --------------------\n\n    protected override get _static(): StaticReference<GameStyleAppOption> & AppOptionStatic<GameStyleAppStates> {\n        return GameStyleAppOption;\n    }\n\n    //region -------------------- Enum value methods --------------------\n\n    public static getValue(nullValue: | null | undefined,): null\n    public static getValue<O extends Ordinals = Ordinals, >(ordinal: O,): EnumByOrdinal<O>\n    public static getValue<O extends number = number, >(ordinal: O,): EnumByNumber<O>\n    public static getValue<N extends Names = Names, >(name: N,): EnumByName<N>\n    public static getValue<S extends PossibleStringValue = PossibleStringValue, >(name: S,): EnumByPossibleString<S>\n    public static getValue<S extends string = string, >(name: S,): EnumByString<S>\n    public static getValue<I extends GameStyleAppOption = GameStyleAppOption, >(instance: I,): I\n    public static getValue(value: PossibleNonNullableValue,): GameStyleAppOption\n    public static getValue(value: PossibleValue,): | GameStyleAppOption | null\n    public static getValue(value: PossibleValue,) {\n        return Enum.getValueOn(this, value,);\n    }\n\n    public static get values(): EnumArray {\n        return Enum.getValuesOn(this);\n    }\n\n    //endregion -------------------- Enum value methods --------------------\n\n    public static [Symbol.iterator]() {\n        return this.values[Symbol.iterator]();\n    }\n\n    //endregion -------------------- Enum methods --------------------\n\n}\n","import './GameStylesApp.scss';\n\nimport type {GameStyleAppStates}   from './AppStates.types';\nimport type {SingleHeadersContent} from './tools/table/SimpleHeader';\nimport type {SingleTableContent}   from './tools/table/Table.types';\n\nimport AbstractApp                     from './AbstractApp';\nimport GameContentTranslationComponent from '../lang/components/GameContentTranslationComponent';\nimport {GameStyleAppOption}            from './options/GameStyleAppOption';\nimport {GameStyles}                    from '../core/gameStyle/GameStyles';\nimport Table                           from './tools/table/Table';\n\n/**\n * @reactComponent\n */\nexport default class EveryGameStylesApp\n    extends AbstractApp<{}, GameStyleAppStates> {\n\n\n    public constructor(props: {},) {\n        super(props,);\n        GameStyleAppOption.REFERENCE = this;\n        this.state = GameStyleAppOption.createDefaultState;\n    }\n\n    //region -------------------- Methods --------------------\n\n    protected get content() {\n        const content = [] as SingleTableContent[];\n        let index = 1;\n        for (const enumerable of GameStyles) {\n            GameStyleAppOption.CALLBACK_TO_GET_ENUMERATION = () => enumerable;\n\n            content.push([enumerable.englishName,\n                ...[\n                    <>{index}</>,\n                    GameStyleAppOption.IMAGE.renderContent,\n                    GameStyleAppOption.NAME.renderContent,\n                    GameStyleAppOption.GAME.renderContent,\n                    GameStyleAppOption.NIGHT_DESERT_WIND.renderContent,\n                ].flat(),\n            ]);\n            index++;\n        }\n        return content;\n    }\n\n    //endregion -------------------- Methods --------------------\n\n    protected override _mainContent() {\n        return <Table\n            id=\"gameStyle-table\"\n            caption={<GameContentTranslationComponent translationKey=\"Every game styles\"/>}\n            headers={[\n                {key: 'originalOrder', element: <>#</>,},\n                GameStyleAppOption.IMAGE.renderTableHeader,\n                GameStyleAppOption.NAME.renderTableHeader,\n                GameStyleAppOption.GAME.renderTableHeader,\n                GameStyleAppOption.NIGHT_DESERT_WIND.renderTableHeader,\n            ].filter(header => header != null) as SingleHeadersContent}\n            content={this.content}\n        />;\n    }\n\n}\n"],"sourceRoot":""}